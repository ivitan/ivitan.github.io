<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo Github Actions</title>
      <link href="/posts/GithubActions.html"/>
      <url>/posts/GithubActions.html</url>
      
        <content type="html"><![CDATA[<h1 id="Github-Actions"><a href="#Github-Actions" class="headerlink" title="Github Actions"></a>Github Actions</h1><h2 id="生成-SSH-Key"><a href="#生成-SSH-Key" class="headerlink" title="生成 SSH Key"></a>生成 SSH Key</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C &quot;emal@gmail.com&quot;</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="添加-Key-到-GitHub"><a href="#添加-Key-到-GitHub" class="headerlink" title="添加 Key 到 GitHub"></a>添加 Key 到 GitHub</h2><h3 id="公钥"><a href="#公钥" class="headerlink" title="公钥"></a>公钥</h3><p>仓库 –&gt; Secrets –&gt; Actions –&gt; New repository secert</p><p>Name: HEXO_DEPLOY_KEY<br>Value: id_rsa.pub 的值</p><h2 id="私钥"><a href="#私钥" class="headerlink" title="私钥"></a>私钥</h2><p>仓库 –&gt; Settings –&gt; Deploy keys –&gt; Add deploy key</p><p>Name: HEXO_DEPLOY_PUB<br>Value: id_rsa  的值</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">Deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="string">source</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span> </span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span> </span><br><span class="line">    <span class="attr">name:</span> <span class="string">auto</span> <span class="string">deploy</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span> <span class="number">12.</span><span class="string">x</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@master</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&quot;12.x&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">Repository</span> <span class="string">source</span> <span class="string">branch</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">ref:</span> <span class="string">source</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Generate</span> <span class="string">Public</span> <span class="string">Files</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        npm i</span></span><br><span class="line"><span class="string">        npm install hexo-cli -g</span></span><br><span class="line"><span class="string">        hexo clean &amp;&amp; hexo generate</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">deploy_key:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.HEXO_DEPLOY_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">external_repository:</span> <span class="string">ivitan/ivitan.github.io</span></span><br><span class="line">        <span class="attr">publish_branch:</span> <span class="string">master</span></span><br><span class="line">        <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br><span class="line">        <span class="attr">commit_message:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.head_commit.message</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">user_name:</span> <span class="string">&#x27;Vitan&#x27;</span></span><br><span class="line">        <span class="attr">user_email:</span> <span class="string">&#x27;vitan.me@gmail.com&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ADB 提取系统 APK</title>
      <link href="/posts/ADB-APK.html"/>
      <url>/posts/ADB-APK.html</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">adb connect ip</span><br><span class="line">adb shell </span><br><span class="line"></span><br><span class="line"># 查找 APK 路径，路径截止到 base.apk</span><br><span class="line">pm list package -f | grep apkName</span><br><span class="line"></span><br><span class="line">adb pull APK_PATH Rename.apk</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一键关闭多用户状态栏头像</title>
      <link href="/posts/DeleteMutiUser.html"/>
      <url>/posts/DeleteMutiUser.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>一键关闭多用户状态栏头像</p></blockquote><span id="more"></span><h1 id="一键关闭多用户状态栏头像教程"><a href="#一键关闭多用户状态栏头像教程" class="headerlink" title="一键关闭多用户状态栏头像教程"></a>一键关闭多用户状态栏头像教程</h1><p>1、打开开发者模式<br>2、打开USB调试<br>3、勾上禁止权限监控<br>4、运行 ADB 命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell settings put global user_switcher_enabled 0 </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github 不再支持密码验证解决方案</title>
      <link href="/posts/Git-Token.html"/>
      <url>/posts/Git-Token.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.<br>remote: Please see <a href="https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/">https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/</a> for more information.</p></blockquote><span id="more"></span><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="Token-登录"><a href="#Token-登录" class="headerlink" title="Token 登录"></a>Token 登录</h3><p>若之前记住了密码,则需要删除用户目录下的 <code>.git-credentials</code> 文件，则可以重新输入用户名和密码，输入密码时输入 Github 生成的 Token 即可</p><ul><li>Windows</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf C:\Users\username\.git-credentials</span><br></pre></td></tr></table></figure><ul><li>Linux&#x2F;macOS</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /home/username/.git-credentials</span><br><span class="line">rm -rf /Users/username/.git-credentials</span><br></pre></td></tr></table></figure><h2 id="SSH-免密登录"><a href="#SSH-免密登录" class="headerlink" title="SSH 免密登录"></a>SSH 免密登录</h2><h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h3><ul><li>生成</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C &quot;uesrname@xxx.com&quot;</span><br></pre></td></tr></table></figure><ul><li><p>id_rsa.pub 密钥填入 Github 的 SSH keys </p></li><li><p>修改本地项目的地址为 SSH Clone 的地址(三种方法)</p></li></ul><ol><li>修改命令</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote origin set-url [url]</span><br></pre></td></tr></table></figure><ol start="2"><li>先删后加</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin</span><br><span class="line">git remote add origin [url]</span><br></pre></td></tr></table></figure><ol start="3"><li>编辑 .git 中 config</li></ol>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何关闭大部分 WPS 广告</title>
      <link href="/posts/Anti-WPS-ADs.html"/>
      <url>/posts/Anti-WPS-ADs.html</url>
      
        <content type="html"><![CDATA[<p>关闭大部分 WPS 广告</p><span id="more"></span><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><ul><li>打开 WPS 配置工具，点击高级</li></ul><p><img src="/assets/Picture/imagesWPS_Peizhi.png"></p><p><img src="/assets/Picture/imagesWPS_Setting.png"></p><ul><li>功能定制中打勾</li></ul><p><img src="/assets/Picture/imagesWPS_Plug.png"></p><ul><li>其他选项中打勾</li></ul><p><img src="/assets/Picture/imagesWPS_other.png"></p><ul><li>右键桌面右下角 WPS 图标，进入同步设置，取消勾选办公小助手</li></ul><p><img src="/assets/Picture/imagesWps_settings.png"></p>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装 Windows 时 GPT 与 MBR 互换</title>
      <link href="/posts/GPT-MBR.html"/>
      <url>/posts/GPT-MBR.html</url>
      
        <content type="html"><![CDATA[<p>安装 Windows 时 GPT 与 MBR 互换</p><span id="more"></span><p>装机启动时在选择磁盘时 Shirt + F10 进入CMD</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">diskpart</span><br><span class="line">list disk </span><br><span class="line">select disk n # n 为想要转换的序号</span><br><span class="line">clean # 清除数据</span><br><span class="line">convert mbr # GPT -&gt; MBR</span><br><span class="line"></span><br><span class="line">convert gpt # MBR -&gt; GPT</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Termux 的 Bintray 库已关闭，解决办法</title>
      <link href="/posts/TermuxRepo.html"/>
      <url>/posts/TermuxRepo.html</url>
      
        <content type="html"><![CDATA[<p>Bintray 库已关闭，如何解决？</p><span id="more"></span><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>由于 Bintray 库已关闭，所以安装是提示 403</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Ign:2 https://dl.bintray.com/grimler/game-packages-24 games InRelease</span><br><span class="line">Ign:3 https://dl.bintray.com/grimler/science-packages-24 science InRelease</span><br><span class="line">Err:4 https://dl.bintray.com/grimler/game-packages-24 games Release</span><br><span class="line">  403  Forbidden</span><br><span class="line">Err:5 https://dl.bintray.com/grimler/science-packages-24 science Release</span><br><span class="line">  403  Forbidden</span><br><span class="line">Get:1 https://grimler.se/termux-packages-24 stable InRelease [13.1 kB]</span><br><span class="line">Get:6 https://grimler.se/termux-packages-24 stable/main all Packages [21.6 kB]</span><br><span class="line">Get:7 https://grimler.se/termux-packages-24 stable/main aarch64 Packages [269 kB]</span><br><span class="line">Reading package lists... Done</span><br><span class="line">E: The repository &#x27;https://dl.bintray.com/grimler/game-packages-24 games Release&#x27; does not have a Release file.</span><br><span class="line">N: Metadata integrity can&#x27;t be verified, repository is disabled now.</span><br><span class="line">N: Possible cause: repository is under maintenance or down (wrong sources.list URL?).</span><br><span class="line">E: The repository &#x27;https://dl.bintray.com/grimler/science-packages-24 science Release&#x27; does not have a Release file.</span><br><span class="line">N: Metadata integrity can&#x27;t be verified, repository is disabled now.</span><br><span class="line">N: Possible cause: repository is under maintenance or down (wrong sources.list URL?).</span><br></pre></td></tr></table></figure><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><h2 id="换源清华"><a href="#换源清华" class="headerlink" title="换源清华"></a>换源清华</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termux-change-repo</span><br></pre></td></tr></table></figure><h2 id="更新缓存"><a href="#更新缓存" class="headerlink" title="更新缓存"></a>更新缓存</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt upgrade</span><br><span class="line">pkg upgrade</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你网站的 Google Adsense 为什么不通过？</title>
      <link href="/posts/GoogleAdSense.html"/>
      <url>/posts/GoogleAdSense.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>我们发现，您还有一个 AdSense 帐号。每位用户只能拥有一个帐号。要使用此帐号，请关闭另一个帐号。</p></blockquote><span id="more"></span><h1 id="失败分析"><a href="#失败分析" class="headerlink" title="失败分析"></a>失败分析</h1><p><img src="/assets/Picture/imagesGoogleAdsenseError.png"></p><ol><li>网站内容不合规</li><li>提示有另一个账号</li><li>…</li></ol><h2 id="两个账号原因"><a href="#两个账号原因" class="headerlink" title="两个账号原因"></a>两个账号原因</h2><ul><li>Google Play 商店的付款方式，若你注册 Adsense 时又填写了另一个付款方式信息，那么你实际上就有两个了。</li><li>Google Play 商店锁过非大陆地区，删除付款方式，再在  Adsense 里添加单一付款方式，依旧提示有另一个账号。</li></ul><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><h2 id="重新注册谷歌账号"><a href="#重新注册谷歌账号" class="headerlink" title="重新注册谷歌账号"></a>重新注册谷歌账号</h2><blockquote><p><strong>此电话号码无法用于进行验证</strong></p></blockquote><p>大陆地区手机号码需要将浏览器语言设为英文才能接到验证码</p><h2 id="注册-Adsense"><a href="#注册-Adsense" class="headerlink" title="注册 Adsense"></a>注册 Adsense</h2><p>注册好谷歌账户后，先别登录 Play 商店，直接 Adsense 官网登录，按提示填上大陆地址的付款方式即可.</p><h1 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h1><p><img src="/assets/Picture/imagesAdsenseBingo.png"></p>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Google </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kodi 设置中文并添加 IPTV 源</title>
      <link href="/posts/Kodi.html"/>
      <url>/posts/Kodi.html</url>
      
        <content type="html"><![CDATA[<p>Kodi 设置中文并添加 IPTV 源</p><span id="more"></span><h1 id="下载-Kodi"><a href="#下载-Kodi" class="headerlink" title="下载 Kodi"></a>下载 Kodi</h1><p>各平台均可在 <a href="https://kodi.tv/download/">Kodi 官网</a> 下载</p><h1 id="设置中文显示"><a href="#设置中文显示" class="headerlink" title="设置中文显示"></a>设置中文显示</h1><h2 id="设置字体"><a href="#设置字体" class="headerlink" title="设置字体"></a>设置字体</h2><ul><li>点击齿轮进入设置</li></ul><p><img src="/assets/Picture/imagesKodi_Setting.png"></p><ul><li>再点击进入 <code>Interace</code> –&gt; <code>Skin</code> -&gt; <code>Fonts</code> 设置成 <code>Arial baased</code> 以防止设置成中文后乱码</li></ul><p><img src="/assets/Picture/imagesKodi_Interface.png"><br><img src="/assets/Picture/imageskodi_font.png"></p><h2 id="添加中文"><a href="#添加中文" class="headerlink" title="添加中文"></a>添加中文</h2><ul><li>点击 <code>System</code> 进入系统设置</li></ul><p><img src="/assets/Picture/imagesKodi_System.png"></p><ul><li>依次点击 <code>Add-ons</code> 和 <code>Running</code></li></ul><p><img src="/assets/Picture/imagesKodin_adfont.png"></p><ul><li>点击 <code>Install from repository</code></li></ul><p><img src="/assets/Picture/imagesKodi_InFont.png"></p><ul><li>点击 <code>Lock and feel</code></li></ul><p><img src="/assets/Picture/imageskodi_lock.png"></p><ul><li>点击 <code>Language</code> 然后找到 <code>Chinese(simple)</code>，点击进入后再点击 <code>Install</code></li></ul><p><img src="/assets/Picture/imagesKodi_Language.png"><br><img src="/assets/Picture/imagesKodi_ChineseSimple.png"></p><h2 id="应用中文语言"><a href="#应用中文语言" class="headerlink" title="应用中文语言"></a>应用中文语言</h2><p>返回设置界面,进入 <code>Interface</code> 后选择 <code>Regional</code>，点击 <code>Language</code>，选择 <code>Chinese(simple)</code>，到此中文<br><img src="/assets/Picture/imageskodi_Settinglang.png"></p><h1 id="添加-IPTV-源"><a href="#添加-IPTV-源" class="headerlink" title="添加 IPTV 源"></a>添加 IPTV 源</h1><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><ul><li>点击设置，再点击 <code>插件</code> –&gt; <code>从库安装</code> –&gt; <code>PVR 客户端</code></li></ul><p><img src="/assets/Picture/imagesKodi_Plug.png"></p><ul><li>找到 <code>PVR IPVTV Simple Client</code>，点击进入后点击 Install 安装</li></ul><p><img src="/assets/Picture/imagesKodi_PVC.png"></p><h2 id="下载源"><a href="#下载源" class="headerlink" title="下载源"></a>下载源</h2><p>在 <a href="https://github.com/biancangming/wtv">https://github.com/biancangming/wtv</a> 下载好放入U盘</p><h2 id="添加源"><a href="#添加源" class="headerlink" title="添加源"></a>添加源</h2><ul><li>点击设置齿轮，然后点击<code>插件</code> –&gt; <code>我的插件</code> –&gt; <code>PVR客户端</code> –&gt; <code>PVR IPTV Simple Client</code>，点击设置，进入源设置页面</li></ul><p><img src="/assets/Picture/imagesKodi_PVRSetting.png"></p><ul><li>在 <code>M3U playlist path</code> 中选择或填写下好的源文件,最后点击确认</li></ul><p><img src="/assets/Picture/imageskodi_setsource.png"></p><h1 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h1><p><img src="/assets/Picture/imagesKidi_show.png"></p>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> TvBox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无需 root 解决 android 网络的感叹号</title>
      <link href="/posts/ADB-NetWork.html"/>
      <url>/posts/ADB-NetWork.html</url>
      
        <content type="html"><![CDATA[<p>一加 9 Pro 刷了 OxygenOS 后有时连上了WiFi但是无WiFi图标，有时还有感叹号</p><span id="more"></span><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><ul><li>利用 adb ,重启手机依旧生效</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell settings put global captive_portal_server www.google.cn/generate_204</span><br></pre></td></tr></table></figure><h2 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb shell settings delete global captive_portal_server</span><br><span class="line">adb shell settings put global captive_portal_detection_enabled 1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Adb 修补 boot 刷 Magisk</title>
      <link href="/posts/AdbMagisk.html"/>
      <url>/posts/AdbMagisk.html</url>
      
        <content type="html"><![CDATA[<p>修补 boot 刷 Magisk</p><span id="more"></span><ol><li><p>请确保手机为已<a href="/posts/Adb.html">解锁</a>状态</p></li><li><p>下载官方包解压获取 boot.img 放到手机储存空间中，并安装 <a href="https://github.com/topjohnwu/Magisk/releases">Magisk Manager</a></p></li><li><p>安装完成后打开 Magisk –&gt; 点击安装 –&gt; 选择并修补一个文件 –&gt; 选择刚刚的 boot.img</p></li><li><p>修补后的文件文件在 sdcard&#x2F;Download&#x2F;patched_boot.img</p></li><li><p>将手机重启至 bootloader，连接上电脑，打开 ADB </p></li><li><p>输入命令 fastboot flash boot patched_boot.img  后重启</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 项目调用 Github Actions 中的 Secrets</title>
      <link href="/posts/GithubSecret.html"/>
      <url>/posts/GithubSecret.html</url>
      
        <content type="html"><![CDATA[<p>Python 项目调用 Github Actions 中的 Secrets</p><span id="more"></span><h2 id="配置-Secret"><a href="#配置-Secret" class="headerlink" title="配置 Secret"></a>配置 Secret</h2><blockquote><p>设置好名为 <code>mySecret</code> 的 Secret </p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">&#x27;GitHub Actions Demo&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">  <span class="attr">schedule:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">cron:</span> <span class="string">&#x27;0 23 * * *&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">Weather-daily:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&#x27;Checkout&#x27;</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&#x27;Set up Python&#x27;</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-python@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">python-version:</span> <span class="number">3.7</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&#x27;Install requirements&#x27;</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">| </span></span><br><span class="line"><span class="string">          python -m pip install --upgrade pip</span></span><br><span class="line"><span class="string">          pip install -r requirements.txt</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&#x27;Working&#x27;</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">apiID:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.APIID</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">appSecret:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.APPSECRET</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">SCKEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SCKEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">python</span> <span class="string">Demo.py</span></span><br></pre></td></tr></table></figure><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">mySecret = os.environ[<span class="string">&#x27;mySecret&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(mySecret)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用 Github Action 自动部署 Hexo</title>
      <link href="/posts/HexoAction.html"/>
      <url>/posts/HexoAction.html</url>
      
        <content type="html"><![CDATA[<p>利用 Github Action 自动部署 Hexo。</p><span id="more"></span><h1 id="Secrets"><a href="#Secrets" class="headerlink" title="Secrets"></a>Secrets</h1><p>仓库下 Setting -&gt; Secrets -&gt; New repository secret 新建 Secrets</p><figure class="highlight sh"><figcaption><span>Secret 名</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HEXO_DEPLOY_PRI</span><br></pre></td></tr></table></figure><h1 id="Actions"><a href="#Actions" class="headerlink" title="Actions"></a>Actions</h1><p>Hexo 目录下新建 .github\workflows\deploy.yml</p><figure class="highlight yml"><figcaption><span>deploy.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Actions 名称</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">Deploy</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 监听分支有提价时执行</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="string">source</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 系统环境变量</span></span><br><span class="line"><span class="attr">env:</span></span><br><span class="line">  <span class="attr">TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line">  <span class="attr">GIT_USER:</span> <span class="string">Vitan</span></span><br><span class="line">  <span class="attr">GIT_EMAIL:</span> <span class="string">vitan.me@gmail.com</span></span><br><span class="line">  <span class="attr">DEPLOY_REPO:</span> <span class="string">ivitan/ivitan.github.io</span></span><br><span class="line">  <span class="attr">DEPLOY_BRANCH:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">THEME_REPO:</span> <span class="string">ivitan/indigo</span></span><br><span class="line">  <span class="attr">THEME_BRANCH:</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 系统环境</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">OS</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">strategy:</span></span><br><span class="line">      <span class="attr">matrix:</span></span><br><span class="line">        <span class="attr">os:</span> [<span class="string">ubuntu-latest</span>]</span><br><span class="line">        <span class="attr">node_version:</span> [<span class="number">12.</span><span class="string">x</span>]</span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">Repository</span> <span class="string">source</span> <span class="string">branch</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">ref:</span> <span class="string">source</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">Deploy</span> <span class="string">Repo</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">repository:</span> <span class="string">$&#123;&#123;</span> <span class="string">env.DEPLOY_REPO</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">ref:</span> <span class="string">$&#123;&#123;</span> <span class="string">env.DEPLOY_BRANCH</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">.deploy_git</span></span><br><span class="line">      </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">Theme</span> <span class="string">Repo</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">repository:</span> <span class="string">$&#123;&#123;</span> <span class="string">env.THEME_REPO</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">ref:</span> <span class="string">$&#123;&#123;</span> <span class="string">env.THEME_BRANCH</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">themes/indigo</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span> <span class="string">$&#123;&#123;</span> <span class="string">matrix.node_version</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">$&#123;&#123;</span> <span class="string">matrix.node_version</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Deploy</span> <span class="string">Private</span> <span class="string">Key</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">HEXO_DEPLOY_PRI:</span> <span class="string">$&#123;&#123;secrets.HEXO_DEPLOY_PRI&#125;&#125;</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          mkdir -p ~/.ssh/</span></span><br><span class="line"><span class="string">          echo &quot;$HEXO_DEPLOY_PRI&quot; &gt; ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">          chmod 600 ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Git</span> <span class="string">Infomation</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">| </span></span><br><span class="line"><span class="string">          git config --global user.name $GIT_USER</span></span><br><span class="line"><span class="string">          git config --global user.email $GIT_EMAIL</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Hexo</span> <span class="string">Dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          sudo timedatectl set-timezone $TZ</span></span><br><span class="line"><span class="string">          npm install hexo-cli -g</span></span><br><span class="line"><span class="string">          npm install</span></span><br><span class="line"><span class="string">          wget https://github.com/ivitan/ivitan.github.io/releases/download/Pin/generator.js -O ./node_modules/hexo-generator-index/lib/generator.js</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">Hexo</span> <span class="string">blog</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          hexo clean</span></span><br><span class="line"><span class="string">          hexo generate</span></span><br><span class="line"><span class="string">          hexo deploy</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用 ttyd 在 Web 上共享终端</title>
      <link href="/posts/TTYD.html"/>
      <url>/posts/TTYD.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/tsl0922/ttyd">ttyd</a> 是用于在 Web 上共享终端的简单命令行工具。</p></blockquote><span id="more"></span><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="Termux"><a href="#Termux" class="headerlink" title="Termux"></a>Termux</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install ttyd -y</span><br></pre></td></tr></table></figure><h2 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install ttyd</span><br></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ttyd -p 8080 bash</span><br></pre></td></tr></table></figure><h2 id="密码登录"><a href="#密码登录" class="headerlink" title="密码登录"></a>密码登录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ttyd -p 8080 login</span><br></pre></td></tr></table></figure><p>即可在浏览器访问 <a href="http://ip:8080/">http://ip:8080</a></p>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AAPT 查询 APK 信息</title>
      <link href="/posts/AAPT.html"/>
      <url>/posts/AAPT.html</url>
      
        <content type="html"><![CDATA[<p>个人常用 AAPT 查询 APK 信息命令</p><span id="more"></span><h1 id="AAPT-查询-APK-信息"><a href="#AAPT-查询-APK-信息" class="headerlink" title="AAPT 查询 APK 信息"></a>AAPT 查询 APK 信息</h1><h2 id="查看签名"><a href="#查看签名" class="headerlink" title="查看签名"></a>查看签名</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -printcert -jarfile app.apk</span><br></pre></td></tr></table></figure><h2 id="获取-apk-的详细信息"><a href="#获取-apk-的详细信息" class="headerlink" title="获取 apk 的详细信息"></a>获取 apk 的详细信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aapt dump badging app-debug.apk</span><br></pre></td></tr></table></figure><h2 id="APK-MD5"><a href="#APK-MD5" class="headerlink" title="APK MD5"></a>APK MD5</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil -hashfile apk.apk  MD5</span><br></pre></td></tr></table></figure><h2 id="查看-SHA1"><a href="#查看-SHA1" class="headerlink" title="查看 SHA1"></a>查看 SHA1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil -hashfile 文件名  SHA1 </span><br></pre></td></tr></table></figure><h2 id="查看-SHA256"><a href="#查看-SHA256" class="headerlink" title="查看 SHA256"></a>查看 SHA256</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil -hashfile 文件名  SHA256</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决 Termux 上 Hexo 无法运行</title>
      <link href="/posts/Termux-Hexo.html"/>
      <url>/posts/Termux-Hexo.html</url>
      
        <content type="html"><![CDATA[<p>解决 Hexo </p><blockquote><p>zsh:&#x2F;data&#x2F;data&#x2F;com.termux&#x2F;files&#x2F;usr&#x2F;bin&#x2F;hexo: bad interpreter: &#x2F;usr&#x2F;bin&#x2F;env:no such file or directory</p></blockquote><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termux-fix-shebang /data/data/com.termux/files/usr/bin/hexo</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RaspberryPi Review</title>
      <link href="/posts/RaspberryReview.html"/>
      <url>/posts/RaspberryReview.html</url>
      
        <content type="html"><![CDATA[<p>重新拾起吃灰的 RaspberryPi 3B+ ，无显示器如何玩？</p><span id="more"></span><h1 id="烧录镜像"><a href="#烧录镜像" class="headerlink" title="烧录镜像"></a>烧录镜像</h1><p>官网下载镜像，并使用烧录工具烧录。</p><h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><h2 id="WiFi"><a href="#WiFi" class="headerlink" title="WiFi"></a>WiFi</h2><p>在 <code>boot</code> 中新建文件</p><figure class="highlight plaintext"><figcaption><span>wps_supplicant.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">country=CN</span><br><span class="line">ctrl_interface=DIR=/var/run/wpa_supplicant</span><br><span class="line">update_config=1</span><br><span class="line"></span><br><span class="line">network=&#123;</span><br><span class="line">ssid=&quot;SSID_Name&quot;</span><br><span class="line">psk=&quot;password&quot;</span><br><span class="line">key_mgmt=WPA-PSK</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h2><p>在 <code>boot</code> 中新建名为 <code>ssh</code> 的无后缀的空白文件。</p><h1 id="开机获取-IP"><a href="#开机获取-IP" class="headerlink" title="开机获取 IP"></a>开机获取 IP</h1><p>开机后会自动连接预埋的 WiFI。然后就可以使用 Ping Tool 、Fing.app 或者到路由器后台查看树莓派的 IP 啦。然后就可以 SSH 连接树莓派。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh pi@ip</span><br><span class="line">raspberry # 初始密码</span><br></pre></td></tr></table></figure><h1 id="系统相关配置"><a href="#系统相关配置" class="headerlink" title="系统相关配置"></a>系统相关配置</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo raspi-config</span><br></pre></td></tr></table></figure><h2 id="开启-VNC"><a href="#开启-VNC" class="headerlink" title="开启 VNC"></a>开启 VNC</h2><p>选择：“5 Interfacing Options”</p><h2 id="固定-IP"><a href="#固定-IP" class="headerlink" title="固定 IP"></a>固定 IP</h2><figure class="highlight plaintext"><figcaption><span>/etc/dhcpcd.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">interface wlan0</span><br><span class="line">static ip_address=10.1.1.22/24</span><br><span class="line">static routers=10.1.1.1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> RaspberryPi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 部署 Tomcat 8</title>
      <link href="/posts/Tomcat.html"/>
      <url>/posts/Tomcat.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>CentOS 部署 Tomcat</p></blockquote><span id="more"></span><h1 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h1><figure class="highlight sh"><figcaption><span>/usr/vitan</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf jdk-7u79-linux-x64.tar.gz </span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/jdk1.7.0_79/ /usr/local/jdk</span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>/etc/profile</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/usr/vitan/jdk</span><br><span class="line">PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line">CLASSPAtH=.:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> PATH JAVA_HOME CLASSPATH</span><br></pre></td></tr></table></figure><p>Or</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install openjdk</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><h1 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> Downloads</span><br><span class="line">wget wget https://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-8/v8.5.50/bin/apache-tomcat-8.5.50.tar.gz</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> /usr/local/tomcat</span><br><span class="line"><span class="built_in">sudo</span> tar -zvxf apache-tomcat-8.5.24.tar.gz -C /usr/local/tomcat</span><br><span class="line"><span class="built_in">mv</span> /usr/tomcat/apache-tomcat-8.5.24 /usr/local/tomcat8</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /user/local/tomcat8/bin/</span><br><span class="line"><span class="built_in">chmod</span> 500 *</span><br><span class="line">sh startup.sh <span class="comment"># 启动</span></span><br><span class="line">sh shutdown.sh <span class="comment"># 关闭</span></span><br></pre></td></tr></table></figure><h2 id="防火墙发行-8080-端口"><a href="#防火墙发行-8080-端口" class="headerlink" title="防火墙发行 8080 端口"></a>防火墙发行 8080 端口</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> firewall-cmd --zone=public --add-port=8080/tcp --permanent</span><br><span class="line"><span class="built_in">sudo</span> firewall-cmd --reload</span><br><span class="line"></span><br><span class="line">systemctl stop firewalld.service      <span class="comment"># 关闭 firewall</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service   <span class="comment"># 禁止 firewall 开机启动</span></span><br></pre></td></tr></table></figure><h2 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h2><p>浏览器打开 ip:8080</p><h2 id="Tomcat-目录结构"><a href="#Tomcat-目录结构" class="headerlink" title="Tomcat 目录结构"></a>Tomcat 目录结构</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bin       --启动命令目录</span><br><span class="line">conf      --配置文件目录</span><br><span class="line">lib       --库文件目录</span><br><span class="line">logs      --日志文件目录</span><br><span class="line">temp      --临时缓存文件</span><br><span class="line">webapps   --web应用家目录</span><br><span class="line">work      --工作缓存目录</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos 7 防火墙</title>
      <link href="/posts/FireWall.html"/>
      <url>/posts/FireWall.html</url>
      
        <content type="html"><![CDATA[<p>CentOS 7 防火墙命令</p><span id="more"></span><h1 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 关闭</span><br><span class="line">systemctl stop firewalld.service </span><br><span class="line"># 禁止开机自启</span><br><span class="line">systemctl disable firewalld.service</span><br><span class="line"></span><br><span class="line"># 重启</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h1 id="开启端口"><a href="#开启端口" class="headerlink" title="开启端口"></a>开启端口</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br></pre></td></tr></table></figure><ul><li>-zone # 作用域</li><li>-add-port&#x3D;80&#x2F;tcp # 添加端口，格式为：端口&#x2F;通讯协议</li><li>-permanent # 永久生效，没有此参数重启后失效</li></ul><h1 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># 查看状态</span><br><span class="line">firewall-cmd --state</span><br><span class="line"># 重新载入配置</span><br><span class="line">firewall-cmd --reload</span><br><span class="line"># 列出支持的zone</span><br><span class="line">firewall-cmd --get-zones</span><br><span class="line"># 列出支持的服务</span><br><span class="line">firewall-cmd --get-services</span><br><span class="line"># 查看ftp服务是否支持，返回yes或者no</span><br><span class="line">firewall-cmd --query-service ftp</span><br><span class="line"># 临时开放ftp服务</span><br><span class="line">firewall-cmd --add-service=ftp</span><br><span class="line"># 永久开放ftp服务</span><br><span class="line">firewall-cmd --add-service=ftp --permanent</span><br><span class="line"># 永久移除ftp服务</span><br><span class="line">firewall-cmd --remove-service=ftp --permanent</span><br><span class="line"># 永久添加80端口 </span><br><span class="line">firewall-cmd --add-port=80/tcp --permanent</span><br><span class="line"># 查看规则</span><br><span class="line">iptables -L -n </span><br><span class="line"></span><br><span class="line">firewall-cmd --help</span><br></pre></td></tr></table></figure><h1 id="切换为-iptables"><a href="#切换为-iptables" class="headerlink" title="切换为 iptables"></a>切换为 iptables</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">service firewalld stop</span><br><span class="line">systemctl disable firewalld.service</span><br><span class="line"></span><br><span class="line">yum install iptables-services -y</span><br><span class="line">yum install iptables* -y</span><br></pre></td></tr></table></figure><h2 id="添加规则"><a href="#添加规则" class="headerlink" title="添加规则"></a>添加规则</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line"></span><br><span class="line"># 重启</span><br><span class="line">systemctl restart iptables.service </span><br><span class="line"># 开机启动</span><br><span class="line">systemctl enable iptables.service </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 配置 Vim</title>
      <link href="/posts/Vim-Windows.html"/>
      <url>/posts/Vim-Windows.html</url>
      
        <content type="html"><![CDATA[<p>Windows 配置美化 Vim.</p><span id="more"></span><p><img src="/assets/Picture/images/20200615152009.png" alt="最终效果"></p><hr><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="常规安装"><a href="#常规安装" class="headerlink" title="常规安装"></a>常规安装</h2><p><a href="https://www.vim.org/download.php">下载</a></p><h2 id="Scoop-安装"><a href="#Scoop-安装" class="headerlink" title="Scoop 安装"></a>Scoop 安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop install vim</span><br></pre></td></tr></table></figure><h1 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h1><h2 id="安装-vim—plug"><a href="#安装-vim—plug" class="headerlink" title="安装 vim—plug"></a>安装 vim—plug</h2><p><a href="https://github.com/junegunn/vim-plug/releases">下载</a> 并解压，把 <code>plug.vim</code> 文件复制到 D:\vim\current\autoload\ 目录下</p><h2 id="配置-Vimrc"><a href="#配置-Vimrc" class="headerlink" title="配置 Vimrc"></a>配置 Vimrc</h2><ul><li>打开 Vim 命令模式，输入<code>:version</code> 获取 vimrc 路径,如下：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">system vimrc file: &quot;$VIM\vimrc&quot;</span><br><span class="line">user vimrc file: &quot;$HOME\_vimrc&quot;</span><br><span class="line">2nd user vimrc file: &quot;$HOME\vimfiles\vimrc&quot;</span><br><span class="line">3rd user vimrc file: &quot;$VIM\_vimrc&quot;</span><br><span class="line">user exrc file: &quot;$HOME\_exrc&quot;</span><br><span class="line">2nd user exrc file: &quot;$VIM\_exrc&quot;</span><br><span class="line">defaults file: &quot;$VIMRUNTIME\defaults.vim&quot;</span><br></pre></td></tr></table></figure><ul><li>配置</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &quot;$HOME\_vimrc&quot; </span><br></pre></td></tr></table></figure><ul><li>我的配置</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&gt; 一般设置</span><br><span class="line">set mouse=a              &quot; 鼠标可用</span><br><span class="line">set relativenumber       &quot; 将行号设置为相对行号</span><br><span class="line">set wildmenu             &quot; 命令行补全参数</span><br><span class="line">filetype on              &quot; 设置开启文件类型侦测</span><br><span class="line">filetype plugin on       &quot; 设置加载对应文件类型的插件</span><br><span class="line">syntax enable            &quot; 开启语法高亮功能</span><br><span class="line">syntax on                &quot; 自动语法高亮</span><br><span class="line">set t_Co=256             &quot; 开启256色支持</span><br><span class="line">set cmdheight=2          &quot; 设置命令行的高度</span><br><span class="line">set showcmd              &quot; select模式下显示选中的行数</span><br><span class="line">set ruler                &quot; 总是显示光标位置</span><br><span class="line">set laststatus=2         &quot; 总是显示状态栏</span><br><span class="line">set number               &quot; 开启行号显示</span><br><span class="line">set cursorline           &quot; 高亮显示当前行</span><br><span class="line">set ttimeoutlen=0        &quot; 设置&lt;ESC&gt;键响应时间</span><br><span class="line">set virtualedit=block,onemore  &quot; 允许光标出现在最后一个字符的后面</span><br><span class="line"> </span><br><span class="line">&quot;&gt;&gt; 搜索设置</span><br><span class="line">set hlsearch            &quot; 高亮显示搜索结果</span><br><span class="line">set incsearch           &quot; 开启实时搜索功能</span><br><span class="line">set ignorecase          &quot; 搜索时大小写不敏感</span><br><span class="line"> </span><br><span class="line">&quot;&gt;&gt; 编码设置</span><br><span class="line">set langmenu=zh_CN.UTF-8</span><br><span class="line">set helplang=cn</span><br><span class="line">set termencoding=utf-8</span><br><span class="line">set encoding=utf8</span><br><span class="line">set fileencodings=utf8,ucs-bom,gbk,cp936,gb2312,gb18030</span><br><span class="line"> </span><br><span class="line">&quot;&gt;&gt; 语法高亮</span><br><span class="line">syntax enable</span><br><span class="line">syntax on</span><br><span class="line"> </span><br><span class="line">hi pythonSelf            ctermfg=174 guifg=#6094DB cterm=bold gui=bold</span><br><span class="line">let python_highlight_all=1</span><br><span class="line">syntax enable</span><br><span class="line"> </span><br><span class="line">&quot;&gt;&gt; 状态行颜色</span><br><span class="line">highlight StatusLine guifg=SlateBlue guibg=Yellow</span><br><span class="line">highlight StatusLineNC guifg=Gray guibg=White</span><br><span class="line"> </span><br><span class="line">&quot;&gt;&gt; 增强模式中的命令行自动完成操作</span><br><span class="line">set wildmenu</span><br><span class="line"> </span><br><span class="line">&quot;&gt;&gt; 总是显示状态行</span><br><span class="line">set laststatus=2</span><br><span class="line"> </span><br><span class="line">&quot;&gt;&gt; 命令行补全参数</span><br><span class="line">set wildmenu</span><br><span class="line"> </span><br><span class="line">&quot;&gt;&gt; 设置tab键空4格</span><br><span class="line">set tabstop=4</span><br><span class="line"> </span><br><span class="line">&quot;&gt;&gt; 自动检测文件类型</span><br><span class="line">filetype plugin indent on</span><br><span class="line"> </span><br><span class="line">&quot;&gt;&gt; 开启自动缩进，智能缩进</span><br><span class="line">set autoindent</span><br><span class="line">set cindent</span><br><span class="line">set smartindent</span><br><span class="line">set shiftwidth=4</span><br><span class="line"> </span><br><span class="line">&quot;&gt;&gt; 映射光标在窗口间移动的快捷键</span><br><span class="line">nmap &lt;C-H&gt; &lt;C-W&gt;h</span><br><span class="line">nmap &lt;C-J&gt; &lt;C-W&gt;j</span><br><span class="line">nmap &lt;C-K&gt; &lt;C-W&gt;k</span><br><span class="line">nmap &lt;C-L&gt; &lt;C-W&gt;l</span><br><span class="line"> </span><br><span class="line">&quot;&gt;&gt; vim-plug</span><br><span class="line">call plug#begin(&#x27;~/.vim/plugged&#x27;)</span><br><span class="line">Plug &#x27;vim-airline/vim-airline&#x27;</span><br><span class="line">Plug &#x27;vim-airline/vim-airline-themes&#x27;</span><br><span class="line">Plug &#x27;morhetz/gruvbox&#x27;</span><br><span class="line">Plug &#x27;Yggdroot/indentLine&#x27;</span><br><span class="line">Plug &#x27;mhinz/vim-startify&#x27;</span><br><span class="line">Plug &#x27;scrooloose/nerdtree&#x27;</span><br><span class="line">Plug &#x27;kien/ctrlp.vim&#x27;</span><br><span class="line">Plug &#x27;tpope/vim-fugitive&#x27;</span><br><span class="line">Plug &#x27;scrooloose/syntastic&#x27;</span><br><span class="line">Plug &#x27;junegunn/fzf&#x27;, &#123; &#x27;do&#x27;: &#123; -&gt; fzf#install() &#125; &#125;</span><br><span class="line">Plug &#x27;scrooloose/nerdtree&#x27;      &quot; File tree manager</span><br><span class="line">Plug &#x27;jistr/vim-nerdtree-tabs&#x27;      &quot; enhance nerdtree&#x27;s tabs</span><br><span class="line">Plug &#x27;ryanoasis/vim-devicons&#x27;       &quot; add beautiful icons besides files</span><br><span class="line">Plug &#x27;Xuyuanp/nerdtree-git-plugin&#x27;  &quot; display git status within Nerdtree</span><br><span class="line">Plug &#x27;tiagofumo/vim-nerdtree-syntax-highlight&#x27; &quot; enhance devicons</span><br><span class="line">call plug#end()</span><br><span class="line"> </span><br><span class="line">&quot; &lt;Nerdtree&gt;-------------------&#123;</span><br><span class="line">    &quot;&gt;&gt; Basic settings</span><br><span class="line">        &quot;let g:NERDTreeChDirMode = 2  &quot;Change current folder as root</span><br><span class="line">        autocmd BufEnter * if (winnr(&quot;$&quot;) == 1 &amp;&amp; exists(&quot;b:NERDTree&quot;) &amp;&amp; b:NERDTree.isTabTree()) |cd %:p:h |endif</span><br><span class="line">map &lt;C-T&gt; :NERDTreeMirror&lt;CR&gt; &quot;Open Nerdtree    </span><br><span class="line">map &lt;C-T&gt; :NERDTreeToggle&lt;CR&gt; &quot;Close Nerdtree</span><br><span class="line"> </span><br><span class="line">    &quot;&gt;&gt; UI settings</span><br><span class="line">        let NERDTreeQuitOnOpen=1   &quot; Close NERDtree when files was opened</span><br><span class="line">        let NERDTreeMinimalUI=1    &quot; Start NERDTree in minimal UI mode (No help lines)</span><br><span class="line">        let NERDTreeDirArrows=1    &quot; Display arrows instead of ascii art in NERDTree</span><br><span class="line">        let NERDTreeChDirMode=0    &quot; Change current working directory based on root directory in NERDTree</span><br><span class="line">        let g:NERDTreeHidden=1     &quot; Don&#x27;t show hidden files</span><br><span class="line">        let NERDTreeWinSize=30     &quot; Initial NERDTree width</span><br><span class="line">        let NERDTreeAutoDeleteBuffer = 1  &quot; Auto delete buffer deleted with NerdTree</span><br><span class="line">        let NERDTreeShowBookmarks=1   &quot; Show NERDTree bookmarks</span><br><span class="line">        let NERDTreeIgnore = [&#x27;\.pyc$&#x27;, &#x27;\.swp&#x27;, &#x27;\.swo&#x27;, &#x27;__pycache__&#x27;]   &quot; Hide temp files in NERDTree</span><br><span class="line">        &quot;let g:NERDTreeShowLineNumbers=1  &quot; Show Line Number</span><br><span class="line">    &quot; Open Nerdtree when there&#x27;s no file opened</span><br><span class="line">        &quot;autocmd vimenter * if !argc()|NERDTree|endif</span><br><span class="line">    &quot; Or, auto-open Nerdtree</span><br><span class="line">        &quot;autocmd vimenter * NERDTree</span><br><span class="line">    &quot; Close NERDTree when there&#x27;s no other windows</span><br><span class="line">        autocmd bufenter * if (winnr(&quot;$&quot;) == 1 &amp;&amp; exists(&quot;b:NERDTree&quot;) &amp;&amp; b:NERDTree.isTabTree()) | q | endif</span><br><span class="line">    &quot; Customize icons on Nerdtree</span><br><span class="line">        let g:NERDTreeDirArrowExpandable = &#x27;▸&#x27;</span><br><span class="line">        let g:NERDTreeDirArrowCollapsible = &#x27;▾&#x27;</span><br><span class="line"> </span><br><span class="line">    &quot;&gt;&gt; NERDTREE-GIT</span><br><span class="line">        &quot; Special characters</span><br><span class="line">    let g:NERDTreeIndicatorMapCustom = &#123; </span><br><span class="line">        \ &quot;Modified&quot;  : &quot;✹&quot;,</span><br><span class="line">        \ &quot;Staged&quot;    : &quot;✚&quot;,</span><br><span class="line">        \ &quot;Untracked&quot; : &quot;✭&quot;,</span><br><span class="line">        \ &quot;Renamed&quot;   : &quot;➜&quot;,</span><br><span class="line">        \ &quot;Unmerged&quot;  : &quot;═&quot;,</span><br><span class="line">        \ &quot;Deleted&quot;   : &quot;✖&quot;,</span><br><span class="line">        \ &quot;Dirty&quot;     : &quot;✗&quot;,</span><br><span class="line">        \ &quot;Clean&quot;     : &quot;✔︎&quot;,</span><br><span class="line">        \ &#x27;Ignored&#x27;   : &#x27;☒&#x27;,</span><br><span class="line">        \ &quot;Unknown&quot;   : &quot;?&quot;</span><br><span class="line">    \ &#125;</span><br><span class="line"> </span><br><span class="line">    &quot;&gt;&gt; NERDTree-Tabs</span><br><span class="line">        let g:nerdtree_tabs_open_on_console_startup=1 &quot;Auto-open Nerdtree-tabs on VIM enter</span><br><span class="line"></span><br><span class="line">    &quot;&gt;&gt; Nerdtree-devicons</span><br><span class="line">        set guifont=DroidSansMono_Nerd_Font:h11</span><br><span class="line"></span><br><span class="line">    &quot;&gt;&gt; Nerdtree-syntax-highlighting</span><br><span class="line">        let g:NERDTreeDisableFileExtensionHighlight = 1</span><br><span class="line">        let g:NERDTreeDisableExactMatchHighlight = 1</span><br><span class="line">        let g:NERDTreeDisablePatternMatchHighlight = 1</span><br><span class="line">        let g:NERDTreeFileExtensionHighlightFullName = 1</span><br><span class="line">        let g:NERDTreeExactMatchHighlightFullName = 1</span><br><span class="line">        let g:NERDTreePatternMatchHighlightFullName = 1</span><br><span class="line">        let g:NERDTreeHighlightFolders = 1 &quot; enables folder icon highlighting using exact match</span><br><span class="line">        let g:NERDTreeHighlightFoldersFullName = 1 &quot; highlights the folder name</span><br><span class="line">        let g:NERDTreeExtensionHighlightColor = &#123;&#125; &quot; this line is needed to avoid error</span><br><span class="line">&quot; &#125;</span><br><span class="line"> </span><br><span class="line">&quot;&gt;&gt; 基本主题配置</span><br><span class="line">set bg=dark  &quot;设置背景为黑色</span><br><span class="line">colorscheme gruvbox    &quot;设置主题为 gruvbox</span><br><span class="line">set guioptions=        &quot;去掉两边的scrollbar</span><br><span class="line">set guifont=Monaco:h17 &quot;设置字体和字的大小</span><br><span class="line"> </span><br><span class="line">&quot;&gt;&gt; airline settings</span><br><span class="line">let g:airline_theme = &#x27;hybrid&#x27;</span><br><span class="line">let g:airline_powerline_fonts = 1</span><br><span class="line"> </span><br><span class="line">if !exists(&#x27;g:airline_symbols&#x27;)</span><br><span class="line">let g:airline_symbols = &#123;&#125;</span><br><span class="line">endif</span><br><span class="line"> </span><br><span class="line">let g:airline_left_sep = &#x27;&#x27;</span><br><span class="line">let g:airline_left_alt_sep = &#x27;&#x27;</span><br><span class="line">let g:airline_right_sep = &#x27;&#x27;</span><br><span class="line">let g:airline_right_alt_sep = &#x27;&#x27;</span><br><span class="line">let g:airline_symbols.branch = &#x27;&#x27;</span><br><span class="line">let g:airline_symbols.readonly = &#x27;&#x27;</span><br><span class="line">let g:airline_symbols.linenr = &#x27;&#x27;</span><br><span class="line">let g:airline#extensions#tabline#enabled = 1</span><br><span class="line"> </span><br><span class="line">&quot;&gt;&gt; show absolute file path in status line</span><br><span class="line">let g:airline_section_c = &#x27;%&lt;%F%m %#__accent_red#%&#123;airline#util#wrap(airline#parts#readonly(),0)&#125;%#__restore__#&#x27;</span><br><span class="line"> </span><br><span class="line">&quot;&gt;&gt; show tab number in tab line</span><br><span class="line">let g:airline#extensions#tabline#tab_nr_type = 1</span><br><span class="line"> </span><br><span class="line">&quot;&gt;&gt; Enable folding</span><br><span class="line">set foldmethod=indent</span><br><span class="line">set foldlevel=99</span><br><span class="line"> </span><br><span class="line">&quot;&gt;&gt; Enable folding with the spacebar</span><br><span class="line">nnoremap &lt;space&gt; za</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 包管理器 Scoop</title>
      <link href="/posts/Scoop.html"/>
      <url>/posts/Scoop.html</url>
      
        <content type="html"><![CDATA[<p>Windows 包管理器 Scoop 的安装使用。</p><span id="more"></span><h1 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h1><ul><li>Windows 7 SP1 + &#x2F; Windows Server 2008+ <a href="https://aka.ms/wmf5download">PowerShell 5</a>或更高版本，包括<a href="https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell-core-on-windows?view=powershell-6">PowerShell Core</a> 和 <a href="https://www.microsoft.com/net/download">.NET Framework 4.5</a> 或更高版本</li><li>必须启用 PowerShell</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy -ExecutionPolicy RemoteSigned-范围CurrentUser</span><br></pre></td></tr></table></figure><h1 id="默认安装"><a href="#默认安装" class="headerlink" title="默认安装"></a>默认安装</h1><p>默认安装，Scoop 的路径为 C:\Users&lt;user&gt;\scoop，之后 Scoop 安装的软件也会在此。</p><ul><li>打开 PowerShell</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set-executionpolicy remotesigned -scope currentuser</span><br><span class="line">iex (new-object net.webclient).downloadstring(&#x27;https://get.scoop.sh&#x27;)</span><br><span class="line">scoop help</span><br></pre></td></tr></table></figure><h1 id="自定义安装"><a href="#自定义安装" class="headerlink" title="自定义安装"></a>自定义安装</h1><p>自定义 Scoop 安装的路径,不可以安装了 Scoop 之后再设置。</p><h2 id="安装到当前用户"><a href="#安装到当前用户" class="headerlink" title="安装到当前用户"></a>安装到当前用户</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$env:SCOOP=&#x27;D:\Applications\Scoop&#x27;</span><br><span class="line">[Environment]::SetEnvironmentVariable(&#x27;SCOOP&#x27;, $env:SCOOP, &#x27;User&#x27;)</span><br><span class="line"></span><br><span class="line">Invoke-Expression (New-Object System.Net.WebClient).DownloadString(&#x27;https://get.scoop.sh&#x27;)</span><br></pre></td></tr></table></figure><h2 id="全局安装"><a href="#全局安装" class="headerlink" title="全局安装"></a>全局安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$env:SCOOP_GLOBAL=&#x27;D:\GlobalScoopApps&#x27;</span><br><span class="line">[Environment]::SetEnvironmentVariable(&#x27;SCOOP_GLOBAL&#x27;, $env:SCOOP_GLOBAL, &#x27;Machine&#x27;)</span><br><span class="line"></span><br><span class="line">Invoke-Expression (New-Object System.Net.WebClient).DownloadString(&#x27;https://get.scoop.sh&#x27;)</span><br></pre></td></tr></table></figure><h1 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h1><table><thead><tr><th align="left">命令</th><th align="left">动作</th></tr></thead><tbody><tr><td align="left">scoop searchxx</td><td align="left">搜索软件名</td></tr><tr><td align="left">scoop installxx</td><td align="left">安装软件</td></tr><tr><td align="left">scoop updatexx</td><td align="left">更新软件</td></tr><tr><td align="left">scoop statusxx</td><td align="left">查看软件状态</td></tr><tr><td align="left">scoop uninstallxx</td><td align="left">卸载软件</td></tr><tr><td align="left">scoop infoxx</td><td align="left">查看软件详情</td></tr><tr><td align="left">scoop homexx</td><td align="left">打开软件主页</td></tr></tbody></table><ul><li><code>-g</code> 为全局，如 scoop update -g xx 更新全局安装的 xx</li></ul><hr><p><strong>参考</strong></p><ul><li><a href="https://github.com/lukesampson/scoop">Scoop</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多设备统一 Git 换行符</title>
      <link href="/posts/GitLF.html"/>
      <url>/posts/GitLF.html</url>
      
        <content type="html"><![CDATA[<p>由于 Linux 系统中使用 0x0A（LF）, windows 系统中使用 0x0D0A（CRLF）作为换行符，导致跨设备时代码无法运行，因此统一换行符就显得很重要。</p><span id="more"></span><h1 id="配置-Git"><a href="#配置-Git" class="headerlink" title="配置 Git"></a>配置 Git</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 统一换行符为 LF</span><br><span class="line">git config --global core.eol LF</span><br><span class="line"># 将自动转换关闭,避免转换失败不能不同进行提交</span><br><span class="line">git config --global core.autoCRLF false</span><br><span class="line"># 禁止混用 LF 和 CRLF 两种换行符</span><br><span class="line">git config --global core.safeCRLF true</span><br></pre></td></tr></table></figure><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><ul><li><p><code>eol</code> 设置工作目录中文件的换行符，有三个值 lf, crlf 和 native（默认，同操作系统）</p></li><li><p>autocrlf:</p><ul><li>true 检出是转换 CRLF, 提交时转换为 LF</li><li>input 检出是不转换，提交时转换为 LF</li><li>false 不做转换</li></ul></li><li><p><code>safecrlf</code></p><ul><li>true 表示不允许提交时包含不同换行符</li><li>warn 则只在有不同换行符时警告</li><li>false 则允许提价时有不同换行符存在</li></ul></li></ul><h1 id="gitattributes"><a href="#gitattributes" class="headerlink" title=".gitattributes"></a>.gitattributes</h1><p>也可以在项目中添加 .gitattributes</p><figure class="highlight plaintext"><figcaption><span>.gitattributes</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">* text eol=lf</span><br><span class="line">* text=auto</span><br><span class="line">*.txttext</span><br><span class="line">*.jpg-text</span><br><span class="line">*.vcprojtext eol=crlf</span><br><span class="line">*.shtext eol=lf</span><br><span class="line">*.pyeol=lf</span><br></pre></td></tr></table></figure><ul><li><a href="https://www.bookstack.cn/read/git-doc-zh/docs-39.md">了解更多</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>同步 Visual Studio Code 配置</title>
      <link href="/posts/Sync.html"/>
      <url>/posts/Sync.html</url>
      
        <content type="html"><![CDATA[<p>利用 Gist 和 Setting Sync 同步 Visual Studio Code 设置和扩展。</p><span id="more"></span><h1 id="安装-Setting-Sync"><a href="#安装-Setting-Sync" class="headerlink" title="安装 Setting Sync"></a>安装 Setting Sync</h1><p>在扩展中搜索 Setting Sync 并安装。</p><h1 id="配置-Setting-Sync"><a href="#配置-Setting-Sync" class="headerlink" title="配置 Setting Sync"></a>配置 Setting Sync</h1><h2 id="新建-Gist"><a href="#新建-Gist" class="headerlink" title="新建 Gist"></a>新建 Gist</h2><p>访问 <a href="https://github.com/settings/tokens">Github Tokens</a> ,然后点击 Generate new token</p><p><img src="/assets/Picture/images/CreateToken.png"></p><p>勾选 Gist</p><p><img src="/assets/Picture/images/Gist.png"></p><p>然后复制得到的 Token</p><h2 id="配置-Setting-Sync-1"><a href="#配置-Setting-Sync-1" class="headerlink" title="配置 Setting Sync"></a>配置 Setting Sync</h2><p>Crtl + P 输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;sync:Advanced Options</span><br></pre></td></tr></table></figure><p>选择 <code>Sync:编辑扩展本地配置</code> 打开 Setting Sync 扩展的本地配置文件，在 token 中填入上一步的 Token</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;token&quot;: &quot;169f0811bf4b00d9cdcvvvvscassdeesvavasd&quot;,</span><br></pre></td></tr></table></figure><h2 id="配置-Gist"><a href="#配置-Gist" class="headerlink" title="配置 Gist"></a>配置 Gist</h2><ul><li>创建新的 Gist</li></ul><p>访问 <a href="https://gist.github.com/">https://gist.github.com/</a> 创建新的 Gist</p><p><img src="/assets/Picture/images/CreatGist.png"></p><ul><li>得到 Gist ID</li></ul><p><img src="/assets/Picture/images/GistID.png"></p><h2 id="设置-Setting-Sync"><a href="#设置-Setting-Sync" class="headerlink" title="设置 Setting Sync"></a>设置 Setting Sync</h2><ul><li>打开 Setting sync 扩展设置</li></ul><p><img src="/assets/Picture/images/OpenSync.png"></p><ul><li>填入 Gist ID</li></ul><p><img src="/assets/Picture/images/InputGistID.png"></p><h1 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h1><ul><li>上传配置</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Shift + Alt + U</span><br></pre></td></tr></table></figure><ul><li>下载配置</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Shift + Alt + D</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置 PowerShell 主题</title>
      <link href="/posts/PowerShell-Theme.html"/>
      <url>/posts/PowerShell-Theme.html</url>
      
        <content type="html"><![CDATA[<p>配置 PowerShell 主题</p><span id="more"></span><h1 id="安装配置-Scoop"><a href="#安装配置-Scoop" class="headerlink" title="安装配置 Scoop"></a>安装配置 Scoop</h1><blockquote><p>Scoop 第三方 Windows 包管理工具。</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set-executionpolicy</span> remotesigned <span class="literal">-scope</span> currentuser</span><br><span class="line"><span class="built_in">iex</span> (<span class="built_in">new-object</span> net.webclient).downloadstring(<span class="string">&#x27;https://get.scoop.sh&#x27;</span>)</span><br><span class="line">scoop help</span><br></pre></td></tr></table></figure><ul><li><a href="/posts/Scoop.html">其他安装方式</a></li></ul><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><table><thead><tr><th align="left">命令</th><th align="left">动作</th></tr></thead><tbody><tr><td align="left">search</td><td align="left">搜索软件名</td></tr><tr><td align="left">install</td><td align="left">安装软件</td></tr><tr><td align="left">update</td><td align="left">更新软件</td></tr><tr><td align="left">status</td><td align="left">查看软件状态</td></tr><tr><td align="left">uninstall</td><td align="left">卸载软件</td></tr><tr><td align="left">info</td><td align="left">查看软件详情</td></tr><tr><td align="left">home</td><td align="left">打开软件主页</td></tr></tbody></table><h1 id="安装-oh-my-posh"><a href="#安装-oh-my-posh" class="headerlink" title="安装 oh-my-posh"></a>安装 oh-my-posh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Install-Module posh-git -Scope CurrentUser </span><br><span class="line">Install-Module oh-my-posh -Scope CurrentUser</span><br><span class="line">Install-Module -AllowClobber Get-ChildItemColor</span><br></pre></td></tr></table></figure><h1 id="PowerShell-配置文件"><a href="#PowerShell-配置文件" class="headerlink" title="PowerShell 配置文件"></a>PowerShell 配置文件</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 新建 PowerShell 配置文件</span><br><span class="line">if (!(Test-Path -Path $PROFILE )) &#123; New-Item -Type File -Path $PROFILE -Force &#125;</span><br><span class="line"></span><br><span class="line"># 记事本打开配置文件</span><br><span class="line">notepad $PROFILE</span><br></pre></td></tr></table></figure><ul><li>我的配置文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">Import-Module Get-ChildItemColor</span><br><span class="line"></span><br><span class="line">$env:PYTHONIOENCODING=&quot;utf-8&quot;</span><br><span class="line"># Remove curl alias</span><br><span class="line">If (Test-Path Alias:curl) &#123;Remove-Item Alias:curl&#125;</span><br><span class="line">If (Test-Path Alias:curl) &#123;Remove-Item Alias:curl&#125;</span><br><span class="line"># Remove-Item alias:ls -force</span><br><span class="line">Set-Alias l Get-ChildItemColor -option AllScope</span><br><span class="line">Set-Alias ls Get-ChildItemColorFormatWide -option AllScope</span><br><span class="line"></span><br><span class="line">function GitLogPretty &#123;</span><br><span class="line">  git log --graph --pretty=&#x27;%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#x27; --all</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function PrettyLS &#123;</span><br><span class="line">  colorls --light -A</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function GitStat &#123; git status &#125;</span><br><span class="line"></span><br><span class="line">function GoBack &#123; Set-Location .. &#125;</span><br><span class="line"></span><br><span class="line">function GetMyIp &#123; curl -L tool.lu/ip &#125;</span><br><span class="line">function UpdateScoop &#123; scoop update; scoop update * &#125;</span><br><span class="line"></span><br><span class="line">function Vscode &#123; code .&#125;</span><br><span class="line"></span><br><span class="line">function HexoServe &#123; hexo clean; hexo g; hexo s&#125;</span><br><span class="line"></span><br><span class="line"># Git Commit, Add all and Push — in one step.</span><br><span class="line">function GitAdd&#123; git add . ; git commit -m &quot;⚡ ADD: $args&quot; &#125;</span><br><span class="line"></span><br><span class="line">function GitCap&#123; git add . ; git commit -m &quot;$args&quot; ; git push &#125;</span><br><span class="line"></span><br><span class="line"># NEW.</span><br><span class="line">function GitNew&#123; gcap &quot;&lt;F0&gt;&lt;9F&gt;&lt;93&gt;&lt;A6&gt; NEW: $args&quot; &#125;</span><br><span class="line"></span><br><span class="line"># IMPROVE.</span><br><span class="line">function GitImp&#123; gcap &quot;👌 IMPROVE: $args&quot; &#125;</span><br><span class="line"></span><br><span class="line"># FIX.</span><br><span class="line">function GitFix&#123; gcap &quot;🐛 FIX: $args&quot; &#125;</span><br><span class="line"></span><br><span class="line"># RELEASE.</span><br><span class="line">function GitRlz&#123; gcap &quot;🚀 RELEASE: $args&quot; &#125;</span><br><span class="line"></span><br><span class="line"># DOC.</span><br><span class="line">function GitDoc&#123; gcap&quot;📖 DOC: $args&quot; &#125;</span><br><span class="line"></span><br><span class="line"># TEST.</span><br><span class="line">function GitTst&#123; gcap &quot;✅ TEST: $args&quot; &#125;</span><br><span class="line"></span><br><span class="line">Import-Module posh-git</span><br><span class="line">Import-Module oh-my-posh</span><br><span class="line"># $DefaultUser = &#x27;spenc&#x27;</span><br><span class="line"></span><br><span class="line"># Setup other alias</span><br><span class="line">Set-Alias open Invoke-Item</span><br><span class="line">Set-Alias .. GoBack</span><br><span class="line">Set-Alias glola GitLogPretty</span><br><span class="line">Set-Alias gst GitStat</span><br><span class="line">Set-Alias myip GetMyIp</span><br><span class="line">Set-Alias pls PrettyLS</span><br><span class="line">Set-Alias suu UpdateScoop</span><br><span class="line">Set-Alias vs Vscode</span><br><span class="line">Set-Alias vitan HexoServe</span><br><span class="line">Set-Alias gadd GitAdd</span><br><span class="line">Set-Alias gcap GitCap</span><br><span class="line">Set-Alias gnew GitNew</span><br><span class="line">Set-Alias gimp GitImp</span><br><span class="line">Set-Alias gfix GitFix</span><br><span class="line">Set-Alias grlz grlz</span><br><span class="line">Set-Alias gdoc GitDoc</span><br><span class="line">Set-Alias gtst GitTst</span><br><span class="line"></span><br><span class="line"># Set theme</span><br><span class="line">Set-Theme Paradox</span><br><span class="line"></span><br><span class="line">Set-PSReadlineKeyHandler -Key Tab -Function MenuComplete</span><br></pre></td></tr></table></figure><h1 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Theme &lt;主题名&gt;</span><br></pre></td></tr></table></figure><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p><a href="https://github.com/JanDeDobbeleer/oh-my-posh">查阅</a></p><h1 id="安装-colortool-配色管理"><a href="#安装-colortool-配色管理" class="headerlink" title="安装 colortool 配色管理"></a>安装 colortool 配色管理</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop install colortool</span><br></pre></td></tr></table></figure><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 查看主题配色</span><br><span class="line">colortool -s</span><br><span class="line"></span><br><span class="line"># 临时查看</span><br><span class="line">colortool &lt;主题名称&gt;</span><br><span class="line"></span><br><span class="line"># 定义默认值</span><br><span class="line">colortool -d &lt;主题名称&gt;</span><br></pre></td></tr></table></figure><h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><ul><li><a href="https://github.com/powerline/fonts">PowerLine Font</a></li><li><a href="https://github.com/be5invis/Sarasa-Gothic/releases">Sarasa</a></li><li><a href="https://github.com/ryanoasis/nerd-fonts/releases">nerd-fonts</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 安装 OpenSSH 服务端</title>
      <link href="/posts/Windows-OpenSSH.html"/>
      <url>/posts/Windows-OpenSSH.html</url>
      
        <content type="html"><![CDATA[<p>Windows 安装 OpenSSH 服务端</p><span id="more"></span><h1 id="Windows-10-开启"><a href="#Windows-10-开启" class="headerlink" title="Windows 10 开启"></a>Windows 10 开启</h1><p>在系统设置的 <code>应用</code> 中的 <code>管理可选功能</code> 安装 OenSSH 客户端 和 OpenSSH 服务器</p><h1 id="Github-下载"><a href="#Github-下载" class="headerlink" title="Github 下载"></a>Github 下载</h1><p><a href="https://github.com/PowerShell/Win32-OpenSSH/releases">https://github.com/PowerShell/Win32-OpenSSH/releases</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>解压 OpenSSH，添加 Path 环境变量 <code>D:\Program Files\OpenSSH</code>，以管理员身份运行 PowerShell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd D:\Program Files\OpenSSH</span><br><span class="line">powershell.exe -ExecutionPolicy Bypass -File install-sshd.ps1</span><br></pre></td></tr></table></figure><ul><li>设置服务自动启动并启动服务</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sc config sshd start= auto</span><br><span class="line">net start sshd</span><br></pre></td></tr></table></figure><ul><li>配置服务</li></ul><figure class="highlight bash"><figcaption><span>C:\ProgramData\ssh\sshd_config</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 取消注释</span></span><br><span class="line">Port 22</span><br><span class="line">PubkeyAuthentication <span class="built_in">yes</span></span><br><span class="line">PasswordAuthentication no</span><br><span class="line">PermitEmptyPasswords no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注释以下内容</span></span><br><span class="line"><span class="comment">#Match Group administrators</span></span><br><span class="line"><span class="comment">#       AuthorizedKeysFile __PROGRAMDATA__/ssh/administrators_authorized_keys</span></span><br></pre></td></tr></table></figure><ul><li>执行 PowerShell 命令</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd C:\Progra~1\OpenSSH</span><br><span class="line">.\FixHostFilePermissions.ps1</span><br><span class="line">.\FixUserFilePermissions.ps1</span><br></pre></td></tr></table></figure><ul><li>重启 SSHD 服务</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net stop sshd</span><br><span class="line">net sart sshd</span><br></pre></td></tr></table></figure><h2 id="开启端口"><a href="#开启端口" class="headerlink" title="开启端口"></a>开启端口</h2><p>打开 控制面板 -&gt; Windows 防火墙 -&gt; 高级设置 -&gt; 入站规则 -&gt; 新建规则 -&gt; 端口 -&gt; TCP,特定端口 <code>22</code> -&gt; 允许连接 -&gt; 下一步</p><h2 id="将-PowerShell-设为默认-Shell"><a href="#将-PowerShell-设为默认-Shell" class="headerlink" title="将 PowerShell 设为默认 Shell"></a>将 PowerShell 设为默认 Shell</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">New-ItemProperty -Path &quot;HKLM:\SOFTWARE\OpenSSH&quot; -Name DefaultShell -Value &quot;C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -PropertyType String -Force</span><br></pre></td></tr></table></figure><hr><p><strong>参考</strong><br><a href="https://docs.microsoft.com/zh-cn/windows-server/administration/openssh/openssh_server_configuration">OpenSSH 服务器配置</a></p>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> OpenSSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>发布自己的 NPM 包</title>
      <link href="/posts/NpmPackage.html"/>
      <url>/posts/NpmPackage.html</url>
      
        <content type="html"><![CDATA[<p>发布自己的 NPM 包</p><span id="more"></span><h1 id="注册-NPM-账号"><a href="#注册-NPM-账号" class="headerlink" title="注册 NPM 账号"></a>注册 NPM 账号</h1><p>在 <a href="https://www.npmjs.com/">https://www.npmjs.com/</a> 注册账户</p><h1 id="添加本地用户"><a href="#添加本地用户" class="headerlink" title="添加本地用户"></a>添加本地用户</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm adduser</span><br><span class="line">username:</span><br><span class="line">password:</span><br><span class="line">email:</span><br></pre></td></tr></table></figure><p>检查</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm whoami</span><br></pre></td></tr></table></figure><h1 id="配置-package-json"><a href="#配置-package-json" class="headerlink" title="配置 package.json"></a>配置 package.json</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;package_name&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.8.3&quot;,</span><br><span class="line">  &quot;description&quot;: &quot;Package Descrption.&quot;,</span><br><span class="line">  &quot;keywords&quot;: [</span><br><span class="line">    &quot;hexo&quot;,</span><br><span class="line">    &quot;theme&quot;,</span><br><span class="line">    &quot;material design&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;author&quot;: &#123;</span><br><span class="line">    &quot;name&quot;: &quot;Vitan&quot;,</span><br><span class="line">    &quot;email&quot;: &quot;admin@vitan.me&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;license&quot;: &quot;MIT&quot;,</span><br><span class="line">  &quot;repository&quot;: &#123;</span><br><span class="line">    &quot;url&quot;: &quot;git+https://github.com/ivitan/Project.git&quot;,</span><br><span class="line">    &quot;type&quot;: &quot;git&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> Node.Js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NetWork Learn</title>
      <link href="/posts/NetWork.html"/>
      <url>/posts/NetWork.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>H3C 交换机常用命令</title>
      <link href="/posts/H3C.html"/>
      <url>/posts/H3C.html</url>
      
        <content type="html"><![CDATA[<p>H3C 交换机常用命令</p><span id="more"></span><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="用户配置"><a href="#用户配置" class="headerlink" title="用户配置"></a>用户配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;H3C&gt;system-view</span><br><span class="line"></span><br><span class="line"># 设置用户分级密码</span><br><span class="line">[H3C]super password H3C </span><br><span class="line"></span><br><span class="line"># 删除用户分级密码</span><br><span class="line">[H3C]undo super password </span><br><span class="line"></span><br><span class="line"># Web网管用户设置,1（缺省）为管理级用户,缺省admin,admin</span><br><span class="line">[H3C]localuser bigheap 123456 1 </span><br><span class="line"></span><br><span class="line"># 删除Web网管用户</span><br><span class="line">[H3C]undo localuser bigheap </span><br><span class="line"></span><br><span class="line"># 只支持0</span><br><span class="line">[H3C]user-interface aux 0 </span><br><span class="line"></span><br><span class="line"># 设置超时为2分50秒,若为0则表示不超时,默认为5分钟</span><br><span class="line">[H3C-Aux]idle-timeout 2 50 </span><br><span class="line"></span><br><span class="line"># 恢复默认值</span><br><span class="line">[H3C-Aux]undo idle-timeout </span><br><span class="line"></span><br><span class="line"># 只支持0和1</span><br><span class="line">[H3C]user-interface vty 0 </span><br><span class="line"></span><br><span class="line"># 设置超时为2分50秒,若为0则表示不超时,默认为5分钟</span><br><span class="line">[H3C-vty]idle-timeout 2 50 </span><br><span class="line"></span><br><span class="line"># 恢复默认值</span><br><span class="line">[H3C-vty]undo idle-timeout </span><br><span class="line"></span><br><span class="line"># 设置telnet密码,必须设置</span><br><span class="line">[H3C-vty]set authentication password 123456 </span><br><span class="line"></span><br><span class="line"># 取消密码</span><br><span class="line">[H3C-vty]undo set authentication password </span><br><span class="line"></span><br><span class="line"># 显示用户</span><br><span class="line">[H3C]display users </span><br><span class="line"></span><br><span class="line"># 显示用户界面状态</span><br><span class="line">[H3C]display user-interface </span><br></pre></td></tr></table></figure><h2 id="系统IP配置"><a href="#系统IP配置" class="headerlink" title="系统IP配置"></a>系统IP配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[H3C]vlan 20</span><br><span class="line">[H3C]management-vlan 20</span><br><span class="line"></span><br><span class="line"># 创建并进入管理VLAN</span><br><span class="line">[H3C]interface vlan-interface 20 </span><br><span class="line"></span><br><span class="line">#  删除管理VLAN接口</span><br><span class="line">[H3C]undo interface vlan-interface 20</span><br><span class="line"></span><br><span class="line"># 配置管理VLAN接口静态IP地址(缺省为192.168.0.234)</span><br><span class="line">[H3C-Vlan-interface20]ip address 192.168.1.2 255.255.255.0 </span><br><span class="line"></span><br><span class="line"># 删除IP地址</span><br><span class="line">[H3C-Vlan-interface20]undo ip address</span><br><span class="line"></span><br><span class="line"># 指定缺省网关(默认无网关地址)</span><br><span class="line">[H3C-Vlan-interface20]ip gateway 192.168.1.1 </span><br><span class="line">[H3C-Vlan-interface20]undo ip gateway</span><br><span class="line"></span><br><span class="line"># 关闭接口</span><br><span class="line">[H3C-Vlan-interface20]shutdown </span><br><span class="line"></span><br><span class="line"># 开启</span><br><span class="line">[H3C-Vlan-interface20]undo shutdown </span><br><span class="line"></span><br><span class="line"># 显示管理VLAN接口IP的相关信息</span><br><span class="line">[H3C]display ip </span><br><span class="line"></span><br><span class="line">#  查看管理VLAN的接口信息</span><br><span class="line">[H3C]display interface vlan-interface 20</span><br><span class="line"></span><br><span class="line"># 开启IP调试功能</span><br><span class="line">&lt;H3C&gt;debugging ip </span><br><span class="line">&lt;H3C&gt;undo debugging ip</span><br></pre></td></tr></table></figure><h2 id="DHCP客户端配置"><a href="#DHCP客户端配置" class="headerlink" title="DHCP客户端配置"></a>DHCP客户端配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 管理VLAN接口通过DHCP方式获取IP地址</span><br><span class="line">[H3C-Vlan-interface20]ip address dhcp-alloc </span><br><span class="line"></span><br><span class="line"># 取消</span><br><span class="line">[H3C-Vlan-interface20]undo ip address dhcp-alloc </span><br><span class="line"></span><br><span class="line"># 显示DHCP客户信息</span><br><span class="line">[H3C]display dhcp </span><br><span class="line"></span><br><span class="line"># 开启DHCP调试功能</span><br><span class="line">&lt;H3C&gt;debugging dhcp-alloc </span><br><span class="line"></span><br><span class="line">&lt;H3C&gt;undo debugging dhcp-alloc</span><br></pre></td></tr></table></figure><h2 id="端口配置"><a href="#端口配置" class="headerlink" title="端口配置"></a>端口配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">[H3C]interface Ethernet0/3</span><br><span class="line">[H3C-Ethernet0/3]shutdown</span><br><span class="line"></span><br><span class="line"># 速率,可为10,100,1000和auto(缺省)</span><br><span class="line">[H3C-Ethernet0/3]speed 100 </span><br><span class="line"></span><br><span class="line"># 双工,可为half,full和auto(缺省) 光口和汇聚后不能配置</span><br><span class="line">[H3C-Ethernet0/3]duplex full </span><br><span class="line"></span><br><span class="line"># 开启流控,默认为关闭</span><br><span class="line">[H3C-Ethernet0/3]flow-control </span><br><span class="line"></span><br><span class="line"># 设置抑制广播百分比为20%,可取5,10,20,100,缺省为100</span><br><span class="line"># 同时组播和未知单播也受此影响</span><br><span class="line">[H3C-Ethernet0/3]broadcast-suppression 20 </span><br><span class="line"></span><br><span class="line"># 内环测试</span><br><span class="line">[H3C-Ethernet0/3]loopback internal </span><br><span class="line"></span><br><span class="line"># 外环测试,需插接自环头,必须为全双工或者自协商模式</span><br><span class="line">[H3C-Ethernet0/3]loopback external </span><br><span class="line"></span><br><span class="line"># 设置链路的类型为trunk,可为access(缺省),trunk</span><br><span class="line">[H3C-Ethernet0/3]port link-type trunk </span><br><span class="line"></span><br><span class="line"># 设置20为该trunk的缺省VLAN,默认为1(trunk线路两端的PVID必须一致)</span><br><span class="line">[H3C-Ethernet0/3]port trunk pvid vlan 20 </span><br><span class="line"></span><br><span class="line"># 将当前access端口加入指定的VLAN</span><br><span class="line">[H3C-Ethernet0/3]port access vlan 20 </span><br><span class="line"></span><br><span class="line"># 允许所有的VLAN通过当前的trunk端口,可多次使用该命令</span><br><span class="line">[H3C-Ethernet0/3]port trunk permit vlan all </span><br><span class="line"></span><br><span class="line"># 设置以太端口为自动监测,normal(缺省)为直通线,across为交叉线</span><br><span class="line">[H3C-Ethernet0/3]mdi auto </span><br><span class="line"></span><br><span class="line"># 将1-4口加入汇聚组,1为主端口,两端需要同时配置,</span><br><span class="line"># 设置了端口镜像以及端口隔离的端口无法汇聚</span><br><span class="line">[H3C]link-aggregation Ethernet 0/1 to Ethernet 0/4 </span><br><span class="line"></span><br><span class="line"># 删除该汇聚组</span><br><span class="line">[H3C]undo link-aggregation Ethernet 0/1 </span><br><span class="line"></span><br><span class="line"># 配置端口汇聚模式为根据目的MAC地址进行负荷分担,</span><br><span class="line"># 可选为 ingress,egress和both,缺省为both</span><br><span class="line">[H3C]link-aggregation mode egress </span><br><span class="line"></span><br><span class="line"># 将该端口设置为镜像端口,必须先设置镜像端口,删除时必须先删除被镜像端口,</span><br><span class="line"># 而且它们不能同在一个端口,该端口不能在汇聚组中,设置新镜像端口时,新取代旧,被镜像不变</span><br><span class="line"></span><br><span class="line">[H3C]monitor-port Ethernet 0/2 </span><br><span class="line"># 将端口3和4设置为被镜像端口,both为同时监控接收和发送的报文,</span><br><span class="line"># inbound表示仅监控接收的报文,outbound表示仅监控发送的报文</span><br><span class="line"></span><br><span class="line">[H3C]mirroring-port Ethernet 0/3 to Ethernet 0/4 both </span><br><span class="line">[H3C]display mirror</span><br><span class="line">[H3C]display interface Ethernet 0/3</span><br><span class="line"></span><br><span class="line"># 清除所有端口的统计信息</span><br><span class="line">&lt;H3C&gt;reset counters </span><br><span class="line"></span><br><span class="line"># 显示端口汇聚信息</span><br><span class="line">[H3C]display link-aggregation Ethernet 0/3 </span><br><span class="line"></span><br><span class="line"># 诊断该端口的电路状况</span><br><span class="line">[H3C-Ethernet0/3]virtual-cable-test </span><br></pre></td></tr></table></figure><h2 id="VLAN-配置"><a href="#VLAN-配置" class="headerlink" title="VLAN 配置"></a>VLAN 配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[H3C]vlan 2</span><br><span class="line"></span><br><span class="line"># 删除除缺省VLAN外的所有VLAN,缺省VLAN不能被删除</span><br><span class="line">[H3C]undo vlan all </span><br><span class="line"></span><br><span class="line"># 将4到7号端口加入到VLAN2中,此命令只能用来加access端口,</span><br><span class="line"># 不能用来增加trunk或者hybrid端口</span><br><span class="line">[H3C-vlan2]port Ethernet 0/4 to Ethernet 0/7 </span><br><span class="line"></span><br><span class="line"># 打开VLAN内端口隔离特性,不能二层转发,默认不启用该功能</span><br><span class="line">[H3C-vlan2]port-isolate enable </span><br><span class="line"></span><br><span class="line"># 设置4为VLAN2的隔离上行端口,用于转发二层数据,只能配置一个上行端口,</span><br><span class="line"># 若为trunk,则建议允许所有VLAN通过,隔离不能与汇聚同时配置</span><br><span class="line">[H3C-Ethernet0/4]port-isolate uplink-port vlan 2 </span><br><span class="line"></span><br><span class="line"># 显示所有VLAN的详细信息</span><br><span class="line">[H3C]display vlan all </span><br><span class="line"></span><br><span class="line"># S1550E支持基于端口的VLAN,通过创建不同的user-group来实现,</span><br><span class="line"># 一个端口可以属于多个user-group,不属于同一个user-group的端口不能互相通信, </span><br><span class="line"># 最多支持50个user-group</span><br><span class="line"></span><br><span class="line"># 创建user-group 20,默认只存在user-group 1</span><br><span class="line">[H3C]user-group 20 </span><br><span class="line"></span><br><span class="line"># 将4到7号端口加入到VLAN20中,初始时都属于user-group 1中</span><br><span class="line">[H3C-UserGroup20]port Ethernet 0/4 to Ethernet 0/7 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 显示user-group 20的相关信息</span><br><span class="line">[H3C]display user-group 20 </span><br></pre></td></tr></table></figure><h1 id="Work-常用"><a href="#Work-常用" class="headerlink" title="Work 常用"></a>Work 常用</h1><ul><li>进入特权模式</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br></pre></td></tr></table></figure><ul><li>进入端口</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int e0/0/端口号 </span><br><span class="line">int e1/0/端口号</span><br></pre></td></tr></table></figure><ul><li>打开&#x2F;关闭自动获取mac</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mac-address max-mac-count 1</span><br><span class="line">mac-address max-mac-count 0</span><br></pre></td></tr></table></figure><ul><li>查找 mac</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dis mac-address | include aebe</span><br></pre></td></tr></table></figure><ul><li>查看 Vlan 的 arp</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dis arp vlan 216</span><br></pre></td></tr></table></figure><ul><li>查看端口目前 vlan</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dis th</span><br></pre></td></tr></table></figure><ul><li>关闭&#x2F;启用端口</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shutdown</span><br><span class="line">un shutdown</span><br></pre></td></tr></table></figure><ul><li>查看端口获取mac：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dis mac-address vlan 00</span><br></pre></td></tr></table></figure><ul><li>mac绑定端口：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mac-address static 0000-0000-0000 vlan 00</span><br></pre></td></tr></table></figure><ul><li>退出：quit</li><li>保存：save</li><li>取消：undo</li></ul><h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><ul><li>查看Linux下查看端口状态</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an|grep -E &quot;6002|6003&quot;</span><br></pre></td></tr></table></figure><ul><li>显示当前配置</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">display current-configuration</span><br></pre></td></tr></table></figure><ul><li>显示arp信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dis arp</span><br></pre></td></tr></table></figure><ul><li>显示mac列表信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dis mac-address</span><br></pre></td></tr></table></figure><ul><li>显示端口信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">display interface</span><br></pre></td></tr></table></figure><ul><li>进入系统视图</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>打开路由器的telnet功能</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C]telnet server enable</span><br></pre></td></tr></table></figure><ul><li>设置允许同时配置路由器的用户数</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C]configure-user count 5</span><br></pre></td></tr></table></figure><ul><li>添加本地用户(此处为telnet用户登录时使用的用户名)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C]local-user telnet</span><br></pre></td></tr></table></figure><ul><li>设置telnet用户登录时所使用的密码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C-luser-telnet]password simple h3c</span><br></pre></td></tr></table></figure><ul><li>设置本地用户的服务类型(此处为telnet)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C-luser-telnet]service-type telnet</span><br></pre></td></tr></table></figure><ul><li>设置本地用户的服务级别</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C-luser-telnet]level 3</span><br></pre></td></tr></table></figure><ul><li>退出本地用户视图</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C-luser-telnet]quit</span><br></pre></td></tr></table></figure><ul><li>进入用户视图</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C]user-interface vty 0 4</span><br></pre></td></tr></table></figure><ul><li>选择“scheme”认证方式</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C-ui-vty0-4]authentication-mode scheme</span><br></pre></td></tr></table></figure><ul><li>进入某个端口</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C] interface serial 3/0</span><br></pre></td></tr></table></figure><ul><li>为该端口设置ip</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C-Serial3/0]ip address 200.1.1.1 255.255.255.0</span><br></pre></td></tr></table></figure><ul><li>对该端口进行复位</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C-Serial3/0]undo shutdown</span><br></pre></td></tr></table></figure><ul><li>添加一条静态路由</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C]ip route-static 192.168.1.0 255.255.255.0 192.168.0.1</span><br></pre></td></tr></table></figure><ul><li>添加一条默认路由</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C]ip route-static 0.0.0.0  0.0.0.0  192.168.0.1</span><br></pre></td></tr></table></figure><ul><li>保存配置文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C]save</span><br></pre></td></tr></table></figure><ul><li>查看某端口的状态</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C]display interface GigabitEthernet 0/0</span><br></pre></td></tr></table></figure><ul><li>创建vlan</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C]vlan 10</span><br></pre></td></tr></table></figure><ul><li>将某个端口加入到vlan中</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C-vlan100]port ethernet 0/1</span><br></pre></td></tr></table></figure><ul><li>创建vlan虚拟口</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C]interface vlan-interface 1</span><br></pre></td></tr></table></figure><ul><li>配置ip地址</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C-Vlan-interface100]ip address 192.168.1.4  255.255.255.0</span><br></pre></td></tr></table></figure><ul><li>将端口类型设置为trunk</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C]port  link-type trunk</span><br></pre></td></tr></table></figure><ul><li>设置trunk口允许所有vlan通过(需要执行save保存)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C]port  trunk permit vlan all </span><br></pre></td></tr></table></figure><p>注意：Trunk 可以收发多个vlan的报文，用于交换机与交换机之间的互连</p><ul><li>关闭端口</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C-GigabitEthernet1/1/1]shutdown</span><br></pre></td></tr></table></figure><ul><li>设置端口备注</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[H3C-Ethernet1/0/15]description 测试数据</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Switch </tag>
            
            <tag> Network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PicGo 使用 JsDeliver CDN 加速</title>
      <link href="/posts/PicGo.html"/>
      <url>/posts/PicGo.html</url>
      
        <content type="html"><![CDATA[<p>PicGo 使用 JsDeliver CDN 加速 Github 图床</p><span id="more"></span><h1 id="配置-PicGo"><a href="#配置-PicGo" class="headerlink" title="配置 PicGo"></a>配置 PicGo</h1><p><img src="/assets/Picture/images/20200515113912.png"></p><ul><li>在设定自定义域名上填入 <code>/assets/Picture</code><ul><li>其中 <code>ivitan</code> 为 Github 账号,<code>Picture</code> 为 仓库名,<code>master</code> 为分支</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 常用命令参考手册</title>
      <link href="/posts/GitManual.html"/>
      <url>/posts/GitManual.html</url>
      
        <content type="html"><![CDATA[<p>Git 常用命令参考手册</p><span id="more"></span><h1 id="配置相关"><a href="#配置相关" class="headerlink" title="配置相关"></a>配置相关</h1><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看全局配置列表</span></span><br><span class="line">git config -l</span><br><span class="line"><span class="comment"># 查看局部配置列表</span></span><br><span class="line">git config --<span class="built_in">local</span> --list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看已设置的全局用户名/邮箱</span></span><br><span class="line">git config --global --get user.name</span><br><span class="line">git config --global --get user.email</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置全局用户名/邮箱</span></span><br><span class="line">git config --global user.name <span class="string">&quot;Vitan&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;example@example.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置本地当前工作区仓库用户名/邮箱</span></span><br><span class="line">git config --<span class="built_in">local</span> user.name <span class="string">&quot;Vitan&quot;</span></span><br><span class="line">git config --<span class="built_in">local</span> user.email <span class="string">&quot;example@example.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除配置</span></span><br><span class="line">git config --<span class="built_in">unset</span> --global user.name</span><br><span class="line">git config --<span class="built_in">unset</span> --global user.email</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将默认文本编辑器设置为 emacs</span></span><br><span class="line">git config --global core.editor emacs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将默认差异化分析工具设置为 vimdiff</span></span><br><span class="line">git config --global merge.tool vimdiff</span><br></pre></td></tr></table></figure><h2 id="生成SSH-Key"><a href="#生成SSH-Key" class="headerlink" title="生成SSH_Key"></a>生成SSH_Key</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、粘贴以下命令，替换为您的GitHub电子邮件地址</span></span><br><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;your_email@example.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、当提示“输入要在其中保存密钥的文件”时，按Enter。接受默认文件位置。</span></span><br><span class="line">&gt; Enter a file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/Users/you/.ssh/id_rsa): [Press enter]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、在提示符下，键入一个安全密码。</span></span><br><span class="line">&gt; Enter passphrase (empty <span class="keyword">for</span> no passphrase): [Type a passphrase]</span><br><span class="line">&gt; Enter same passphrase again: [Type passphrase again]</span><br></pre></td></tr></table></figure><p>最后需要将生成的 SSH Key 添加到 <code>ssh config</code> 中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、编辑</span></span><br><span class="line">vim ~/.ssh/config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、粘贴下面到 config 文件中</span></span><br><span class="line">Host *</span><br><span class="line">  AddKeysToAgent <span class="built_in">yes</span></span><br><span class="line">  UseKeychain <span class="built_in">yes</span></span><br><span class="line">  IdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><h2 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h2><p><code>git init</code> 创建一个空的Git仓库或重新初始化一个现有的仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 会在当前目录生成.git</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以安静模式创建，只会打印错误或警告信息</span></span><br><span class="line">git init -q</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个裸仓库, 通常情况下用不上</span></span><br><span class="line">git init --bare</span><br></pre></td></tr></table></figure><h2 id="文件状态"><a href="#文件状态" class="headerlink" title="文件状态"></a>文件状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 完整查看文件状态</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以短格式给出输出</span></span><br><span class="line">git status -s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 忽略子模块</span></span><br><span class="line">git status --ignore-submodules</span><br></pre></td></tr></table></figure><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看完整历史提交记录</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看前N次提交记录 commit message</span></span><br><span class="line">git <span class="built_in">log</span> -2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看前N次提交记录，包括diff</span></span><br><span class="line">git <span class="built_in">log</span> -p -2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索关键词</span></span><br><span class="line">git <span class="built_in">log</span> -S Java</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只显示合并日志</span></span><br><span class="line">git <span class="built_in">log</span> --merges</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以图形查看日志记录, --oneline 可选</span></span><br><span class="line">git <span class="built_in">log</span> --graph --oneline</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出提交者贡献数量, 只会打印作者和贡献数量</span></span><br><span class="line">git shortlog -sn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以提交贡献数量排序并打印出message</span></span><br><span class="line">git shortlog -n</span><br><span class="line"></span><br><span class="line"><span class="comment"># 采用邮箱格式化的方式进行查看贡献度</span></span><br><span class="line">git shortlog -e</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 README.md 文件的修改历史记录，包括时间、作者以及内容</span></span><br><span class="line">git blame README.md</span><br></pre></td></tr></table></figure><h1 id="克隆"><a href="#克隆" class="headerlink" title="克隆"></a>克隆</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https 协议</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/ivitan/git.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># SSH协议</span></span><br><span class="line">git <span class="built_in">clone</span> git@github.com:ivitan/git.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 克隆某个分支， -b 指定分支名字</span></span><br><span class="line">git <span class="built_in">clone</span> -b master https://github.com/ivitan/git.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 递归克隆，如果项目包含子模块就非常有用</span></span><br><span class="line">git <span class="built_in">clone</span> --recursive git@github.com:ivitan/git.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 克隆深度为1, 不会把历史的记录也克隆，这样可以节省克隆时间</span></span><br><span class="line">git <span class="built_in">clone</span> --depth=1 https://github.com/ivitan/git.git</span><br></pre></td></tr></table></figure><h1 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h1><h2 id="查看分支"><a href="#查看分支" class="headerlink" title="查看分支"></a>查看分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有分支</span></span><br><span class="line">git branch -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看本地分支</span></span><br><span class="line">git branch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看远端分支</span></span><br><span class="line">git branch -r</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看本地分支所关联的远程分支</span></span><br><span class="line">git branch -vv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看本地 master 分支创建时间</span></span><br><span class="line">git reflog show --<span class="built_in">date</span>=iso master</span><br></pre></td></tr></table></figure><h2 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2种方法，切换到master分支</span></span><br><span class="line">git checkout master</span><br><span class="line">git switch master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换上一个分支</span></span><br><span class="line">git checkout -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换远端分支</span></span><br><span class="line">git checkout -t origin/dev</span><br></pre></td></tr></table></figure><h2 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建develop本地分支</span></span><br><span class="line">git branch develop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建本地develop分支并切换</span></span><br><span class="line">git checkout -b develop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建远程分支, 实际上创建本地分支然后推送</span></span><br><span class="line">git checkout -b develop</span><br><span class="line">git push origin develop</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个空的分支, 不继承父分支，历史记录是空的，一般至少需要执行4步</span></span><br><span class="line">git checkout --orphan develop</span><br><span class="line"><span class="comment"># 这一步可选，如果你真的想创建一个没有任何文件的分支</span></span><br><span class="line">git <span class="built_in">rm</span> -rf .</span><br><span class="line"><span class="comment"># 添加并提交，否则分支是隐藏的 （执行这一步之前需要注意当前工作区必须保留一个文件，否则无法提交）</span></span><br><span class="line">git add -A &amp;&amp; git commit -m <span class="string">&quot;提交&quot;</span></span><br><span class="line"><span class="comment"># 推送到远程</span></span><br><span class="line">git push --set-upstream origin develop</span><br></pre></td></tr></table></figure><h2 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除本地分支</span></span><br><span class="line">git branch -d &lt;branchName&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除远程分支</span></span><br><span class="line">git push origin :&lt;branchName&gt;</span><br></pre></td></tr></table></figure><h2 id="重命名分支"><a href="#重命名分支" class="headerlink" title="重命名分支"></a>重命名分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重命名当前分支, 通常情况下需要执行3步</span></span><br><span class="line"><span class="comment"># 1、修改分支名称</span></span><br><span class="line"><span class="comment"># 2、删除远程旧分支</span></span><br><span class="line"><span class="comment"># 3、将重命名分支推送到远程</span></span><br><span class="line">git branch -m &lt;branchName&gt;</span><br><span class="line">git push origin :old_branch</span><br><span class="line">git push -u origin new_branch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重命名指定分支</span></span><br><span class="line">git branch -m old_branch new_branch</span><br></pre></td></tr></table></figure><h1 id="代码合并"><a href="#代码合并" class="headerlink" title="代码合并"></a>代码合并</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 两步法, 将 feature/v1.0.0 分支代码合并到 develop</span></span><br><span class="line">git checkout develop</span><br><span class="line">git merge feature/v1.0.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者一步法</span></span><br><span class="line">git merge feature/v1.0.0 develop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以安静模式合并, 把develop分支合并到当前分支并不输出任何信息</span></span><br><span class="line">git merge develop -q</span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并不编辑消息, 跳过交互</span></span><br><span class="line">git merge develop --no-edit</span><br></pre></td></tr></table></figure><h1 id="暂存"><a href="#暂存" class="headerlink" title="暂存"></a>暂存</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 暂存所有</span></span><br><span class="line">git add -A</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暂存某个文件</span></span><br><span class="line">git add ./README.md</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暂存当前目录所有改动文件</span></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暂存一系列文件</span></span><br><span class="line">git add 1.txt 2.txt ...</span><br></pre></td></tr></table></figure><h1 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h1><p>git add 的反向操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除1.txt 文件</span></span><br><span class="line">git <span class="built_in">rm</span> 1.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除当前所有文件, 与rm -rf 命令不同的是不会删除 .git 目录</span></span><br><span class="line">git <span class="built_in">rm</span> -rf .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除当前工作区缓存，但不会删除文件，通常用于修改文件名不生效问题</span></span><br><span class="line">git <span class="built_in">rm</span> -r --cached .</span><br></pre></td></tr></table></figure><h2 id="删除远程内容"><a href="#删除远程内容" class="headerlink" title="删除远程内容"></a>删除远程内容</h2><ul><li>预览将要删除的文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git rm -r -n --cached file/folder</span><br><span class="line"></span><br><span class="line">git rm -r --cached file/folder</span><br><span class="line"></span><br><span class="line">git commit -m &quot;Comment&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>加上 <code>-n</code> 这个参数，执行命令时，不会删除任何文件，而是展示此命令要删除的文件列表预览。</p><h1 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -m 提交的信息</span></span><br><span class="line">git commit -m <span class="string">&quot;changes log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 只提交某个文件</span></span><br><span class="line">git commit README.md -m <span class="string">&quot;message&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交并显示diff变化</span></span><br><span class="line">git commit -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许提交空消息，通常必须指定 -m 参数</span></span><br><span class="line">git commit --allow-empty-message</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重写上一次提交信息，确保当前工作区没有改动</span></span><br><span class="line">git commit --amend -m <span class="string">&quot;新的提交信息&quot;</span></span><br></pre></td></tr></table></figure><h1 id="推送"><a href="#推送" class="headerlink" title="推送"></a>推送</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 推送内容到主分支</span></span><br><span class="line">git push -u origin master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地分支推送到远程， 本地分支:远程分支</span></span><br><span class="line">git push origin &lt;branchName&gt;:&lt;branchName&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 简写，默认推送当前分支</span></span><br><span class="line">git push</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制推送, -f 是 --force 缩写</span></span><br><span class="line">git push -f</span><br></pre></td></tr></table></figure><h1 id="拉取最新内容"><a href="#拉取最新内容" class="headerlink" title="拉取最新内容"></a>拉取最新内容</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 推荐，因为不会做自动合并</span></span><br><span class="line">git fetch origin master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 相当于git fetch 然后 git merge</span></span><br><span class="line">git pull</span><br><span class="line"></span><br><span class="line"><span class="comment"># 后面的意思是： 远程分支名:本地分支名</span></span><br><span class="line">git pull origin master:master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果是要与本地当前分支合并，则冒号后面的&lt;本地分支名&gt;可以不写</span></span><br><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><h1 id="查看文件的改动"><a href="#查看文件的改动" class="headerlink" title="查看文件的改动"></a>查看文件的改动</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有文件改动</span></span><br><span class="line">git diff</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看具体文件的改动</span></span><br><span class="line">git diff README.md</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看某个版本的改动, 后面那一窜是commitId， git log后就能看到</span></span><br><span class="line">git diff d68a1ef2407283516e8e4cb675b434505e39dc54</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看某个文件的历史修改记录</span></span><br><span class="line">git <span class="built_in">log</span> README.md</span><br><span class="line">git show d68a1ef2407283516e8e4cb675b434505e39dc54 README.md</span><br></pre></td></tr></table></figure><h1 id="回滚版本"><a href="#回滚版本" class="headerlink" title="回滚版本"></a>回滚版本</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 回滚上一个版本</span></span><br><span class="line">git reset --hard HEAD^</span><br><span class="line"></span><br><span class="line"><span class="comment"># 回滚上两个版本</span></span><br><span class="line">git reset --hard HEAD^^</span><br><span class="line"></span><br><span class="line"><span class="comment"># 回退到指定版本，git log 就能看到commit id了</span></span><br><span class="line">git reset --hard <span class="string">&#x27;commit id&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 回滚版本是不保存在 git log，如果想查看使用</span></span><br><span class="line">git reflog</span><br></pre></td></tr></table></figure><h1 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 撤销当前目录下所有文件的改动</span></span><br><span class="line">git checkout -- .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 撤销指定文件修改</span></span><br><span class="line">git checkout -- README.md</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暂存区回到工作区, 指定 ./README.md 文件从暂存区回到工作区</span></span><br><span class="line">git reset HEAD ./README.md</span><br><span class="line"></span><br><span class="line"><span class="comment"># 撤销commit, 回到工作区, 一般commit id 是前一个</span></span><br><span class="line">git reset &lt;commit_id&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 撤销commit, 并且把修改同时撤销</span></span><br><span class="line">git reset --hard &lt;commit_id&gt;</span><br></pre></td></tr></table></figure><h1 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出本地所有标签</span></span><br><span class="line">git tag</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出远程所有标签</span></span><br><span class="line">git ls-remote --tags origin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按照特定模式查找标签, `*` 模板搜索</span></span><br><span class="line">git tag -l <span class="string">&quot;v1.0.0*&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建带有附注标签</span></span><br><span class="line">git tag -a v1.1.0 -m <span class="string">&quot;标签描述&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建轻量标签, 不需要带任何参数</span></span><br><span class="line">git tag v1.1.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 后期打标签, 假设之前忘记打标签了，可以通过git log查看commit id</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line">git tag -a v1.1.0 &lt;commit_id&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送到远程，默认只是本地创建</span></span><br><span class="line">git push origin v1.1.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一次性推送所有标签到远程</span></span><br><span class="line">git push origin --tags</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除标签, 你需要再次运行 git push origin v1.1.0 才能删除远程标签</span></span><br><span class="line">git tag -d v1.1.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除远程标签</span></span><br><span class="line">git push origin --delete v1.1.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查标签</span></span><br><span class="line">git checkout v1.1.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看本地某个标签详细信息</span></span><br><span class="line">git show v1.1.0</span><br></pre></td></tr></table></figure><h1 id="Rebase"><a href="#Rebase" class="headerlink" title="Rebase"></a>Rebase</h1><p><code>git rebase</code> 主要作用可以将多个commit记录合并为一条</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 操作最近4次提交</span></span><br><span class="line">git rebase -i HEAD~4</span><br><span class="line"><span class="comment"># 或者以 commit_id 进行操作</span></span><br><span class="line">git rebase -i e88835de905ad396f61a0dc8c040a8ac8a34f3f8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 放弃 git rebase 操作</span></span><br><span class="line">git rebase --abort</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此命令主要用于解决冲突后继续执行</span></span><br><span class="line">git rebase --<span class="built_in">continue</span></span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.xiejiahe.com/blog/detail/5d550e8553d11b2c3ca05cbe">git rebase将多次commit合并为一条</a></p><h1 id="GitFlow"><a href="#GitFlow" class="headerlink" title="GitFlow"></a>GitFlow</h1><p>Git Flow 不是内置命令，需要单独安装</p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>每个仓库都必须初始化一次</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通常直接回车以完成默认设置</span></span><br><span class="line">git flow init</span><br></pre></td></tr></table></figure><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启新的功能</span></span><br><span class="line">git flow feature start v1.1.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送到远程, 在团队协作中这一步少不了</span></span><br><span class="line">git flow feature publish v1.1.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 完成功能, 会将当前分支合并到 develop 然后删除分支，回到 develop</span></span><br><span class="line">git flow feature finish v1.1.0</span><br></pre></td></tr></table></figure><h2 id="打补丁"><a href="#打补丁" class="headerlink" title="打补丁"></a>打补丁</h2><p>hotfix 是针对 <code>master</code> 进行打补丁的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启新的 hotfix</span></span><br><span class="line">git flow hotfix start v1.1.0_hotifx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送到远程</span></span><br><span class="line">git flow hotfix publish v1.1.0_hotifx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 完成新的hotfix, 将当前分支合并到 master 和 develop，然后删除分支，回到 develop</span></span><br><span class="line">git flow hotfix finish v1.1.0_hotifx</span><br></pre></td></tr></table></figure><h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启新的 release</span></span><br><span class="line">git flow release start v1.1.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送到远程</span></span><br><span class="line">git flow release publish v1.1.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 完成, 将当前分支合并到 master 和 develop，删除当前分支然后回到 develop</span></span><br><span class="line">git flow release finish v1.1.0</span><br></pre></td></tr></table></figure><h2 id="Git-flow-schema"><a href="#Git-flow-schema" class="headerlink" title="Git flow schema"></a>Git flow schema</h2><p><img src="/assets/Picture/images/git-flow.png"></p><h1 id="子模块"><a href="#子模块" class="headerlink" title="子模块"></a>子模块</h1><p>具体使用还可以看这里 <a href="https://www.xiejiahe.com/blog/detail/5dbceefc0bb52b1c88c30853">git submodule子模块使用教程</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加子模块</span></span><br><span class="line">git submodule add https://github.com/ivitan/git.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新，有2种方法</span></span><br><span class="line"><span class="comment"># 一步到位</span></span><br><span class="line">git submodule update --remote</span><br><span class="line"><span class="comment"># 或者进入到子模块项目再拉取</span></span><br><span class="line">git pull</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修复子模块分支指向 detached head</span></span><br><span class="line">git submodule foreach -q --recursive <span class="string">&#x27;git checkout $(git config -f $toplevel/.gitmodules submodule.$name.branch || echo master)&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除子模块 common 为子模块名称，一般删除需要三部</span></span><br><span class="line">git submodule deinit &lt;common&gt;</span><br><span class="line"><span class="comment"># 清除子模块缓存</span></span><br><span class="line">git <span class="built_in">rm</span> --cached common</span><br><span class="line"><span class="comment"># 提交代码并推送</span></span><br><span class="line">git commit -am <span class="string">&quot;Remove a submodule&quot;</span> &amp;&amp; git push</span><br></pre></td></tr></table></figure><h1 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 详细打印所有git命令</span></span><br><span class="line">git <span class="built_in">help</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印所有git命令, 此命令不会有详细信息，更清晰一些</span></span><br><span class="line">git <span class="built_in">help</span> -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有可配置的变量</span></span><br><span class="line">git <span class="built_in">help</span> -c</span><br></pre></td></tr></table></figure><h1 id="清空commit历史"><a href="#清空commit历史" class="headerlink" title="清空commit历史"></a>清空commit历史</h1><p>假设当前分支是 <code>develop</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、新建一个新分支</span></span><br><span class="line">git checkout --orphan new_branch</span><br><span class="line"><span class="comment"># 2、暂存所有文件并提交</span></span><br><span class="line">git add -A &amp;&amp; git commit -m <span class="string">&quot;First commit&quot;</span></span><br><span class="line"><span class="comment"># 3、删除本地 develop 分支</span></span><br><span class="line">git branch -D develop</span><br><span class="line"><span class="comment"># 4、再将 new_branch 分支重命名为 develop</span></span><br><span class="line">git branch -m develop</span><br><span class="line"><span class="comment"># 5、强制将 develop 分支推送到远程</span></span><br><span class="line">git push -f origin develop</span><br></pre></td></tr></table></figure><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看git版本</span></span><br><span class="line">git --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看远程仓库地址</span></span><br><span class="line">git remote -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 记住提交账号密码</span></span><br><span class="line">git config --global credential.helper store</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除git已保存的用户名和密码</span></span><br><span class="line"><span class="comment"># windows</span></span><br><span class="line">git credential-manager uninstall</span><br><span class="line"><span class="comment"># mac linux</span></span><br><span class="line">git config --global credential.helper <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">git config --global --<span class="built_in">unset</span> credential.helper</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除本地git缓存</span></span><br><span class="line">git <span class="built_in">rm</span> -r --cached .</span><br></pre></td></tr></table></figure><h1 id="Git-思维导图"><a href="#Git-思维导图" class="headerlink" title="Git 思维导图"></a>Git 思维导图</h1><p><img src="/assets/Picture/images/Gitmap.jpg"></p><hr><p><strong>Via</strong></p><ul><li><a href="https://github.com/xjh22222228/git-manual">git-manual</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Shortcuts</title>
      <link href="/posts/WindowsShortcut.html"/>
      <url>/posts/WindowsShortcut.html</url>
      
        <content type="html"><![CDATA[<p>Windows 的常用快捷键</p><span id="more"></span><h1 id="Ctrl"><a href="#Ctrl" class="headerlink" title="Ctrl"></a>Ctrl</h1><table><thead><tr><th align="left">快捷键</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">Ctrl + C</td><td align="left">复制</td></tr><tr><td align="left">Ctrl + V</td><td align="left">粘贴</td></tr><tr><td align="left">Ctrl + X</td><td align="left">剪切</td></tr><tr><td align="left">Ctrl + Z</td><td align="left">撤销</td></tr><tr><td align="left">Ctrl + A</td><td align="left">全选</td></tr><tr><td align="left">Ctrl + D</td><td align="left">删除</td></tr><tr><td align="left">Ctrl + Y</td><td align="left">恢复</td></tr><tr><td align="left">Ctrl + R</td><td align="left">刷新（F5）</td></tr><tr><td align="left">Ctrl + F4</td><td align="left">关闭应用或浏览器标签页</td></tr></tbody></table><h1 id="Alt"><a href="#Alt" class="headerlink" title="Alt"></a>Alt</h1><table><thead><tr><th align="left">快捷键</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">Alt + F4</td><td align="left">直接关闭应用</td></tr><tr><td align="left">Alt + Tab</td><td align="left">在打开的应用间切换</td></tr><tr><td align="left">Alt + Enter</td><td align="left">显示所选项目的属性</td></tr><tr><td align="left">Alt + Esc</td><td align="left">按项目打开顺序循环浏览</td></tr><tr><td align="left">Alt + 空格键</td><td align="left">打开活动窗口的快捷菜单</td></tr></tbody></table><h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><table><thead><tr><th align="left">快捷键</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">Windows + A</td><td align="left">打开操作中心</td></tr><tr><td align="left">Windows + D</td><td align="left">显示和隐藏桌面</td></tr><tr><td align="left">Windows + E</td><td align="left">文件资源管理器</td></tr><tr><td align="left">Windows + F</td><td align="left">打开反馈中心</td></tr><tr><td align="left">Windows + G</td><td align="left">游戏栏</td></tr><tr><td align="left">Windows + I</td><td align="left">打开设置</td></tr><tr><td align="left">Windows + K</td><td align="left">打开连接</td></tr><tr><td align="left">Windows + L</td><td align="left">锁屏</td></tr><tr><td align="left">Windows + M</td><td align="left">最小化所有窗口</td></tr><tr><td align="left">Windows + Shift + M</td><td align="left">还原桌面上的最小化窗口</td></tr><tr><td align="left">Windows + P</td><td align="left">投屏，选择演示显示模式</td></tr><tr><td align="left">Windows + Q</td><td align="left">打开搜索</td></tr><tr><td align="left">Windows + R</td><td align="left">打开“运行”对话框</td></tr><tr><td align="left">Windows + S</td><td align="left">打开搜索</td></tr><tr><td align="left">Windows + T</td><td align="left">循环浏览任务栏上的应用</td></tr><tr><td align="left">Windows + U</td><td align="left">打开轻松使用设置中心</td></tr><tr><td align="left">Windows + V</td><td align="left">打开剪切板</td></tr><tr><td align="left">Windows + W</td><td align="left">打开 Ink 工作区</td></tr><tr><td align="left">Windows + X</td><td align="left">打开快速链接菜单</td></tr><tr><td align="left">Windows + 空格键</td><td align="left">切换输入语言和键盘布局</td></tr><tr><td align="left">Windows + 句点 (.)</td><td align="left">打开表情符号面板</td></tr><tr><td align="left">Windows + 逗号 (,)</td><td align="left">临时速览桌面</td></tr><tr><td align="left">Windows + 号 (+)</td><td align="left">打开放大镜</td></tr><tr><td align="left">Windows + 数字</td><td align="left">打开桌面，然后启动固定到任务栏的应用（位于数字所指明的位置）。如果应用已处于运行状态，则切换至该应用，例如应用商店：Windows + 1；新版 Edge 浏览器：Windows + 2；Chrome 浏览器：Windows + 6，以此类推。）</td></tr></tbody></table><h1 id="虚拟桌面"><a href="#虚拟桌面" class="headerlink" title="虚拟桌面"></a>虚拟桌面</h1><table><thead><tr><th align="left">快捷键</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">Windows + Tab</td><td align="left">打开任务视图</td></tr><tr><td align="left">Windows + Ctrl + D</td><td align="left">添加虚拟桌面</td></tr><tr><td align="left">Windows + Ctrl + F4</td><td align="left">关闭虚拟桌面。</td></tr></tbody></table><h1 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h1><table><thead><tr><th align="left">快捷键</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">F2</td><td align="left">重命名</td></tr><tr><td align="left">Ctrl + Shift + Esc</td><td align="left">打开任务管理器（Ctrl + Alt + Del）</td></tr><tr><td align="left">Windows + PrtScn</td><td align="left">全屏幕截图</td></tr><tr><td align="left">Windows + Shift + S</td><td align="left">打开截图和草图</td></tr><tr><td align="left">getmac</td><td align="left">获取Mac地址</td></tr><tr><td align="left">mstsc</td><td align="left">远程连接</td></tr><tr><td align="left">Windows最后一次正确配置</td><td align="left">开机F8</td></tr></tbody></table><h1 id="常用快捷命令"><a href="#常用快捷命令" class="headerlink" title="常用快捷命令"></a>常用快捷命令</h1><table><thead><tr><th align="left">命令</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">ncpa.cpl</td><td align="left">网络连接</td></tr><tr><td align="left">lusrmgr</td><td align="left">打开用户组管理</td></tr><tr><td align="left">winver</td><td align="left">检查Windows版本</td></tr><tr><td align="left">wmimgmt.msc</td><td align="left">打开Windows管理体系结构(WMI)</td></tr><tr><td align="left">wupdmgr</td><td align="left">Windows更新程序</td></tr><tr><td align="left">wscript</td><td align="left">Windows脚本宿主设置</td></tr><tr><td align="left">write</td><td align="left">写字板</td></tr><tr><td align="left">winmsd</td><td align="left">系统信息</td></tr><tr><td align="left">wiaacmgr</td><td align="left">扫描仪和照相机向导</td></tr><tr><td align="left">winchat</td><td align="left">XwinverP自带局域网聊天</td></tr><tr><td align="left">mem</td><td align="left">显示内存使用情况</td></tr><tr><td align="left">Msconfig</td><td align="left">系统配置实用程序</td></tr><tr><td align="left">mplayer2</td><td align="left">简易widnows media player</td></tr><tr><td align="left">mspaint</td><td align="left">画图板</td></tr><tr><td align="left">mstsc</td><td align="left">远程桌面连接</td></tr><tr><td align="left">mplayer2</td><td align="left">媒体播放机</td></tr><tr><td align="left">magnify</td><td align="left">放大镜实用程序</td></tr><tr><td align="left">mmc</td><td align="left">打开控制台</td></tr><tr><td align="left">mobsync</td><td align="left">同步命令</td></tr><tr><td align="left">dxdiag</td><td align="left">检查DirectX信息</td></tr><tr><td align="left">drwtsn32</td><td align="left">系统医生</td></tr><tr><td align="left">devmgmt.msc</td><td align="left">设备管理器</td></tr><tr><td align="left">dfrg.msc</td><td align="left">磁盘碎片整理程序</td></tr><tr><td align="left">diskmgmt.msc</td><td align="left">磁盘管理实用程序</td></tr><tr><td align="left">dcomcnfg</td><td align="left">打开系统组件服务</td></tr><tr><td align="left">ddeshare</td><td align="left">打开DDE共享设置</td></tr><tr><td align="left">dvdplay</td><td align="left">DVD播放器</td></tr><tr><td align="left">net stop messenger</td><td align="left">停止信使服务</td></tr><tr><td align="left">net start messenger</td><td align="left">开始信使服务</td></tr><tr><td align="left">notepad</td><td align="left">打开记事本</td></tr><tr><td align="left">nslookup</td><td align="left">网络管理的工具向导</td></tr><tr><td align="left">ntbackup</td><td align="left">系统备份和还原</td></tr><tr><td align="left">narrator</td><td align="left">屏幕“讲述人”</td></tr><tr><td align="left">ntmsmgr.msc</td><td align="left">移动存储管理器</td></tr><tr><td align="left">ntmsoprq.msc</td><td align="left">移动存储管理员操作请求</td></tr><tr><td align="left">netstat -an</td><td align="left">(TC)命令检查接口</td></tr><tr><td align="left">syncapp</td><td align="left">创建一个公文包</td></tr><tr><td align="left">sysedit</td><td align="left">系统配置编辑器</td></tr><tr><td align="left">sigverif</td><td align="left">文件签名验证程序</td></tr><tr><td align="left">sndrec32</td><td align="left">录音机</td></tr><tr><td align="left">shrpubw</td><td align="left">创建共享文件夹</td></tr><tr><td align="left">secpol.msc</td><td align="left">本地安全策略</td></tr><tr><td align="left">syskey</td><td align="left">系统加密，一旦加密就不能解开，保护Windows xp系统的双重密码</td></tr><tr><td align="left">services.msc</td><td align="left">本地服务设置</td></tr><tr><td align="left">Sndvol32</td><td align="left">音量控制程序</td></tr><tr><td align="left">sfc.exe</td><td align="left">系统文件检查器</td></tr><tr><td align="left">sfc &#x2F;scannow</td><td align="left">Windows文件保护</td></tr><tr><td align="left">tsshutdn</td><td align="left">60秒倒计时关机命令</td></tr><tr><td align="left">tourstart</td><td align="left">xp简介（安装完成后出现的漫游xp程序）</td></tr><tr><td align="left">taskmgr</td><td align="left">任务管理器</td></tr><tr><td align="left">eventvwr</td><td align="left">事件查看器</td></tr><tr><td align="left">eudcedit</td><td align="left">造字程序</td></tr><tr><td align="left">explorer</td><td align="left">打开资源管理器</td></tr><tr><td align="left">packager</td><td align="left">对象包装程序</td></tr><tr><td align="left">perfmon.msc</td><td align="left">计算机性能监测程序</td></tr><tr><td align="left">progman</td><td align="left">程序管理器</td></tr><tr><td align="left">regedit.exe</td><td align="left">注册表</td></tr><tr><td align="left">rsop.msc</td><td align="left">组策略结果集</td></tr><tr><td align="left">regedt32</td><td align="left">注册表编辑器</td></tr><tr><td align="left">rononce -p</td><td align="left">15秒关机</td></tr><tr><td align="left">regsvr32 &#x2F;u *.dll</td><td align="left">停止dll文件运行</td></tr><tr><td align="left">regsvr32 &#x2F;u zipfldr.dll</td><td align="left">取消ZIP支持</td></tr><tr><td align="left">cmd.exe</td><td align="left">CMD命令提示符</td></tr><tr><td align="left">chkdsk.exe</td><td align="left">Chkdsk磁盘检查</td></tr><tr><td align="left">certmgr.msc</td><td align="left">证书管理实用程序</td></tr><tr><td align="left">calc</td><td align="left">启动计算器</td></tr><tr><td align="left">charmap</td><td align="left">启动字符映射表</td></tr><tr><td align="left">cliconfg</td><td align="left">SQL SERVER 客户端网络实用程序</td></tr><tr><td align="left">Clipbrd</td><td align="left">剪贴板查看器</td></tr><tr><td align="left">conf</td><td align="left">启动netmeeting</td></tr><tr><td align="left">compmgmt.msc</td><td align="left">计算机管理</td></tr><tr><td align="left">cleanmgr</td><td align="left">垃圾整理</td></tr><tr><td align="left">ciadv.msc</td><td align="left">索引服务程序</td></tr><tr><td align="left">osk</td><td align="left">打开屏幕键盘</td></tr><tr><td align="left">odbcad32</td><td align="left">-ODBC数据源管理器</td></tr><tr><td align="left">oobe&#x2F;msoobe &#x2F;a</td><td align="left">检查XP是否激活</td></tr><tr><td align="left">lusrmgr.msc</td><td align="left">本机用户和组</td></tr><tr><td align="left">logoff</td><td align="left">注销命令</td></tr><tr><td align="left">iexpress</td><td align="left">木马捆绑工具，系统自带</td></tr><tr><td align="left">Nslookup</td><td align="left">IP地址侦测器</td></tr><tr><td align="left">fsmgmt.msc</td><td align="left">共享文件夹管理器</td></tr><tr><td align="left">utilman</td><td align="left">辅助工具管理器</td></tr><tr><td align="left">gpedit.msc</td><td align="left">组策略</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更换 Npm 源</title>
      <link href="/posts/NpmMirror.html"/>
      <url>/posts/NpmMirror.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Npm 换源</p></blockquote><span id="more"></span><h1 id="临时源"><a href="#临时源" class="headerlink" title="临时源"></a>临时源</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm --registry https://registry.npm.taobao.org install express</span><br></pre></td></tr></table></figure><h1 id="永久源"><a href="#永久源" class="headerlink" title="永久源"></a>永久源</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h1 id="cnpm"><a href="#cnpm" class="headerlink" title="cnpm"></a>cnpm</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h1 id="官方镜像"><a href="#官方镜像" class="headerlink" title="官方镜像"></a>官方镜像</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npmjs.org/</span><br></pre></td></tr></table></figure><h1 id="查看源地址"><a href="#查看源地址" class="headerlink" title="查看源地址"></a>查看源地址</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> Node.Js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Highlight.Js Markdown 对照表</title>
      <link href="/posts/HighlightJs.html"/>
      <url>/posts/HighlightJs.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>HighlightJs显示语言的完整列表</p></blockquote><span id="more"></span><p>用法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```key</span><br><span class="line">code</span><br></pre></td></tr></table></figure><pre><code>| 语言               | key              | :-----------------------| :---------------------| 1C                      | 1c                     | ABNF                    | abnf                   | Access logs             | accesslog              | Ada                     | ada                    | ARM assembler           | armasm, arm            | AVR assembler           | avrasm                 | ActionScript            | actionscript, as       | Alan                    | alan, i   | AngelScript             | angelscript, asc       | Apache                  | apache, apacheconf     | AppleScript             | applescript, osascript | Arcade                  | arcade                 | AsciiDoc                | asciidoc, adoc         | AspectJ                 | aspectj                | AutoHotkey              | autohotkey             | AutoIt                  | autoit                 | Awk                     | awk, mawk, nawk, gawk  | Axapta                  | axapta                 | Bash                    | bash, sh, zsh          | Basic                   | basic                  | BNF                     | bnf                    | Brainfuck               | brainfuck, bf          | C#                      | cs, csharp             | C++                     | cpp, c, cc, h, c++, h++, hpp| C/AL                    | cal                    | Cache Object Script     | cos, cls               | CMake                   | cmake, cmake.in        | Coq                     | coq                    | CSP                     | csp                    | CSS                     | css                    | Cap’n Proto             | capnproto, capnp       | Clojure                 | clojure, clj           | CoffeeScript            | coffeescript, coffee, cson, iced| Crmsh                   | crmsh, crm, pcmk       | Crystal                 | crystal, cr            | Cypher (Neo4j)          | cypher| D                       | d                      | DNS Zone file           | dns, zone, bind        | DOS                     | dos, bat, cmd          | Dart                    | dart                   | Delphi                  | delphi, dpr, dfm, pas, pascal, freepascal, lazarus, lpr, lfm| Diff                    | diff, patch            | Django                  | django, jinja          | Dockerfile              | dockerfile, docker     | dsconfig                | dsconfig               | DTS (Device Tree)       | dts                    | Dust                    | dust, dst              | Dylan                   | dylan| EBNF                    | ebnf                   | Elixir                  | elixir                 | Elm                     | elm                    | Erlang                  | erlang, erl            | Excel                   | excel, xls, xlsx       | Extempore               | extempore, xtlang, xtm| F#                      | fsharp, fs             | FIX                     | fix                    | Fortran                 | fortran, f90, f95      | G-Code                  | gcode, nc              | Gams                    | gams, gms              | GAUSS                   | gauss, gss             | GDScript                | godot, gdscript| Gherkin                 | gherkin                | GN for Ninja            | gn, gni| Go                      | go, golang             | Grammatical Framework   | gf                     | Golo                    | golo, gololang         | Gradle                  | gradle                 | Groovy                  | groovy                 | HTML, XML               | xml, html, xhtml, rss, atom, xjb, xsd, xsl, plist, svg| HTTP                    | http, https            | Haml                    | haml                   | Handlebars              | handlebars, hbs, html.hbs, html.handlebars| Haskell                 | haskell, hs            | Haxe                    | haxe, hx               | Hy                      | hy, hylang             | Ini, TOML               | ini, toml              | Inform7                 | inform7, i7            | IRPF90                  | irpf90                 | JSON                    | json                   | Java                    | java, jsp              | JavaScript              | javascript, js, jsx    | Kotlin                  | kotlin, kt             | Leaf                    | leaf                   | Lasso                   | lasso, ls, lassoscript | Less                    | less                   | LDIF                    | ldif                   | Lisp                    | lisp                   | LiveCode Server         | livecodeserver         | LiveScript              | livescript, ls         | Lua                     | lua                    | Makefile                | makefile, mk, mak      | Markdown                | markdown, md, mkdown, mkd| Mathematica             | mathematica, mma, wl   | Matlab                  | matlab                 | Maxima                  | maxima                 | Maya Embedded Language  | mel                    | Mercury                 | mercury                | mIRC Scripting Language | mirc, mrc| Mizar                   | mizar                  | Mojolicious             | mojolicious            | Monkey                  | monkey                 | Moonscript              | moonscript, moon       | N1QL                    | n1ql                   | NSIS                    | nsis                   | Nginx                   | nginx, nginxconf       | Nimrod                  | nimrod, nim            | Nix                     | nix                    | OCaml                   | ocaml, ml              | Objective C             | objectivec, mm, objc, obj-c| OpenGL Shading Language | glsl                   | OpenSCAD                | openscad, scad         | Oracle Rules Language   | ruleslanguage          | Oxygene                 | oxygene                | PF                      | pf, pf.conf            | PHP                     | php, php3, php4, php5, php6, php7| Parser3                 | parser3                | Perl                    | perl, pl, pm           | Plaintext: no highlight | plaintext              | Pony                    | pony                   | PostgreSQL &amp; PL/pgSQL   | pgsql, postgres, postgresql| PowerShell              | powershell, ps, ps1    | Processing              | processing             | Prolog                  | prolog                 | Properties              | properties             | Protocol Buffers        | protobuf               | Puppet                  | puppet, pp             | Python                  | python, py, gyp        | Python profiler results | profile                | Q                       | k, kdb                 | QML                     | qml                    | R                       | r                      | Razor CSHTML            | cshtml, razor, razor-cshtml| ReasonML                | reasonml, re           | RenderMan RIB           | rib                    | RenderMan RSL           | rsl                    | Roboconf                | graph, instances       | Robot Framework         | robot, rf   | RPM spec files          | rpm-specfile, rpm, spec, rpm-spec, specfile | Ruby                    | ruby, rb, gemspec, podspec, thor, irb | || Rust                    | rust, rs               | SAS                     | SAS, sas               | SCSS                    | scss                   | SQL                     | sql                    | STEP Part 21            | p21, step, stp         | Scala                   | scala                  | Scheme                  | scheme                 | Scilab                  | scilab, sci            | Shape Expressions       | shexc             | Shell                   | shell, console         | Smali                   | smali                  | Smalltalk               | smalltalk, st          | Solidity                | solidity, sol        | Stan                    | stan, stanfuncs        | Stata                   | stata                  | Structured Text         | iecst, scl, stl, structured-text | Stylus                  | stylus, styl           | SubUnit                 | subunit                | Supercollider           | supercollider, sc     | Swift                   | swift                  | Tcl                     | tcl, tk                | Terraform (HCL)         | terraform, tf, hcl     | Test Anything Protocol  | tap                    | TeX                     | tex                    | Thrift                  | thrift                 | TP                      | tp                     | Twig                    | twig, craftcms         | TypeScript              | typescript, ts         | VB.Net                  | vbnet, vb              | VBScript                | vbscript, vbs          | VHDL                    | vhdl                   | Vala                    | vala                   | Verilog                 | verilog, v             | Vim Script              | vim                    | x86 Assembly            | x86asm                 | XL                      | xl, tao                | XQuery                  | xquery, xpath, xq      | YAML                    | yml, yaml              | Zephir                  | zephir, zep            ---- [官方文档](https://github.com/highlightjs/highlight.js/tree/9-18-stable)</code></pre>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim NerdTree 插件</title>
      <link href="/posts/NerdTree.html"/>
      <url>/posts/NerdTree.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/preservim/nerdtree">NERDTree</a> 是 Vim 编辑器的文件系统浏览器。使用此插件，用户可以直观地浏览复杂的目录层次结构，快速打开文件以进行读取或编辑，以及执行基本的文件系统操作。</p></blockquote><!--more---><h1 id="Plug-安装"><a href="#Plug-安装" class="headerlink" title="Plug 安装"></a>Plug 安装</h1><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> plug#begin(<span class="string">&#x27;~/.vim/plugged&#x27;</span>)</span><br><span class="line">Plug <span class="string">&#x27;scrooloose/nerdtree&#x27;</span>          <span class="comment">&quot; File tree manager</span></span><br><span class="line">Plug <span class="string">&#x27;jistr/vim-nerdtree-tabs&#x27;</span>      <span class="comment">&quot; enhance nerdtree&#x27;s tabs</span></span><br><span class="line">Plug <span class="string">&#x27;ryanoasis/vim-devicons&#x27;</span>       <span class="comment">&quot; add beautiful icons besides files</span></span><br><span class="line">Plug <span class="string">&#x27;Xuyuanp/nerdtree-git-plugin&#x27;</span>  <span class="comment">&quot; display git status within Nerdtree</span></span><br><span class="line">Plug <span class="string">&#x27;tiagofumo/vim-nerdtree-syntax-highlight&#x27;</span> <span class="comment">&quot; enhance devicons</span></span><br><span class="line"><span class="keyword">call</span> plug#end()</span><br></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><figure class="highlight vim"><figcaption><span>~/.vimrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&quot; &lt;Nerdtree&gt;-------------------&#123;</span></span><br><span class="line">    <span class="comment">&quot;&gt;&gt; Basic settings</span></span><br><span class="line">        <span class="keyword">let</span> <span class="variable">g:NERDTreeChDirMode</span> = <span class="number">2</span>  <span class="comment">&quot;Change current folder as root</span></span><br><span class="line">        <span class="keyword">autocmd</span> BufEnter * <span class="keyword">if</span> (<span class="built_in">winnr</span>(<span class="string">&quot;$&quot;</span>) == <span class="number">1</span> &amp;&amp; <span class="built_in">exists</span>(<span class="string">&quot;b:NERDTree&quot;</span>) &amp;&amp; <span class="variable">b:NERDTree</span>.isTabTree()) |<span class="keyword">cd</span> %:<span class="keyword">p</span>:h |<span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&quot;&gt;&gt; UI settings</span></span><br><span class="line">        <span class="keyword">let</span> NERDTreeQuitOnOpen=<span class="number">1</span>   <span class="comment">&quot; Close NERDtree when files was opened</span></span><br><span class="line">        <span class="keyword">let</span> NERDTreeMinimalUI=<span class="number">1</span>    <span class="comment">&quot; Start NERDTree in minimal UI mode (No help lines)</span></span><br><span class="line">        <span class="keyword">let</span> NERDTreeDirArrows=<span class="number">1</span>    <span class="comment">&quot; Display arrows instead of ascii art in NERDTree</span></span><br><span class="line">        <span class="keyword">let</span> NERDTreeChDirMode=<span class="number">2</span>    <span class="comment">&quot; Change current working directory based on root directory in NERDTree</span></span><br><span class="line">        <span class="keyword">let</span> <span class="variable">g:NERDTreeHidden</span>=<span class="number">1</span>     <span class="comment">&quot; Don&#x27;t show hidden files</span></span><br><span class="line">        <span class="keyword">let</span> NERDTreeWinSize=<span class="number">30</span>     <span class="comment">&quot; Initial NERDTree width</span></span><br><span class="line">        <span class="keyword">let</span> NERDTreeAutoDeleteBuffer = <span class="number">1</span>  <span class="comment">&quot; Auto delete buffer deleted with NerdTree</span></span><br><span class="line">        <span class="string">&quot;let NERDTreeShowBookmarks=0   &quot;</span> Show NERDTree bookmarks</span><br><span class="line">        <span class="keyword">let</span> NERDTreeIgnore = [<span class="string">&#x27;\.pyc$&#x27;</span>, <span class="string">&#x27;\.swp&#x27;</span>, <span class="string">&#x27;\.swo&#x27;</span>, <span class="string">&#x27;__pycache__&#x27;</span>]   <span class="comment">&quot; Hide temp files in NERDTree</span></span><br><span class="line">        <span class="string">&quot;let g:NERDTreeShowLineNumbers=1  &quot;</span> Show Line Number</span><br><span class="line">    <span class="comment">&quot; Open Nerdtree when there&#x27;s no file opened</span></span><br><span class="line">        <span class="comment">&quot;autocmd vimenter * if !argc()|NERDTree|endif</span></span><br><span class="line">    <span class="comment">&quot; Or, auto-open Nerdtree</span></span><br><span class="line">        <span class="comment">&quot;autocmd vimenter * NERDTree</span></span><br><span class="line">    <span class="comment">&quot; Close NERDTree when there&#x27;s no other windows</span></span><br><span class="line">        <span class="keyword">autocmd</span> bufenter * <span class="keyword">if</span> (<span class="built_in">winnr</span>(<span class="string">&quot;$&quot;</span>) == <span class="number">1</span> &amp;&amp; <span class="built_in">exists</span>(<span class="string">&quot;b:NERDTree&quot;</span>) &amp;&amp; <span class="variable">b:NERDTree</span>.isTabTree()) | q | <span class="keyword">endif</span></span><br><span class="line">    <span class="comment">&quot; Customize icons on Nerdtree</span></span><br><span class="line">        <span class="keyword">let</span> <span class="variable">g:NERDTreeDirArrowExpandable</span> = <span class="string">&#x27;▸&#x27;</span></span><br><span class="line">        <span class="keyword">let</span> <span class="variable">g:NERDTreeDirArrowCollapsible</span> = <span class="string">&#x27;▾&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&quot;&gt;&gt; NERDTREE-GIT</span></span><br><span class="line">        <span class="comment">&quot; Special characters</span></span><br><span class="line">    <span class="keyword">let</span> <span class="variable">g:NERDTreeIndicatorMapCustom</span> = &#123; </span><br><span class="line">        \ <span class="string">&quot;Modified&quot;</span>  : <span class="string">&quot;✹&quot;</span>,</span><br><span class="line">        \ <span class="string">&quot;Staged&quot;</span>    : <span class="string">&quot;✚&quot;</span>,</span><br><span class="line">        \ <span class="string">&quot;Untracked&quot;</span> : <span class="string">&quot;✭&quot;</span>,</span><br><span class="line">        \ <span class="string">&quot;Renamed&quot;</span>   : <span class="string">&quot;➜&quot;</span>,</span><br><span class="line">        \ <span class="string">&quot;Unmerged&quot;</span>  : <span class="string">&quot;═&quot;</span>,</span><br><span class="line">        \ <span class="string">&quot;Deleted&quot;</span>   : <span class="string">&quot;✖&quot;</span>,</span><br><span class="line">        \ <span class="string">&quot;Dirty&quot;</span>     : <span class="string">&quot;✗&quot;</span>,</span><br><span class="line">        \ <span class="string">&quot;Clean&quot;</span>     : <span class="string">&quot;✔︎&quot;</span>,</span><br><span class="line">        \ <span class="string">&#x27;Ignored&#x27;</span>   : <span class="string">&#x27;☒&#x27;</span>,</span><br><span class="line">        \ <span class="string">&quot;Unknown&quot;</span>   : <span class="string">&quot;?&quot;</span></span><br><span class="line">    \ &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">&quot;&gt;&gt; NERDTree-Tabs</span></span><br><span class="line">        <span class="string">&quot;let g:nerdtree_tabs_open_on_console_startup=1 &quot;</span>Auto-<span class="keyword">open</span> Nerdtree-<span class="keyword">tabs</span> <span class="keyword">on</span> VIM enter</span><br><span class="line">    <span class="comment">&quot;&gt;&gt; Nerdtree-devicons</span></span><br><span class="line">        <span class="comment">&quot;set guifont=DroidSansMono_Nerd_Font:h11</span></span><br><span class="line">    <span class="comment">&quot;&gt;&gt; Nerdtree-syntax-highlighting</span></span><br><span class="line">        <span class="comment">&quot;let g:NERDTreeDisableFileExtensionHighlight = 1</span></span><br><span class="line">        <span class="comment">&quot;let g:NERDTreeDisableExactMatchHighlight = 1</span></span><br><span class="line">        <span class="comment">&quot;let g:NERDTreeDisablePatternMatchHighlight = 1</span></span><br><span class="line">        <span class="comment">&quot;let g:NERDTreeFileExtensionHighlightFullName = 1</span></span><br><span class="line">        <span class="comment">&quot;let g:NERDTreeExactMatchHighlightFullName = 1</span></span><br><span class="line">        <span class="comment">&quot;let g:NERDTreePatternMatchHighlightFullName = 1</span></span><br><span class="line">        <span class="string">&quot;let g:NERDTreeHighlightFolders = 1 &quot;</span> enables folder icon highlighting using exact <span class="keyword">match</span></span><br><span class="line">        <span class="string">&quot;let g:NERDTreeHighlightFoldersFullName = 1 &quot;</span> highlights the folder name</span><br><span class="line">        <span class="string">&quot;let g:NERDTreeExtensionHighlightColor = &#123;&#125; &quot;</span> this <span class="built_in">line</span> <span class="keyword">is</span> needed <span class="keyword">to</span> avoid error</span><br><span class="line"><span class="comment">&quot; &#125;</span></span><br></pre></td></tr></table></figure><h1 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h1><p>输入 <code>:NERDTreeToggle</code> 打开文件树。快捷键来映射,在vimrc中加入：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">map</span> <span class="symbol">&lt;F3&gt;</span> :NERDTreeMirror<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">map</span> <span class="symbol">&lt;F3&gt;</span> :NERDTreeToggle<span class="symbol">&lt;CR&gt;</span></span><br></pre></td></tr></table></figure><h2 id="切换工作台和目录"><a href="#切换工作台和目录" class="headerlink" title="切换工作台和目录"></a>切换工作台和目录</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ctrl + <span class="keyword">w</span> + h    光标 focus 左侧树形目录</span><br><span class="line">ctrl + <span class="keyword">w</span> + <span class="keyword">l</span>    光标 focus 右侧文件显示窗口</span><br><span class="line">ctrl + <span class="keyword">w</span> + <span class="keyword">w</span>    光标自动在左右侧窗口切换</span><br><span class="line">ctrl + <span class="keyword">w</span> + r    移动当前窗口的布局位置</span><br><span class="line"></span><br><span class="line"><span class="keyword">o</span>       在已有窗口中打开文件、目录或书签，并跳到该窗口</span><br><span class="line"><span class="keyword">go</span>      在已有窗口 中打开文件、目录或书签，但不跳到该窗口</span><br><span class="line">t       在新 Tab 中打开选中文件/书签，并跳到新 Tab</span><br><span class="line">T       在新 Tab 中打开选中文件/书签，但不跳到新 Tab</span><br><span class="line">i       <span class="keyword">split</span> 一个新窗口打开选中文件，并跳到该窗口</span><br><span class="line">gi      <span class="keyword">split</span> 一个新窗口打开选中文件，但不跳到该窗口</span><br><span class="line">s       <span class="keyword">vsplit</span> 一个新窗口打开选中文件，并跳到该窗口</span><br><span class="line">gs      <span class="keyword">vsplit</span> 一个新 窗口打开选中文件，但不跳到该窗口</span><br><span class="line">!       执行当前文件</span><br><span class="line">O       递归打开选中 结点下的所有目录</span><br><span class="line"><span class="keyword">m</span>    文件操作：复制、删除、移动等</span><br></pre></td></tr></table></figure><h2 id="切换标签页"><a href="#切换标签页" class="headerlink" title="切换标签页"></a>切换标签页</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">tabnew</span> [++<span class="keyword">opt</span>选项] ［＋cmd］ 文件      建立对指定文件新的<span class="keyword">tab</span></span><br><span class="line">:<span class="keyword">tabc</span>   关闭当前的 <span class="keyword">tab</span></span><br><span class="line">:<span class="keyword">tabo</span>   关闭所有其他的 <span class="keyword">tab</span></span><br><span class="line">:<span class="keyword">tabs</span>   查看所有打开的 <span class="keyword">tab</span></span><br><span class="line">:<span class="keyword">tabp</span>   前一个 <span class="keyword">tab</span></span><br><span class="line">:<span class="keyword">tabn</span>   后一个 <span class="keyword">tab</span></span><br><span class="line"></span><br><span class="line">标准模式下：</span><br><span class="line">gT      前一个 <span class="keyword">tab</span></span><br><span class="line">gt      后一个 <span class="keyword">tab</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> Android </tag>
            
            <tag> Vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 版本回退</title>
      <link href="/posts/GitReset.html"/>
      <url>/posts/GitReset.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Git 版本回退</p></blockquote><h1 id="本地替换为远程"><a href="#本地替换为远程" class="headerlink" title="本地替换为远程"></a>本地替换为远程</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git fetch --all</span><br><span class="line">git reset --hard origin/master</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 撤销所有的已经add的文件:</span><br><span class="line">git reset HEAD .</span><br><span class="line"></span><br><span class="line"># 撤销某个文件或文件夹</span><br><span class="line">git reset HEAD -filename</span><br><span class="line"></span><br><span class="line"># 回退到上个版本</span><br><span class="line">git reset --hard HEAD^ </span><br><span class="line"></span><br><span class="line"># 退到/进到 指定commit_id</span><br><span class="line">git reset --hard commit_id</span><br></pre></td></tr></table></figure><ul><li>文件被修改了，但未执行git add操作（working tree内撤销）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout fileName</span><br><span class="line">git checkout .</span><br></pre></td></tr></table></figure><ul><li>同时对多个文件执行了git add操作，但本次只想提交其中一部分文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add *</span><br><span class="line">git status</span><br><span class="line">git reset HEAD &lt;filename&gt;</span><br></pre></td></tr></table></figure><ul><li>文件执行了git add操作，但想撤销对其的修改（index内回滚）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 取消暂存</span><br><span class="line">git reset HEAD fileName</span><br><span class="line"># 撤销修改</span><br><span class="line">git checkout fileName</span><br></pre></td></tr></table></figure><ul><li>修改的文件已被git commit，但想再次修改不再产生新的Commit</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 修改最后一次提交 </span><br><span class="line">git add sample.txt</span><br><span class="line">git commit --amend -m&quot;说明&quot;</span><br></pre></td></tr></table></figure><ul><li>已在本地进行了多次git commit操作，现在想撤销到其中某次Commit</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset [--hard|soft|mixed|merge|keep] [commit|HEAD]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pixel 2 XL 开启 Diag</title>
      <link href="/posts/PixelDiag.html"/>
      <url>/posts/PixelDiag.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Pixel 2 XL 开启 Diag 破解电信 VoLTE</p></blockquote><h1 id="开启端口"><a href="#开启端口" class="headerlink" title="开启端口"></a>开启端口</h1><ol><li>安装 Diag Magisk 并输入模块</li><li>刷入 Pixel_2_Diag_Port.zip</li><li>刷入 VoEnabler-v1.4.zip</li><li>连接电脑，输入以下命令开启 Diag 端口</li></ol><span id="more"></span><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd D:\adb</span><br><span class="line">adb devices</span><br><span class="line">adb shell</span><br><span class="line">su</span><br><span class="line">setenforce 0</span><br><span class="line">setprop sys.usb.configfs 1 &amp;&amp; setprop sys.usb.config diag,serial_cdev,rmnet_gsi,adb</span><br></pre></td></tr></table></figure><ul><li>su命令需要在手机端 Magisk 确认 root 授权，成功会在设备管理器的端口中看到高通 9091</li></ul><h1 id="电信-VoLTE"><a href="#电信-VoLTE" class="headerlink" title="电信 VoLTE"></a>电信 VoLTE</h1><ul><li>其他运营商的配置文件方法一样</li></ul><ol><li>安装 QPST</li><li>打开 QPST 的 PDC 选择 9091 端口</li><li>点击Load加载运营商配置文件mcfg_sw.mbn，建议使用commerci&#x2F;hvolte_o&#x2F;mcfg_sw.mbn，</li><li>加载出运营商配置文件后，右击该配置，指配到 sub0，最后点激活 active，将会不重启直接开启 VoLTE 模式</li></ol><h1 id="所需工具"><a href="#所需工具" class="headerlink" title="所需工具"></a>所需工具</h1><p><a href="https://pan.baidu.com/s/1gDZMKuqvrMsAg7zEjKr5sw">提取码: j3sc</a></p>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装 Google USB Driver</title>
      <link href="/posts/UsbDriver.html"/>
      <url>/posts/UsbDriver.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Google USB Driver 是针对 Google 设备执行 adb 调试的驱动。安装可解决 bootloader 下 waiting for any device</p></blockquote><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><ul><li><a href="https://dl-ssl.google.com//android/repository/latest_usb_driver_windows.zip">Windows latest_usb_driver_windows.zip</a></li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>设备管理器 -&gt; 便携设备 -&gt; 属性 -&gt; 驱动程序 -&gt; 更新驱动程序 -&gt; 选择解压好的文件夹</p>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cmder 配置</title>
      <link href="/posts/Cmder.html"/>
      <url>/posts/Cmder.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Cmder 是 Windows出色的终端。它不仅支持 Linux 命令，并且因为并采用了 Monokai 配色方案，最重要的是能自定义布局。</p></blockquote><span id="more"></span><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h2><ul><li>系统环境变量</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CMDER_HOME</span><br><span class="line">D:\Program Files\cmder</span><br></pre></td></tr></table></figure><p><img src="/assets/Picture/images/20200405132003.png"></p><ul><li>在 PATH 添加 <code>%CMDER_HOME%</code></li></ul><h2 id="右键菜单"><a href="#右键菜单" class="headerlink" title="右键菜单"></a>右键菜单</h2><ul><li>添加</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cmder.exe /REGISTER ALL</span><br></pre></td></tr></table></figure><ul><li>删除</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cmder.exe /UNREGISTER ALL</span><br></pre></td></tr></table></figure><h2 id="使用-Bash"><a href="#使用-Bash" class="headerlink" title="使用 Bash"></a>使用 Bash</h2><p><img src="/assets/Picture/images/cmder_bash.png"></p><h2 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h2><h3 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h3><p>Bash 配置文件的加载顺序是:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$CMDER_ROOT/config/profile.d/*.sh</span><br><span class="line">$CMDER_ROOT/config/user-profile.sh</span><br><span class="line">$HOME/.bashrc</span><br></pre></td></tr></table></figure><h3 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h3><figure class="highlight bat"><figcaption><span>%CMDER_ROOT%\config\user-aliases.cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls=ls --show-control-chars -F --<span class="built_in">color</span> $*</span><br><span class="line">pwd=<span class="built_in">cd</span></span><br><span class="line">clear=<span class="built_in">cls</span></span><br></pre></td></tr></table></figure><h3 id="PowerShell"><a href="#PowerShell" class="headerlink" title="PowerShell"></a>PowerShell</h3><p>直接使用 PowerShell 的 alias 命令添加或在下面的文件中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;CMDER_ROOT\config\profile.d\*.ps1&#x27;</span><br><span class="line">&#x27;CMDER_ROOT\config\user-profile.ps1&#x27;</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><figure class="highlight bash"><figcaption><span>D:\Program Files\cmder\vendor\git-for-windows\etc\bash.bashrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 别名</span></span><br><span class="line"><span class="built_in">alias</span> vs=<span class="string">&quot;code .&quot;</span></span><br><span class="line"><span class="built_in">alias</span> e.=<span class="string">&#x27;explorer .&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">cp</span>=<span class="string">&#x27;cp -i&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">mv</span>=<span class="string">&#x27;mv -i&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">rm</span>=<span class="string">&#x27;rm -i&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">ls</span>=<span class="string">&#x27;ls -F --color=auto&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> ll=<span class="string">&#x27;ls -al&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> grep=<span class="string">&#x27;grep --color=auto&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> la=<span class="string">&#x27;ls -a&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> l.=<span class="string">&#x27;ls -d .* --color=tty&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> vitan=<span class="string">&#x27;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Git Commit, Add all and Push — in one step.</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">ad</span></span>() &#123;</span><br><span class="line">    git add . &amp;&amp; git commit -m <span class="string">&quot;$*&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">gadd</span></span>() &#123;</span><br><span class="line">    ad <span class="string">&quot;⚡ ADD: <span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">gcap</span></span>() &#123;</span><br><span class="line">    git add . &amp;&amp; git commit -m <span class="string">&quot;$*&quot;</span> &amp;&amp; git push</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># NEW.</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">gnew</span></span>() &#123;</span><br><span class="line">    gcap <span class="string">&quot;📦 NEW: <span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># IMPROVE.</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">gimp</span></span>() &#123;</span><br><span class="line">    gcap <span class="string">&quot;👌 IMPROVE: <span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># FIX.</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">gfix</span></span>() &#123;</span><br><span class="line">    gcap <span class="string">&quot;🐛 FIX: <span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># RELEASE.</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">grlz</span></span>() &#123;</span><br><span class="line">    gcap <span class="string">&quot;🚀 RELEASE: <span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># DOC.</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">gdoc</span></span>() &#123;</span><br><span class="line">    gcap <span class="string">&quot;📖 DOC: <span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># TEST.</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">gtst</span></span>() &#123;</span><br><span class="line">    gcap <span class="string">&quot;✅ TEST: <span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="设置-VS-Code"><a href="#设置-VS-Code" class="headerlink" title="设置 VS Code"></a>设置 VS Code</h1><h2 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h2><p>变量名 <code>CMDER_ROOT</code> 变量值 <code>D:\Program Files\cmder</code></p><h2 id="VS-Code-配置"><a href="#VS-Code-配置" class="headerlink" title="VS Code 配置"></a>VS Code 配置</h2><figure class="highlight sh"><figcaption><span>setting.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;terminal.integrated.shell.windows&quot;</span>: <span class="string">&quot;cmd.exe&quot;</span>,</span><br><span class="line"><span class="string">&quot;terminal.integrated.shellArgs.windows&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;/k&quot;</span>,</span><br><span class="line">    <span class="string">&quot;D:\\Program Files\\cmder\\vendor\\init.bat&quot;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> Batch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Termux Config Shell</title>
      <link href="/posts/TermuxConfig.html"/>
      <url>/posts/TermuxConfig.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>写的一个 Termux 配置脚本，配置开发环境、美化等…</p></blockquote><h2 id="via-curl"><a href="#via-curl" class="headerlink" title="via curl"></a>via curl</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install curl</span><br><span class="line">bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/ivitan/Shell/master/Termux/Termux.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="via-wget"><a href="#via-wget" class="headerlink" title="via wget"></a>via wget</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install wget</span><br><span class="line">bash -c <span class="string">&quot;<span class="subst">$(wget -O- https://raw.githubusercontent.com/ivitan/Shell/master/Termux/Termux.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置 WNMP 环境</title>
      <link href="/posts/WNMP.html"/>
      <url>/posts/WNMP.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>WNMP 一键安装</p></blockquote><h1 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h1><p><a href="https://github.com/ivitan/wnmp">https://github.com/ivitan/wnmp</a></p><h1 id="WNMP-下载"><a href="#WNMP-下载" class="headerlink" title="WNMP 下载"></a>WNMP 下载</h1><ul><li><a href="http://nginx.org/en/download.html">Nginx</a></li><li><a href="http://windows.php.net/download/">PHP</a></li><li><a href="http://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.17-winx64.zip">MySQL</a></li></ul><span id="more"></span><h1 id="Nignx"><a href="#Nignx" class="headerlink" title="Nignx"></a>Nignx</h1><ol><li>解压 Nignx 到 D:\WNMP\Nignx</li><li>运行 D:\WNMP\Nignx 下的 nginx.exe</li><li>打开浏览器访问 <a href="http://localhost/">http://localhost</a> 或 <a href="http://127.0.0.1/">http://127.0.0.1</a></li></ol><p><img src="https://i.loli.net/2019/12/23/TuIFyje98l4qXvi.png" alt="nginx.png"></p><ol start="4"><li>配置</li></ol><figure class="highlight nginxconf"><figcaption><span>D:\WNMP\Nignx\nginx.cof</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line"><span class="attribute">worker_processes</span>  auto;</span><br><span class="line"></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="comment">#default_type  application/octet-stream;</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="attribute">autoindex</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">autoindex_exact_size</span> <span class="literal">off</span>;</span><br><span class="line">    <span class="attribute">autoindex_localtime</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">log_format</span>  main  <span class="string">&#x27;<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] &quot;<span class="variable">$request</span>&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> &quot;<span class="variable">$http_referer</span>&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;<span class="variable">$http_user_agent</span>&quot; &quot;<span class="variable">$http_x_forwarded_for</span>&quot;&#x27;</span>;</span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"><span class="attribute">include</span> vhost/<span class="regexp">*.conf</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight nginxconf"><figcaption><span>D:\WNMP\Nignx\conf\vhost\default.cof</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> localhost;</span><br><span class="line">    <span class="attribute">root</span> www/;</span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">index</span> index.php index.html index.htm;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$query_string</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="section">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">        <span class="attribute">fastcgi_pass</span> <span class="number">127.0.0.1:9000</span>;</span><br><span class="line">        <span class="attribute">fastcgi_index</span> index.php;</span><br><span class="line">        <span class="attribute">fastcgi_param</span> SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        <span class="attribute">include</span> fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">access_log</span> logs/access.log main;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">nginx</span> -s stop快速关闭 Nginx</span><br><span class="line">nginx -s quit优雅的关闭 Nginx</span><br><span class="line">nginx -s reload 更改配置，使用新配置启动新工作进程，正常关闭旧工作进程</span><br><span class="line">nginx -s reopen 重新打开日志文件</span><br></pre></td></tr></table></figure><h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight ini"><figcaption><span>%mysql%\my.ini</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">character-set-server</span>=utf8</span><br><span class="line"><span class="comment">#绑定IPv4和3306端口</span></span><br><span class="line"><span class="attr">port</span> = <span class="number">3306</span></span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line"><span class="attr">basedir</span>=D:/WNMP/mysql</span><br><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录</span></span><br><span class="line"><span class="attr">datadir</span>=D:/WNMP/mysql/data</span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"><span class="attr">max_connections</span>=<span class="number">2000</span></span><br><span class="line"><span class="comment"># skip_grant_tables</span></span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br><span class="line"><span class="section">[mysql.server]</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br><span class="line"><span class="section">[mysql_safe]</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><figcaption><span>%mysql%\bin</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld.exe -install </span><br></pre></td></tr></table></figure><p>提示：Service successfully installed. 表示安装成功.</p><h3 id="初始化-MySQL-数据"><a href="#初始化-MySQL-数据" class="headerlink" title="初始化 MySQL 数据"></a>初始化 MySQL 数据</h3><p>创建一个具有空密码的root用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld <span class="comment">--initialize-insecure --user=mysql </span></span><br></pre></td></tr></table></figure><ul><li>最后的参数 –user&#x3D;mysql 在 windows 也可以不用添加</li><li>但在 unix 等系统下好像很重要。 </li><li>执行命令后系统会自动生成相应的 data 目录，并自动创建好空密码的 root 用户。</li></ul><h2 id="启动mysql服务"><a href="#启动mysql服务" class="headerlink" title="启动mysql服务"></a>启动mysql服务</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> mysql</span><br></pre></td></tr></table></figure><h2 id="进行密码设定"><a href="#进行密码设定" class="headerlink" title="进行密码设定"></a>进行密码设定</h2><p>可执行如下命令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin <span class="operator">-</span>u root <span class="operator">-</span>p password NewPassword</span><br><span class="line"></span><br><span class="line">password: # OldPassword</span><br></pre></td></tr></table></figure><ul><li>在输入旧密码（或没改过密码的就直接回车）</li><li>系统很久没响应，然后报错（10060）。 原因：mysql没有通过windows防火墙 解决方法：将 D:\mysql\bin\mysqld.exe 添加到windows防火墙允许通过的应用中。</li></ul><h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><ol><li>解压 PHP 到 D:\WNMP\PHP</li><li>修改配置，将 D:\WNMP\PHP\php.ini-development 改为 php.ini,取消下面注释</li></ol><figure class="highlight yml"><figcaption><span>D:\WNMP\PHP\php.ini</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">;extension=mysql</span></span><br><span class="line"><span class="string">;extension=mysqli</span></span><br><span class="line"><span class="string">;enable_dl</span> <span class="string">=</span> <span class="string">Off，改为</span> <span class="string">enable_dl</span> <span class="string">=</span> <span class="string">On</span></span><br><span class="line"><span class="string">;fastcgi.impersonate</span> <span class="string">=</span> <span class="number">1</span></span><br><span class="line"><span class="string">;extension=curl</span></span><br><span class="line"><span class="string">;extension=gd2</span></span><br><span class="line"><span class="string">;extension=mbstring</span></span><br><span class="line"><span class="string">;extension=mysqli</span></span><br><span class="line"><span class="string">;extension=mysql</span></span><br></pre></td></tr></table></figure><p>去 <code>;</code> 再修改</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">;extension_dir</span> <span class="string">=</span> <span class="string">&quot;ext&quot;</span> <span class="string">改为</span> <span class="string">extension_dir</span> <span class="string">=</span> <span class="string">&quot;D:\wnmp\php\ext&quot;</span></span><br><span class="line"><span class="string">;date.timezone</span> <span class="string">=</span> <span class="string">改为date.timezone</span> <span class="string">=</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"><span class="string">;cgi.force_redirect</span> <span class="string">=</span> <span class="number">1</span> <span class="string">改为cgi.force_redirect</span> <span class="string">=</span> <span class="number">0</span></span><br><span class="line"><span class="string">;cgi.rfc2616_headers</span> <span class="string">=</span> <span class="number">0</span> <span class="string">改为</span> <span class="string">cgi.rfc2616_headers</span> <span class="string">=</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><ol start="3"><li>配置 PHP，使其能与 Nginx 配合，取消下面的注释</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">;cgi.fix_pathinfo=1</span></span><br></pre></td></tr></table></figure><ol start="4"><li>启动PHP</li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">D:\<span class="title">WNMP</span>\<span class="title">php</span>\<span class="title">php</span>-<span class="title">cli.exe</span> -<span class="title">b</span> 127.0.1.1:9000 -<span class="title">c</span> <span class="title">D</span>:\<span class="title">WNMP</span>\<span class="title">php</span>\<span class="title">php.ini</span></span></span><br></pre></td></tr></table></figure><h2 id="php-ini-配置"><a href="#php-ini-配置" class="headerlink" title="php.ini 配置"></a>php.ini 配置</h2><p><a href="https://github.com/ivitan/wnmp/blob/master/php/php-7.2.25/php.ini">https://github.com/ivitan/wnmp/blob/master/php/php-7.2.25/php.ini</a></p><h1 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h1><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><p>环境变量Path里面增加 MySQL、Nginx、PHP 执行文件的路径</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;D:\wnmp\mysql\bin;D:\wnmp\nginx;D:\wnmp\php;</span><br></pre></td></tr></table></figure><h2 id="启动-WNMP"><a href="#启动-WNMP" class="headerlink" title="启动 WNMP"></a>启动 WNMP</h2><figure class="highlight bat"><figcaption><span>stat.bat</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> base_path=<span class="variable">%cd%</span></span><br><span class="line"><span class="built_in">set</span> nginx_path=<span class="variable">%base_path%</span>\nginx</span><br><span class="line"><span class="built_in">set</span> php7_path=<span class="variable">%base_path%</span>\php\php-<span class="number">7</span>.<span class="number">2</span>.<span class="number">25</span></span><br><span class="line"><span class="built_in">set</span> mysql_path=<span class="variable">%base_path%</span>\mySql</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> Starting PHP7 FastCGI...</span><br><span class="line">RunHiddenConsole <span class="variable">%php7_path%</span>\php-cgi.exe -b <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">9000</span> -c <span class="variable">%php7_path%</span>\php.ini</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> Starting Nginx...</span><br><span class="line">RunHiddenConsole <span class="variable">%nginx_path%</span>\nginx.exe -c <span class="variable">%nginx_path%</span>\conf\nginx.conf</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> Starting MySql...</span><br><span class="line">RunHiddenConsole <span class="variable">%mysql_path%</span>\bin\mysqld --defaults-file=<span class="variable">%mysql_path%</span>\my.ini --port=<span class="number">3306</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> please open http://<span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span> ...</span><br><span class="line"><span class="built_in">ping</span> -n <span class="number">3</span> <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span> &gt; <span class="built_in">nul</span></span><br><span class="line"><span class="built_in">start</span> chrome  &quot;dev.vitan.me&quot;</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure><h2 id="重启-WNMP"><a href="#重启-WNMP" class="headerlink" title="重启 WNMP"></a>重启 WNMP</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> Stopping Nginx...</span><br><span class="line"><span class="built_in">taskkill</span> /F /IM nginx.exe &gt; <span class="built_in">nul</span></span><br><span class="line"><span class="built_in">echo</span> Stopping PHP FastCGI...</span><br><span class="line"><span class="built_in">taskkill</span> /F /IM php-cgi.exe &gt; <span class="built_in">nul</span></span><br><span class="line"><span class="built_in">echo</span> Stopping Mysql...</span><br><span class="line"><span class="built_in">taskkill</span> /F /IM mysqld.exe &gt; <span class="built_in">nul</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> base_path=<span class="variable">%cd%</span></span><br><span class="line"><span class="built_in">set</span> nginx_path=<span class="variable">%base_path%</span>\nginx</span><br><span class="line"><span class="built_in">set</span> php7_path=<span class="variable">%base_path%</span>\php\php-<span class="number">7</span>.<span class="number">2</span>.<span class="number">25</span></span><br><span class="line"><span class="built_in">set</span> mysql_path=<span class="variable">%base_path%</span>\mysql</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> Starting PHP7 FastCGI...</span><br><span class="line">RunHiddenConsole <span class="variable">%php7_path%</span>\php-cgi.exe -b <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">9000</span> -c <span class="variable">%php7_path%</span>\php.ini</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> Starting Nginx...</span><br><span class="line">RunHiddenConsole <span class="variable">%nginx_path%</span>\nginx.exe -c <span class="variable">%nginx_path%</span>\conf\nginx.conf</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> Starting MySql...</span><br><span class="line">RunHiddenConsole <span class="variable">%mysql_path%</span>\bin\mysqld --defaults-file=<span class="variable">%mysql_path%</span>\my.ini --port=<span class="number">3306</span></span><br><span class="line"><span class="built_in">echo</span> please open http://<span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span> ...</span><br><span class="line"><span class="built_in">ping</span> -n <span class="number">3</span> <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span> &gt; <span class="built_in">nul</span></span><br><span class="line"><span class="built_in">start</span> chrome  &quot;dev.vitan.me&quot;</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure><h2 id="关闭-WNMP"><a href="#关闭-WNMP" class="headerlink" title="关闭 WNMP"></a>关闭 WNMP</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> base_path=<span class="variable">%cd%</span></span><br><span class="line"><span class="built_in">set</span> nginx_path=<span class="variable">%base_path%</span>\nginx</span><br><span class="line"><span class="built_in">set</span> php7_path=<span class="variable">%base_path%</span>\php\php-<span class="number">7</span>.<span class="number">2</span>.<span class="number">25</span></span><br><span class="line"><span class="built_in">set</span> mysql_path=<span class="variable">%base_path%</span>\mySql</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> Starting PHP7 FastCGI...</span><br><span class="line">RunHiddenConsole <span class="variable">%php7_path%</span>\php-cgi.exe -b <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">9000</span> -c <span class="variable">%php7_path%</span>\php.ini</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> Starting Nginx...</span><br><span class="line">RunHiddenConsole <span class="variable">%nginx_path%</span>\nginx.exe -c <span class="variable">%nginx_path%</span>\conf\nginx.conf</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> Starting MySql...</span><br><span class="line">RunHiddenConsole <span class="variable">%mysql_path%</span>\bin\mysqld --defaults-file=<span class="variable">%mysql_path%</span>\my.ini --port=<span class="number">3306</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> please open http://<span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span> ...</span><br><span class="line"><span class="built_in">ping</span> -n <span class="number">3</span> <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span> &gt; <span class="built_in">nul</span></span><br><span class="line"><span class="built_in">start</span> chrome  &quot;design.vitan.me&quot;</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure><h1 id="整体测试"><a href="#整体测试" class="headerlink" title="整体测试"></a>整体测试</h1><ul><li>测试 PHP</li></ul><figure class="highlight php"><figcaption><span>D:\WNMP\www</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>浏览器访问 <a href="http://localhost/phpinfo.php">http://localhost/phpinfo.php</a></p><ul><li>测试 Mysql</li></ul><figure class="highlight php"><figcaption><span>D:\WNMP\www</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;root&quot;</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Mysql connect successful！&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Mysql connect error...&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Web </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Batch 计划任务</title>
      <link href="/posts/WinTask.html"/>
      <url>/posts/WinTask.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Batch 计划任务</p></blockquote><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SCHTASKS /Create [/S system [/U username [/P [password]]]]</span><br><span class="line">[/RU username [/RP password]] /SC schedule [/MO modifier] [/D day]</span><br><span class="line">[/M months] [/I idletime] /TN taskname /TR taskrun [/ST starttime]</span><br><span class="line">[/RI interval] [ &#123;/ET endtime | /DU duration&#125; [/K] [/XML xmlfile] [/V1]]</span><br><span class="line">[/SD startdate] [/ED enddate] [/IT | /NP] [/Z] [/F] [/HRESULT] [/?]</span><br></pre></td></tr></table></figure><span id="more"></span><p>描述:允许管理员在本地或远程系统上创建计划任务。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn TaskName /tr TaskRun /sc minute [/mo &#123;<span class="number">1</span> - <span class="number">1439</span>&#125;] [/st StartTime] [/sd StartDate] [/ed EndDate] [/s computer [/u [domain\]user /p password]] [/ru &#123;[Domain\]User | &quot;System&quot;&#125; [/rp Password]]</span><br></pre></td></tr></table></figure><h1 id="参数列表"><a href="#参数列表" class="headerlink" title="参数列表"></a>参数列表</h1><table><thead><tr><th align="left">参数</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left"><code>/S  system </code></td><td align="left">指定要连接到的远程系统。如果省略这个系统参数，默认是本地系统。</td></tr><tr><td align="left"><code>/U  username </code></td><td align="left">指定应在其中执行 SchTasks.exe 的用户上下文。</td></tr><tr><td align="left"><code>/P  [password]</code></td><td align="left">指定给定用户上下文的密码。如果省略则提示输入。</td></tr><tr><td align="left"><code>/RU  username</code></td><td align="left">指定任务在其下运行的“运行方式”用户,帐户(用户上下文)。对于系统帐户，有效值是 “”、”NT AUTHORITY\SYSTEM” 或”SYSTEM”。对于 v2 任务，”NT AUTHORITY\LOCALSERVICE”和 “NT AUTHORITY\NETWORKSERVICE”以及常见的 SID 对这三个也都可用。</td></tr><tr><td align="left"><code>/RP  [password] </code></td><td align="left">指定“运行方式”用户的密码。要提示输入密码，值必须是 “*” 或无。系统帐户会忽略该密码。必须和 &#x2F;RU 或 &#x2F;XML 开关一起使用。</td></tr><tr><td align="left"><code>/RU/XML /SC schedule</code></td><td align="left">指定计划频率。有效计划任务:  MINUTE、 HOURLY、DAILY、WEEKLY、 MONTHLY, ONCE, ONSTART, ONLOGON, ONIDLE, ONEVENT.</td></tr><tr><td align="left"><code>/MO  modifier</code></td><td align="left">改进计划类型以允许更好地控制计划重复周期。有效值列于下面“修改者”部分中。</td></tr><tr><td align="left"><code> /D    days</code></td><td align="left">指定该周内运行任务的日期。有效值:MON、TUE、WED、THU、FRI、SAT、SUN和对 MONTHLY 计划的 1 - 31(某月中的日期)。通配符“*”指定所有日期。</td></tr><tr><td align="left"><code>/M    months</code></td><td align="left">指定一年内的某月。默认是该月的第一天。有效值: JAN、FEB、MAR、APR、MAY、JUN、JUL、 AUG、SEP、OCT、NOV  和 DEC。通配符 “*” 指定所有的月。</td></tr><tr><td align="left"><code>/I    idletime</code></td><td align="left">指定运行一个已计划的 ONIDLE 任务之前要等待的空闲时间。有效值范围: 1 到 999 分钟。</td></tr><tr><td align="left"><code>/TN   taskname</code></td><td align="left">以路径\名称形式指定对此计划任务进行唯一标识的字符串。</td></tr><tr><td align="left"><code>/TR   taskrun</code></td><td align="left">指定在这个计划时间运行的程序的路径和文件名。例如: C:\windows\system32\calc.exe</td></tr><tr><td align="left"><code>/ST   starttime</code></td><td align="left">指定运行任务的开始时间。时间格式为 HH:mm (24 小时时间)，例如 14:30 表示 2:30 PM。如果未指定 &#x2F;ST，则默认值为当前时间。&#x2F;SC ONCE 必需有此选项。</td></tr><tr><td align="left"><code>/RI   interval</code></td><td align="left">用分钟指定重复间隔。这不适用于计划类型: MINUTE、HOURLY、ONSTART, ONLOGON, ONIDLE, ONEVENT.有效范围: 1 - 599940 分钟。如果已指定 &#x2F;ET 或 &#x2F;DU，则其默认值为10 分钟。</td></tr><tr><td align="left"><code>/ET   endtime </code></td><td align="left">指定运行任务的结束时间。时间格式为 HH:mm (24 小时时间)，例如，14:50 表示 2:50 PM。这不适用于计划类型: ONSTART、ONLOGON, ONIDLE, ONEVENT.</td></tr><tr><td align="left"><code>/DU   duration </code></td><td align="left">指定运行任务的持续时间。 时间格式为 HH:mm。这不适用于 &#x2F;ET 和 计划类型: ONSTART, ONLOGON, ONIDLE, ONEVENT.对于 &#x2F;V1 任务，如果已指定 &#x2F;RI，则持续时间默认值为1 小时。</td></tr><tr><td align="left"><code>/K </code></td><td align="left">在结束时间或持续时间终止任务。这不适用于计划类型: ONSTART、ONLOGON, ONIDLE, ONEVENT.必须指定 &#x2F;ET 或 &#x2F;DU。</td></tr><tr><td align="left"><code>/SD   startdate</code></td><td align="left">指定运行任务的第一个日期。格式为 yyyy&#x2F;mm&#x2F;dd。默认值为当前日期。这不适用于计划类型: ONCE、ONSTART, ONLOGON, ONIDLE, ONEVENT.</td></tr><tr><td align="left"><code>/ED   enddate </code></td><td align="left">指定此任务运行的最后一天的日期。格式是 yyyy&#x2F;mm&#x2F;dd。这不适用于计划类型:ONCE、ONSTART、ONLOGON、ONIDLE。</td></tr><tr><td align="left"><code>/EC   ChannelName</code></td><td align="left">为 OnEvent 触发器指定事件通道。</td></tr><tr><td align="left"><code>/IT</code></td><td align="left">仅有在 &#x2F;RU 用户当前已登录且作业正在运行时才可以交互式运行任务。此任务只有在用户已登录的情况下才运行。</td></tr><tr><td align="left"><code>/NP </code></td><td align="left">不储存任何密码。任务以给定用户的身份非交互的方式运行。只有本地资源可用。</td></tr><tr><td align="left"><code>/Z </code></td><td align="left">标记在最终运行完任务后删除任务。</td></tr><tr><td align="left"><code>/XML  xmlfile</code></td><td align="left">从文件的指定任务 XML 中创建任务。可以组合使用 &#x2F;RU 和 &#x2F;RP 开关，或者在任务 XML 已包含主体时单独使用 &#x2F;RP。</td></tr><tr><td align="left"><code>/V1 </code></td><td align="left">创建 Vista 以前的平台可以看见的任务。不兼容 &#x2F;XML。</td></tr><tr><td align="left"><code>/F</code></td><td align="left">如果指定的任务已经存在，则强制创建任务并抑制警告。</td></tr><tr><td align="left"><code>/RL   level </code></td><td align="left">为作业设置运行级别。有效值为 LIMITED 和 HIGHEST。默认值为 LIMITED。</td></tr><tr><td align="left"><code>/DELAY delaytime </code></td><td align="left">指定触发触发器后延迟任务运行的等待时间。时间格式为mmmm:ss。此选项仅对计划类型ONSTART, ONLOGON, ONEVENT.</td></tr><tr><td align="left"><code>/HRESULT </code></td><td align="left">为获得更出色的故障诊断能力，处理退出代码将采用 HRESULT 格式。</td></tr><tr><td align="left"><code>/?</code></td><td align="left">显示此帮助消息。</td></tr></tbody></table><p>修改者: 按计划类型的 &#x2F;MO 开关的有效值:</p><table><thead><tr><th align="left">参数</th><th align="left">有效值</th></tr></thead><tbody><tr><td align="left">MINUTE</td><td align="left">1 到 1439 分钟</td></tr><tr><td align="left">HOURLY</td><td align="left">1 - 23 小时</td></tr><tr><td align="left">DAILY</td><td align="left">1 到 365 天</td></tr><tr><td align="left">WEEKLY</td><td align="left">1 到 52 周</td></tr><tr><td align="left">ONCE</td><td align="left">无修改者</td></tr><tr><td align="left">ONSTART</td><td align="left">无修改者</td></tr><tr><td align="left">ONLOGON</td><td align="left">无修改者</td></tr><tr><td align="left">ONIDLE</td><td align="left">无修改者</td></tr><tr><td align="left">MONTHLY</td><td align="left">1 到 12，或FIRST, SECOND, THIRD, FOURTH, LAST, LASTDAY</td></tr><tr><td align="left">ONEVENT</td><td align="left">XPath 事件查询字符串</td></tr></tbody></table><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><ol><li>在远程机器 “ABC” 上创建计划任务 “doc”， “runasuser” 用户下运行 notepad.exe。</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SCHTASKS /Create /S ABC /U user /P password </span><br><span class="line">/RU runasuser /RP runaspassword /SC HOURLY /TN doc /TR notepad</span><br></pre></td></tr></table></figure><ol start="2"><li>远程机器 “ABC” 上创建计划任务 “accountant”， 在指定的开始日期和结束日期之间的开始时间和结束时间内，每隔五分钟运行 calc.exe。</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SCHTASKS /Create /S ABC /U domain\user /P password </span><br><span class="line">/SC MINUTE /MO <span class="number">5</span> /TN accountant /TR calc.exe /ST <span class="number">12</span>:<span class="number">00</span> </span><br><span class="line">/ET <span class="number">14</span>:<span class="number">00</span> /SD <span class="number">06</span>/<span class="number">06</span>/<span class="number">2006</span> /ED <span class="number">06</span>/<span class="number">06</span>/<span class="number">2006</span> /RU runasuser /RP userpassword</span><br></pre></td></tr></table></figure><ol start="3"><li>创建计划任务 “gametime”，在每月的第一个星期天运行“空当接龙”。</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SCHTASKS /Create /SC MONTHLY /MO first /D SUN </span><br><span class="line">/TN gametime /TR c:\windows\system32\freecell</span><br></pre></td></tr></table></figure><ol start="4"><li>在远程机器 “ABC” 创建计划任务 “report”，每个星期运行 notepad.exe。</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SCHTASKS /Create /S ABC /U user /P password /RU runasuser</span><br><span class="line">/RP runaspassword /SC WEEKLY /TN report /TR notepad.exe</span><br></pre></td></tr></table></figure><ol start="5"><li>在远程机器 “ABC” 创建计划任务 “logtracker”，每隔五分钟从指定的开始时间到无结束时间，运行 notepad.exe。将提示输入 &#x2F;RP 密码。</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SCHTASKS /Create /S ABC /U domain\user /P password /SC MINUTE</span><br><span class="line">/MO <span class="number">5</span> /TN logtracker</span><br><span class="line">/TR c:\windows\system32\notepad.exe /ST <span class="number">18</span>:<span class="number">30</span></span><br><span class="line">/RU runasuser /RP</span><br></pre></td></tr></table></figure><ol start="6"><li>创建计划任务 “gaming”，每天从 12:00 点开始到14:00 点自动结束，运行 freecell.exe。</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SCHTASKS /Create /SC DAILY /TN gaming /TR c:\freecell /ST <span class="number">12</span>:<span class="number">00</span></span><br><span class="line">/ET <span class="number">14</span>:<span class="number">00</span> /K</span><br></pre></td></tr></table></figure><ol start="7"><li>创建计划任务“EventLog”以开始运行 wevtvwr.msc只要在“系统”通道中发布事件 101</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SCHTASKS /Create /TN EventLog /TR wevtvwr.msc /SC ONEVENT</span><br><span class="line">/EC System /MO *[System/EventID=<span class="number">101</span>]</span><br></pre></td></tr></table></figure><ol start="8"><li>文件路径中可以加入空格，但需要加上两组引号，一组引号用于 CMD.EXE，另一组用于 SchTasks.exe。用于 CMD的外部引号必须是一对双引号；内部引号可以是一对单引号或一对转义双引号:</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SCHTASKS /Create</span><br><span class="line">/tr &quot;&#x27;c:\program files\internet explorer\iexplorer.exe&#x27;</span><br><span class="line">\&quot;c:\log data\today.xml\&quot;&quot; ...</span><br></pre></td></tr></table></figure><ol start="9"><li>令计划安全脚本 Sec.vbs 每 20 分钟运行一次。由于命令没有包含起始日期或时间，任务在命令完成 20 分钟后启动，此后每当系统运行它就每 20 分钟运行一次。请注意，安全脚本源文件位于远程计算机上，但任务在本地计算机上计划并执行。</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /sc minute /mo <span class="number">20</span> /tn &quot;Security Script&quot; /tr \\central\data\scripts\sec.vbs</span><br></pre></td></tr></table></figure><h1 id="其他实例"><a href="#其他实例" class="headerlink" title="其他实例"></a>其他实例</h1><p>转载自:<a href="https://blog.csdn.net/lionzl/article/details/40896893">https://blog.csdn.net/lionzl/article/details/40896893</a></p><h2 id="schtasks-create-hourly"><a href="#schtasks-create-hourly" class="headerlink" title="schtasks create hourly"></a>schtasks create hourly</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn TaskName /tr TaskRun /sc hourly [/mo &#123;<span class="number">1</span> - <span class="number">365</span>&#125;] [/st StartTime] [/sd StartDate] [/ed EndDate] [/s computer [/u [domain\]user /p password]] [/ru &#123;[Domain\]User | &quot;System&quot;&#125; [/rp Password]]</span><br></pre></td></tr></table></figure><p>计划命令在每小时过五分的时候运行。</p><ol><li>下面的命令将计划 MyApp 程序从午夜过后五分钟起每小时运行一次。因为忽略了 &#x2F;mo 参数，命令使用了小时计划的默认值，即每 (1) 小时。如果该命令在 12:05 A.M 之后生成，程序将在第二天才会运行。</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /sc hourly /st <span class="number">00</span>:<span class="number">05</span>:<span class="number">00</span> /tn &quot;My App&quot; /tr c:\apps\myapp.exe</span><br></pre></td></tr></table></figure><p>计划命令每五小时运行一次</p><p>下面的命令计划 MyApp 程序从 2001 年 3 月的第一天起每五小时运行一次。它使用 &#x2F;mo 参数来指定间隔时间，使用 &#x2F;sd 参数来指定起始日期。由于命令没有指定起始时间，当前时间被用作起始时间。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /sc hourly /mo <span class="number">5</span> /sd <span class="number">03</span>/<span class="number">01</span>/<span class="number">2001</span> /tn &quot;My App&quot; /tr c:\apps\myapp.exe</span><br></pre></td></tr></table></figure><h2 id="schtasks-create-daily"><a href="#schtasks-create-daily" class="headerlink" title="schtasks create daily"></a>schtasks create daily</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn TaskName /tr TaskRun /sc daily [/mo &#123;<span class="number">1</span> - <span class="number">365</span>&#125;] [/st StartTime] [/sd StartDate] [/ed EndDate] [/s computer [/u [domain\]user /p password]] [/ru &#123;[Domain\]User | &quot;System&quot;&#125; [/rp Password]]</span><br></pre></td></tr></table></figure><p>计划任务每天运行一次</p><p>下面的范例计划 MyApp 程序在每天的 8:00 A.M. 运行一次，直到 2001 年 12 月 31 日结束。由于它忽略了 &#x2F;mo 参数，所以使用默认间隔 1 来每天运行命令。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn &quot;My App&quot; /tr c:\apps\myapp.exe /sc daily /st <span class="number">08</span>:<span class="number">00</span>:<span class="number">00</span> /ed <span class="number">12</span>/<span class="number">31</span>/<span class="number">2001</span></span><br></pre></td></tr></table></figure><p>计划任务每隔一天运行一次</p><p>下面的范例计划 MyApp 程序从 2001 年 12 月 31 日起每隔一天在 1:00 P.M. (13:00) 运行。命令使用 &#x2F;mo 参数来指定两 (2) 天的间隔。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn &quot;My App&quot; /tr c:\apps\myapp.exe /sc daily /mo <span class="number">2</span> /st <span class="number">13</span>:<span class="number">00</span>:<span class="number">00</span> /sd <span class="number">12</span>/<span class="number">31</span>/<span class="number">2001</span></span><br></pre></td></tr></table></figure><h2 id="schtasks-create-weekly"><a href="#schtasks-create-weekly" class="headerlink" title="schtasks create weekly"></a>schtasks create weekly</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn TaskName /tr TaskRun /sc weekly [/d &#123;MON - SUN | *&#125;] [/mo &#123;<span class="number">1</span> - <span class="number">52</span>&#125;] [/st StartTime] [/sd StartDate] [/ed EndDate] [/s computer [/u [domain\]user /p password]] [/ru &#123;[Domain\]User | &quot;System&quot;&#125; [/rp Password]]</span><br></pre></td></tr></table></figure><p>计划任务每六周运行一次</p><p>下面的命令计划 MyApp 程序在远程计算机上每六周运行一次。该命令使用 &#x2F;mo 参数来指定间隔。它也使用 &#x2F;s 参数来指定远程计算机，使用 &#x2F;ru 参数来计划任务以用户的 Administrator 帐户权限运行。因为忽略了 &#x2F;rp 参数，SchTasks.exe 会提示用户输入 Administrator 帐户密码。</p><p>另外，因为命令是远程运行的，所以命令中所有的路径，包括到 MyApp.exe 的路径，都是指向远程计算机上的路径。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn &quot;My App&quot; /tr c:\apps\myapp.exe /sc weekly /mo <span class="number">6</span> /s Server16 /ru Admin01</span><br></pre></td></tr></table></figure><p>计划任务每隔一周在周五运行</p><p>下面的命令计划任务每隔一周在周五运行。它使用 &#x2F;mo 参数来指定两周的间隔，使用 &#x2F;d 参数来指定是一周内的哪一天。如计划任务在每个周五运行，要忽略 &#x2F;mo 参数或将其设置为 1。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn &quot;My App&quot; /tr c:\apps\myapp.exe /sc weekly /mo <span class="number">2</span> /d FRI</span><br></pre></td></tr></table></figure><h2 id="schtasks-create-monthly"><a href="#schtasks-create-monthly" class="headerlink" title="schtasks create monthly"></a>schtasks create monthly</h2><h3 id="常规月计划语法"><a href="#常规月计划语法" class="headerlink" title="常规月计划语法"></a>常规月计划语法</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn TaskName /tr TaskRun /sc monthly [/mo &#123;FIRST | SECOND | THIRD | FOURTH | LAST | LASTDAY] [/d &#123;MON - SUN | <span class="number">1</span> - <span class="number">31</span>&#125;] [/m &#123;JAN - DEC[,JAN - DEC...] | *&#125;] [/st StartTime] [/sd StartDate] [/ed EndDate] [/s computer [/u [domain\]user /p password]] [/ru &#123;[Domain\]User | &quot;System&quot;&#125; [/rp Password]] </span><br></pre></td></tr></table></figure><ul><li>指定周的语法</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn TaskName /tr TaskRun /sc monthly /mo &#123;FIRST | SECOND | THIRD | FOURTH | LAST&#125; /d &#123;MON - SUN&#125; [/m &#123;JAN - DEC[,JAN - DEC...] | *&#125;] [/st StartTime] [/sd StartDate] [/ed EndDate] [/s computer [/u [domain\]user /p password]] [/ru &#123;[Domain\]User | &quot;System&quot;&#125; [/rp Password]] </span><br></pre></td></tr></table></figure><ul><li>Lastday 语法</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn TaskName /tr TaskRun /sc monthly /mo LASTDAY /m &#123;JAN - DEC[,JAN - DEC...] | *&#125; [/st StartTime] [/sd StartDate] [/ed EndDate] [/s computer [/u [domain\]user /p password]] [/ru &#123;[Domain\]User | &quot;System&quot;&#125; [/rp Password]] </span><br></pre></td></tr></table></figure><ul><li>指定日期的语法</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn TaskName /tr TaskRun /sc monthly /d &#123;<span class="number">1</span> - <span class="number">31</span>&#125; [/m &#123;JAN - DEC[,JAN - DEC...] | *&#125;] [/st StartTime] [/sd StartDate] [/ed EndDate] [/s computer [/u [domain\]user /p password]] [/ru &#123;[Domain\]User | &quot;System&quot;&#125; [/rp Password]] </span><br></pre></td></tr></table></figure><h4 id="计划任务在每月的第一天运行"><a href="#计划任务在每月的第一天运行" class="headerlink" title="计划任务在每月的第一天运行"></a>计划任务在每月的第一天运行</h4><p>下面的命令计划 MyApp 程序在每月的第一天运行。因为默认修饰符是 none（即：没有修饰符），默认天是第一天，默认的月份是每个月，所以该命令不需要任何其它的参数。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn &quot;My App&quot; /tr c:\apps\myapp.exe /sc monthly</span><br></pre></td></tr></table></figure><h4 id="计划任务在每月的最后一天运行"><a href="#计划任务在每月的最后一天运行" class="headerlink" title="计划任务在每月的最后一天运行"></a>计划任务在每月的最后一天运行</h4><p>下面的命令计划 MyApp 程序在每月的最后一天运行。它使用 &#x2F;mo 参数指定在每月的最后一天运行程序，使用通配符 (*) 与 &#x2F;m 参数表明在每月的最后一天运行程序。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn &quot;My App&quot; /tr c:\apps\myapp.exe /sc monthly /mo lastday /m *</span><br></pre></td></tr></table></figure><h4 id="计划任务每三个月运行一次"><a href="#计划任务每三个月运行一次" class="headerlink" title="计划任务每三个月运行一次"></a>计划任务每三个月运行一次</h4><p>下面的命令计划 MyApp 程序每三个月运行一次。.它使用 &#x2F;mo 参数来指定间隔。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn &quot;My App&quot; /tr c:\apps\myapp.exe /sc monthly /mo <span class="number">3</span></span><br></pre></td></tr></table></figure><h4 id="计划任务在每月的第二个周日运行"><a href="#计划任务在每月的第二个周日运行" class="headerlink" title="计划任务在每月的第二个周日运行"></a>计划任务在每月的第二个周日运行</h4><p>下面的命令计划 MyApp 程序在每月的第二个周日运行。它使用 &#x2F;mo 参数指定是每月的第二周，使用 &#x2F;d 参数指定天。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn &quot;My App&quot; /tr c:\apps\myapp.exe /sc monthly /mo SECOND /d SUN</span><br></pre></td></tr></table></figure><h4 id="计划任务在五月和六月的第-15-天运行。"><a href="#计划任务在五月和六月的第-15-天运行。" class="headerlink" title="计划任务在五月和六月的第 15 天运行。"></a>计划任务在五月和六月的第 15 天运行。</h4><p>下面的命令计划 MyApp 程序在五月 15 日和六月 15 日的 3:00 PM (15:00) 运行。它使用 &#x2F;d 参数来指定日期，使用 &#x2F;m 参数指定月份。它也使用 &#x2F;st 参数来指定开始时间。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn &quot;My App&quot; /tr c:\apps\myapp.exe /sc monthly /d <span class="number">15</span> /m MAY,JUN /st <span class="number">15</span>:<span class="number">00</span>:<span class="number">00</span></span><br></pre></td></tr></table></figure><h2 id="schtasks-create-once"><a href="#schtasks-create-once" class="headerlink" title="schtasks create once"></a>schtasks create once</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn TaskName /tr TaskRun /sc once /st StartTime /sd StartDate [/s computer [/u [domain\]user /p password]] [/ru &#123;[Domain\]User | &quot;System&quot;&#125; [/rp Password]]</span><br></pre></td></tr></table></figure><h3 id="计划任务运行一次"><a href="#计划任务运行一次" class="headerlink" title="计划任务运行一次"></a>计划任务运行一次</h3><p>下面的命令计划 MyApp 程序在 2002 年 1 月 1 日午夜运行一次。它使用 &#x2F;ru 参数指定以用户的 Administrator 帐户权限运行任务，使用 &#x2F;rp 参数为 Administrator 帐户提供密码。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn &quot;My App&quot; /tr c:\apps\myapp.exe /sc once /st <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> /sd <span class="number">01</span>/<span class="number">01</span>/<span class="number">2002</span> /ru Admin23 /rp p@ssworD1</span><br></pre></td></tr></table></figure><h2 id="schtasks-create-onstart"><a href="#schtasks-create-onstart" class="headerlink" title="schtasks create onstart"></a>schtasks create onstart</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn TaskName /tr TaskRun /sc onstart [/sd StartDate] [/s computer [/u [domain\]user /p password]] [/ru &#123;[Domain\]User | &quot;System&quot;&#125; [/rp Password]]</span><br></pre></td></tr></table></figure><h3 id="计划任务在每次系统启动的时候运行"><a href="#计划任务在每次系统启动的时候运行" class="headerlink" title="计划任务在每次系统启动的时候运行"></a>计划任务在每次系统启动的时候运行</h3><p>下面的命令计划 MyApp 程序在每次系统启动的时候运行，起始日期是 2001 年 3 月 15 日。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn &quot;My App&quot; /tr c:\apps\myapp.exe /sc onstart /sd <span class="number">03</span>/<span class="number">15</span>/<span class="number">2001</span></span><br></pre></td></tr></table></figure><h2 id="schtasks-create-onlogon"><a href="#schtasks-create-onlogon" class="headerlink" title="schtasks create onlogon"></a>schtasks create onlogon</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn TaskName /tr TaskRun /sc onlogon [/sd StartDate] [/s computer [/u [domain\]user /p password]] [/ru &#123;[Domain\]User | &quot;System&quot;&#125; [/rp Password]]</span><br></pre></td></tr></table></figure><h3 id="计划任务在用户登录到远程计算机的时候运行"><a href="#计划任务在用户登录到远程计算机的时候运行" class="headerlink" title="计划任务在用户登录到远程计算机的时候运行"></a>计划任务在用户登录到远程计算机的时候运行</h3><p>下面的命令计划批处理文件在用户（任何用户）每次登录到远程计算机上的时候运行。它使用 &#x2F;s 参数指定远程计算机。因为命令是远程的，所以命令中所有的路径，包括批处理文件的路径，都指定为远程计算机上的路径。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn &quot;<span class="built_in">Start</span> Web Site&quot; /tr c:\myiis\webstart.bat /sc onlogon /s Server23</span><br></pre></td></tr></table></figure><h2 id="schtasks-create-onidle"><a href="#schtasks-create-onidle" class="headerlink" title="schtasks create onidle"></a>schtasks create onidle</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn TaskName /tr TaskRun /sc onidle /iIdleTime [/sd StartDate] [/s computer [/u [domain\]user /p password]] [/ru &#123;[Domain\]User | &quot;System&quot;&#125; [/rp Password]]</span><br></pre></td></tr></table></figure><h3 id="计划某项任务在计算机空闲的时候运行"><a href="#计划某项任务在计算机空闲的时候运行" class="headerlink" title="计划某项任务在计算机空闲的时候运行"></a>计划某项任务在计算机空闲的时候运行</h3><p>下面的命令计划 MyApp 程序在计算机空闲的时候运行。它使用必需的 &#x2F;i 参数指定在启动任务之前计算机必需持续空闲十分钟。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn &quot;My App&quot; /tr c:\apps\myapp.exe /sc onidle /i <span class="number">10</span></span><br></pre></td></tr></table></figure><h3 id="创建以-System-权限运行的任务"><a href="#创建以-System-权限运行的任务" class="headerlink" title="创建以 System 权限运行的任务"></a>创建以 System 权限运行的任务</h3><p>下面的命令计划 MyApp 程序以 NT Authority\System 帐户权限运行。在这个范例中，任务计划在每月的第一天运行，但对于以系统权限运行的任务可以使用所有的计划类型。</p><p>该命令使用 &#x2F;ru “System” 参数指定系统安全上下文。因为系统任务不需要密码，所以忽略了 &#x2F;rp 参数。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn &quot;My App&quot; /tr c:\apps\myapp.exe /sc monthly /d <span class="number">1</span> /ru &quot;System&quot;</span><br></pre></td></tr></table></figure><p>作为响应，SchTasks.exe 显示一个信息性消息和一个成功消息。它不提示输入密码。信息：此任务将被创建于用户名下 (“NT AUTHORITY\SYSTEM”)。 成功：计划任务 “My App” 已成功创建。 </p><h3 id="创建运行多个程序的任务"><a href="#创建运行多个程序的任务" class="headerlink" title="创建运行多个程序的任务"></a>创建运行多个程序的任务</h3><p>每个任务只能运行一个程序。但是可以创建一个运行多个程序的批处理文件，然后计划一个任务来运行该批处理文件。下面的过程说明了这个方法：</p><ol><li>创建一个启动要运行程序的批处理文件。</li></ol><p>在这个范例中创建了一个启动“事件查看器”(Eventvwr.exe) 和“系统监视器”(Perfmon.exe) 的批处理文件。</p><ul><li>启动文本编辑器，例如“记事本”。</li><li>键入每个程序的名称和指向可执行文件的完全合格的路径。在这种情况下，文件包含有下列语句。</li></ul><figure class="highlight cmd"><figcaption><span>MyApp.bat</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Windows</span>\<span class="title">System32</span>\<span class="title">Eventvwr.exe</span></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Windows</span>\<span class="title">System32</span>\<span class="title">Perfmon.exe</span></span></span><br></pre></td></tr></table></figure><ol start="2"><li>使用 SchTasks.exe 创建一个运行 MyApps.bat 的任务。</li></ol><p>下面的命令创建了 Monitor 任务，每当有人登录它就运行。它使用 &#x2F;tn 参数命名任务，使用 &#x2F;tr 参数运行 MyApps.bat。它使用 &#x2F;sc 参数来指明 OnLogon 计划类型，使用 &#x2F;ru 参数指定 Administrator 帐户。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chtasks /create /tn Monitor /tr C:\MyApps.bat /sc onlogon /ru Reskit\Administrator</span><br></pre></td></tr></table></figure><p>该命令的结果是，每当用户登录到计算机，任务就启动“事件查看器”和“系统监视器”。</p><h3 id="更改计划任务"><a href="#更改计划任务" class="headerlink" title="更改计划任务"></a>更改计划任务</h3><p>更改一个或多个下列任务属性。</p><ul><li>任务运行的程序 (&#x2F;tr)。</li><li>任务运行的用户帐户 (&#x2F;ru)。</li><li>用户帐户的密码 (&#x2F;rp)。</li></ul><p>语法</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /change /tn TaskName [/s computer [/u [domain\]user /p password]] [/tr TaskRun] [/ru [Domain\]User | &quot;System&quot;] [/rp Password]</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left"><code>/tn TaskName</code></td><td align="left">标识要更改的任务。输入任务名</td></tr><tr><td align="left"><code>/s Computer</code></td><td align="left">指定远程计算机的名称或 IP 地址（带有或者没有反斜杠）。默认值是本地计算机</td></tr><tr><td align="left"><code>/u [domain\]user</code></td><td align="left">使用特定用户帐户的权限运行命令。默认情况下，使用已登录到运行 SchTasks 的计算机上的用户的权限运行命令</td></tr><tr><td align="left"><code>/p password</code></td><td align="left">指定在 &#x2F;u 参数中指定的用户帐户的密码。如果使用 &#x2F;u 参数，则需要该参数</td></tr><tr><td align="left"><code>/tr TaskRun</code></td><td align="left">更改任务运行的程序。输入可执行文件、脚本文件或批处理文件的完全合格的路径和文件名。如果忽略了路径，SchTasks.exe 假定文件在 Systemroot\System32 目录下指定的程序替换任务最初运行的程序</td></tr><tr><td align="left"><code>/ru [Domain\]User &quot;System&quot;</code></td><td align="left">更改用于任务的用户帐户。 [domain]User  指定用户帐户”System” or “ 指定为操作系统所使用的 NT Authority\System 帐户。在更改用户帐户的时候，必须也要更改用户密码。如果命令带有 &#x2F;ru 参数，但没有 &#x2F;rp 参数，SchTasks.exe 提示要求输入新的密码而且不显示键入的文本。任务以不需要密码的 NT Authority\System 帐户权限运行，SchTasks.exe 不会提示输入密码</td></tr><tr><td align="left"><code>/p Password</code></td><td align="left">更改用于任务的帐户密码。输入新的密码</td></tr><tr><td align="left"><code>/?</code></td><td align="left">在命令提示符显示帮助</td></tr></tbody></table><p>注释</p><ul><li>XOX &#x2F;tn 和 &#x2F;s 参数标识该任务。&#x2F;tr、&#x2F;ru 和 &#x2F;rp 参数指定可以更改的任务属性。</li><li>使用 change 操作的命令必须至少更改一个任务属性。</li><li>NT Authority\System 帐户没有交互式登录权限。用户看不到以系统权限运行的程序，不能与其交互。</li></ul><h3 id="更改任务运行的程序"><a href="#更改任务运行的程序" class="headerlink" title="更改任务运行的程序"></a>更改任务运行的程序</h3><p>下面的命令将 Virus Check 任务运行的程序由 VirusCheck.exe 更改为 VirusCheck2.exe。此命令使用 &#x2F;tn 参数标识任务，使用 &#x2F;tr 参数指定任务的新程序。（不能更改任务名称。）</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /change /tn &quot;Virus Check&quot; /tr C:\VirusCheck2.exe</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Batch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Batch</title>
      <link href="/posts/Batch.html"/>
      <url>/posts/Batch.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Batch 批量处理相关。</p></blockquote><h1 id="dp0-获取当前路径"><a href="#dp0-获取当前路径" class="headerlink" title="%~dp0[获取当前路径]"></a>%~dp0[获取当前路径]</h1><ol><li>%~dp0 “d”为Drive的缩写，即为驱动器，磁盘、“p”为Path缩写，即为路径，目录</li><li>cd %~dp0 ：进入批处理所在目录</li><li>cd %~dp0bin\ ：进入批处理所在目录的bin目录</li></ol><span id="more"></span><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">REM 作用：以管理员身份安装Apache</span></span><br><span class="line"><span class="function">d:</span></span><br><span class="line"><span class="function"><span class="title">cd</span> %~<span class="title">dp0bin</span>\</span></span><br><span class="line"><span class="function"><span class="title">httpd.exe</span> -<span class="title">k</span> <span class="title">install</span> -<span class="title">n</span> &quot;<span class="title">Apache24</span>&quot;</span></span><br></pre></td></tr></table></figure><p>以管理员身份运行 示例.bat ，执行结果如下：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Windows</span>\<span class="title">system32</span>&gt;<span class="title">d</span>:</span></span><br><span class="line"><span class="function"><span class="title">D</span>:\&gt;<span class="title">cd</span> <span class="title">D</span>:\<span class="title">Server</span>\<span class="title">Apache24</span>\<span class="title">bin</span>\</span></span><br><span class="line"><span class="function"><span class="title">D</span>:\<span class="title">Server</span>\<span class="title">Apache24</span>\<span class="title">bin</span>&gt;<span class="title">httpd.exe</span> -<span class="title">k</span> <span class="title">install</span> -<span class="title">n</span> &quot;<span class="title">Apache24</span>&quot;</span></span><br></pre></td></tr></table></figure><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="cd-执行的路径"><a href="#cd-执行的路径" class="headerlink" title="%cd%[执行的路径]"></a>%cd%[执行的路径]</h2><p>当前执行的路径，并非目标文件的路径</p><h2 id="taskill"><a href="#taskill" class="headerlink" title="taskill"></a>taskill</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">taskkill</span> /f /im notepad.exe [终止进程]</span><br><span class="line"><span class="built_in">taskkill</span> /?打开帮助</span><br></pre></td></tr></table></figure><h2 id="获取命令帮助-xxx"><a href="#获取命令帮助-xxx" class="headerlink" title="获取命令帮助 xxx &#x2F;?"></a>获取命令帮助 xxx &#x2F;?</h2><p>遇到记不清楚的命令，但记得名字，就可以键入 命令名 空格 &#x2F;?就会有详细的该命令的帮助了，比如：ping &#x2F;? ,    cd &#x2F;?</p><h2 id="查看内置命令帮助信息"><a href="#查看内置命令帮助信息" class="headerlink" title="查看内置命令帮助信息"></a>查看内置命令帮助信息</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ver</span> /?</span><br><span class="line"><span class="built_in">cmd</span> /?</span><br><span class="line"><span class="built_in">set</span> /?</span><br><span class="line"><span class="comment">rem /?</span></span><br><span class="line"><span class="keyword">if</span> /?</span><br><span class="line"><span class="built_in">echo</span> /?</span><br><span class="line"><span class="keyword">goto</span> /?</span><br><span class="line"><span class="keyword">for</span> /?</span><br><span class="line"><span class="built_in">shift</span> /?</span><br><span class="line"><span class="keyword">call</span> /?</span><br></pre></td></tr></table></figure><h2 id="其他常用的命令"><a href="#其他常用的命令" class="headerlink" title="其他常用的命令"></a>其他常用的命令</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span> /?</span><br><span class="line"><span class="built_in">find</span> /?</span><br><span class="line"><span class="built_in">findstr</span> /?</span><br><span class="line"><span class="built_in">copy</span> /?</span><br></pre></td></tr></table></figure><h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><ol><li>批处理文件是一个“.bat”结尾的文本文件，这个文件的每一行都是一条DOS命令。可以使用任何文本文件编辑工具创建和修改。</li><li>批处理是一种简单的程序，可以用 if 和 goto 来控制流程，也可以使用 for 循环。</li><li>批处理的编程能力远不如C语言等编程语言，也十分不规范。</li><li>每个编写好的批处理文件都相当于一个DOS的外部命令，把它所在的目录放到DOS搜索路径(path)中，即可在任意位置运行。</li><li>C:\AUTOEXEC.BAT 是每次系统启动时都会自动运行的，可以将每次启动时都要运行的命令放入该文件中。</li><li>大小写不敏感(命令符忽略大小写)</li><li>批处理的文件扩展名为 .bat 或 .cmd。</li><li>在命令提示下键入批处理文件的名称，或者双击该批处理文件，系统就会调用Cmd.exe来运行该文件。</li></ol><h1 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h1><h2 id="系统参数"><a href="#系统参数" class="headerlink" title="系统参数"></a>系统参数</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">%SystemRoot%</span> ===&gt; C:\WINDOWS (<span class="variable">%windir%</span> 同样)</span><br><span class="line"><span class="variable">%ProgramFiles%</span> ===&gt; C:\Program Files</span><br><span class="line"><span class="variable">%USERPROFILE%</span> ===&gt; C:\Documents and Settings\Administrator (子目录有“桌面”,“开始菜单”,“收藏夹”等)</span><br><span class="line"><span class="variable">%APPDATA%</span> ===&gt; C:\Documents and Settings\Administrator\Application Data</span><br><span class="line"><span class="variable">%TEMP%</span> ===&gt; C:\DOCUME~<span class="number">1</span>\ADMINI~<span class="number">1</span>\LOCALS~<span class="number">1</span>\Temp (<span class="variable">%TEM%</span> 同样)</span><br><span class="line"><span class="variable">%APPDATA%</span> ===&gt; C:\Documents and Settings\Administrator\Application Data</span><br><span class="line"><span class="variable">%OS%</span> ===&gt; Windows_NT (系统)</span><br><span class="line"><span class="variable">%Path%</span> ===&gt; <span class="variable">%SystemRoot%</span>\system32;<span class="variable">%SystemRoot%</span>;<span class="variable">%SystemRoot%</span>\System32\Wbem (原本的设置)</span><br><span class="line"><span class="variable">%HOMEDRIVE%</span> ===&gt; C: (系统盘)</span><br><span class="line"><span class="variable">%HOMEPATH%</span> ===&gt; \Documents and Settings\Administrator</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 枚举当前的环境变量</span></span><br><span class="line"><span class="built_in">setlocal</span> enabledelayedexpansion</span><br><span class="line"><span class="keyword">FOR</span> /F &quot;usebackq delims==&quot; <span class="variable">%%i</span> <span class="keyword">IN</span> (`<span class="built_in">set</span>`) <span class="keyword">DO</span> @<span class="built_in">echo</span> <span class="variable">%%i</span> <span class="variable">!%%i!</span></span><br></pre></td></tr></table></figure><h2 id="传递参数给批处理文件"><a href="#传递参数给批处理文件" class="headerlink" title="传递参数给批处理文件"></a>传递参数给批处理文件</h2><p>%[1-9]表示参数，参数是指在运行批处理文件时在文件名后加的以空格(或者Tab)分隔的字符串。</p><p>变量可以从%0到%9，%0表示批处理命令本身，其它参数字符串用 %1 到 %9 顺序表示。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">REM 执行同目录下的“test2.bat”文件，并输入两个参数</span></span><br><span class="line"><span class="keyword">call</span> test2.bat &quot;hello&quot; &quot;haha&quot;</span><br></pre></td></tr></table></figure><p>在“test2.bat”文件里写:</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> %<span class="number">1</span> (打印: &quot;hello&quot;)</span><br><span class="line"><span class="built_in">echo</span> %<span class="number">2</span> (打印: &quot;haha&quot;)</span><br><span class="line"><span class="built_in">echo</span> %<span class="number">0</span> (打印: test2.bat)</span><br><span class="line"><span class="built_in">echo</span> %<span class="number">19</span> (打印: &quot;hello&quot;<span class="number">9</span>)</span><br></pre></td></tr></table></figure><h1 id="批处理基本命令"><a href="#批处理基本命令" class="headerlink" title="批处理基本命令"></a>批处理基本命令</h1><h2 id="help-命令"><a href="#help-命令" class="headerlink" title="help 命令"></a>help 命令</h2><p>&#x2F;? 命令，语法： 命令 &#x2F;?</p><p>可显示此命令的帮助信息</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">REM 把 type 命令的帮助信息写入到tmp.txt文件里</span></span><br><span class="line"><span class="built_in">type</span> /? &gt;&gt;tmp.txt </span><br></pre></td></tr></table></figure><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">help</span> <span class="built_in">type</span> (显示跟“<span class="built_in">type</span> /?”一样)</span><br></pre></td></tr></table></figure><h2 id="Echo-命令"><a href="#Echo-命令" class="headerlink" title="Echo 命令"></a>Echo 命令</h2><p>语法: </p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> [&#123;on|off&#125;] [message]</span><br><span class="line"><span class="built_in">ECHO</span> [ON | OFF] 打开回显或关闭回显功能。</span><br><span class="line"><span class="built_in">ECHO</span> 显示当前回显设置。</span><br><span class="line"><span class="built_in">ECHO</span> [message] 显示信息。</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> off </span><br><span class="line">表示在此语句后所有运行的命令都不显示命令行本身；</span><br><span class="line">默认是on，on时会显示如： C:\文件夹路径&gt;命令行。</span><br></pre></td></tr></table></figure><p>在实际应用中我们会把这条命令和重定向符号( 也称为管道符号，一般用 &gt; &gt;&gt; ^ )结合来实现输入一些命令到特定格式的文件中。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> off</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 显示出“hello world”</span></span><br><span class="line"><span class="built_in">echo</span> hello world </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> Windows Registry Editor Version <span class="number">5</span>.<span class="number">00</span> &gt; c:\setupreg.reg </span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 追加内容进 setupreg.reg 这个文件</span></span><br><span class="line"><span class="built_in">echo</span> &quot;SourcePath&quot;=&quot;D:\\Win2003\\&quot; &gt;&gt; c:\setupreg.reg </span><br></pre></td></tr></table></figure><h2 id="命令"><a href="#命令" class="headerlink" title="@ 命令"></a>@ 命令</h2><p>表示不显示@后面的命令</p><p>@ 与 echo off 相象，但它是加在每个命令行的最前面，表示运行时不显示这一行的命令行(只能影响当前行)。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off </span><br><span class="line"><span class="comment">REM 此语句常用于开头，表示不显示所有的命令行信息，包括此句</span></span><br><span class="line"></span><br><span class="line">@<span class="built_in">echo</span> please wait a minite...</span><br><span class="line">@<span class="built_in">format</span> X: /q/u/autoset</span><br></pre></td></tr></table></figure><p>format 这个命令是不可以使用&#x2F;y这个参数的，可喜的是微软留了个autoset这个参数给我们，效果和&#x2F;y是一样的。</p><h2 id="Goto-命令"><a href="#Goto-命令" class="headerlink" title="Goto 命令"></a>Goto 命令</h2><p>语法：goto label (label是参数，指定所要转向的批处理程序中的行。)</p><p>指定跳转到标签行，找到标签行后，程序将处理从下一行开始的命令。</p><p>label标签的名字可以随便起，但是最好是有意义的，字母前必须加个冒号“:”来表示这个字母是标签。</p><p>goto命令就是根据这个冒号来寻找下一步跳到到那里。经常与 if 配合使用，根据不同的条件来执行不同的命令组。</p><h2 id="Rem-命令"><a href="#Rem-命令" class="headerlink" title="Rem 命令"></a>Rem 命令</h2><p>语法：Rem Message…(小技巧：用::代替rem)</p><p>注释命令，在C语言中相当与&#x2F;<em>…</em>&#x2F;,它并不会被执行，只是起一个注释的作用，便于别人阅读和自己日后修改。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">@Rem Here is the description.</span></span><br></pre></td></tr></table></figure><h2 id="Pause-命令"><a href="#Pause-命令" class="headerlink" title="Pause 命令"></a>Pause 命令</h2><p>会暂停批处理的执行并在屏幕上显示Press any key to continue…的提示，等待用户按任意键后继续</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">:begin</span><br><span class="line"><span class="built_in">copy</span> a:*.* d:\back</span><br><span class="line"><span class="built_in">echo</span> Please put a new disk into driver A</span><br><span class="line"><span class="built_in">pause</span></span><br><span class="line"><span class="keyword">goto</span> begin</span><br></pre></td></tr></table></figure><p>在这个例子中，驱动器 A 中磁盘上的所有文件均复制到d:\back中。</p><p>显示的信息提示您将另一张磁盘放入驱动器 A 时，pause 命令会使程序挂起，以便您更换磁盘，然后按任意键再次复制。</p><h2 id="Call-命令"><a href="#Call-命令" class="headerlink" title="Call 命令"></a>Call 命令</h2><p>语法: </p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> [[Drive:][<span class="built_in">Path</span>] FileName [BatchParameters]] [:<span class="built_in">label</span> [arguments]]</span><br></pre></td></tr></table></figure><p>参数: </p><p><code>[Drive:][Path] FileName</code> 指定要调用的批处理程序的位置和名称。filename 参数必须具有 <code>.bat</code> 或 <code>.cmd</code> 扩展名。</p><p>调用另一个批处理程序，并且不终止父批处理程序。如果不用call而直接调用别的批处理文件，那么执行完那个批处理文件后将无法返回当前文件并执行当前文件的后续命令。call 命令接受用作调用目标的标签。如果在脚本或批处理文件外使用 Call，它将不会在命令行起作用。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">REM 调用指定目录下的 test2.bat，且输入3个参数给他</span></span><br><span class="line"><span class="keyword">call</span>=&quot;<span class="variable">%cd%</span>\test2.bat&quot; haha kkk aaa</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 调用同目录下的 test2.bat，且输入2个参数给他</span></span><br><span class="line"><span class="keyword">call</span> test2.bat arg1 arg2 </span><br></pre></td></tr></table></figure><p>注：可以调用自身(死循环、递归)</p><h2 id="Start-命令"><a href="#Start-命令" class="headerlink" title="Start 命令"></a>Start 命令</h2><p>调用外部程序，所有的 DOS命令 和 命令行程序 都可以由 start命令 来调用。</p><p>常用参数：</p><ul><li>MIN 开始时窗口最小化</li><li>SEPARATE 在分开的空间内开始 16 位 Windows 程序</li><li>HIGH 在 HIGH 优先级类别开始应用程序</li><li>REALTIME 在 REALTIME 优先级类别开始应用程序</li><li>WAIT 启动应用程序并等候它结束</li><li>parameters 这些为传送到命令&#x2F;程序的参数</li></ul><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">REM 调用同目录下的 test2.bat，且输入2个参数给他，且本窗口最小化</span></span><br><span class="line"><span class="built_in">start</span> /MIN test2.bat arg1 arg2</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 文件路径名有空格时</span></span><br><span class="line"><span class="function">e:\&quot;<span class="title">program</span> <span class="title">files</span>&quot;\<span class="title">qq.exe</span></span></span><br></pre></td></tr></table></figure><h2 id="If-命令"><a href="#If-命令" class="headerlink" title="If 命令"></a>If 命令</h2><p>if 表示将判断是否符合规定的条件，从而决定执行不同的命令。有三种格式:</p><p>语法: </p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [<span class="keyword">not</span>] &quot;参数&quot; == &quot;字符串&quot; 待执行的命令</span><br></pre></td></tr></table></figure><p>参数如果等于(not表示不等，下同)指定的字符串，则条件成立，运行命令，否则运行下一句。(注意是两个等号)</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> &quot;%<span class="number">1</span>&quot; == &quot;a&quot; <span class="built_in">format</span> a:</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> &#123;%<span class="number">1</span>&#125; == &#123;&#125; <span class="keyword">goto</span> noparms</span><br></pre></td></tr></table></figure><h3 id="If-exist"><a href="#If-exist" class="headerlink" title="If exist"></a>If exist</h3><p>语法: if [not] exist [路径]文件名 待执行的命令</p><p>如果有指定的文件，则条件成立，运行命令，否则运行下一句。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">REM 存在这文件，则编辑它，用很难看的系统编辑器</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exist</span> config.sys edit config.sys</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 如果存在这文件，则显示它的内容</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exist</span> config.sys <span class="built_in">type</span> config.sys </span><br></pre></td></tr></table></figure><h3 id="If-errorlevel-number"><a href="#If-errorlevel-number" class="headerlink" title="If errorlevel number"></a>If errorlevel number</h3><p>语法: if [not] errorlevel &lt;数字&gt; 待执行的命令</p><p>如果程序返回值等于指定的数字，则条件成立，运行命令，否则运行下一句。(返回值必须按照从大到小的顺序排列)</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">XCOPY</span> F:\test.bat D:\</span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">ERRORLEVEL</span> <span class="number">1</span> (<span class="built_in">ECHO</span> 文件拷贝失败</span><br><span class="line">) <span class="keyword">Else</span> <span class="keyword">IF</span> <span class="keyword">ERRORLEVEL</span> <span class="number">0</span> <span class="built_in">ECHO</span> 成功拷贝文件</span><br><span class="line"></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><p>很多DOS程序在运行结束后会返回一个数字值用来表示程序运行的结果(或者状态)，称为错误码errorlevel或称返回码。</p><p>常见的返回码为0、1。通过if errorlevel命令可以判断程序的返回值，根据不同的返回值来决定执行不同的命令。</p><h3 id="Else"><a href="#Else" class="headerlink" title="Else"></a>Else</h3><p>语法： if 条件 (成立时执行的命令) else (不成立时执行的命令)</p><p>如果是多个条件，建议适当使用括号把各条件包起来，以免出错。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">1</span> == <span class="number">0</span> ( <span class="built_in">echo</span> comment1 ) <span class="keyword">else</span> <span class="keyword">if</span> <span class="number">1</span>==<span class="number">0</span> ( <span class="built_in">echo</span> comment2 ) <span class="keyword">else</span> (<span class="built_in">echo</span> comment3 )</span><br><span class="line"><span class="comment">REM 如果 else 的语句需要换行，if 执行的行尾需用“^”连接，并且 if 执行的动作需用(括起来)，否则报错</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="number">1</span> == <span class="number">0</span> ( <span class="built_in">echo</span> comment1 ) <span class="keyword">else</span> <span class="keyword">if</span> <span class="number">1</span>==<span class="number">0</span> ( <span class="built_in">echo</span> comment2 ) ^</span><br><span class="line"><span class="keyword">else</span> (<span class="built_in">echo</span> comment3 )</span><br></pre></td></tr></table></figure><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符:"></a>比较运算符:</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EQU</span> - 等于 (一般使用“==”)</span><br><span class="line"><span class="keyword">NEQ</span> - 不等于 (没有 “!=”,改用“ <span class="keyword">if</span> <span class="keyword">not</span> <span class="number">1</span>==<span class="number">1</span> ”的写法)</span><br><span class="line"><span class="keyword">LSS</span> - 小于</span><br><span class="line"><span class="keyword">LEQ</span> - 小于或等于</span><br><span class="line"><span class="keyword">GTR</span> - 大于</span><br><span class="line"><span class="keyword">GEQ</span> - 大于或等于</span><br></pre></td></tr></table></figure><h2 id="Choice-命令"><a href="#Choice-命令" class="headerlink" title="Choice 命令"></a>Choice 命令</h2><p>choice 使用此命令可以让用户输入一个字符(用于选择)，从而根据用户的选择返回不同的 errorlevel，然后配合 if errorlevel 选择运行不同的命令。</p><p>注意：choice命令为DOS或者Windows系统提供的外部命令，不同版本的choice命令语法会稍有不同，请用choice &#x2F;?查看用法。choice 使用此命令可以让用户输入一个字符，从而运行不同的命令。使用时应该加&#x2F;c:参数，c:后应写提示可输入的字符，之间无空格。它的返回码为1234……</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">choice /c:dme defrag,mem,end</span><br></pre></td></tr></table></figure><p>将显示: defrag,mem,end[D,M,E]?</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">choice /c:dme defrag,mem,end</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">errorlevel</span> <span class="number">3</span> <span class="keyword">goto</span> defrag (应先判断数值最高的错误码)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">errorlevel</span> <span class="number">2</span> <span class="keyword">goto</span> mem</span><br><span class="line"><span class="keyword">if</span> errotlevel <span class="number">1</span> <span class="keyword">goto</span> end</span><br></pre></td></tr></table></figure><h2 id="For-命令"><a href="#For-命令" class="headerlink" title="For 命令"></a>For 命令</h2><p>for 命令是一个比较复杂的命令，主要用于参数在指定的范围内循环执行命令。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &#123;%variable | <span class="variable">%%v</span>ariable&#125; <span class="keyword">in</span> (<span class="built_in">set</span>) <span class="keyword">do</span> command [command-parameters]</span><br></pre></td></tr></table></figure><ul><li><code>%variable</code> 指定一个单一字母可替换的参数。变量名称是区分大小写的，所以 %i 不同于 %I,在批处理文件中使用 FOR 命令时，指定变量建议用 %%variable而不要用 %variable</li><li><code>set</code> 指定一个或一组文件。可以使用通配符</li><li><code>command</code> 指定对每个文件执行的命令</li><li><code>command-parameters</code> 为特定命令指定参数或命令行开关。</li></ul><h3 id="如果命令扩展名被启用，额外的-FOR-命令格式会受到支持"><a href="#如果命令扩展名被启用，额外的-FOR-命令格式会受到支持" class="headerlink" title="如果命令扩展名被启用，额外的 FOR 命令格式会受到支持"></a>如果命令扩展名被启用，额外的 FOR 命令格式会受到支持</h3><p>a.</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /D %variable <span class="keyword">IN</span> (<span class="built_in">set</span>) <span class="keyword">DO</span> command [command-parameters]</span><br></pre></td></tr></table></figure><p>如果集里面包含通配符，则指定与目录名匹配，而不与文件名匹配。</p><p>b.</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /R [[drive:]<span class="built_in">path</span>] %variable <span class="keyword">IN</span> (<span class="built_in">set</span>) <span class="keyword">DO</span> command [command-parameters]</span><br></pre></td></tr></table></figure><p>检查以 [drive:]path 为根的目录树，指向每个目录中的FOR 语句。</p><p>如果在 &#x2F;R 后没有指定目录，则使用当前目录。如果集仅为一个单点(.)字符，则枚举该目录树。</p><p>c.</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /L %variable <span class="keyword">IN</span> (<span class="built_in">start</span>,step,end) <span class="keyword">DO</span> command [command-parameters]</span><br></pre></td></tr></table></figure><p>该集表示以增量形式从开始到结束的一个数字序列。</p><p>如：(1,1,5) 将产生序列 1 2 3 4 5； 而(5,-1,1) 将产生序列 (5 4 3 2 1)。</p><p>d.有或者没有 usebackq 选项:</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /F [&quot;options&quot;] %variable <span class="keyword">IN</span> (file-<span class="built_in">set</span>) <span class="keyword">DO</span> command</span><br><span class="line"><span class="keyword">FOR</span> /F [&quot;options&quot;] %variable <span class="keyword">IN</span> (&quot;string&quot;) <span class="keyword">DO</span> command</span><br><span class="line"><span class="keyword">FOR</span> /F [&quot;options&quot;] %variable <span class="keyword">IN</span> (command) <span class="keyword">DO</span> command</span><br></pre></td></tr></table></figure><p>参数”options”为:</p><ol><li>eol&#x3D;c - 指一个行注释字符的结尾(就一个,如“;”)</li><li>skip&#x3D;n - 指在文件开始时忽略的行数。</li><li>delims&#x3D;xxx - 指分隔符集。这个替换了空格和跳格键的默认分隔符集。</li><li>tokens&#x3D;x,y,m-n - 指每行的哪一个符号被传递到每个迭代的 for 本身。这会导致额外变量名称的分配。</li><li>m-n格式为一个范围。通过 nth 符号指定 mth。</li></ol><p>如果符号字符串中的最后一个字符星号，那么额外的变量将在最后一个符号解析之后分配并接受行的保留文本。</p><p>usebackq - 指定新语法已在下类情况中使用:</p><p>在作为命令执行一个后引号的字符串并且一个单引号字符为文字字符串命令并允许在 filenameset中使用双引号扩起文件名称。</p><ol><li>显示当前目录下所有以bat或者txt为扩展名的文件名</li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="variable">%%c</span> <span class="keyword">in</span> (*.bat *.txt) <span class="keyword">do</span> (<span class="built_in">echo</span> <span class="variable">%%c</span>)</span><br></pre></td></tr></table></figure><p>a. 显示当前目录下所有包含有 e 或者 i 的目录名</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> /D <span class="variable">%%a</span> <span class="keyword">in</span> (*e* *i*) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%a</span></span><br></pre></td></tr></table></figure><p>b. 显示 E盘test目录 下所有以bat或者txt为扩展名的文件名。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> /R E:\test <span class="variable">%%b</span> <span class="keyword">in</span> (*.txt *.bat) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%b</span></span><br><span class="line"><span class="keyword">for</span> /r <span class="variable">%%c</span> <span class="keyword">in</span> (*) <span class="keyword">do</span> (<span class="built_in">echo</span> <span class="variable">%%c</span>) :: 遍历当前目录下所有文件</span><br></pre></td></tr></table></figure><p>c. 如下命令行将产生序列 1 2 3 4 5</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> /L <span class="variable">%%c</span> <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">1</span>,<span class="number">5</span>) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%c</span></span><br></pre></td></tr></table></figure><p>d. 以下两句，显示当前的年月日和时间</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">For</span> /f &quot;tokens=<span class="number">1</span>-<span class="number">3</span> delims=-/. &quot; <span class="variable">%%j</span> <span class="keyword">In</span> (&#x27;<span class="built_in">Date</span> /T&#x27;) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%j</span>年<span class="variable">%%k</span>月<span class="variable">%%l</span>日</span><br><span class="line"></span><br><span class="line"><span class="keyword">For</span> /f &quot;tokens=<span class="number">1</span>,<span class="number">2</span> delims=: &quot; <span class="variable">%%j</span> <span class="keyword">In</span> (&#x27;<span class="built_in">TIME</span> /T&#x27;) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%j</span>时<span class="variable">%%k</span>分</span><br></pre></td></tr></table></figure><p>e. 把记事本中的内容每一行前面去掉8个字符</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setlocal</span> enabledelayedexpansion</span><br><span class="line"><span class="keyword">for</span> /f <span class="variable">%%i</span> <span class="keyword">in</span> (zhidian.txt) <span class="keyword">do</span> (</span><br><span class="line"><span class="built_in">set</span> atmp=<span class="variable">%%i</span></span><br><span class="line"><span class="built_in">set</span> atmp=<span class="variable">!atmp:~8!</span></span><br><span class="line"><span class="keyword">if</span> &#123;<span class="variable">!atmp!</span>&#125;==&#123;&#125; ( <span class="built_in">echo</span>.) <span class="keyword">else</span> <span class="built_in">echo</span> <span class="variable">!atmp!</span></span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 读取记事本里的内容(使用 delims 是为了把一行显示全,否则会以空格为分隔符)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> /f &quot;delims=&quot; <span class="variable">%%a</span> <span class="keyword">in</span> (zhidian.txt) <span class="keyword">do</span> <span class="built_in">echo</span>.<span class="variable">%%a</span></span><br></pre></td></tr></table></figure><h2 id="continue-和-break"><a href="#continue-和-break" class="headerlink" title="continue 和 break"></a>continue 和 break</h2><p>利用 goto 实现程序中常用的 continue 和 break 命令, 其实非常简单</p><ol><li><code>continue</code> 在 for 循环的最后一行写上一个标签，跳转到这位置即可</li><li><code>break</code> 在 for 循环的外面的下一句写上一个标签，跳转到这位置即可</li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> /F [&quot;options&quot;] %variable <span class="keyword">IN</span> (command) <span class="keyword">DO</span> (</span><br><span class="line">... <span class="keyword">do</span> command ...</span><br><span class="line"><span class="keyword">if</span> ... <span class="keyword">goto</span> continue</span><br><span class="line"><span class="keyword">if</span> ... <span class="keyword">goto</span> <span class="built_in">break</span></span><br><span class="line">... <span class="keyword">do</span> command ...</span><br><span class="line">:continue</span><br><span class="line">)</span><br><span class="line">:<span class="built_in">break</span></span><br></pre></td></tr></table></figure><h1 id="其它命令"><a href="#其它命令" class="headerlink" title="其它命令"></a>其它命令</h1><h2 id="ping-命令"><a href="#ping-命令" class="headerlink" title="ping 命令"></a>ping 命令</h2><p>测试网络联接状况以及信息包发送和接收状况。但是不能够测试端口。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ping</span> IP地址或主机名 [-t] [-a] [-n count] [-l size]</span><br></pre></td></tr></table></figure><p>参数含义：</p><ul><li>-t 不停地向目标主机发送数据；</li><li>-a 以IP地址格式来显示目标主机的网络地址；</li><li>-n count 指定要Ping多少次，具体次数由count来指定；</li><li>-l size 指定发送到目标主机的数据包的大小。</li></ul><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">REM 不停的测试192.168.0.1，按ctrl+c停止</span></span><br><span class="line"><span class="built_in">ping</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.<span class="number">1</span> -t ()</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM ping一下所有的局域网电脑</span></span><br><span class="line"><span class="keyword">for</span> /L <span class="variable">%%a</span> <span class="keyword">in</span> (<span class="number">0</span>,<span class="number">1</span>,<span class="number">255</span>) <span class="keyword">do</span> <span class="built_in">ping</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.<span class="variable">%%a</span> -n <span class="number">1</span> &gt;&gt; tmp.txt</span><br></pre></td></tr></table></figure><h2 id="telnet-命令"><a href="#telnet-命令" class="headerlink" title="telnet 命令"></a>telnet 命令</h2><p>测试端口使用 telnet IP地址或主机名 端口，使用tcp协议的</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet <span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.<span class="number">1</span> <span class="number">80</span> (测试<span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.<span class="number">1</span>的<span class="number">80</span>端口)</span><br></pre></td></tr></table></figure><h2 id="color-命令"><a href="#color-命令" class="headerlink" title="color 命令"></a>color 命令</h2><p>设置背景及字体颜色 </p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">color</span> bf</span><br></pre></td></tr></table></figure><p>b 是指定背景色的十六进制数字； f 指定前景颜色(即字体颜色)。</p><p>颜色值: 0:黑色 1:蓝色 2:绿色 3:湖蓝 4:红色 5:紫色 6:** 7:白色</p><p>8:灰色 9:淡蓝 A:淡绿 B:浅绿 C:淡红 D:淡紫 E:淡黄 F:亮白</p><p>如果没有给定任何参数，该命令会将颜色还原到 CMD.EXE 启动时的颜色。</p><p>如果两参数一样，视为无效输入。只有一个参数时，设置字体。</p><h2 id="random-命令"><a href="#random-命令" class="headerlink" title="random 命令"></a>random 命令</h2><p>产生随机数(正整数0~)</p><h2 id="exit-命令"><a href="#exit-命令" class="headerlink" title="exit 命令"></a>exit 命令</h2><p>结束程序。即时是被调用的程序，结束后也不会返回原程序</p><h2 id="shutdown命令"><a href="#shutdown命令" class="headerlink" title="shutdown命令"></a>shutdown命令</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">REM关机</span></span><br><span class="line">shutdown -s </span><br></pre></td></tr></table></figure><h1 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h1><h2 id="分割字符串，以查看时间为例"><a href="#分割字符串，以查看时间为例" class="headerlink" title="分割字符串，以查看时间为例"></a>分割字符串，以查看时间为例</h2><p>%源字符串:~起始值,截取长度% (起始值从0开始；截取长度是可选的，如果省略逗号和截取长度，将会从起始值截取到结尾；</p><p>截取长度如果是负数，表示截取到倒数第几个。)</p><ol><li><code>%time%</code> 显示如：”11:04:23.03” (完整的时间”hh:mm:ss.tt”)</li><li><code>%time:~0,5%</code> 显示”hh:mm”(即”11:04”)，其中0表示从右向左移位操作的个数，5表示从左向右移位操作的个数</li><li><code>%time:~0,8%</code> 显示标准时间格式”hh:mm:ss”(即”11:04:23”，前8个字符串)</li><li><code>%time:~3,-3%</code> 显示”mm:ss”(即从第4个开始,截去最后3个的字符串)</li><li><code>%time:~3%</code> 显示”04:23.03”(即去掉前4个字符串)</li><li><code>%time:~-3%</code> 显示”.tt”(即最后3个字符串)</li></ol><p>上面的字串分割格式，也可以用于其它地方，如目录路径：”%cd:~0,10%”</p><h2 id="替换字符串"><a href="#替换字符串" class="headerlink" title="替换字符串"></a>替换字符串</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> a=&quot;abcd1234&quot;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%a%</span> 显示：&quot;abcd1234&quot;</span><br><span class="line"><span class="built_in">set</span> a=<span class="variable">%a:1=kk%</span> 替换“<span class="number">1</span>”为“kk”</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%a%</span> 显示：&quot;abcdkk234&quot;</span><br></pre></td></tr></table></figure><h2 id="字符串合并"><a href="#字符串合并" class="headerlink" title="字符串合并"></a>字符串合并</h2><p>由于没有直接的字符串合并函数，只能用笨方法了。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> str1=<span class="variable">%str1%</span><span class="variable">%str2%</span> (合并 str1 和 str2)</span><br></pre></td></tr></table></figure><h2 id="计算字符串长度"><a href="#计算字符串长度" class="headerlink" title="计算字符串长度"></a>计算字符串长度</h2><p>没有现成的函数。如下程序利用 goto形成循环，不断将字符串截短1，并记录截短的次数，到字符串变成空时的次数即长度。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> testStr=This is a test string</span><br><span class="line"><span class="comment">REM 将 testStr 复制到str，str 是个临时字符串</span></span><br><span class="line"><span class="built_in">set</span> str=<span class="variable">%testStr%</span></span><br><span class="line"><span class="comment">REM 标签，用于goto跳转</span></span><br><span class="line">:next1</span><br><span class="line"><span class="comment">REM 判断str是不是空，如果不是则执行下边的语句</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> &quot;<span class="variable">%str%</span>&quot;==&quot;&quot; (</span><br><span class="line"><span class="comment">REM 算术运算，使num的值自增1，相当于num++或者++num语句</span></span><br><span class="line"><span class="built_in">set</span> /a num+=<span class="number">1</span></span><br><span class="line"><span class="comment">REM 截取字符串，每次截短1</span></span><br><span class="line"><span class="built_in">set</span> &quot;str=<span class="variable">%str:~1%</span>&quot;</span><br><span class="line"><span class="comment">REM 跳转到next1标签: 这里利用goto和标签，构成循环结构</span></span><br><span class="line"><span class="keyword">goto</span> next1</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 当以上循环结构执行完毕时，会执行下边的语句</span></span><br><span class="line"><span class="built_in">echo</span> testStr=<span class="variable">%testStr%</span></span><br><span class="line"><span class="built_in">echo</span> testStr的长度为：<span class="variable">%num%</span></span><br></pre></td></tr></table></figure><h2 id="截取字符串时，需要传递参数"><a href="#截取字符串时，需要传递参数" class="headerlink" title="截取字符串时，需要传递参数"></a>截取字符串时，需要传递参数</h2><p>直接 echo %args:~%num%,-5% 没办法想要的字符串，需要如下两步</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setlocal</span> enabledelayedexpansion</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">!args:~%num%,-5!</span></span><br></pre></td></tr></table></figure><h1 id="注册表操作"><a href="#注册表操作" class="headerlink" title="注册表操作"></a>注册表操作</h1><h2 id="备份注册表"><a href="#备份注册表" class="headerlink" title="备份注册表"></a>备份注册表</h2><ul><li>将[HKEY_LOCAL_MACHINE … Run]的内容，备份到“c:\windows\1.reg”</li></ul><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg export HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run c:\windows\<span class="number">1</span>.reg</span><br><span class="line">reg export HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run c:\windows\<span class="number">2</span>.reg</span><br></pre></td></tr></table></figure><h2 id="修改-添加注册表内容"><a href="#修改-添加注册表内容" class="headerlink" title="修改&#x2F;添加注册表内容"></a>修改&#x2F;添加注册表内容</h2><ul><li>一般的添加或修改</li></ul><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKCU\Environment&quot; /v Java_Home /t reg_sz /d &quot;D:\Java\jdk1.<span class="number">6</span>.<span class="number">0</span>_07&quot; /f</span><br></pre></td></tr></table></figure><p>上句解析：“HKCU”是“HKEY_CURRENT_USER”的缩写，不用缩写用全称也可以；</p><p>添加名称为“Java_Home”的变量；类型为“reg_sz”，另一种常见类型是“reg_dword”；值为 D:\Java\jdk1.6.0_07；</p><h2 id="使用变量"><a href="#使用变量" class="headerlink" title="使用变量"></a>使用变量</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> SoftWareHome=HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java</span><br><span class="line">reg add &quot;<span class="variable">%SoftWareHome%</span>Web <span class="built_in">Start</span>\<span class="number">1</span>.<span class="number">6</span>.<span class="number">0</span>_07&quot; /v Home /t reg_sz /d &quot;<span class="variable">%cd%</span>\jre1.<span class="number">6</span>.<span class="number">0</span>_07\bin&quot; /f</span><br></pre></td></tr></table></figure><h2 id="注册表的名称有空格，或者数据用特殊符号时"><a href="#注册表的名称有空格，或者数据用特殊符号时" class="headerlink" title="注册表的名称有空格，或者数据用特殊符号时"></a>注册表的名称有空格，或者数据用特殊符号时</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;<span class="variable">%SoftWareHome2%</span>\HelpCommands&quot; /v &quot;<span class="number">01</span>:Online Documentation&quot; /t reg_sz /d &quot;\&quot;<span class="variable">%cd%</span>\Documentation\Index.htm\&quot;&quot; /f</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 传入值为(值用双引号括起来的)：&quot;D:\ProgramFiles\1.work_soft\Sybase\PowerDesigner_12\Documentation\Index.htm&quot;</span></span><br><span class="line">reg add &quot;<span class="variable">%SoftWareHome2%</span>\Paths&quot; /v ReportTemplates /t reg_sz /d &quot;<span class="variable">%cd%</span>\Resource Files\Report Templates\\&quot; /f</span><br><span class="line"></span><br><span class="line">传入值为(“\”结尾的)： E:\Holemar\<span class="number">1</span>.notes\<span class="number">90</span>. Windows\Resource Files\Report Templates\</span><br></pre></td></tr></table></figure><h2 id="增加空的内容"><a href="#增加空的内容" class="headerlink" title="增加空的内容"></a>增加空的内容</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Shared Tools\MSConfig\startupreg\IMJPMIG8.<span class="number">1</span>&quot;</span><br></pre></td></tr></table></figure><h2 id="添加或修改默认值"><a href="#添加或修改默认值" class="headerlink" title="添加或修改默认值"></a>添加或修改默认值</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;<span class="variable">%vpath%</span>InstallPath&quot; /ve /t reg_sz /d &quot;<span class="variable">%cd%</span>&quot; /f</span><br></pre></td></tr></table></figure><p>这里用“&#x2F;ve”来代替一般修改时的“&#x2F;v 变量名”,即可修改默认值了</p><h2 id="删除注册表的内容"><a href="#删除注册表的内容" class="headerlink" title="删除注册表的内容"></a>删除注册表的内容</h2><p>双引号里面的是注册表的目录，下面两句将删除这目录下的所有信息</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg delete &quot;HKEY_CURRENT_USER\Software\RealVNC&quot; /f</span><br><span class="line">reg delete &quot;HKEY_LOCAL_MACHINE\SOFTWARE\RealVNC&quot; /f</span><br></pre></td></tr></table></figure><p>双引号里面的是注册表的目录，下面一句将删除这目录下指定的某个信息</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg delete &quot;HKEY_LOCAL_MACHINE\Software\RealVNC&quot; /v VNC_Server /f</span><br></pre></td></tr></table></figure><h2 id="注册表的常用位置"><a href="#注册表的常用位置" class="headerlink" title="注册表的常用位置"></a>注册表的常用位置</h2><p>系统启动项：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run]</span><br><span class="line">[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run]</span><br><span class="line"><span class="function">example: <span class="title">REG</span> <span class="title">ADD</span> <span class="title">HKEY_LOCAL_MACHINE</span>\<span class="title">Software</span>\<span class="title">Microsoft</span>\<span class="title">Windows</span>\<span class="title">CurrentVersion</span>\<span class="title">Run</span> /<span class="title">v</span> <span class="title">VNC_Server</span> /<span class="title">t</span> <span class="title">REG_SZ</span> /<span class="title">d</span> &quot;%<span class="title">cd</span>%\<span class="title">VNC_Server.bat</span>&quot; /<span class="title">f</span></span></span><br></pre></td></tr></table></figure><h2 id="系统环境变量："><a href="#系统环境变量：" class="headerlink" title="系统环境变量："></a>系统环境变量：</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Environment]</span><br></pre></td></tr></table></figure><h2 id="当前用户的环境变量："><a href="#当前用户的环境变量：" class="headerlink" title="当前用户的环境变量："></a>当前用户的环境变量：</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[HKEY_CURRENT_USER\Environment]</span><br></pre></td></tr></table></figure><h2 id="刷新注册表"><a href="#刷新注册表" class="headerlink" title="刷新注册表"></a>刷新注册表</h2><p>修改注册表之后，结束并重新加载explorer.exe进程，可刷新注册表，令其生效</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">taskkill</span> /f /im explorer.exe &gt;<span class="built_in">nul</span></span><br><span class="line"><span class="built_in">start</span> &quot;&quot; &quot;explorer.exe&quot;</span><br></pre></td></tr></table></figure><h1 id="系统服务"><a href="#系统服务" class="headerlink" title="系统服务"></a>系统服务</h1><h2 id="停止-启动"><a href="#停止-启动" class="headerlink" title="停止&#x2F;启动"></a>停止&#x2F;启动</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">REM 停止服务</span></span><br><span class="line"><span class="built_in">NET</span> STOP 服务名</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 启动服务</span></span><br><span class="line"><span class="built_in">NET</span> <span class="built_in">Start</span> 服务名</span><br></pre></td></tr></table></figure><h2 id="设置启动类型"><a href="#设置启动类型" class="headerlink" title="设置启动类型"></a>设置启动类型</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">REM 自动： </span></span><br><span class="line">SC CONFIG 服务名 <span class="built_in">START</span>= auto</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 手动： </span></span><br><span class="line">SC CONFIG 服务名 <span class="built_in">START</span>= demand</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 已禁用：</span></span><br><span class="line">SC CONFIG 服务名 <span class="built_in">START</span>= disabled</span><br></pre></td></tr></table></figure><p>附：“START&#x3D; ”等号后面必须要有一个空格。(start还有boot,system两个值)</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">REM 打印机加载项，设置成手动，默认自动</span></span><br><span class="line">SC CONFIG Spooler <span class="built_in">START</span>= demand</span><br></pre></td></tr></table></figure><h2 id="查看系统服务："><a href="#查看系统服务：" class="headerlink" title="查看系统服务："></a>查看系统服务：</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">start</span> <span class="variable">%SystemRoot%</span>\system32\services.msc /s</span><br></pre></td></tr></table></figure><h1 id="setlocal与变量延迟"><a href="#setlocal与变量延迟" class="headerlink" title="setlocal与变量延迟"></a>setlocal与变量延迟</h1><p>在没有开启变量延迟的情况下，某条命令行中的变量改变，必须到下一条命令才能体现。另外例如for命令等，其后用一对圆括号闭合的所有语句也当作一行。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> a=<span class="number">4</span></span><br><span class="line"><span class="built_in">set</span> a=<span class="number">5</span> &amp; <span class="built_in">echo</span> <span class="variable">%a%</span></span><br></pre></td></tr></table></figure><p>结果：4</p><p>也可以对这种机制加以利用，如下的变量交换</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> var1=abc</span><br><span class="line"><span class="built_in">set</span> var2=<span class="number">123</span></span><br><span class="line"><span class="built_in">echo</span> 交换前： var1=<span class="variable">%var1%</span> var2=<span class="variable">%var2%</span></span><br><span class="line"><span class="built_in">set</span> var1=<span class="variable">%var2%</span>&amp; <span class="built_in">set</span> var2=<span class="variable">%var1%</span></span><br><span class="line"><span class="built_in">echo</span> 交换后： var1=<span class="variable">%var1%</span> var2=<span class="variable">%var2%</span></span><br></pre></td></tr></table></figure><ul><li>启动批处理文件中环境变量的本地化。本地化将持续到出现匹配的 endlocal 命令或者到达批处理文件结尾为止。</li></ul><p>语法:</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setlocal</span> &#123;enableextension | disableextensions&#125; &#123;enabledelayedexpansion | disabledelayedexpansion&#125;</span><br></pre></td></tr></table></figure><ol><li><code>enableextension</code> 启用命令扩展，直到出现匹配的 endlocal 命令，无论 setlocal 命令之前的设置如何。</li><li><code>disableextensions</code> 禁用命令扩展，直到出现匹配的 endlocal 命令，无论 setlocal 命令之前的设置如何。</li><li><code>enabledelayedexpansion</code> 启用延迟的环境变量扩展，直到出现匹配的 endlocal 命令，无论 setlocal 命令之前的设置如何。</li><li><code>disabledelayedexpansion</code> 禁用延迟的环境变量扩展，直到出现匹配的 endlocal 命令，无论 setlocal 命令之前的设置如何。</li></ol><ul><li>为了能够感知环境变量的动态变化，批处理设计了变量延迟。简单来说，在读取了一条完整的语句之后，不立即对该行的变量赋值，而会在某个单条语句执行之前再进行赋值，也就是说“延迟”了对变量的赋值。</li></ul><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setlocal</span> enabledelayedexpansion</span><br><span class="line"><span class="built_in">set</span> a=<span class="number">4</span></span><br><span class="line"><span class="built_in">set</span> a=<span class="number">5</span> &amp; <span class="built_in">echo</span> <span class="variable">!a!</span></span><br></pre></td></tr></table></figure><p>结果： 5</p><p>变量延迟的启动语句是“setlocal enabledelayedexpansion”，并且变量要用一对叹号“!!”括起来</p><p>由于启动了变量延迟，所以批处理能够感知到动态变化，即不是先给该行变量赋值，而是在运行过程中给变量赋值，因此此时a的值就是5了</p><p>另外，启动变量延迟，“%”的变量还是不变</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setlocal</span> enabledelayedexpansion</span><br><span class="line"><span class="keyword">for</span> /l <span class="variable">%%i</span> <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">1</span>,<span class="number">5</span>) <span class="keyword">do</span> (</span><br><span class="line"><span class="built_in">set</span> a=<span class="variable">%%i</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">!a!</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>结果，打印从1到5；如果不变量延迟，一个变量也没有打印</p><h1 id="文件处理"><a href="#文件处理" class="headerlink" title="文件处理"></a>文件处理</h1><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><ul><li>删除一个文件或多个文件</li></ul><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">del</span> /s /q /f d:\test\a.bat</span><br></pre></td></tr></table></figure><p>将直接删除d:\test\a.bat，没有任务提示</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">del</span> temp\* /q /f /s</span><br></pre></td></tr></table></figure><p>将直接删除 本目录的 temp 目录的所有文件，没有任务提示<br>删除文件的时候可以使用“*”作通配符</p><ul><li>删除一个空目录</li></ul><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rd</span> /q /s d:\test\log</span><br></pre></td></tr></table></figure><p>将直接删除d:\test\log目录，如果log目录里面有文件将无法删除</p><ul><li>删除一个非空目录 (必须指定目录名称)</li></ul><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rmdir</span> /q /s d:\test\logs</span><br></pre></td></tr></table></figure><p>必须指定目录名称，不能使用通配符</p><ol><li><code>/S</code> 除目录本身外，还将删除指定目录下的所有子目录</li><li><code>/Q</code> 安静模式，带 &#x2F;S 删除目录树时不要求确认</li></ol><p>无论里面是否有文件或文件夹将全部直接删除</p><h2 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">MKDIR</span> [drive:]<span class="built_in">path</span></span><br><span class="line"><span class="built_in">MD</span> [drive:]<span class="built_in">path</span></span><br></pre></td></tr></table></figure><p>路径有空格时，可以用双引号括起来，也可以用 &nbsp; 替代</p><h1 id="实践部分"><a href="#实践部分" class="headerlink" title="实践部分"></a>实践部分</h1><ol><li><p>调用其他程序时，对文件的大小写不敏感，文件后缀也可忽略,如：<code>start LeapFTP.exe</code> 与 <code>start leapftp</code> 效果一样，都是运行“LeapFTP.exe”文件。每行的开头的字符串会自动查找程序来运行，还可用双引号引起来(文件名或目录名含空格时必须用),如：”D:\Program Files\Leap FTP.exe” “LeapFTP.exe” 可正常运行文件，start “” “LeapFTP.exe” 也可以正常运行文件(注意，第一个参数是窗口显示的标题)</p></li><li><p><code>copy C:\test\*.* D:\back</code> (复制C盘test文件夹的所有文件(不包括文件夹及子文件夹里的东西)到D盘的back文件夹)</p></li><li><p><code>dir c:\*.* &gt; a.txt</code> (将c盘文件列表写入 a.txt 中)</p></li><li><p><code>&gt;</code> 生成文件并写入内容(如果有这文件则覆盖)，<code> &gt;&gt;</code> 文件里追加内容</p></li><li><p><code>md d:\aa</code> (创建文件夹)</p></li><li><p>在命令末尾加上 <code>&gt;NUL 2&gt;NUL</code>，表示隐蔽返回信息。</p></li><li><p>等待用户输入：set &#x2F;p 变量名&#x3D;屏幕显示信息</p></li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> /p pass=请输入密码:</span><br></pre></td></tr></table></figure><ol start="9"><li>让用户按回车退出,小技巧(替代pause)，文件的最后一句：</li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> /p tmp=操作结束，请按回车键退出...</span><br></pre></td></tr></table></figure><ol start="10"><li><p>设置标题： <code>title JDK安装</code></p></li><li><p>设置屏幕显示颜色，如绿色: <code>color 0a</code></p></li><li><p>清屏： <code>cls</code></p></li><li><p>查看自己的IP</p></li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> /f &quot;tokens=<span class="number">15</span>&quot; <span class="variable">%%i</span> <span class="keyword">in</span> (&#x27;<span class="built_in">ipconfig</span> ^| <span class="built_in">find</span> /i &quot;ip address&quot;&#x27;) <span class="keyword">do</span> <span class="built_in">set</span> ip=<span class="variable">%%i</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%ip%</span> (这时的 <span class="variable">%ip%</span> 就是自己的IP地址)</span><br></pre></td></tr></table></figure><ol start="14"><li>修改文件的更新日期</li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">copy</span> 文件名+,,&gt;<span class="built_in">nul</span> (修改为当前时间，如果要修改为指定时间，先修改系统时间，再改回系统时间)</span><br></pre></td></tr></table></figure><ol start="15"><li>修改文件的后缀名</li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ren</span> C:\test\*.jpg *.JPG</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> /r <span class="variable">%%c</span> <span class="keyword">in</span> (*.jpg) <span class="keyword">do</span> (<span class="built_in">ren</span> <span class="variable">%%c</span> *.JPG) :: 修改当前目录下的所有文件的后缀名，包括子目录的</span><br></pre></td></tr></table></figure><ol start="16"><li>修改文件的文件名</li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rename</span> test.jpg test2.JPG</span><br><span class="line"><span class="built_in">rename</span> *.jpg *.<span class="number">888</span>.JPG</span><br></pre></td></tr></table></figure><ol start="17"><li>查看DNS、IP、Mac等</li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">REM Win08</span></span><br><span class="line">winipcfg</span><br><span class="line"></span><br><span class="line"><span class="built_in">Ipconfig</span> /all</span><br><span class="line"></span><br><span class="line">NSLOOKUP</span><br></pre></td></tr></table></figure><ol start="18"><li>查看IP上的共享资源，就可以</li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> view <span class="number">192</span>.<span class="number">168</span>.<span class="number">10</span>.<span class="number">8</span></span><br></pre></td></tr></table></figure><ol start="19"><li>共享</li></ol><p>A. 查看你机器的共享资源: </p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> share</span><br></pre></td></tr></table></figure><p>B. 手工删除共享</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> share 共享资源名称$ /d</span><br></pre></td></tr></table></figure><p>注意$后有空格。</p><p>C. 增加一个共享：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> share mymovie=e:\downloads\movie /users:<span class="number">3</span></span><br></pre></td></tr></table></figure><p>mymovie 共享成功。 同时限制链接用户数为3人。</p><ol start="20"><li>打开某网站</li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">start</span> iexplore.exe http://www.baidu.com</span><br></pre></td></tr></table></figure><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><ol><li>生成 reg 文件，运行它，再删除它</li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> &quot;更改windows安装文件的路径&quot;</span><br><span class="line"><span class="built_in">echo</span> Windows Registry Editor Version <span class="number">5</span>.<span class="number">00</span> &gt; c:\setupreg.reg</span><br><span class="line"><span class="built_in">echo</span> [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Setup] &gt;&gt; c:\setupreg.reg</span><br><span class="line"><span class="built_in">echo</span> &quot;ServicePackSourcePath&quot;=&quot;D:\\Win2003\\&quot; &gt;&gt; c:\setupreg.reg</span><br><span class="line"><span class="built_in">echo</span> &quot;SourcePath&quot;=&quot;D:\\Win2003\\&quot; &gt;&gt; c:\setupreg.reg</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 写入注册表</span></span><br><span class="line">regedit /S c:\setupreg.reg</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 删除注册表文件</span></span><br><span class="line"><span class="built_in">del</span> c:\setupreg.reg</span><br></pre></td></tr></table></figure><ol start="2"><li>调用了exe文件,结束后没有关闭，解决方法:用start命令运行文件，如</li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">start</span> LeapFTP.exe <span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.<span class="number">100</span></span><br></pre></td></tr></table></figure><ol start="3"><li>设置系统环境变量</li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">REM 有这个环境变量，则不需再设置，直接结束</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> &quot;<span class="variable">%JAVA_HOME%</span>&quot; == &quot;&quot; <span class="keyword">exit</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 设置环境变量的地址</span></span><br><span class="line"><span class="built_in">set</span> inputJavaHome=<span class="variable">%cd%</span>\jdk1.<span class="number">6</span>.<span class="number">0</span>_07</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 设置环境变量，也可以设置当前用户的变量</span></span><br><span class="line"><span class="built_in">set</span> EnvironmentHome=HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Environment</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 正在设置环境变量，请稍候......</span><br><span class="line">reg add &quot;<span class="variable">%EnvironmentHome%</span>&quot; /v JAVA_HOME /t reg_sz /d &quot;<span class="variable">%inputJavaHome%</span>&quot; /f</span><br><span class="line">reg add &quot;<span class="variable">%EnvironmentHome%</span>&quot; /v ClassPath /t reg_sz /d &quot;.;<span class="variable">%%J</span>AVA_HOME<span class="variable">%%\</span>lib&quot; /f</span><br><span class="line">reg add &quot;<span class="variable">%EnvironmentHome%</span>&quot; /v <span class="built_in">Path</span> /t reg_sz /d &quot;<span class="variable">%%J</span>AVA_HOME<span class="variable">%%\</span>bin;<span class="variable">%Path%</span>&quot; /f]</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 刷新，令环境变量生效</span></span><br><span class="line"><span class="built_in">taskkill</span> /f /im explorer.exe &gt;<span class="built_in">nul</span></span><br><span class="line"><span class="built_in">start</span> &quot;&quot; &quot;explorer.exe&quot;</span><br></pre></td></tr></table></figure><ol start="4"><li>隐藏某目录的所有文件及文件夹</li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /d 要隐藏的目录(如：D:)</span><br><span class="line"><span class="keyword">for</span> /f &quot;usebackq delims=&quot; <span class="variable">%%A</span> <span class="keyword">in</span> (`<span class="built_in">dir</span> /a /b`) <span class="keyword">do</span> (<span class="built_in">attrib</span> &quot;<span class="variable">%%A</span>&quot; -r +h -s)</span><br></pre></td></tr></table></figure><ol start="5"><li>在批处理中使用密码。密码为admin，输入正确，跳转到next1 ，若输入密码错误3次，则锁屏。</li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> num=<span class="number">0</span></span><br><span class="line">:<span class="number">11</span></span><br><span class="line"><span class="built_in">set</span> /p pass=请输入密码:</span><br><span class="line"><span class="keyword">if</span> &quot;<span class="variable">%pass%</span>&quot;==&quot;admin&quot; <span class="keyword">goto</span> next1</span><br><span class="line"><span class="built_in">set</span> /a num=<span class="variable">%num%</span> + <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%num%</span>==<span class="number">3</span> <span class="keyword">goto</span> no1</span><br><span class="line"><span class="keyword">goto</span> <span class="number">11</span></span><br><span class="line">:no1</span><br><span class="line"><span class="variable">%windir%</span>\system32\rundll32.exe user32.dll,LockWorkStation</span><br><span class="line"><span class="keyword">goto</span> <span class="number">11</span></span><br><span class="line">:next1</span><br><span class="line"><span class="built_in">echo</span> 密码正确，执行下面的程式</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><ol start="6"><li>清空回收站(未成功)</li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="built_in">del</span> /f /s /q c:\recycler\*.*</span><br><span class="line"><span class="built_in">del</span> /f /s /q <span class="variable">%systemdrive%</span>\recycled\*.*</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 新屏幕</span></span><br><span class="line"><span class="built_in">taskkill</span> /f /im explorer.exe &gt;<span class="built_in">nul</span></span><br><span class="line"><span class="built_in">start</span> &quot;&quot; &quot;explorer.exe&quot;</span><br></pre></td></tr></table></figure><ol start="7"><li>让系统断断续续地鸣叫</li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line">:begin</span><br><span class="line"><span class="comment">REM 发出鸣叫(“”实际就是ASCII码值为7的特殊字符（蜂鸣键beep）</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="comment">REM 让程序暂停一小阵子</span></span><br><span class="line"><span class="built_in">ping</span> -n <span class="number">1</span> -l <span class="number">1</span> <span class="number">127</span>.<span class="number">1</span>&gt;<span class="built_in">nul</span></span><br><span class="line"><span class="keyword">goto</span> :begin</span><br></pre></td></tr></table></figure><ol start="8"><li>将 FAT 卷转换成 NTFS</li></ol><p>利用“CONVERT.exe”进行,解析如下：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">CONVERT</span> volume /<span class="built_in">FS</span>:NTFS [/V] [/CvtArea:filename] [/NoSecurity] [/X]</span><br></pre></td></tr></table></figure><ul><li><code>volume</code> 指定驱动器号(后面跟一个冒号)、装载点或卷名</li><li><code>/FS:NTFS</code> 指定要被转换成 NTFS 的卷</li><li><code>/V</code> 指定 Convert 应该用详述模式运行</li><li><code>/CvtArea:filename </code>将根目录中的一个接续文件指定为NTFS 系统文件的占位符</li><li><code>/NoSecurity</code> 指定每个人都可以访问转换的文件和目录的安全设置</li><li><code>/X</code> 如果必要，先强行卸载卷。该卷的所有打开的句柄则无效</li></ul><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@ <span class="built_in">ECHO</span> OFF</span><br><span class="line">@ <span class="built_in">ECHO</span>.</span><br><span class="line">@ <span class="built_in">ECHO</span>. 说 明</span><br><span class="line">@ <span class="built_in">ECHO</span> --------------------------------------------------------------------------</span><br><span class="line">@ <span class="built_in">ECHO</span> NTFS是一种磁盘格式。该格式能存放大于<span class="number">4</span>G的单个文件(如高清电影文件)，并可对</span><br><span class="line">@ <span class="built_in">ECHO</span> 文件夹进行加密，但有个缺点是DOS下无法访问。建议D盘及其后的盘使用NTFS格式，</span><br><span class="line">@ <span class="built_in">ECHO</span> C盘如非必要可以不转换，FAT32与NTFS这两种格式的读写速度几乎是没有差别的。</span><br><span class="line">@ <span class="built_in">ECHO</span> --------------------------------------------------------------------------</span><br><span class="line">@ <span class="built_in">ECHO</span>.</span><br><span class="line"></span><br><span class="line"><span class="built_in">convert</span> c: /<span class="built_in">fs</span>:ntfs</span><br><span class="line"><span class="comment">REM D盘也转成 NTFS</span></span><br><span class="line"><span class="built_in">convert</span> d: /<span class="built_in">fs</span>:ntfs</span><br></pre></td></tr></table></figure><ol start="9"><li>获取我的文档</li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">SET</span> SF=&quot;HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders&quot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">FOR</span> /F &quot;tokens=<span class="number">2</span>,*&quot; <span class="variable">%%I</span> <span class="keyword">IN</span> (&#x27;REG QUERY <span class="variable">%SF%</span> /v Personal <span class="number">2</span>^&gt;<span class="built_in">NUL</span>^|<span class="built_in">FIND</span> /I &quot;Personal&quot;&#x27;) <span class="keyword">DO</span> <span class="built_in">SET</span> &quot;myDoc=<span class="variable">%%~</span>J&quot;</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 复制文件到我的文档</span></span><br><span class="line"><span class="built_in">XCOPY</span> /D /E /R /Y /C &quot;<span class="variable">%cd%</span>\test.txt&quot; &quot;<span class="variable">%myDoc%</span>\test\&quot;</span><br></pre></td></tr></table></figure><p>10 获取当前目录路径</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ./</span><br><span class="line"><span class="built_in">set</span> CURR_PATH=<span class="variable">%cd%</span></span><br></pre></td></tr></table></figure><ol start="11"><li>IF-ERRORLEVEL</li></ol><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">ECHO</span> OFF</span><br><span class="line"><span class="built_in">XCOPY</span> C:\AUTOEXEC.BAT D:<span class="keyword">IF</span> <span class="keyword">ERRORLEVEL</span> <span class="number">1</span> <span class="built_in">ECHO</span> 文件拷贝失败</span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">ERRORLEVEL</span> <span class="number">0</span> <span class="built_in">ECHO</span> 成功拷贝文件</span><br></pre></td></tr></table></figure><p>如果文件拷贝成功，屏幕就会显示“成功拷贝文件”，否则就会显示“文件拷贝失败”。</p><p><code>IF ERRORLEVEL</code> 是用来测试它的上一个DOS命令的返回值的，注意只是上一个命令的返回值，而且返回值必须依照从大到小次序顺序判断。因此下面的批处理文件是错误的：</p><hr><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off //不显示shell的命令。</span><br><span class="line"><span class="built_in">Setlocal</span> //环境改变只适用于这个文件。</span><br><span class="line"><span class="variable">%OS%</span> //为当前的操作系统。</span><br><span class="line"><span class="comment">Rem //注释一行文本。</span></span><br><span class="line"><span class="keyword">Goto</span> 标签 //改变执行顺序，去标签位置.</span><br><span class="line">：标签 //定义一个标签。</span><br><span class="line"><span class="built_in">Set</span> 变量名=值 //定义变量</span><br><span class="line"><span class="keyword">Not</span> //取反</span><br><span class="line">Netstat –na //显示当前被点用的端口.</span><br><span class="line">%<span class="number">0</span> %<span class="number">1</span> %<span class="number">2</span> //用于表示批处理文件的参数<span class="number">0</span>为命令,共<span class="number">1</span>-<span class="number">9</span>个参数。</span><br><span class="line"><span class="built_in">Shift</span> //用于向前一个参数，原<span class="number">1</span>变<span class="number">0</span>，原<span class="number">2</span>变<span class="number">1</span>.每调用一次<span class="built_in">shift</span>向前一移动一位。</span><br><span class="line"><span class="keyword">Call</span> //调用其他批处理文件或命令。</span><br><span class="line"><span class="built_in">Start</span> 命令 参数 //指示出在另一个窗口中开始运行命令。</span><br></pre></td></tr></table></figure><hr><ul><li>自动设置Java环境变量</li></ul><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">EXIST</span> %<span class="number">1</span>\bin\java.exe (</span><br><span class="line"><span class="comment">rem 如输入正确的 Java2SDK 安装目录，开始设置环境变量</span></span><br><span class="line">@setx JAVA_HOME %<span class="number">1</span></span><br><span class="line">@setx <span class="built_in">path</span> <span class="variable">%path%</span>;<span class="variable">%JAVA_HOME%</span>\bin</span><br><span class="line">@setx classpath <span class="variable">%classpath%</span>;.</span><br><span class="line">@setx classpath <span class="variable">%classpath%</span>;<span class="variable">%JAVA_HOME%</span>\lib\tools.jar</span><br><span class="line">@setx classpath <span class="variable">%classpath%</span>;<span class="variable">%JAVA_HOME%</span>\lib\dt.jar</span><br><span class="line">@setx classpath <span class="variable">%classpath%</span>;<span class="variable">%JAVA_HOME%</span>\jre\lib\rt.jar</span><br><span class="line">@<span class="built_in">echo</span> on</span><br><span class="line">@<span class="built_in">echo</span> Java <span class="number">2</span> SDK 环境参数设置完毕，正常退出。</span><br><span class="line">) <span class="keyword">ELSE</span> (</span><br><span class="line"><span class="keyword">IF</span> &quot;%<span class="number">1</span>&quot;==&quot;&quot; (</span><br><span class="line"><span class="comment">rem 如没有提供安装目录，提示之后退出</span></span><br><span class="line">@<span class="built_in">echo</span> on</span><br><span class="line">@<span class="built_in">echo</span> 没有提供 Java2SDK 的安装目录,不做任何设置，现在退出环境变量设置。</span><br><span class="line">) <span class="keyword">ELSE</span> (</span><br><span class="line"><span class="comment">rem 如果提供非空的安装目录但没有bin\java.exe，则指定的目录为错误的目录</span></span><br><span class="line">@<span class="built_in">echo</span> on</span><br><span class="line">@<span class="built_in">echo</span> 非法的 Java2SDK 的安装目录,不做任何设置，现在退出环境变量设置。</span><br><span class="line">)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><hr><p>本文部分内容转载自：<a href="http://m18333611647.blog.163.com/blog/static/225533041201422111365439/">http://m18333611647.blog.163.com/blog/static/225533041201422111365439/</a></p>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Batch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何高效寻找开源项目</title>
      <link href="/posts/OpenSourceSearch.html"/>
      <url>/posts/OpenSourceSearch.html</url>
      
        <content type="html"><![CDATA[<p>Github 中高效寻找搜索开源项目</p><h1 id="in-name"><a href="#in-name" class="headerlink" title="in:name"></a>in:name</h1><p>搜索时使用 <code>in:name</code> 可以搜索名字包含的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">in:name vue</span><br></pre></td></tr></table></figure><h2 id="搜索过滤"><a href="#搜索过滤" class="headerlink" title="搜索过滤"></a>搜索过滤</h2><ul><li>Stars 数</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#匹配start书大于1000</span></span><br><span class="line"><span class="keyword">in</span>:name vue stasr&gt;1000</span><br></pre></td></tr></table></figure><span id="more"></span><ul><li>Forks 数</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#匹配Forkt书大于1000</span></span><br><span class="line"><span class="keyword">in</span>:name vue forks&gt;1000</span><br></pre></td></tr></table></figure><h2 id="条件并行使用"><a href="#条件并行使用" class="headerlink" title="条件并行使用"></a>条件并行使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#匹配Forkt书大于1000</span></span><br><span class="line"><span class="keyword">in</span>:name vue stars&gt;1000 forks&gt;1000</span><br></pre></td></tr></table></figure><h1 id="in-description"><a href="#in-description" class="headerlink" title="in:description"></a>in:description</h1><p>在描述中搜索</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">in:description 前端</span><br></pre></td></tr></table></figure><h2 id="language"><a href="#language" class="headerlink" title="language"></a>language</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">in</span>:description 前端 language:vue</span><br></pre></td></tr></table></figure><h2 id="pushed"><a href="#pushed" class="headerlink" title="pushed"></a>pushed</h2><p>更新时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">in</span>:description 前端 language:vue pushed &gt;2019-10-01</span><br></pre></td></tr></table></figure><h2 id="条件并行使用-1"><a href="#条件并行使用-1" class="headerlink" title="条件并行使用"></a>条件并行使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">in</span>:description 爬虫  language:python star&gt;1000  pushed &gt;2019-10-01</span><br></pre></td></tr></table></figure><h1 id="in-readme"><a href="#in-readme" class="headerlink" title="in:readme"></a>in:readme</h1><p>在 READMME 中搜索</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">in</span>:readme security stars&gt;1000</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CMD</title>
      <link href="/posts/CMD.html"/>
      <url>/posts/CMD.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>CMD 基础,转载自:<a href="https://www.cnblogs.com/kekec/p/3662125.html">可可西</a></p></blockquote><h1 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h1><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 中断命令</span><br><span class="line">Crtl + z  </span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="文件-目录"><a href="#文件-目录" class="headerlink" title="文件&#x2F;目录"></a>文件&#x2F;目录</h1><h2 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h2><table><thead><tr><th align="left">命令</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">cd</td><td align="left">显示当前目录</td></tr><tr><td align="left">cd ..</td><td align="left">上一级目录</td></tr><tr><td align="left">cd &#x2F;d d:</td><td align="left">进入上次D盘所在的目录</td></tr><tr><td align="left">cd &#x2F;d d:\</td><td align="left">进入d盘根目录</td></tr><tr><td align="left">cd d:</td><td align="left">显示上次d盘所在的目录</td></tr><tr><td align="left">cd &#x2F;d d:\data</td><td align="left">进入d:\data目录</td></tr></tbody></table><h2 id="md"><a href="#md" class="headerlink" title="md"></a>md</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># e盘新建file目录</span><br><span class="line"><span class="built_in">md</span> e:\file </span><br><span class="line"></span><br><span class="line"><span class="built_in">md</span> movie film</span><br><span class="line"><span class="built_in">md</span> d:\test\movie </span><br></pre></td></tr></table></figure><h2 id="pushd-popd"><a href="#pushd-popd" class="headerlink" title="pushd&#x2F;popd"></a>pushd&#x2F;popd</h2><p>使用栈来维护当前目录</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pushd</span> e:\file # 当前目录切换到e:\file</span><br><span class="line"><span class="built_in">popd</span> # 将刚才保存的e:\file弹栈，并设置为当前目录</span><br></pre></td></tr></table></figure><h2 id="dir"><a href="#dir" class="headerlink" title="dir"></a>dir</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"> # 显示当前目录中的子文件夹与文件</span><br><span class="line"> <span class="built_in">dir</span> </span><br><span class="line"></span><br><span class="line"># 只显示当前目录中的子文件夹与文件的文件名</span><br><span class="line"><span class="built_in">dir</span> /b </span><br><span class="line"></span><br><span class="line"># 分页显示当前目录中的子文件夹与文件</span><br><span class="line"><span class="built_in">dir</span> /p  </span><br><span class="line"></span><br><span class="line"># 显示当前目录中的子文件夹</span><br><span class="line"><span class="built_in">dir</span> /ad</span><br><span class="line"></span><br><span class="line"># 显示当前目录中的文件</span><br><span class="line"><span class="built_in">dir</span> /a-d </span><br><span class="line"></span><br><span class="line"> #/ 显示c:\test目录中的内容</span><br><span class="line"><span class="built_in">dir</span> c:\test </span><br><span class="line"></span><br><span class="line"> # 显示当前目录中keys.txt的信息</span><br><span class="line"><span class="built_in">dir</span> keys.txt</span><br><span class="line"></span><br><span class="line">#/ 递归显示当前目录中的内容</span><br><span class="line"><span class="built_in">dir</span> /S   </span><br><span class="line"></span><br><span class="line"># 显示当前目录下以key开头的文件和文件夹的信息</span><br><span class="line"><span class="built_in">dir</span> key*  </span><br><span class="line"></span><br><span class="line"># 只显示当前目录中隐藏的文件和目录，并按照文件大小从小到大排序</span><br><span class="line"><span class="built_in">dir</span> /AH /OS  </span><br></pre></td></tr></table></figure><h2 id="tree-显示目录结构"><a href="#tree-显示目录结构" class="headerlink" title="tree 显示目录结构"></a>tree 显示目录结构</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 显示目录结构</span><br><span class="line"><span class="built_in">tree</span> d:\file </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="ren-文件或目录重命名"><a href="#ren-文件或目录重命名" class="headerlink" title="ren 文件或目录重命名"></a>ren 文件或目录重命名</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ren</span> <span class="number">1</span>.txt <span class="number">1</span>.bat</span><br><span class="line"><span class="built_in">ren</span> c:\test test_01</span><br><span class="line"><span class="built_in">ren</span> Logs.txt Logs-<span class="variable">%date:~0,4%</span><span class="variable">%date:~5,2%</span><span class="variable">%date:~8,2%</span>_<span class="variable">%time:~0,2%</span><span class="variable">%time:~3,2%</span>.txt</span><br></pre></td></tr></table></figure><h2 id="rd-删除目录"><a href="#rd-删除目录" class="headerlink" title="rd 删除目录"></a>rd 删除目录</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rd</span> movie</span><br><span class="line"><span class="built_in">rd</span> /s /q d:\test  # 使用安静模式删除</span><br></pre></td></tr></table></figure><h2 id="move-移动"><a href="#move-移动" class="headerlink" title="move 移动"></a>move 移动</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">move</span> *.png png</span><br><span class="line"><span class="built_in">move</span> /Y *.png test</span><br><span class="line"><span class="built_in">move</span> <span class="number">1</span>.png d:\png\<span class="number">2</span>.png # 移动并重命名</span><br><span class="line"><span class="built_in">move</span> test d:\new # d:\new不存在则移动并重命名</span><br></pre></td></tr></table></figure><h2 id="del-删除"><a href="#del-删除" class="headerlink" title="del 删除"></a>del 删除</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">del</span> test</span><br><span class="line"><span class="built_in">del</span> /f test</span><br><span class="line"></span><br><span class="line"># 删除当前目录下的test文件夹中所有文件及d:\test2中所有doc文件（含只读文件；递归子目录下的文件；删除前不确认）</span><br><span class="line"><span class="built_in">del</span> /f /s /q test d:\test2\*.doc </span><br><span class="line"></span><br><span class="line"># 删除当前目录下所有只读文件</span><br><span class="line"><span class="built_in">del</span> /ar *.*</span><br><span class="line"></span><br><span class="line"># 删除当前目录下除系统文件以外的所有文件</span><br><span class="line"><span class="built_in">del</span> /a-s *.*  </span><br></pre></td></tr></table></figure><ul><li>&#x2F;ar、&#x2F;ah、&#x2F;as、&#x2F;aa 分别表示删除只读、隐藏、系统、存档文件</li><li>&#x2F;a-r、&#x2F;a-h、&#x2F;a-s、&#x2F;a-a 分别表示删除除只读、隐藏、系统、存档以外的文件</li></ul><h2 id="replace-替换"><a href="#replace-替换" class="headerlink" title="replace 替换"></a>replace 替换</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 替换为d:\png中的<span class="number">1</span>.png</span><br><span class="line"><span class="built_in">replace</span> d:\<span class="number">1</span>.png d:\png</span><br></pre></td></tr></table></figure><h2 id="attrib-查看或修改文件或目录的属性"><a href="#attrib-查看或修改文件或目录的属性" class="headerlink" title="attrib  查看或修改文件或目录的属性"></a>attrib  查看或修改文件或目录的属性</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> # 查看当前目录下<span class="number">1</span>.txt的属性</span><br><span class="line"><span class="built_in">attrib</span> <span class="number">1</span>.txt  </span><br><span class="line"></span><br><span class="line"># 去掉<span class="number">1</span>.txt的只读属性</span><br><span class="line"><span class="built_in">attrib</span> -R <span class="number">1</span>.txt </span><br><span class="line"></span><br><span class="line"># 隐藏movie文件夹</span><br><span class="line"><span class="built_in">attrib</span> +H movie  </span><br></pre></td></tr></table></figure><ul><li>A：存档  R：只读  S：系统  H：隐藏</li></ul><h2 id="assoc-设置’文件扩展名’关联到的’文件类型’"><a href="#assoc-设置’文件扩展名’关联到的’文件类型’" class="headerlink" title="assoc 设置’文件扩展名’关联到的’文件类型’"></a>assoc 设置’文件扩展名’关联到的’文件类型’</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 显示所有&#x27;文件扩展名&#x27;关联</span><br><span class="line"><span class="built_in">assoc</span></span><br><span class="line"></span><br><span class="line"># 显示.txt代表的&#x27;文件类型&#x27;，结果显示.txt=txtfile</span><br><span class="line"><span class="built_in">assoc</span> .txt </span><br><span class="line"></span><br><span class="line">#显示.doc代表的&#x27;文件类型&#x27;，结果显示.doc=Word.Document.<span class="number">8</span></span><br><span class="line"><span class="built_in">assoc</span> .doc </span><br><span class="line"></span><br><span class="line"># 显示.exe代表的&#x27;文件类型&#x27;，结果显示.exe=exefile</span><br><span class="line"><span class="built_in">assoc</span> .exe</span><br><span class="line"></span><br><span class="line"># 恢复.txt的正确关联</span><br><span class="line"><span class="built_in">assoc</span> .txt=txtfile  </span><br></pre></td></tr></table></figure><h2 id="forfiles-递归目录执行命令"><a href="#forfiles-递归目录执行命令" class="headerlink" title="forfiles 递归目录执行命令"></a>forfiles 递归目录执行命令</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#在当前目录下查找含有.svn的文件或目录（递归子目录），并对该目录执行指定版本号svn更新</span><br><span class="line">forfiles /p . /m .svn /s /c &quot;<span class="built_in">cmd</span> /c svn up -r12005&quot; </span><br><span class="line"></span><br><span class="line"># 在c:\myfiles目录下查找含有.svn的文件或目录（递归子目录），并对该目录执行指定版本号svn更新</span><br><span class="line">forfiles /p c:\myfiles /m .svn /s /c &quot;<span class="built_in">cmd</span> /c svn up -r12005&quot; </span><br></pre></td></tr></table></figure><h2 id="文件查看"><a href="#文件查看" class="headerlink" title="文件查看"></a>文件查看</h2><ul><li>type 显示文本文件内容</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#显示c盘中<span class="number">11</span>.txt的文本内容</span><br><span class="line"><span class="built_in">type</span> c:\<span class="number">11</span>.txt </span><br><span class="line"></span><br><span class="line"># 显示当前目录下conf.ini的文本内容</span><br><span class="line"><span class="built_in">type</span> conf.ini   </span><br><span class="line"></span><br><span class="line"># 分页显示c盘中<span class="number">11</span>.txt的文本内容</span><br><span class="line"><span class="built_in">type</span> c:\<span class="number">11</span>.txt | <span class="built_in">more</span>  </span><br></pre></td></tr></table></figure><ul><li>more 逐屏的显示文本文件内容</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">more</span> <span class="built_in">con</span>.txt</span><br><span class="line"># Space:下一屏 q:退出</span><br></pre></td></tr></table></figure><h1 id="拷贝"><a href="#拷贝" class="headerlink" title="拷贝"></a>拷贝</h1><h2 id="copy-拷贝文件"><a href="#copy-拷贝文件" class="headerlink" title="copy 拷贝文件"></a>copy 拷贝文件</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">copy</span> test.txt d:\txt</span><br><span class="line"><span class="built_in">copy</span> movie d:\</span><br><span class="line"><span class="built_in">copy</span> /Y test.txt d:\txt</span><br><span class="line"></span><br><span class="line"># 将当前目录下的art_2.<span class="number">7</span>z.开头的所有文件（按照名称升序排序）依次合并生成art_2.<span class="number">7</span>z</span><br><span class="line"><span class="built_in">copy</span> /B art_2.<span class="number">7</span>z.* art_2.<span class="number">7</span>z   </span><br><span class="line"></span><br><span class="line"># 将当前目录下的art_2.<span class="number">7</span>z.<span class="number">001</span>、art_2.<span class="number">7</span>z.<span class="number">002</span>文件合并生成art_2.<span class="number">7</span>z</span><br><span class="line"><span class="built_in">copy</span> /B art_2.<span class="number">7</span>z.<span class="number">001</span>+art_2.<span class="number">7</span>z.<span class="number">002</span> art_2.<span class="number">7</span>z</span><br></pre></td></tr></table></figure><h2 id="xcopy"><a href="#xcopy" class="headerlink" title="xcopy"></a>xcopy</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 将c:\bat\hai中的所有内容拷贝到d:\hello中  注意：需要在hello后加上\  表示hello为一个目录，否则<span class="built_in">xcopy</span>会询问hello是F，还是D</span><br><span class="line"><span class="built_in">xcopy</span> c:\bat\hai d:\hello\ /y /h /e /f /c </span><br><span class="line"></span><br><span class="line"># 将c:\bat\hai中的<span class="number">2019</span>年<span class="number">11</span>月<span class="number">3</span>日后更改的文件拷贝到d:\hello中</span><br><span class="line"><span class="built_in">xcopy</span> c:\bat\hai d:\hello\ /d:<span class="number">11</span>-<span class="number">03</span>-<span class="number">2019</span></span><br></pre></td></tr></table></figure><h2 id="robocopy"><a href="#robocopy" class="headerlink" title="robocopy"></a>robocopy</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 将当前目录下Plugins中所有内容（排除名为Intermediate和Binaries的文件夹）保留目录结构拷贝到当前目录下的PluginsDest中（PluginsDest不存在会自动创建）</span><br><span class="line">robocopy .\Plugins .\PluginsDest /MIR /xd Intermediate Binaries  </span><br><span class="line"></span><br><span class="line"># 将c:\test中所有内容（排除名为UE4Editor-SGame-Win64-DebugGame.dll和pdb后缀的文件）保留目录结构拷贝到d:\test2中（d:\test2不存在会自动创建）</span><br><span class="line">robocopy c:\test d:\test2 /MIR /xd Intermediate /xf UE4Editor-SGame-Win64-DebugGame.dll *.pdb</span><br></pre></td></tr></table></figure><h1 id="mklink-符号链接"><a href="#mklink-符号链接" class="headerlink" title="mklink 符号链接"></a>mklink 符号链接</h1><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#  创建D盘Users目录链接到C盘，并命名为Users</span><br><span class="line">mklink /j &quot;C:\Users&quot; &quot;D:\Users&quot;  </span><br></pre></td></tr></table></figure><ul><li>mklink [[&#x2F;d] | [&#x2F;h] | [&#x2F;j]] Link Target</li></ul><ol><li>&#x2F;d 创建目录符号链接。黙认为文件符号链接。</li><li>&#x2F;h　　 创建硬链接，而不是符号链接。</li><li>&#x2F;j　　　创建目录联接。</li><li>Link　　指定新的符号链接名称。</li><li>Target　指定新链接引用的路径(相对或绝对)。</li></ol><h1 id="注册表命令"><a href="#注册表命令" class="headerlink" title="注册表命令"></a>注册表命令</h1><table><thead><tr><th align="left">参数</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">KeyName [\Machine]FullKey</td><td align="left">Machine为远程机器的机器名 - 忽略默认到当前机器。远程机器上只有 HKLM 和 HKU。FullKey ROOTKEY+SubKey。ROOTKEY [ HKLM | HKCU| HKCR| HKU |  HKCC ]。SubKey 所选ROOTKEY下注册表项的完整名</td></tr><tr><td align="left">&#x2F;v</td><td align="left">所选项之下要添加的值名</td></tr><tr><td align="left">&#x2F;ve</td><td align="left">为注册表项添加空白值名&lt;无名称&gt;</td></tr><tr><td align="left">&#x2F;t</td><td align="left">RegKey 数据类型: [ REG_SZ | REG_MULTI_SZ | REG_DWORD_BIG_ENDIAN| REG_DWORD| REG_BINARY|  REG_DWORD_LITTLE_ENDIAN| REG_NONE | REG_EXPAND_SZ ]如果忽略，则采用 REG_SZ</td></tr><tr><td align="left">&#x2F;s</td><td align="left">指定一个在 REG_MULTI_SZ 数据字符串中, 用作分隔符的字符；如果忽略，则将””用作分隔符</td></tr><tr><td align="left">&#x2F;d</td><td align="left">要分配给添加的注册表ValueName的数据</td></tr><tr><td align="left">&#x2F;f</td><td align="left">不提示，强行改写现有注册表项</td></tr></tbody></table><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"># 强制添加一条开机启动c:\tools\myapp.exe程序的注册表项</span><br><span class="line">reg add &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run&quot; /v MyApp /t REG_SZ /d &quot;c:\tools\myapp.exe&quot; /f  </span><br><span class="line"></span><br><span class="line"># 解决<span class="number">32</span>位xp打开ioa后，弹出的框关不掉问题</span><br><span class="line">reg add &quot;HKLM\SOFTWARE\ScmClient&quot; /v AgreementConfirmed /t REG_SZ /d <span class="number">1</span> /f  </span><br><span class="line"></span><br><span class="line"># 强制添加一条加速关闭应用程序的注册表项</span><br><span class="line">reg add &quot;HKCU\ControlPanel\Desktop&quot; /v WaitToKIllAppTimeOut /t REG_SZ /d <span class="number">10000</span> /f </span><br><span class="line"></span><br><span class="line"> # 将JdkPath_h4127442381设置为空</span><br><span class="line">reg add &quot;hkcu\software\Unity Technologies\Unity Editor <span class="number">4</span>.x&quot; /v JdkPath_h4127442381 /t REG_SZ /f</span><br><span class="line"></span><br><span class="line"># 强制添加windbg打开dump文件到右键菜单的注册表项（不指明/v，键值将写入默认值名中）</span><br><span class="line">reg add &quot;HKCR\*\shell\WinDbg\command&quot; /t REG_SZ /d &quot;\&quot;D:\Program Files (x86)\windbg\windbg.exe\&quot; -z \&quot;%<span class="number">1</span>\&quot; &quot; /f    </span><br><span class="line"></span><br><span class="line"># 强制添加winhex到右键菜单的注册表项（不指明/v，键值将写入默认值名中）</span><br><span class="line">reg add &quot;HKCR\*\shell\WinHex\command&quot; /t REG_SZ /d &quot;\&quot;D:\software-setup\system\winhex\winhex.exe\&quot;  \&quot;%<span class="number">1</span>\&quot; &quot; /f </span><br><span class="line"></span><br><span class="line">#为IE设置代理：http://txp-<span class="number">01</span>.tencent.com/proxy.pac</span><br><span class="line">reg add &quot;hkcu\software\microsoft\windows\currentversion\internet settings&quot; /v AutoConfigURL /t REG_SZ /d &quot;http://txp-<span class="number">01</span>.tencent.com/proxy.pac&quot; /f  </span><br><span class="line"></span><br><span class="line"> # 关闭IE代理服务器选项</span><br><span class="line">reg add &quot;HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot; /v ProxyEnable /t REG_DWORD /d <span class="number">0</span> /f </span><br><span class="line"></span><br><span class="line"># 为Procmon.exe工具（Process Monitor为其属性面板上的描述名）添加License同意</span><br><span class="line">reg add &quot;hkcu\software\Sysinternals\Process Monitor&quot; /v EulaAccepted /t REG_DWORD /d <span class="number">1</span> /f  </span><br><span class="line"></span><br><span class="line">#强制删除值名的MyApp的注册表项</span><br><span class="line">reg delete &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run&quot; /v MyApp /f  </span><br><span class="line"></span><br><span class="line"># 强制删除让任务栏里的任务管理器为灰色的注册表项</span><br><span class="line">reg delete &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\taskmgr.exe&quot; /f  </span><br><span class="line"></span><br><span class="line"># 删除http代理</span><br><span class="line">reg delete HKEY_CURRENT_USER\Environment /v HTTP_proxy /f  </span><br><span class="line"></span><br><span class="line"> # 删除https代理</span><br><span class="line">reg delete HKEY_CURRENT_USER\Environment /v HTTPS_proxy /f </span><br><span class="line"></span><br><span class="line"> # 强制复制winmine下所有的子项与值到winminebk中</span><br><span class="line">reg <span class="built_in">copy</span> &quot;hkcu\software\microsoft\winmine&quot; &quot;hkcu\software\microsoft\winminebk&quot; /s /f </span><br><span class="line"></span><br><span class="line"> # 导出winmine下所有的子项与值到</span><br><span class="line">reg export &quot;hkcu\software\microsoft\winmine&quot; c:\regbak\winmine.reg c:\regbak\winmine.reg文件中</span><br><span class="line"></span><br><span class="line"># 导入c:\regbak\winmine.reg文件到注册表中</span><br><span class="line">reg import c:\regbak\winmine.reg  </span><br><span class="line"></span><br><span class="line">#查询ie的安装路径</span><br><span class="line">reg query &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\IEXPLORE.EXE&quot; /s   </span><br><span class="line"></span><br><span class="line"># 查询.dsw默认值</span><br><span class="line">reg query HKCR\.dsw /ve  </span><br><span class="line"></span><br><span class="line"># 查询QQGame安装路径</span><br><span class="line">reg query HKEY_CURRENT_USER\Software\Tencent\QQGame\SYS /v GameDirectory  </span><br></pre></td></tr></table></figure><ul><li>注册表中%1 %2 %3 %4的含义：–  %1表示文件列表，%2表示默认打印机，%3表示驱动器，%4表示端口</li></ul><h1 id="命令顺序"><a href="#命令顺序" class="headerlink" title="命令顺序"></a>命令顺序</h1><h2 id=""><a href="#" class="headerlink" title="@#@"></a>@#@</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /d d:\src&amp;work.exe /o c:\result.txt # 先将当前工作目录切换到d:\src下，然后执行work.exe /o c:\result.txt命令</span><br></pre></td></tr></table></figure><h2 id="-1"><a href="#-1" class="headerlink" title="&amp;&amp;"></a>&amp;&amp;</h2><p>&amp;&amp;  顺序执行多条命令，当碰到执行出错的命令后将不执行后面的命令</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 如果找到了&quot;ok&quot;字样，就显示&quot;成功&quot;，找不到就不显示</span><br><span class="line"><span class="built_in">find</span> &quot;ok&quot; c:\test.txt &amp;&amp; <span class="built_in">echo</span> 成功</span><br></pre></td></tr></table></figure><h2 id="-2"><a href="#-2" class="headerlink" title="||"></a>||</h2><p>||   顺序执行多条命令，当碰到执行正确的命令后将不执行后面的命令</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 如果找不到&quot;ok&quot;字样，就显示&quot;不成功&quot;，找到了就不显示</span><br><span class="line"><span class="built_in">find</span> &quot;ok&quot; c:\test.txt || <span class="built_in">echo</span> 不成功  </span><br></pre></td></tr></table></figure><h2 id="-3"><a href="#-3" class="headerlink" title="|"></a>|</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dir</span> *.* /s/a | <span class="built_in">find</span> /c &quot;.exe&quot;</span><br><span class="line"><span class="built_in">dir</span> *.* /s/a <span class="number">2</span>&gt;&amp;<span class="number">1</span> | <span class="built_in">find</span> /c &quot;.exe&quot; </span><br></pre></td></tr></table></figure><h1 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h1><h2 id="-4"><a href="#-4" class="headerlink" title="&gt;"></a>&gt;</h2><p>将当前命令输出以覆盖的方式重定向</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">tasklist &gt; p1.txt</span><br><span class="line">tasklist <span class="number">1</span>&gt; p1.txt  # 等同于：tasklist &gt; p1.txt</span><br><span class="line"></span><br><span class="line"> #输出结果（stdout）打印在屏幕上，错误信息（stderr）以覆盖的方式重定向到p1.txt中（注：bin目录不存在时，会输出错误信息）</span><br><span class="line"><span class="built_in">dir</span> bin <span class="number">2</span>&gt; p1.txt </span><br><span class="line"></span><br><span class="line"> # 将错误信息（stderr）重定向到输出结果（stdout），然后将输出结果（stdout）以覆盖的方式重定向到p1.txt中（注：bin目录不存在时，会输出错误信息）</span><br><span class="line"><span class="built_in">dir</span> bin &gt; p1.txt <span class="number">2</span>&gt;&amp;<span class="number">1</span> </span><br><span class="line"></span><br><span class="line"> # 将输出结果（stdout）重定向到错误信息（stderr），然后将错误信息（stderr）以覆盖的方式重定向到p1.txt中（注：bin目录不存在时，会输出错误信息） 注：与上条命令结果一致</span><br><span class="line"><span class="built_in">dir</span> bin <span class="number">2</span>&gt; p1.txt <span class="number">1</span>&gt;&amp;<span class="number">2</span> </span><br><span class="line"></span><br><span class="line"># 屏幕上不打印tasklist的输出结果（stdout），错误信息（stderr）仍会打印</span><br><span class="line">tasklist &gt;<span class="built_in">nul</span>   </span><br><span class="line"></span><br><span class="line"># 屏幕上不打印命令的错误信息（stderr），输出结果（stdout）仍会打印（注：bin目录不存在时，会输出错误信息）</span><br><span class="line"><span class="built_in">dir</span> bin <span class="number">2</span>&gt;<span class="built_in">nul</span>  </span><br><span class="line"></span><br><span class="line">#  将命令的错误信息（stderr）重定向到输出结果（stdout），然后不打印输出结果（stdout）【屏幕上错误信息（stderr）和输出结果（stdout）都不打印】（注：bin目录不存在时，会输出错误信息）</span><br><span class="line"><span class="built_in">dir</span> bin &gt;<span class="built_in">nul</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span>  </span><br><span class="line"></span><br><span class="line">  # 将命令的输出结果（stdout）重定向到错误信息（stderr），然后不打印错误信息（stderr）【屏幕上错误信息（stderr）和输出结果（stdout）都不打印】（注：bin目录不存在时，会输出错误信息）</span><br><span class="line"><span class="built_in">dir</span> bin <span class="number">2</span>&gt;<span class="built_in">nul</span> <span class="number">1</span>&gt;&amp;<span class="number">2</span> </span><br></pre></td></tr></table></figure><h2 id="-5"><a href="#-5" class="headerlink" title="&gt;&gt;"></a>&gt;&gt;</h2><p>将当前命令输出以追加的方式重定向</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 将tasklist的输出结果（stdout）以追加的方式重定向到p2.txt文件中（注：tasklist的输出结果就不会打印到屏幕上了）</span><br><span class="line">tasklist &gt;&gt; p2.txt</span><br><span class="line"> </span><br><span class="line">tasklist <span class="number">1</span>&gt;&gt; p2.txt  # 等同于：tasklist &gt;&gt; p2.txt</span><br><span class="line"></span><br><span class="line"># 输出结果（stdout）打印在屏幕上，错误信息（stderr）以追加的方式重定向到p2.txt中（注：bin目录不存在时，会输出错误信息）</span><br><span class="line"><span class="built_in">dir</span> bin <span class="number">2</span>&gt;&gt; p2.txt </span><br><span class="line"></span><br><span class="line"># 将错误信息（stderr）重定向到输出结果（stdout），然后将输出结果（stdout）以追加的方式重定向到p2.txt中（注：bin目录不存在时，会输出错误信息）</span><br><span class="line"><span class="built_in">dir</span> bin &gt;&gt; p2.txt <span class="number">2</span>&gt;&amp;<span class="number">1</span> </span><br><span class="line"></span><br><span class="line"># 将输出结果（stdout）重定向到错误信息（stderr），然后将错误信息（stderr）以追加的方式重定向到p2.txt中（注：bin目录不存在时，会输出错误信息） 注：与上条命令结果一致</span><br><span class="line"><span class="built_in">dir</span> bin <span class="number">2</span>&gt;&gt; p2.txt <span class="number">1</span>&gt;&amp;<span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="-6"><a href="#-6" class="headerlink" title="&lt;"></a>&lt;</h2><p> 从文件中获得输入信息，而不是从屏幕上，一般用于date time label等需要等待输入的命令<br> <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">date</span> &lt;temp.txt  // temp.txt中的内容为<span class="number">2005</span>-<span class="number">05</span>-<span class="number">01</span></span><br></pre></td></tr></table></figure></p><h2 id="-7"><a href="#-7" class="headerlink" title="@"></a>@</h2><p> @   命令修饰符  在执行命令前，不打印出该命令的内容</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">cd</span> /d d:\me   // 执行该命令时，不打印出命令的内容：<span class="built_in">cd</span> /d d:/me</span><br></pre></td></tr></table></figure><h2 id="-8"><a href="#-8" class="headerlink" title=","></a>,</h2><p>在某些特殊的情况下可以用来代替空格使用</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dir</span>,c:\   // 相当于：<span class="built_in">dir</span> c:\</span><br></pre></td></tr></table></figure><h2 id="-9"><a href="#-9" class="headerlink" title=";"></a>;</h2><p>当命令相同的时候,可以将不同的目标用;隔离开来但执行效果不变。如执行过程中发生错误则只返回错误报告但程序还是会继续执行</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dir</span> c:\;d:\;e:\   // 相当于顺序执行：<span class="built_in">dir</span> c:\    <span class="built_in">dir</span> d:\     <span class="built_in">dir</span> e:\</span><br></pre></td></tr></table></figure><h1 id="时间日期"><a href="#时间日期" class="headerlink" title="时间日期"></a>时间日期</h1><h2 id="time"><a href="#time" class="headerlink" title="time"></a>time</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">time</span>  # 显示或设置当前时间</span><br><span class="line"></span><br><span class="line"><span class="built_in">time</span> /t  # 显示当前时间</span><br><span class="line"></span><br><span class="line"><span class="built_in">time</span>   # 设置新的当前时间（格式：hh:mm:ss），直接回车则表示放弃设置</span><br></pre></td></tr></table></figure><h2 id="date"><a href="#date" class="headerlink" title="date"></a>date</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">date</span> /t  # 显示当前日期</span><br><span class="line"></span><br><span class="line"><span class="built_in">date</span>  # 设置新的当前日期（格式：YYYY/MM/DD），直接回车则表示放弃设置</span><br></pre></td></tr></table></figure><h1 id="BAT"><a href="#BAT" class="headerlink" title="BAT"></a>BAT</h1><h2 id="显示"><a href="#显示" class="headerlink" title="显示"></a>显示</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cls</span>  # 清除屏幕</span><br><span class="line"><span class="built_in">ver</span>  # 显示当前windows系统的版本号</span><br><span class="line">winver  # 弹框显示当前windows系统信息</span><br><span class="line">hostname  # 显示当前机器名</span><br><span class="line"><span class="built_in">vol</span>  # 显示当前分区的卷标</span><br><span class="line"><span class="built_in">label</span>  # 显示当前分区的卷标，同时提示输入新卷标</span><br><span class="line"><span class="built_in">label</span> c:system  # 设置c盘的卷标为system</span><br></pre></td></tr></table></figure><h2 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> # 输出一个&quot;回车换行&quot;，空白行</span><br><span class="line"><span class="built_in">echo</span>. </span><br><span class="line"></span><br><span class="line"># 后续所有命令在执行前，不打印出命令的内容</span><br><span class="line"><span class="built_in">echo</span> off </span><br><span class="line"></span><br><span class="line"># 后续所有命令在执行前，打印出命令的内容</span><br><span class="line"><span class="built_in">echo</span> on   </span><br><span class="line"></span><br><span class="line">#/ 输出<span class="number">123</span>到终端屏幕</span><br><span class="line"><span class="built_in">echo</span> <span class="number">123</span> </span><br><span class="line"></span><br><span class="line"># 输出Hello World<span class="variable">!!!</span>到终端屏幕</span><br><span class="line"><span class="built_in">echo</span> &quot;Hello World<span class="variable">!!!</span>&quot;   </span><br><span class="line"></span><br><span class="line">#每个命令运行结束，可以用这个命令行格式查看返回码；默认值为<span class="number">0</span>，一般命令执行出错会设<span class="keyword">errorlevel</span>为<span class="number">1</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%errorlevel%</span>   </span><br><span class="line"></span><br><span class="line"># 输出test的字符串到当前目录中的p1.txt文件中（以覆盖的方式）</span><br><span class="line"><span class="built_in">echo</span> test &gt; p1.txt </span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 显示变量p代表的字符串，即aa1bb1aa2bb2</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%p%</span></span><br><span class="line"></span><br><span class="line">#显示变量p中第<span class="number">6</span>个字符以后的所有字符，即aa2bb2</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%p:~6%</span> </span><br><span class="line"></span><br><span class="line"># 显示第<span class="number">6</span>个字符以后的<span class="number">3</span>个字符，即aa2</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%p:~6,3%</span> </span><br><span class="line"></span><br><span class="line"># 显示最后面的<span class="number">2</span>个字符，即b2</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%p:~-2%</span></span><br><span class="line"></span><br><span class="line"># 显示除了最后<span class="number">2</span>个字符以外的其它字符，即aa1bb1aa2b</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%p:~0,-2%</span></span><br><span class="line"></span><br><span class="line"># 用c替换变量p中所有的aa，即显示c1bb1c2bb2</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%p:aa=c%</span></span><br><span class="line"></span><br><span class="line"># 将变量p中的所有aa字符串置换为空，即显示<span class="number">1</span>bb12bb2</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%p:aa=%</span> </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%p:*bb=c%</span></span><br><span class="line"># 第一个bb及其之前的所有字符被替换为c，即显示c1aa2bb2</span><br></pre></td></tr></table></figure><h2 id="set"><a href="#set" class="headerlink" title="set"></a>set</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 显示当前用户所有的环境变量</span><br><span class="line"><span class="built_in">set</span>  </span><br><span class="line"></span><br><span class="line"># 查看<span class="built_in">path</span>的环境变量值（准确的说是查看以<span class="built_in">path</span>开头的环境变量）</span><br><span class="line"><span class="built_in">set</span> <span class="built_in">path</span> </span><br><span class="line"></span><br><span class="line">#清空<span class="built_in">path</span>变量</span><br><span class="line"><span class="built_in">set</span> <span class="built_in">path</span>=   </span><br><span class="line"></span><br><span class="line"># 将<span class="built_in">path</span>变量设置为d:\execute（注：修改的<span class="built_in">path</span>只会影响当前回话，也不会存储到系统配置中去；当前<span class="built_in">cmd</span>窗口关闭，新设置的<span class="built_in">path</span>也就不存在了</span><br><span class="line"><span class="built_in">set</span> <span class="built_in">path</span>=d:\execute ）</span><br><span class="line"></span><br><span class="line"># 在<span class="built_in">path</span>变量中添加d:\execute（注：修改的<span class="built_in">path</span>只会影响当前回话，也不会存储到系统配置中去；当前<span class="built_in">cmd</span>窗口关闭，新设置的<span class="built_in">path</span>也就不存在了）</span><br><span class="line"><span class="built_in">set</span> <span class="built_in">path</span>=<span class="variable">%path%</span>;d:\execute  </span><br><span class="line"></span><br><span class="line"># 设置变量p，并赋值为aa1bb1aa2bb2</span><br><span class="line"><span class="built_in">set</span> p=aa1bb1aa2bb2 </span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 设置变量p，赋值为 <span class="variable">%p:*bb=c%</span> ，即c1aa2bb2</span><br><span class="line"><span class="built_in">set</span> p=<span class="variable">%p:*bb=c%</span> </span><br><span class="line"></span><br><span class="line"># 设置p为数值型变量，值为<span class="number">39</span></span><br><span class="line"><span class="built_in">set</span> /a p=<span class="number">39</span> </span><br><span class="line"></span><br><span class="line"># 支持运算符，有小数时用去尾法，<span class="number">39</span>/<span class="number">10</span>=<span class="number">3</span>.<span class="number">9</span>，去尾得<span class="number">3</span>，p=<span class="number">3</span></span><br><span class="line"><span class="built_in">set</span> /a p=<span class="number">39</span>/<span class="number">10</span> </span><br><span class="line"></span><br><span class="line"> # 用 /a 参数时，在 = 后面的变量可以不加%直接引用</span><br><span class="line"><span class="built_in">set</span> /a p=p/<span class="number">10</span></span><br><span class="line"></span><br><span class="line"># &amp;运算要加引号。其它支持的运算符参见<span class="built_in">set</span>/?</span><br><span class="line"><span class="built_in">set</span> /a p=&quot;<span class="number">1</span>&amp;<span class="number">0</span>&quot;</span><br></pre></td></tr></table></figure><h2 id="path"><a href="#path" class="headerlink" title="path"></a>path</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 显示当前<span class="built_in">path</span>变量的值</span><br><span class="line"><span class="built_in">path</span> </span><br><span class="line"></span><br><span class="line"># 清除所有搜索路径设置并指示<span class="built_in">cmd</span>.exe只在当前目录中搜索</span><br><span class="line"><span class="built_in">path</span> ;</span><br><span class="line"></span><br><span class="line">#将d:\xxx路径添加到<span class="built_in">path</span>中</span><br><span class="line"><span class="built_in">path</span> d:\xxx;<span class="variable">%PATH%</span> </span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">title</span> 正在做命令行测试  # 修改当前<span class="built_in">cmd</span>窗口的标题栏文字为正在做命令行测试</span><br><span class="line"></span><br><span class="line">prompt orz:   # 将命令提示符修改为orz:</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="number">1</span>.txt  #使用设置好的打印机来打印<span class="number">1</span>.txt文本文件</span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> ff.bat   # 调用执行ff.bat脚本（ff.bat脚本执行完原脚本才会往下执行）</span><br><span class="line"></span><br><span class="line"><span class="keyword">exit</span> # 退出当前<span class="built_in">CMD</span>实例</span><br><span class="line"><span class="built_in">pause</span> # 暂停批处理程序，并显示出：请按任意键继续....</span><br></pre></td></tr></table></figure><h2 id="start"><a href="#start" class="headerlink" title="start"></a>start</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">start</span>  # 运行某程序或命令</span><br><span class="line"></span><br><span class="line"># 最大化的方式启动记事本</span><br><span class="line"><span class="built_in">start</span> /max notepad.exe</span><br><span class="line"></span><br><span class="line"> # 最小化的方式启动计算器</span><br><span class="line"><span class="built_in">start</span> /min calc.exe </span><br><span class="line"></span><br><span class="line"># 最小化的方式启动Proxifier代理工具</span><br><span class="line"><span class="built_in">start</span> /min &quot;&quot; d:\Proxifier.exe  </span><br><span class="line"></span><br><span class="line"># 启动一个<span class="built_in">cmd</span>实例窗口，并运行tasklist</span><br><span class="line"><span class="built_in">start</span>  tasklist </span><br><span class="line"></span><br><span class="line"># 调用资源管理器打开f盘</span><br><span class="line"><span class="built_in">start</span> explorer f:\  </span><br><span class="line"></span><br><span class="line"># 启动ie并打开www.qq.com网址</span><br><span class="line">strat iexplore &quot;www.qq.com&quot; </span><br><span class="line"></span><br><span class="line">#启动开始执行ff.bat（启动ff.bat脚本后，原脚本继续执行，不会等ff.bat脚本执行完）</span><br><span class="line"><span class="built_in">start</span> ff.bat  </span><br></pre></td></tr></table></figure><h2 id="color"><a href="#color" class="headerlink" title="color"></a>color</h2><p>设置当前cmd窗口背景色和前景色（前景色即为字体的颜色）</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">color</span> <span class="number">02</span> # 将背景色设为黑色，将字体设为绿色</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">代码</th><th align="left">颜色</th><th align="left">代码</th><th align="left">颜色</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">黑色</td><td align="left">8</td><td align="left">灰色</td></tr><tr><td align="left">1</td><td align="left">蓝色</td><td align="left">9</td><td align="left">淡蓝色</td></tr><tr><td align="left">2</td><td align="left">绿色</td><td align="left">A</td><td align="left">淡绿色</td></tr><tr><td align="left">3</td><td align="left">浅绿色</td><td align="left">B</td><td align="left">淡浅绿色</td></tr><tr><td align="left">4</td><td align="left">红色</td><td align="left">C</td><td align="left">淡红色</td></tr><tr><td align="left">5</td><td align="left">紫色</td><td align="left">D</td><td align="left">淡紫色</td></tr><tr><td align="left">6</td><td align="left">黄色</td><td align="left">E</td><td align="left">淡黄色</td></tr><tr><td align="left">7</td><td align="left">白色</td><td align="left">F</td><td align="left">亮白色</td></tr></tbody></table><ul><li>设置DOS窗口颜色为9f，大小：200行 60列（若屏幕缓冲区大小的宽度w&lt;200或高度h&lt;60,最终DOS的窗口就会为w行，h列）</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mode</span> <span class="built_in">con</span> cols=<span class="number">200</span> lines=<span class="number">60</span> &amp; <span class="built_in">color</span> <span class="number">9</span>f   </span><br></pre></td></tr></table></figure><h2 id="chcp-字符编码"><a href="#chcp-字符编码" class="headerlink" title="chcp  字符编码"></a>chcp  字符编码</h2><p>936 – GBK(一般情况下为默认编码)<br>437 – 美国英语<br>65001 – utf-8<br>1200 – utf-16<br>1201 – utf-16(Big-Endian)<br>12000 – utf-32<br>12001 – utf-32(Big-Endian)</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 设置当前命令行环境编码为GBK  执行完该命令后还需要将字体设置为点阵字体，才能真正将编码环境切成utf8</span><br><span class="line"><span class="built_in">chcp</span>  <span class="number">936</span> </span><br><span class="line"></span><br><span class="line"># 设置当前命令行环境编码为utf8  执行完该命令后还需要将字体设置为Lucida Console，才能真正将编码环境切成utf8</span><br><span class="line"><span class="built_in">chcp</span>  <span class="number">65001</span>  </span><br></pre></td></tr></table></figure><h2 id="wmic-查看进程信息"><a href="#wmic-查看进程信息" class="headerlink" title="wmic 查看进程信息"></a>wmic 查看进程信息</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 查看名为&quot;buyticket.exe&quot;所有进程命令行，exe全路径，PID及线程数</span><br><span class="line">wmic process where Caption=&quot;buyticket.exe&quot; get commandline,ExecutablePath,ProcessId,ThreadCount /value</span><br><span class="line"></span><br><span class="line"># 查看名为&quot;buyticket.exe&quot;所有进程的exe全路径及当前打开的句柄数</span><br><span class="line">wmic process where Caption=&quot;buyticket.exe&quot; get ExecutablePath,HandleCount /value  </span><br><span class="line"></span><br><span class="line"># 查看名为&quot;buyticket.exe&quot;所有进程的exe全路径、当前虚拟地址空间占用及物理内存工作集</span><br><span class="line">wmic process where Caption=&quot;buyticket.exe&quot; get ExecutablePath,VirtualSize,WorkingSetSize /value   </span><br></pre></td></tr></table></figure><h2 id="shutdown"><a href="#shutdown" class="headerlink" title="shutdown"></a>shutdown</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#关闭计算机</span><br><span class="line">shutdown /s  </span><br><span class="line"></span><br><span class="line"># 一小时后，关闭本地计算机</span><br><span class="line">shutdown /s /t <span class="number">3600</span></span><br><span class="line"></span><br><span class="line"># 终止系统关闭</span><br><span class="line">shutdown /a </span><br><span class="line"></span><br><span class="line"># 关闭并重启本地计算</span><br><span class="line">shutdown /r 机</span><br><span class="line"></span><br><span class="line"># 关闭并重启ip为<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">166</span>的计算机</span><br><span class="line">shutdown /m <span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">166</span> /r </span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 关闭并重启计算机，重启后重新启动所有注册的应用程序</span><br><span class="line">shutdown /g  </span><br><span class="line"></span><br><span class="line"># 注销本地计算机</span><br><span class="line">shutdown /l  </span><br><span class="line"></span><br><span class="line"># 休眠本地计算机（强制正在运行的应用程序关闭，不前台警告用户）</span><br><span class="line">shutdown /h /f </span><br><span class="line"></span><br><span class="line"> # 关闭计算机</span><br><span class="line">shutdown /s</span><br></pre></td></tr></table></figure><h2 id="regsvr32-注册或反注册com组件"><a href="#regsvr32-注册或反注册com组件" class="headerlink" title="regsvr32  注册或反注册com组件"></a>regsvr32  注册或反注册com组件</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 以无声的方式注册clock.ocx组件</span><br><span class="line">regsvr32 /s clock.ocx  </span><br><span class="line"></span><br><span class="line"># 卸载myCommon.dll组件</span><br><span class="line"> regsvr32 /u myCommon.dll</span><br></pre></td></tr></table></figure><h2 id="format-格式化磁盘"><a href="#format-格式化磁盘" class="headerlink" title="format  格式化磁盘"></a>format  格式化磁盘</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 以ntfs类型格式化J盘 【类型有:FAT、FAT32、exFAT、NTFS或UDF】</span><br><span class="line"><span class="built_in">format</span> J: /<span class="built_in">FS</span>:ntfs   </span><br><span class="line"></span><br><span class="line">#  以fat32类型快速格式化J盘</span><br><span class="line"><span class="built_in">format</span> J: /<span class="built_in">FS</span>:fat32 /Q </span><br></pre></td></tr></table></figure><h2 id="chkfsk-检查磁盘并显示状态报告"><a href="#chkfsk-检查磁盘并显示状态报告" class="headerlink" title="chkfsk 检查磁盘并显示状态报告"></a>chkfsk 检查磁盘并显示状态报告</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkdsk /f D:   # 检查磁盘D并显示状态报告；加参数/f表示同时会修复磁盘上的错误</span><br></pre></td></tr></table></figure><h2 id="subset"><a href="#subset" class="headerlink" title="subset"></a>subset</h2><p>subst   磁盘映射  – 磁盘映射信息都保存在注册表以下键值中：HKEY_CURRENT_USER\Network</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 显示目前所有的映射</span><br><span class="line"><span class="built_in">subst</span> </span><br><span class="line"></span><br><span class="line"># 将\\com\software共享映射为本地z盘</span><br><span class="line"><span class="built_in">subst</span> z: \\com\software </span><br><span class="line"></span><br><span class="line"># 将e:\src映射为本地y盘</span><br><span class="line"><span class="built_in">subst</span> y: e:\src </span><br><span class="line"></span><br><span class="line"># 删除z盘映射</span><br><span class="line"><span class="built_in">subst</span> z: /d  </span><br></pre></td></tr></table></figure><h2 id="cmdkey"><a href="#cmdkey" class="headerlink" title="cmdkey"></a>cmdkey</h2><p> 凭据Credential（保存的用户名和密码）</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 列出可用的凭据</span><br><span class="line">cmdkey /list  </span><br><span class="line"></span><br><span class="line"># 列出指定目标的凭据</span><br><span class="line">cmdkey /list:<span class="number">10</span>.<span class="number">12</span>.<span class="number">190</span>.<span class="number">82</span>  </span><br><span class="line"></span><br><span class="line"># 列出指定目标的凭据</span><br><span class="line">cmdkey /list:Domain:target=<span class="number">10</span>.<span class="number">12</span>.<span class="number">190</span>.<span class="number">82</span>  </span><br><span class="line"></span><br><span class="line"># 若target为<span class="number">10</span>.<span class="number">12</span>.<span class="number">190</span>.<span class="number">82</span>的凭据不存在，则添加；否则就将<span class="number">10</span>.<span class="number">12</span>.<span class="number">190</span>.<span class="number">82</span>凭据的用户名修改为LiLei，密码修改为<span class="number">123456</span></span><br><span class="line">cmdkey /add:Domain:target=<span class="number">10</span>.<span class="number">12</span>.<span class="number">190</span>.<span class="number">82</span> /user:LiLei /pass:<span class="number">123456</span>  </span><br><span class="line"></span><br><span class="line"># 删除指定目标的凭据</span><br><span class="line">cmdkey /delete:Domain:target=<span class="number">10</span>.<span class="number">12</span>.<span class="number">190</span>.<span class="number">82</span> </span><br></pre></td></tr></table></figure><h2 id="cscript-执行vbs脚本"><a href="#cscript-执行vbs脚本" class="headerlink" title="cscript  执行vbs脚本"></a>cscript  执行vbs脚本</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 执行mac.vbs脚本，显示本机mac地址</span><br><span class="line">cscript /Nologo mac.vbs  </span><br></pre></td></tr></table></figure><figure class="highlight vbs"><figcaption><span>mac.vbs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> mc,mo</span><br><span class="line"><span class="keyword">Set</span> mc=<span class="built_in">GetObject</span>(<span class="string">&quot;Winmgmts:&quot;</span>).InstancesOf(<span class="string">&quot;Win32_NetworkAdapterConfiguration&quot;</span>)</span><br><span class="line"><span class="keyword">For</span> <span class="keyword">Each</span> mo <span class="keyword">In</span> mc</span><br><span class="line"><span class="keyword">If</span> mo.IPEnabled=<span class="literal">True</span> <span class="keyword">Then</span></span><br><span class="line">MsgBox <span class="string">&quot;本机网卡MAC地址是: &quot;</span> &amp; mo.MacAddress</span><br><span class="line"><span class="keyword">Exit</span> <span class="keyword">For</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">Next</span></span><br></pre></td></tr></table></figure><h2 id="powercfg-设置电源方案"><a href="#powercfg-设置电源方案" class="headerlink" title="powercfg  设置电源方案"></a>powercfg  设置电源方案</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 列出当前用户环境中的所有电源方案的GUID以及当前使用的是哪一个电源方案</span><br><span class="line">powercfg -list   </span><br><span class="line"></span><br><span class="line"># 查询GUID为<span class="number">8</span>c5e7fda-e8bf-<span class="number">4</span>a96-<span class="number">9</span>a85-a6e23a8c635c的电源方案的详细内容</span><br><span class="line">powercfg -query <span class="number">8</span>c5e7fda-e8bf-<span class="number">4</span>a96-<span class="number">9</span>a85-a6e23a8c635c </span><br><span class="line"></span><br><span class="line"># 设置禁止休眠</span><br><span class="line">powercfg -h off</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#  设置硬盘从不关闭</span><br><span class="line">powercfg -change -disk-timeout-dc <span class="number">0</span></span><br><span class="line">powercfg -change -disk-timeout-ac <span class="number">0</span></span><br><span class="line"></span><br><span class="line">#  设置显示器从不关闭</span><br><span class="line">powercfg -change -monitor-timeout-dc <span class="number">0</span></span><br><span class="line">powercfg -change -monitor-timeout-ac <span class="number">0</span></span><br><span class="line"></span><br><span class="line"># 设置从不进入待机</span><br><span class="line">powercfg -change -standby-timeout-dc <span class="number">0</span></span><br><span class="line">powercfg -change -standby-timeout-ac <span class="number">0</span></span><br><span class="line"></span><br><span class="line">#  设置从不进入休眠</span><br><span class="line">powercfg -change -hibernate-timeout-dc <span class="number">0</span></span><br><span class="line">powercfg -change -hibernate-timeout-ac <span class="number">0</span></span><br></pre></td></tr></table></figure><ol><li>dc代表直流电源 即使用电池供电；ac代表交流电源 即直接连接电源</li><li>后面数字为时间，单位为分钟；设置为0表示从不</li></ol><h2 id="netsh-advfirewall-设置防火墙"><a href="#netsh-advfirewall-设置防火墙" class="headerlink" title="netsh advfirewall  设置防火墙"></a>netsh advfirewall  设置防火墙</h2><p>windows防火墙规则顺序：阻止规则的优先级高于允许规则</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">#将防火墙当前的所有配置导出到d:\test\advfirewall.pol文件</span><br><span class="line">netsh advfirewall export &quot;d:\test\advfirewall.pol&quot;  </span><br><span class="line"># 将d:\test\advfirewall.pol文件中规则导入到防火墙中</span><br><span class="line">netsh advfirewall import &quot;d:\test\advfirewall.pol&quot;  </span><br><span class="line"># 将防火墙还原为默认策略</span><br><span class="line">netsh advfirewall reset</span><br><span class="line"></span><br><span class="line"># 关闭所有类型网络的防火墙（域网络【Domain】、家庭或工作的专用网络【Private】、公用网络都关闭【Public】）</span><br><span class="line">netsh advfirewall <span class="built_in">set</span> allprofiles state off</span><br><span class="line"></span><br><span class="line">netsh advfirewall <span class="built_in">set</span> allprofiles state on  # 开启所有类型网络的防火墙</span><br><span class="line"></span><br><span class="line">#关闭当前类型网络的防火墙</span><br><span class="line">netsh advfirewall <span class="built_in">set</span> currentprofile state off </span><br><span class="line"></span><br><span class="line"># 开启当前类型网络的防火墙</span><br><span class="line">netsh advfirewall <span class="built_in">set</span> currentprofile state on </span><br><span class="line"></span><br><span class="line"># 开启域网络的防火墙</span><br><span class="line">netsh advfirewall <span class="built_in">set</span> domainprofile state on </span><br><span class="line"></span><br><span class="line"> # 关闭域网络的防火墙</span><br><span class="line">netsh advfirewall <span class="built_in">set</span> domainprofile state off</span><br><span class="line"></span><br><span class="line"># 开启家庭或工作的专用网络的防火墙</span><br><span class="line">netsh advfirewall <span class="built_in">set</span> privateprofile state on </span><br><span class="line"></span><br><span class="line"># 关闭家庭或工作的专用网络的防火墙</span><br><span class="line">netsh advfirewall <span class="built_in">set</span> privateprofile state off  </span><br><span class="line"></span><br><span class="line"># 开启公用网络的防火墙</span><br><span class="line">netsh advfirewall <span class="built_in">set</span> publicprofile state on </span><br><span class="line"></span><br><span class="line"> # 关闭公用网络的防火墙</span><br><span class="line">netsh advfirewall <span class="built_in">set</span> publicprofile state off </span><br><span class="line"></span><br><span class="line">#显示所有规则</span><br><span class="line">netsh advfirewall firewall show rule name=all  </span><br><span class="line"></span><br><span class="line"># 显示名为foxmail的所有规则</span><br><span class="line">netsh advfirewall firewall show rule name=foxmail   </span><br><span class="line"># 开启<span class="built_in">ping</span>回显</span><br><span class="line">netsh advfirewall firewall <span class="built_in">set</span> rule name=&quot;文件和打印机共享(回显请求 - ICMPv4-<span class="keyword">In</span>)&quot; new enable=yes </span><br><span class="line"></span><br><span class="line">#  删除所有名为NiZhanBrowser的规则</span><br><span class="line">netsh advfirewall firewall delete rule name=NiZhanBrowser </span><br><span class="line"></span><br><span class="line"># 删除所有名为NiZhanBrowser的入站规则</span><br><span class="line">netsh advfirewall firewall delete rule name=NiZhanBrowser <span class="built_in">dir</span>=<span class="keyword">in</span></span><br><span class="line"></span><br><span class="line"># 删除所有名为NiZhanBrowser且操作为阻止的规则</span><br><span class="line">netsh advfirewall firewall delete rule name=NiZhanBrowser action=block </span><br><span class="line"></span><br><span class="line"># 添加名为TCP-<span class="keyword">In</span>-<span class="number">8888</span>入站规则：允许TCP端口<span class="number">8888</span></span><br><span class="line">netsh advfirewall firewall add rule name=TCP-<span class="keyword">In</span>-<span class="number">8888</span> protocol=TCP localport=<span class="number">8888</span> <span class="built_in">dir</span>=<span class="keyword">in</span> action=allow  </span><br><span class="line"></span><br><span class="line"># 添加名为TCP-<span class="keyword">In</span>-<span class="number">8888</span>入站规则：阻止TCP端口<span class="number">8888</span></span><br><span class="line">netsh advfirewall firewall add rule name=TCP-<span class="keyword">In</span>-<span class="number">8888</span> protocol=TCP localport=<span class="number">8888</span> <span class="built_in">dir</span>=<span class="keyword">in</span> action=block  </span><br><span class="line"></span><br><span class="line"># 添加名为TCP-<span class="keyword">In</span>-<span class="number">8888</span>出站规则：允许TCP端口<span class="number">8888</span></span><br><span class="line">netsh advfirewall firewall add rule name=TCP-<span class="keyword">In</span>-<span class="number">8888</span> protocol=TCP localport=<span class="number">8888</span> <span class="built_in">dir</span>=out action=allow  </span><br><span class="line"></span><br><span class="line"># 添加名为TCP-<span class="keyword">In</span>-<span class="number">8888</span>出站规则：阻止TCP端口<span class="number">8888</span></span><br><span class="line">netsh advfirewall firewall add rule name=TCP-<span class="keyword">In</span>-<span class="number">8888</span> protocol=TCP localport=<span class="number">8888</span> <span class="built_in">dir</span>=out action=block  </span><br><span class="line"></span><br><span class="line">#  添加名为test1入站规则：允许TCP端口<span class="number">8888</span>、远程IP地址在<span class="number">10</span>.<span class="number">96</span>.<span class="number">208</span>.<span class="number">0</span>/<span class="number">23</span>,<span class="number">10</span>.<span class="number">96</span>.<span class="number">154</span>.<span class="number">0</span>/<span class="number">23</span>区间、远程Port在<span class="number">1024</span>-<span class="number">2048</span>,<span class="number">2050</span>-<span class="number">65535</span></span><br><span class="line">netsh advfirewall firewall add rule name=test1 protocol=TCP localport=<span class="number">8888</span> remoteip=<span class="number">10</span>.<span class="number">96</span>.<span class="number">208</span>.<span class="number">0</span>/<span class="number">23</span>,<span class="number">10</span>.<span class="number">96</span>.<span class="number">154</span>.<span class="number">0</span>/<span class="number">23</span> remoteport=<span class="number">1024</span>-<span class="number">2048</span>,<span class="number">2050</span>-<span class="number">65535</span> <span class="built_in">dir</span>=<span class="keyword">in</span> action=allow </span><br><span class="line"></span><br><span class="line"># 添加名为test2入站规则：允许TCP端口<span class="number">8888</span>、本地IP地址在<span class="number">10</span>.<span class="number">46</span>.<span class="number">50</span>.<span class="number">32</span>、本地Port在<span class="number">3702</span></span><br><span class="line">netsh advfirewall firewall add rule name=test2 protocol=TCP localport=<span class="number">8888</span> localip=<span class="number">10</span>.<span class="number">46</span>.<span class="number">50</span>.<span class="number">32</span> localport=<span class="number">3702</span> <span class="built_in">dir</span>=<span class="keyword">in</span> action=allow </span><br><span class="line"></span><br><span class="line"># 添加名为test3入站规则：允许TCP端口<span class="number">8888</span>、程序路径为：D:\tools\test3.exe</span><br><span class="line">netsh advfirewall firewall add rule name=test2 protocol=TCP localport=<span class="number">8888</span> program=&quot;D:\tools\test3.exe&quot; <span class="built_in">dir</span>=<span class="keyword">in</span> action=allow </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注：netsh advfirewall firewall add rule ?可用来查看帮助信息</p><h2 id="schtasks-任务计划"><a href="#schtasks-任务计划" class="headerlink" title="schtasks  任务计划"></a>schtasks  任务计划</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 以较为详细易于阅读的格式显示本机所有任务计划信息</span><br><span class="line">schtasks /query /fo LIST /v  </span><br><span class="line"></span><br><span class="line"> # 创建一个名为Soda Build的任务计划：该任务计划每<span class="number">20</span>分钟执行一下d:\check.vbs脚本</span><br><span class="line">schtasks /create /sc minute /mo <span class="number">20</span> /tn &quot;Soda Build&quot; /tr d:\check.vbs </span><br><span class="line"></span><br><span class="line"># 强制创建一个名为Soda Build的任务计划（不进行确认）：该任务计划每天凌晨<span class="number">2</span>点<span class="number">06</span>分执行一下D:\updateall.bat脚本</span><br><span class="line">schtasks /create /tn &quot;Soda Build&quot; /tr D:\updateall.bat /sc daily /st <span class="number">02</span>:<span class="number">06</span> /f </span><br><span class="line"></span><br><span class="line"># 强制删除Soda Build名称的任务计划（不进行确认）</span><br><span class="line">schtasks /delete /tn &quot;Soda Build&quot; /f </span><br><span class="line"></span><br><span class="line">#将名为Soda Build的任务计划的执行脚本修改为d:\check2.vbs</span><br><span class="line">schtasks /change /tn &quot;Soda Build&quot; /tr d:\check2.vbs </span><br><span class="line"></span><br><span class="line">#执行名为Soda Build的任务计划</span><br><span class="line">schtasks /run /tn &quot;Soda Build&quot; </span><br><span class="line"></span><br><span class="line">#终止执行名为Soda Build的任务计划</span><br><span class="line">schtasks /end /tn &quot;Soda Build&quot; </span><br></pre></td></tr></table></figure><h2 id="net"><a href="#net" class="headerlink" title="net"></a>net</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"># 查看已经启动的服务</span><br><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> </span><br><span class="line"></span><br><span class="line"># 开启任务计划服务</span><br><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> &quot;Task Scheduler&quot;   </span><br><span class="line"></span><br><span class="line"># 不询问，直接关闭任务计划服务</span><br><span class="line"><span class="built_in">net</span> stop &quot;Task Scheduler&quot; /y </span><br><span class="line"></span><br><span class="line"># 开启dns缓存服务</span><br><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> dnscache </span><br><span class="line"></span><br><span class="line"># 不询问，直接关闭dns缓存服务</span><br><span class="line"><span class="built_in">net</span> stop dnscache /y  </span><br><span class="line"></span><br><span class="line"># 开启Remote Desktop Services服务</span><br><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> TermService  </span><br><span class="line"></span><br><span class="line"># 不询问，直接关闭Remote Desktop Services服务</span><br><span class="line"><span class="built_in">net</span> stop TermService /y  </span><br><span class="line"></span><br><span class="line"># 查看当前用户下的共享目录</span><br><span class="line"><span class="built_in">net</span> share  </span><br><span class="line"></span><br><span class="line">#  取消名为workFile的共享状态</span><br><span class="line"><span class="built_in">net</span> share workFile /delete </span><br><span class="line"></span><br><span class="line"># 将c:\<span class="number">360</span>Downloads设为共享，并取名为xxx</span><br><span class="line"><span class="built_in">net</span> share xxx=c:\<span class="number">360</span>Downloads   </span><br><span class="line"></span><br><span class="line"># 开启ipc$共享</span><br><span class="line"><span class="built_in">net</span> share ipc$ </span><br><span class="line"></span><br><span class="line"># 删除ipc$共享</span><br><span class="line"><span class="built_in">net</span> share ipc$ /<span class="built_in">del</span> </span><br><span class="line"></span><br><span class="line"># 删除c盘共享</span><br><span class="line"><span class="built_in">net</span> share c$ /<span class="built_in">del</span> </span><br><span class="line"></span><br><span class="line"># 建立<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">166</span>的ipc空链接</span><br><span class="line"><span class="built_in">net</span> use \\<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">166</span>\ipc$ &quot; &quot; /user:&quot; &quot;</span><br><span class="line"></span><br><span class="line"># 直接登陆后建立<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">166</span>的ipc非空链接（用户名为administrator 密码为<span class="number">123456</span>）</span><br><span class="line"><span class="built_in">net</span> use \\<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">166</span>\ipc$ &quot;<span class="number">123456</span>&quot; /user:&quot;administrator&quot;  </span><br><span class="line"></span><br><span class="line"># 直接登陆后映射<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">166</span>的c盘到本地为h盘（用户名为administrator 密码为<span class="number">123456</span>）</span><br><span class="line"><span class="built_in">net</span> use h: \\<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">166</span>\c$ &quot;<span class="number">123456</span>&quot; /user:&quot;administrator&quot;   </span><br><span class="line"></span><br><span class="line"># 登陆后映射<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">166</span>的c盘到本地为h盘</span><br><span class="line"><span class="built_in">net</span> use h: \\<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">166</span>\c$   </span><br><span class="line"></span><br><span class="line"># 删除ipc链接</span><br><span class="line"><span class="built_in">net</span> use \\<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">166</span>\ipc$ /<span class="built_in">del</span>  </span><br><span class="line"></span><br><span class="line"># 删除本地的h盘的映射</span><br><span class="line"><span class="built_in">net</span> use h: /<span class="built_in">del</span> </span><br><span class="line"></span><br><span class="line"># 查看本地局域网内开启了哪些共享</span><br><span class="line"><span class="built_in">net</span> view </span><br><span class="line"></span><br><span class="line"># 查看<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">166</span>的机器上在局域网内开启了哪些共享</span><br><span class="line"><span class="built_in">net</span> view \\<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">166</span> </span><br><span class="line"></span><br><span class="line"># 查看本地机器的日期及时间</span><br><span class="line"><span class="built_in">net</span> <span class="built_in">time</span> \\<span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>  </span><br><span class="line"></span><br><span class="line"># 查看本地机器的日期及时间</span><br><span class="line"><span class="built_in">net</span> <span class="built_in">time</span> \\localhost   </span><br><span class="line"></span><br><span class="line"># 查看<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">166</span>机器的日期及时间</span><br><span class="line"><span class="built_in">net</span> <span class="built_in">time</span> \\<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">166</span>  </span><br><span class="line"></span><br><span class="line"># 设置本地计算机时间与<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">166</span>主机的时间同步，加上参数/yes可取消确认信息</span><br><span class="line"><span class="built_in">net</span> <span class="built_in">time</span> \\<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">166</span> /<span class="built_in">set</span> </span><br><span class="line"></span><br><span class="line"># 查看当前机器上的用户</span><br><span class="line"><span class="built_in">net</span> user  </span><br><span class="line"></span><br><span class="line"># 查看当前机器上的Administrator用户的信息</span><br><span class="line"><span class="built_in">net</span> user Administrator  </span><br><span class="line"></span><br><span class="line"># 启用Guest用户</span><br><span class="line"><span class="built_in">net</span> user Guest /active:yes  </span><br><span class="line"></span><br><span class="line"># 新建一个名为dev，密码为<span class="number">123456</span>的用户</span><br><span class="line"><span class="built_in">net</span> user dev <span class="number">123456</span> /add   </span><br><span class="line"></span><br><span class="line"># 把名为dev的用户添加到管理员用户组中，使其具有管理员权限</span><br><span class="line"><span class="built_in">net</span> localgroup administrators dev /add  </span><br><span class="line"></span><br><span class="line"># 删除名为dev的用户</span><br><span class="line"><span class="built_in">net</span> user dev /<span class="built_in">del</span>  </span><br></pre></td></tr></table></figure><h2 id="进程操作"><a href="#进程操作" class="headerlink" title="进程操作"></a>进程操作</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 显示当前运行的进程信息（可查看PID）</span><br><span class="line">tasklist  </span><br><span class="line"></span><br><span class="line">#结束指定的进程</span><br><span class="line"><span class="built_in">taskkill</span>  </span><br><span class="line"></span><br><span class="line"># 结束名为notepad.exe的进程</span><br><span class="line"><span class="built_in">taskkill</span> /im notepad.exe </span><br><span class="line"></span><br><span class="line">#  结束pid为<span class="number">1230</span>、<span class="number">1241</span>和<span class="number">1253</span>的进程以及由它们启动起来的子进程</span><br><span class="line"><span class="built_in">taskkill</span> /pid <span class="number">1230</span> /pid <span class="number">1241</span> /pid <span class="number">1253</span> /t </span><br><span class="line"></span><br><span class="line"># 强制结束有名为<span class="built_in">cmd</span>.exe的进程以及由它启动起来的子进程</span><br><span class="line"><span class="built_in">taskkill</span> /f /im <span class="built_in">cmd</span>.exe /t  </span><br></pre></td></tr></table></figure><h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#  测试与baidu服务器的连接情况</span><br><span class="line"><span class="built_in">ping</span> baidu.com   </span><br><span class="line"></span><br><span class="line"># 测试机器名为chen-pc0的连接情况</span><br><span class="line"><span class="built_in">ping</span> chen-pc0   </span><br><span class="line"></span><br><span class="line"> # 测试与ip为<span class="number">220</span>.<span class="number">181</span>.<span class="number">111</span>.<span class="number">86</span>的连接情况</span><br><span class="line"><span class="built_in">ping</span> <span class="number">220</span>.<span class="number">181</span>.<span class="number">111</span>.<span class="number">86</span>  </span><br><span class="line"></span><br><span class="line"># 向qq.com发送<span class="number">10</span>次<span class="number">65500</span>字节的<span class="built_in">ping</span></span><br><span class="line"><span class="built_in">ping</span> -l <span class="number">65500</span> -n <span class="number">10</span> qq.com  </span><br><span class="line"></span><br><span class="line"># 对当前主机执行<span class="number">6</span>次<span class="built_in">ping</span>操作（花费时间为<span class="number">5</span>s）</span><br><span class="line"><span class="built_in">ping</span> -n <span class="number">6</span> <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span> </span><br><span class="line"></span><br><span class="line"> # 不断地测试baidu服务器的连接情况   【Ctrl+<span class="built_in">Pause</span> <span class="built_in">Break</span>：查看<span class="built_in">ping</span>的统计信息；Ctrl+C：终止当前任务】</span><br><span class="line"><span class="built_in">ping</span> -t baidu.com </span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 查看本地ip地址等详细信息</span><br><span class="line"><span class="built_in">ipconfig</span> /all</span><br><span class="line"></span><br><span class="line"># 显示本地dns缓存的内容</span><br><span class="line"><span class="built_in">ipconfig</span> /displaydns </span><br><span class="line"></span><br><span class="line"># 清除本地dns缓存的内容</span><br><span class="line"><span class="built_in">ipconfig</span> /flushdns</span><br><span class="line"></span><br><span class="line"># 获取www.cnblogs.com的域名解析</span><br><span class="line">nslookup www.cnblogs.com </span><br><span class="line"></span><br><span class="line"># 打印出www.cnblogs.com的域名解析所有记录</span><br><span class="line">nslookup -d www.cnblogs.com</span><br><span class="line"></span><br><span class="line"># 查看开启了哪些端口</span><br><span class="line">netstat -a   </span><br><span class="line"></span><br><span class="line"> # 查看端口的网络连接情况</span><br><span class="line">netstat -n </span><br><span class="line"></span><br><span class="line"># 查看正在进行的工作</span><br><span class="line">netstat -v   </span><br><span class="line"></span><br><span class="line"># 查看tcp协议的使用情况</span><br><span class="line">netstat -p tcp  </span><br><span class="line"></span><br><span class="line"># 查看本机到达<span class="number">182</span>.<span class="number">140</span>.<span class="number">167</span>.<span class="number">44</span>的路由路径</span><br><span class="line">tracert <span class="number">182</span>.<span class="number">140</span>.<span class="number">167</span>.<span class="number">44</span>  </span><br><span class="line"></span><br><span class="line">#显示出IP路由</span><br><span class="line">route <span class="built_in">print</span>  </span><br></pre></td></tr></table></figure><h1 id="arp"><a href="#arp" class="headerlink" title="arp"></a>arp</h1><p>arp   显示和修改地址解析协议(ARP)使用的“IP到mac”的地址转换表</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 显示arp缓存表</span><br><span class="line">arp -a  </span><br></pre></td></tr></table></figure><p>at  计划任务（必须保证“Task Scheduler”服务启动   net start “task scheduler”）</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 查看所有的计划任务</span><br><span class="line"><span class="built_in">at</span> </span><br><span class="line"></span><br><span class="line"># 停止所有任务计划（不需要确认）</span><br><span class="line"><span class="built_in">at</span> /delete /yes </span><br><span class="line"></span><br><span class="line"># 开启id为<span class="number">1</span>的计划任</span><br><span class="line"><span class="built_in">at</span> <span class="number">1</span> </span><br><span class="line"></span><br><span class="line"># 停止id为<span class="number">1</span>的计划任务（不需要确认）</span><br><span class="line"><span class="built_in">at</span> <span class="number">1</span> /delete /yes  </span><br><span class="line"></span><br><span class="line"># 到<span class="number">12</span>:<span class="number">42</span> ，电脑会出现“ 系统关机 ”对话框，并默认 <span class="number">30</span> 秒延时自动关机</span><br><span class="line"><span class="built_in">at</span> <span class="number">12</span>:<span class="number">42</span> shutdown –s –t30   </span><br><span class="line"></span><br><span class="line"># 如果命令不是exe文件，必须在命令前加上<span class="built_in">cmd</span> /c</span><br><span class="line"><span class="built_in">at</span> <span class="built_in">cmd</span> /c <span class="built_in">dir</span> &gt; c:\test.out  </span><br><span class="line"></span><br><span class="line"># 在每周六早上<span class="number">6</span>点，电脑定时启动task.bat批处理文件</span><br><span class="line"><span class="built_in">at</span> <span class="number">6</span>:<span class="number">00</span>AM /every:Saturday task.bat  </span><br><span class="line"></span><br><span class="line"># 到<span class="number">12</span>:<span class="number">00</span>时，关闭名为chen的计算机</span><br><span class="line"><span class="built_in">at</span> \\chen <span class="number">12</span>:<span class="number">00</span> shutdown /r   </span><br><span class="line"></span><br><span class="line"># 到<span class="number">12</span>:<span class="number">00</span>时，关闭ip为<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">166</span>的计算机</span><br><span class="line"><span class="built_in">at</span> \\<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">166</span> <span class="number">12</span>:<span class="number">00</span> shutdown /r </span><br></pre></td></tr></table></figure><h1 id="文本处理"><a href="#文本处理" class="headerlink" title="文本处理"></a>文本处理</h1><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 编辑config.ini文件（会进入edit字符编辑器；按alt，可以选择对应的菜单） win7 x64下没有该命令</span><br><span class="line">edit config.ini  </span><br></pre></td></tr></table></figure><p>find  文件中搜索字符串</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># 在<span class="number">1</span>.txt文件中忽略大小写查找pid字符串，并带行号显示查找后的结果</span><br><span class="line"><span class="built_in">find</span> /N /I &quot;pid&quot; <span class="number">1</span>.txt </span><br><span class="line"></span><br><span class="line"># 只显示在<span class="number">1</span>.txt文件中查找到exe字符串的次数</span><br><span class="line"><span class="built_in">find</span> /C &quot;exe&quot; <span class="number">1</span>.txt  </span><br><span class="line"></span><br><span class="line"># 显示未包含<span class="number">1</span>.txt文件中未包含exe字符串的行</span><br><span class="line"><span class="built_in">find</span> /V &quot;exe&quot; <span class="number">1</span>.txt</span><br><span class="line"></span><br><span class="line"><span class="built_in">findstr</span>  文件中搜索字符串</span><br><span class="line"></span><br><span class="line"># 在<span class="number">1</span>.txt文件中搜索hello或world</span><br><span class="line"><span class="built_in">findstr</span> &quot;hello world&quot; <span class="number">1</span>.txt  # 在<span class="number">1</span>.txt文件中搜索hello或world</span><br><span class="line"></span><br><span class="line"># 在<span class="number">1</span>.txt文件中搜索hello world</span><br><span class="line"><span class="built_in">findstr</span> /c:&quot;hello world&quot; <span class="number">1</span>.txt </span><br><span class="line"></span><br><span class="line"># 在<span class="number">1</span>.txt文件中搜索hello world，并在每行结果前打印出<span class="number">1</span>.txt:   注：<span class="built_in">findstr</span>只有在<span class="number">2</span>个及以上文件中搜索字符串时才会打印出每个文件的文件名，<span class="built_in">nul</span>表示一个空文件</span><br><span class="line"><span class="built_in">findstr</span> /c:&quot;hello world&quot; <span class="number">1</span>.txt <span class="built_in">nul</span>  # 在<span class="number">1</span>.txt文件中搜索hello world，并在每行结果前打印出<span class="number">1</span>.txt:   注：<span class="built_in">findstr</span>只有在<span class="number">2</span>个及以上文件中搜索字符串时才会打印出每个文件的文件名，<span class="built_in">nul</span>表示一个空文件</span><br><span class="line"></span><br><span class="line"># 不区分大小写，在当前目录和所有子目录中的所有文件中的hello</span><br><span class="line"><span class="built_in">findstr</span> /s /i &quot;Hello&quot; *.*   # 不区分大小写，在当前目录和所有子目录中的所有文件中的hello</span><br><span class="line"></span><br><span class="line"># 在<span class="number">1</span>.txt中搜索以<span class="number">1</span>个数字+<span class="number">1</span>个小写字母开头子串的行</span><br><span class="line"><span class="built_in">findstr</span>  &quot;^[<span class="number">0</span>-<span class="number">9</span>][a-z]&quot; <span class="number">1</span>.txt  # 在<span class="number">1</span>.txt中搜索以<span class="number">1</span>个数字+<span class="number">1</span>个小写字母开头子串的行</span><br></pre></td></tr></table></figure><h1 id="控制台命令窗口中一些技巧"><a href="#控制台命令窗口中一些技巧" class="headerlink" title="控制台命令窗口中一些技巧"></a>控制台命令窗口中一些技巧</h1><p>在文件夹空白处按住Shift，然后右键弹出快捷菜单，可以看到“在此处打开命令行窗口”<br>命令参数的路径：要使用反斜杠<code>\</code>，不要使用正斜杠’&#x2F;‘   如：del d:\test2\file\my.txt<br>命令参数的路径：若存在空格，应使用双引号将路径引起来  如：del “d:\program files\file\my.txt”</p><p>文件及目录名中不能包含下列任何字符：<code>\ / : * ? &quot; &lt; &gt; |</code></p><p><code>rem</code>   在批处理文件中添加注解，其后的命令不会被执行，但会回显<br><code>::</code> 也可以起到rem的注释作用，且不会有回显<br>任何以冒号: 开头的字符行, 在批处理中都被视作标号（label）, 而直接忽略其后的所有内容<br>有效标号：冒号后紧跟一个以字母数字开头的字符串，goto语句可以识别<br>无效标号：冒号后紧跟一个非字母数字的一个特殊符号，goto无法识别的标号，可以起到注释作用，::常被用作注释符号</p>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Batch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCNA NOTE</title>
      <link href="/posts/HCNA_Note.html"/>
      <url>/posts/HCNA_Note.html</url>
      
        <content type="html"><![CDATA[<p>HCNA 学习笔记</p><h1 id="网络整体架构"><a href="#网络整体架构" class="headerlink" title="网络整体架构"></a>网络整体架构</h1><h2 id="企业网络"><a href="#企业网络" class="headerlink" title="企业网络"></a>企业网络</h2><p>企业网络：包括小型办公室、教育、政府、银行等行业或机构</p><ul><li>企业网络远程互联：</li></ul><p><img src="/assets/Picture/images/wangluo.jpg"></p><p>总公司与分公司使用广域网链路(WAN)互联</p><span id="more"></span><h3 id="企业网络基本架构"><a href="#企业网络基本架构" class="headerlink" title="企业网络基本架构"></a>企业网络基本架构</h3><ol><li>小型企业：通常采用扁平网络结构，扩展能力低。</li><li>大型企业：通常采用层次化结构以支撑网络的扩展和用户的增长。</li></ol><ul><li>结构图(左小右大)</li></ul><p><img src="/assets/Picture/images/iwljgt.png"></p><h1 id="网络基本管理及模拟器使用"><a href="#网络基本管理及模拟器使用" class="headerlink" title="网络基本管理及模拟器使用"></a>网络基本管理及模拟器使用</h1><h2 id="常用的传输介质"><a href="#常用的传输介质" class="headerlink" title="常用的传输介质"></a>常用的传输介质</h2><p>双绞线、光纤、Radio(蓝牙等)、同轴电缆(几乎淘汰)</p><h3 id="双绞线-8芯"><a href="#双绞线-8芯" class="headerlink" title="双绞线(8芯)"></a>双绞线(8芯)</h3><p>有多种类型，不同类型传输速度不同和，超5类、6类最常用。RJ-45水晶头</p><p><code>568A标准</code> 白绿，绿，白橙，蓝，白蓝，橙，白棕，棕<br><code>568B标准</code> 白橙，橙，白绿，蓝，白蓝，绿，白棕，棕</p><p><code>交叉线</code> 一头采用568A标准，一头采用568B标准<br><code>平行线/直通线</code> 两头采用同样的标准，同为568A标准或568B标准</p><p>相同设备使用交叉线，不同设备使用直通线，现在很多设备都有自适应。</p><h3 id="光纤"><a href="#光纤" class="headerlink" title="光纤"></a>光纤</h3><p><code>单模光纤(S)</code> 颜色多为黄色，连接头多为蓝色或绿色，只能传输一种模式的广。不存在模间色散，适用于长距离高速传输。<br><code>多模光纤(M)</code> 线缆颜色千兆多位橙色、万兆多为水蓝色，连接头多位灰白色，允许不同模式的光在一根光纤上传输，由于模间色散较大而导致信号脉冲展宽严重，因此主要用于局域网的短距离传输。</p><ul><li>区别</li></ul><p>主要在传输距离，单模长距离，多模短距离。单模和多模差异在传输距离。洲际的传输使用的是 <code>光缆</code>，不是光纤</p><ul><li>常用光纤连接器</li></ul><p>ST，FC，SC，LC连接器。连接器有帽子，要拿掉才能连接</p><h3 id="串口电缆"><a href="#串口电缆" class="headerlink" title="串口电缆"></a>串口电缆</h3><p>网络通信中常用和推荐的串口电缆标准为 RS-232，但传输速率有限仅为6米。<br>RS-422和RS-485的传输距离可达1200米。接头常用V.35(80年代淘汰)，但仍在帧中继、ATM等传统网络上使用。<br>V.24为RS-232标准的欧洲版，RS-232本身没有定义接头标准，RS-232逐渐被FireWire，USB等取代。新产品和设备已经普遍使用USB标准。</p><h2 id="ENSP-模拟器"><a href="#ENSP-模拟器" class="headerlink" title="ENSP 模拟器"></a>ENSP 模拟器</h2><p>关闭Windows防火墙，不要装各种管家。<br>尽量少运行软件，可能会干扰 virtunal-box。<br>重新注册要关闭ENSP，个人文件夹下的.VirtualBox彻底删除。注册完毕之后关闭ENSP然后再开启。</p><h2 id="冲突域"><a href="#冲突域" class="headerlink" title="冲突域"></a>冲突域</h2><p><img src="/assets/Picture/images/cty.jpg"></p><ul><li>应用场景</li></ul><p>多点接入网络(MA),如交换机(Switch)</p><ul><li>冲突域与半双工搭配</li></ul><p><img src="/assets/Picture/images/20200517124923.png"></p><p><code>单工</code> 简单的说就是一方只能发信息，另一方则只能收信息，通信是单向的。<br><code>半双工</code> 比单工先进一点，就是双方都能发信息，但同一时间则只能一方发信息。<br><code>全双工</code> 比半双工再先进一点，就是双方不仅都能发信息，而且能够同时发送。</p><ul><li>共同点</li></ul><p>半双工和全双工都支持双向数据传输。</p><blockquote><p>共享式网络中，不同的主机同时发送数据时，就会产生信号冲突的问题，解决方法一般是：采用<code>载波侦听多路访问/冲突检测技术(CAMA/CD)</code> 的基本工作过程如下</p></blockquote><ol><li>终端设备不同地检测共享网路的状态。如果线路空闲，则可以发送数据，线路不空闲，则等待一段时间后据徐检测(延时时间由退避算法决定)。</li><li>如有另一个设备同时发送数据，两个设备发送的数据会产生冲突。</li><li>终端设备检测到冲突之后，马上停止发送自己的数据，并发送特俗阻塞信息，以强化冲突信号，使线路上的其他站点能够尽早检测冲突。</li><li>终端设备检测到冲突后，等待一段时间后再将进行数据发送(延时时间由退避算法决定)。</li></ol><p>CSMA&#x2F;CD 的工作原理：先听后发，边发边听，冲突停发，随机延迟后重发。</p><p>Q: 用串行线路能否构建MA网络<br>A: 肯定可以</p><p>NBMA(非广播多路访问)：物理架构(ATM、帧中继网络)—-NMBMA(网络设计)—VPN(DSVPN)。</p><h2 id="熟悉以及远程管理设备的实验"><a href="#熟悉以及远程管理设备的实验" class="headerlink" title="熟悉以及远程管理设备的实验"></a>熟悉以及远程管理设备的实验</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">interface GigabitEnternet0/0/0/0 <span class="comment"># 进入接口</span></span><br><span class="line">ip address 10.1.1.1 255.255.255.0</span><br></pre></td></tr></table></figure><p>常用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sysname R1 <span class="comment"># 修改设备名字</span></span><br><span class="line">ip address 10.1.1.1.7 <span class="comment"># 配置IP地址</span></span><br><span class="line">ip address mask  10.1.1.1.7 24 <span class="comment"># 配置IP地址和掩码</span></span><br><span class="line">diaplay this <span class="comment"># 显示当前模式</span></span><br><span class="line">dis ip int bri <span class="comment"># 查看接口开启情况</span></span><br><span class="line">undo shutdown <span class="comment"># </span></span><br><span class="line">q <span class="comment"># 退出</span></span><br><span class="line"></span><br><span class="line">user-interface <span class="comment"># 用户接口</span></span><br><span class="line">user-interface ？ <span class="comment"># 查看帮助</span></span><br><span class="line"></span><br><span class="line">user-interface vty 0 4 <span class="comment"># 开启虚拟终端管理</span></span><br><span class="line"><span class="built_in">set</span> authentication password cipher pass <span class="comment"># 设置认证密码为pass</span></span><br><span class="line"></span><br><span class="line">talent 10.1.1.1 <span class="comment"># 远程管理设备，不能进入system-view</span></span><br><span class="line"></span><br><span class="line">diaplay ip routting0table <span class="comment"># 查看路由表</span></span><br></pre></td></tr></table></figure><h1 id="网络各种分层结构"><a href="#网络各种分层结构" class="headerlink" title="网络各种分层结构"></a>网络各种分层结构</h1><h2 id="网络分层基础"><a href="#网络分层基础" class="headerlink" title="网络分层基础"></a>网络分层基础</h2><blockquote><p>网络的层次化不要以设备最为标准，要以协议作为分层的标准。</p></blockquote><h3 id="OSI-开放式系统互联模型-七层模型"><a href="#OSI-开放式系统互联模型-七层模型" class="headerlink" title="OSI(开放式系统互联模型) 七层模型"></a>OSI(开放式系统互联模型) 七层模型</h3><ol><li><code>应用层</code> 为应用程序提供网络服务</li><li><code>表示层</code> 数据格式化，加密、解密，如：jpg，gif</li><li><code>会话层</code> 建立、维护、管理会话连接,系统(Linux,iOS,Android)在此</li><li><code>传输层</code> 建立、维护、管理端到端连接，单位：段(segment)，TCP&#x2F;UDP连个协议</li><li><code>网络层</code> IP寻址和路由选择,单位：包，有200多个协议</li><li><code>数据链路层</code> 控制网络层与物理层之间的通讯，单位：帧(frame)</li><li><code>物理层</code> 比特流传输，单位：比特(bit)</li></ol><ul><li>应用层、表示层、会话层：单位统称为：协议数据单元(PDU),<code>物理层</code> 在TCP&#x2F;IP中被称为 <code>互联网层</code> (Internet Protocal)</li></ul><h3 id="TCP-IP-工业标准"><a href="#TCP-IP-工业标准" class="headerlink" title="TCP&#x2F;IP(工业标准)"></a>TCP&#x2F;IP(工业标准)</h3><ol><li>应用层 (TELNET、FTP、SMTP)</li><li>传输层 (TCP、UDP)</li><li>互联网层 (IP、ICMP),路由</li><li>网络接口层 (PPP)，交换</li></ol><h2 id="数据封装"><a href="#数据封装" class="headerlink" title="数据封装"></a>数据封装</h2><p><img src="/assets/Picture/images/shujufengzhuang.png"></p><p>每一层都有一个头部</p><h2 id="TCP与UDP的概念相互的区别及优劣"><a href="#TCP与UDP的概念相互的区别及优劣" class="headerlink" title="TCP与UDP的概念相互的区别及优劣"></a>TCP与UDP的概念相互的区别及优劣</h2><ol><li>TCP面向连接，UDP面向无链接</li><li>TCP面向报文，UDP面向字节流</li><li>TCP提供可靠传输服务（数据顺序、正确性），UDP传输不可靠</li><li>TCP协议传输速度慢，UDP协议传输速度快</li><li>TCP协议对系统资源要求多（头部开销大），UDP协议要求少*</li></ol><h2 id="VRP-的操作"><a href="#VRP-的操作" class="headerlink" title="VRP 的操作"></a>VRP 的操作</h2><p>管理vlan(虚拟局域网)</p><figure class="highlight bash"><figcaption><span>SW1</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">sysname SW1</span><br><span class="line">interface vlanif 1</span><br><span class="line">ip address 10.1.1.1 24</span><br><span class="line">display this</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>SW2</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">sysname SW2</span><br><span class="line">interface vlan 1</span><br><span class="line">ip address 10.1.1.2 24</span><br></pre></td></tr></table></figure><p>ENSP自带了网络报文解析器。右键设备-数据抓包</p><h1 id="Ehternet基础"><a href="#Ehternet基础" class="headerlink" title="Ehternet基础"></a>Ehternet基础</h1><blockquote><p>网络中传输数据时需要定义并遵循一些标准，以太网是根据IEEE802.3 标准来管理和控制数据帧的。了解IEEE802.3标准是充分理解以太网中链路层通讯的标准。</p></blockquote><ul><li>IEEE 是局域网标准</li></ul><h2 id="以太网帧"><a href="#以太网帧" class="headerlink" title="以太网帧"></a>以太网帧</h2><p>以太网(最流行，最常用，效率最高)，它的数据链路层基于MAC地址进行帧的传输。<br>PR：<br>FR(MA网络)：帧中继靠的是DLCI<br>PPP(ppp网络)、HDLC(ppp网络)：什么都不靠</p><h2 id="以太网MAC地址"><a href="#以太网MAC地址" class="headerlink" title="以太网MAC地址"></a>以太网MAC地址</h2><p>以太网的MAC地址(Media Access Control Address)：<br>由两部分组成:前24位的供应商代码、后24位的序列号。供应商代码由IEEE管理和分配。</p><p><img src="/assets/Picture/images/MacAddress.png"></p><p>OUI：厂商序号</p><h3 id="MAC分类"><a href="#MAC分类" class="headerlink" title="MAC分类"></a>MAC分类</h3><p>单一的源段发送到单一的目的端，每个主机接口由一个MAC地址唯一标识，MAC地址的OUI中第一字节第8个比特表示地址类型，对于主机MAC地址这个比特固定为0如，表示目的的MAC地址为此MAC地址的帧都是发送到某个唯一的端。在冲突域中，所有主机都能收到源主机发送的单播帧，但其他主机发现目的地址与本地MAC地址不一致后会丢弃收到的帧，只有真正的目的主机才会接收并处理收到的帧</p><p><code>单播MAC</code>(1 V 1)：01001100 第一字节的最后一位：0<br><code>组播MAC</code>(1 V n): 00000001 第一字节的最后一位：1<br><code>广播MAC</code>(1 V all): F1111111 第一字节的最后一位：1</p><p>01005E:经典的组播MAC</p><h2 id="以太网封装格式"><a href="#以太网封装格式" class="headerlink" title="以太网封装格式"></a>以太网封装格式</h2><p>以太网两种最常用的以太网封装格式：以太2型和802.3</p><p>80年代初：DIX v2，1983年：提出IEEE8.2.3</p><p>类型的位置除了IP(0800)还有ARP(0806),PPPoE,MP,IPv6c</p><p>两种协议的主要区别在于：</p><p>EnternetII格式中包含一个Type字段，标识以太网帧处理完成值后将被发送到哪个上层协议进行处理。IEEE802.3格式同样的位置是长度字段。</p><p>以太网帧中的Type字段为0X0800，表示该帧的网络层协议为IP协议。</p><p>不同的Type字段值可以用来区别这两种帧的类型:</p><p><code>EnternetII格式</code>: Length&#x2F;Type &gt;&#x3D; 1536(0x0600)<br><img src="/assets/Picture/images/20200517125147.png"></p><p><code>IEEE802.3格式</code>: Length&#x2F;Type &lt;&#x3D; 1500(0x05DC)<br><img src="/assets/Picture/images/20200517125222.png"></p><p>以太网帧中还包括源和目的的MAC地址，分别代表发送者和接受者的MAC，此外还有帧校验序列字段，用于检验传输过程中的完整性。</p><h1 id="以太网IP地址网络基础和FTP"><a href="#以太网IP地址网络基础和FTP" class="headerlink" title="以太网IP地址网络基础和FTP"></a>以太网IP地址网络基础和FTP</h1><h2 id="IP编制"><a href="#IP编制" class="headerlink" title="IP编制"></a>IP编制</h2><h3 id="IP编制组成"><a href="#IP编制组成" class="headerlink" title="IP编制组成"></a>IP编制组成</h3><p><img src="/assets/Picture/images/ndLwcGxUgrkJhCq.png"></p><ol><li>IP 地址分为网络部分和主机部分</li><li>IP 地址由32个二进制位组成，通常用点分十进制形式表示。</li></ol><ul><li>IP报文头部</li></ul><p><img src="/assets/Picture/images/R1GazuNob9qBnwY.png"></p><p>Tyep[Data] 的 1500 包括IP报头</p><h2 id="以太网IPv4基础和分类"><a href="#以太网IPv4基础和分类" class="headerlink" title="以太网IPv4基础和分类"></a>以太网IPv4基础和分类</h2><p><code>/8 </code>：代表掩码，作用：区分网络和主机，代表8个连续的1(255.0.0.0)<br><code>127.0.0.0/8</code> ：网络(主机位全为0)<br><code>127.255.255.255/8</code> ：广播地址(主机全为1)</p><p>每个网段上有两个特俗地址不能分配给主机或网络设备。(除网络地址和广播地址外的其他IP地址可以作为网络设备的IP地址)</p><ol><li><p>IP地址主机位全为0(而不是无端一定为0)，表示一个网段。</p></li><li><p>该网段中的广播地址，目的地址为广播地址的报文会被该网段中的所有网络设备接受，广播地址的主机位全为1.</p></li></ol><h2 id="网络的进制"><a href="#网络的进制" class="headerlink" title="网络的进制"></a>网络的进制</h2><p>二进制，十进制，十六进制(MAC)</p><h2 id="IPv4地址分类"><a href="#IPv4地址分类" class="headerlink" title="IPv4地址分类"></a>IPv4地址分类</h2><p><img src="/assets/Picture/images/20200517125412.png"></p><h3 id="地址范围"><a href="#地址范围" class="headerlink" title="地址范围"></a>地址范围</h3><p>A类：1.0.0.1 - 126.255.255.254<br>B类：128.1.0.1 - 191.255.255.254<br>C类：192.0.1.1 - 223.255.255.254<br>D类：224.0.0.0 - 239.255.255.255<br>E类：240.0.0.1 - 255.255.255.254</p><ul><li>NET: ABCDE的有类网络</li><li>subset：即子网(一个大的网络划分成小的网络)</li></ul><p>10.2.8.3&#x2F;24 可以容纳的主机：2^8-2</p><h3 id="IP地址类型"><a href="#IP地址类型" class="headerlink" title="IP地址类型"></a>IP地址类型</h3><p>互联网标准：RFC </p><ul><li>私有地址</li></ul><ol><li>10.0.0.0~10.255.255.255</li><li>127.16.0.0~127.31.55.255</li><li>192.168.0.0~192.158.255.255</li></ol><ul><li>特俗地址</li></ul><ol><li>127.0.0.0~127.255.255.255, 127.0.0.1主机环回地址</li><li>0.0.0.0</li><li>255.255.2555.255(本地广播地址，是0.0.0.0的广播地址)</li></ol><h2 id="子网掩码-subset-mask"><a href="#子网掩码-subset-mask" class="headerlink" title="子网掩码(subset mask)"></a>子网掩码(subset mask)</h2><p><img src="/assets/Picture/images/YGBtav3hmNwMCDi.png"></p><ul><li>默认子网掩码</li></ul><p><img src="/assets/Picture/images/s25D4BLpFRfkITJ.png"></p><p>A类：8位<br>B类：16位<br>C类：24位</p><h2 id="地址规划"><a href="#地址规划" class="headerlink" title="地址规划"></a>地址规划</h2><p><img src="/assets/Picture/images/xzUOeirdFZqsyjh.png"></p><ul><li>举例</li></ul><p><img src="/assets/Picture/images/iNvgm3yKU5ehRZn.png"></p><p>由子网掩码可知：172.10.1.7&#x2F;16，所以网络地址为：172.16.0.0(主机位全为0)，主机数：2^16,可用主机数: 2^16-2</p><p>例子：10.1.8.3&#x2F;24的网络是什么？第一个可用主机是？最后一个可用主机？可用主机是多少？<br>10.1.8.0，10.1.8.1，10.1.8.254，$2^8$-2&#x3D;254</p><ul><li>变长子网掩码</li></ul><p><img src="/assets/Picture/images/ScY1AUKshDLRvx4.png"></p><p>192.168.1.7&#x2F;25</p><h2 id="有类IP编址的缺陷"><a href="#有类IP编址的缺陷" class="headerlink" title="有类IP编址的缺陷"></a>有类IP编址的缺陷</h2><p>在设计网络时使用有类IP地址会造成地址的浪费。<br><img src="/assets/Picture/images/Sv8LD5ZQUioz7lw.png"></p><h2 id="划分子网方法"><a href="#划分子网方法" class="headerlink" title="划分子网方法"></a>划分子网方法</h2><ol><li><p>根据需要的子网数目来确定子网位数，但是要确保每个子网可用的IP地址数目大于等于本机数。<br>优点：简单<br>缺点：每个子网的实际主机数不同，但分配的IP地址数目相同，可能浪费IP地址</p></li><li><p>根据每个子网的主机数目来确定主机数位，然后确定子网数位。<br>优点：比较充分地利用IP地址<br>缺点：复杂</p></li></ol><h2 id="计算"><a href="#计算" class="headerlink" title="计算"></a>计算</h2><h3 id="科学但麻烦的方法"><a href="#科学但麻烦的方法" class="headerlink" title="科学但麻烦的方法"></a>科学但麻烦的方法</h3><p>要转换二进制<br>二进制:1代表网络，0代表主机。</p><ol><li>子网的数目 &#x3D; $2^x$ (x代表子网位数)</li><li>可用主机数目 &#x3D; $2^y$-2 (y代表主机位数)</li><li>主机位为全1的地址时广播地址&#x3D;下个子网号-1</li><li>主机位全为0的地址是网络地址。</li></ol><ul><li>利用子网数目计算子网掩码</li></ul><blockquote><p>把B类地址172.16.0.0划分成30个子网络，它的子网掩码是多少？</p></blockquote><p>将子网络数目30转换成二进制表示11110<br>统计一下这个二进制的数共有5位<br>注意：当二进制数中只有一个1的时候，所统计的位数需要减1（例如：10000要统计为4位）<br>将B类地址的子网掩码255.255.0.0主机地址部分的前5位变成1<br>这就得到了所要的子网掩码（11111111.11111111.11111000.00000000）255.255.248.0。</p><ul><li>利用主机数目计算子网掩码</li></ul><blockquote><p>把B类地址172.16.0.0划分成若干子网络，每个子网络能容纳500台主机，它的子网掩码是多少？</p></blockquote><p>把500转换成二进制表示111110100<br>统计一下这个二进制的数共有9位<br>将子网掩码255.255.255.255从后向前的9位变成0<br>这就得到了所要的子网掩码（11111111.11111111.11111110.00000000）255.255.254.0。</p><ul><li>利用子网掩码计算最大有效子网数</li></ul><blockquote><p>A类IP地址，子网掩码为255.224.0.0，它所能划分的最大有效子网数是多少？</p></blockquote><p>将子网掩码转换成二进制表示11111111.11100000.00000000.00000000<br>统计一下它的网络位共有11位<br>A类地址网络位的基础数是8，二者之间的位数差是3<br>最大有效子网数就是$2^3$，即最多可以划分8个子网络。</p><ul><li>利用子网掩码计算最大可用主机数</li></ul><blockquote><p>A类IP地址，子网掩码为255.252.0.0，将它划分成若干子网络，每个子网络中可用主机数有多少？</p></blockquote><p>将子网掩码转换成二进制表示11111111.11111100.00000000.00000000<br>统计一下它的主机位共有18位<br>最大可用主机数就是 2^18-2（除去全是0的网络地址和全是1广播地址），即每个子网络最多有262142台主机可用。</p><ul><li>利用子网掩码确定子网络的起止地址</li></ul><blockquote><p>B类IP地址172.16.0.0，子网掩码为255.255.192.0，它所能划分的子网络起止地址是多少？</p></blockquote><ul><li>利用子网掩码计算，最多可以划分4个子网络</li></ul><blockquote><p>利用子网掩码计算，每个子网络可容纳16384台主机（包括网络地址和广播地址）</p></blockquote><p>用16384除以256（网段内包括网络地址和广播地址的全部主机数），结果是64<br>具体划分网络起止方法如下：<br>172.16.0.0～172.16.63.255<br>172.16.64.0～172.16.127.255<br>172.16.128.0～172.16.191.255<br>172.16.192.0～172.16.255.255</p><p><a href="http://blog.sina.com.cn/s/blog_5753d0930101fxdf.html">参考来源</a></p><h2 id="快速但需要检验的方法"><a href="#快速但需要检验的方法" class="headerlink" title="快速但需要检验的方法"></a>快速但需要检验的方法</h2><p>快的方式(Block):几个主机位,算B类地址比较麻烦.</p><ul><li>例子</li></ul><p>132.56.45.7&#x2F;30,网络位，主机位多少？</p><p>30转成二进制：1111，1100，后两位的0的块：$2^2$,一块最多4个主机(0-3,4-7,8-11)</p><h2 id="CIDR-无类域间路由"><a href="#CIDR-无类域间路由" class="headerlink" title="CIDR 无类域间路由"></a>CIDR 无类域间路由</h2><p>cidrreport.org<br>无间路由(Classless Inter Domain Routing):由RFC1871定义。突破传统的地址分类边界，将路由表中的若干条线路汇聚成一条路由，减少了路由表的规模，提高了路由的可扩展性。</p><p><img src="/assets/Picture/images/xD3bcuXPFsLTiSZ.png"></p><p>图中：转成二进制：<br>10.24.0000，0000.0<br>10.24.0000，0001.0<br>10.24.0000，0010.0<br>10.24.0000，0011.0</p><p>转二进制部分只有后两位不一样。把网络往前推（子网是Mask边长汇总是Mask变短),原来是24，变短就是22.</p><h2 id="网关-Gateway"><a href="#网关-Gateway" class="headerlink" title="网关(Gateway)"></a>网关(Gateway)</h2><p>用来转发来自不同网段之间的数据包。</p><p><img src="/assets/Picture/images/6y7Jc51WoUZINP8.png"></p><h2 id="实施FTP"><a href="#实施FTP" class="headerlink" title="实施FTP"></a>实施FTP</h2><ul><li>文件传输</li></ul><p>FTP：文件传输协议 (华为居多)，基于TCP，两个端口号,控制端口一般为21，而数据端口不一定是20，和FTP的应用模式有关，如果是主动模式，应该为20，如果为被动模式，由服务器端和客户端协商而定。<br>TFTP：简单文件传输协议 (思科居多)，基于UDP</p><ol><li>网络连通性</li></ol><figure class="highlight bash"><figcaption><span>SW1</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">interface vlanf1</span><br><span class="line">ip address 10.1.1.1 255.255.255.0</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>SW2</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">interface vlanf1</span><br><span class="line">ip address 10.1.1.2 255.255.255.0</span><br></pre></td></tr></table></figure><p>测试连通性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping 10.1.1.1.2</span><br></pre></td></tr></table></figure><ol start="2"><li>开启FTP服务</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ftp server <span class="built_in">enable</span></span><br><span class="line">diaplay ftp-servver <span class="comment"># 查看状态</span></span><br></pre></td></tr></table></figure><ol start="3"><li>实施FTP</li></ol><p>开启3A（认证，授权，统计）</p><figure class="highlight bash"><figcaption><span>SW1</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">aaa</span><br><span class="line">local-user Endar password simple userName <span class="comment"># 增加用户名和密码</span></span><br><span class="line">local-user Endar level 15 <span class="comment"># 设置最高的访问权限，0-15级</span></span><br><span class="line">local-user Endar ftp-directory flash: <span class="comment"># 共享所有目录，后面可以指定其他</span></span><br><span class="line">local-user Endar server-type ftp <span class="comment"># 设置用户服务用于ftp协议</span></span><br><span class="line">save Endar.zip <span class="comment"># 保持配置文件</span></span><br><span class="line">sss</span><br><span class="line"></span><br><span class="line">客户端测试</span><br><span class="line"></span><br><span class="line">```bash SW2</span><br><span class="line">ftp 10.1.1.1 <span class="comment"># 后输入用户名、密码</span></span><br><span class="line"><span class="built_in">dir</span> <span class="comment"># 查考目录</span></span><br><span class="line">get Endar.zip <span class="comment"># 获取文件</span></span><br><span class="line">q <span class="comment"># 退出</span></span><br></pre></td></tr></table></figure><h1 id="以太网IP头部概述和VRP相关讲解"><a href="#以太网IP头部概述和VRP相关讲解" class="headerlink" title="以太网IP头部概述和VRP相关讲解"></a>以太网IP头部概述和VRP相关讲解</h1><p>一公司四个部门，5、25、27、15人，规划每个部门vlan，给固定长度掩码：192.168.1.0&#x2F;27，192.168.1.32&#x2F;27，192.168.1.64&#x2F;27，192.168.1.96&#x2F;27</p><h2 id="IP包头的重要字段"><a href="#IP包头的重要字段" class="headerlink" title="IP包头的重要字段"></a>IP包头的重要字段</h2><h2 id="VRP基础-应用"><a href="#VRP基础-应用" class="headerlink" title="VRP基础(应用)"></a>VRP基础(应用)</h2><h1 id="VRP-通用路由平台-的FTP应用"><a href="#VRP-通用路由平台-的FTP应用" class="headerlink" title="VRP(通用路由平台)的FTP应用"></a>VRP(通用路由平台)的FTP应用</h1><p>可以Web、Cli登录<br>常用密码：Admin@huawei</p><h2 id="设备初始化启动"><a href="#设备初始化启动" class="headerlink" title="设备初始化启动"></a>设备初始化启动</h2><p>bios 自检<br>内存检测<br>copy 数据(VRP包拷贝)<br>解压缩到内存<br>CTRL + B 停止自动启动(后可以初始密码)</p><h2 id="命令行视图"><a href="#命令行视图" class="headerlink" title="命令行视图"></a>命令行视图</h2><p><img src="/assets/Picture/images/RLPUMe4njqVylga.png"></p><ul><li>用户视图</li></ul><p>清除、display、保存</p><ul><li>系统视图(system-view)</li></ul><p>以中括号显示。可以display，但不能清除、保存<br>配置系统参数</p><ul><li><p>接口视图</p></li><li><p>协议视图</p></li></ul><p>OSPF、BGP、is-is</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">ospf <span class="comment"># 进入 osp 协议设置</span></span><br><span class="line">bgp <span class="comment"># 将进入 bgp协议设置</span></span><br></pre></td></tr></table></figure><h2 id="命令行功能"><a href="#命令行功能" class="headerlink" title="命令行功能"></a>命令行功能</h2><table><thead><tr><th align="left">命令</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">CTRL + A</td><td align="left">光标移动到当前目录行最前端</td></tr><tr><td align="left">CTRL + E</td><td align="left">光标移动到当前目录行最末端</td></tr><tr><td align="left">CTRL + C</td><td align="left">停止当前命令的运行</td></tr><tr><td align="left">CTRL + Z</td><td align="left">回到用户视图</td></tr><tr><td align="left">CTRL + ]</td><td align="left">终止当前连接或切换连接</td></tr><tr><td align="left">Backspace</td><td align="left">删除光标左边的第一个字符</td></tr><tr><td align="left">⬅ Or CTRL + B</td><td align="left">光标左移一位</td></tr><tr><td align="left">➡ Or CRTL + F</td><td align="left">光标右移一位</td></tr><tr><td align="left">TAB</td><td align="left">输入一个不完整的命令按TAB进行补全</td></tr></tbody></table><h2 id="命令行在线帮助"><a href="#命令行在线帮助" class="headerlink" title="命令行在线帮助"></a>命令行在线帮助</h2><ul><li>部分帮助</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;d?</span><br><span class="line">&lt;Huawei&gt;display h?</span><br></pre></td></tr></table></figure><ul><li>完全帮助</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;?</span><br><span class="line">&lt;Huawei&gt;dislay?</span><br></pre></td></tr></table></figure><h2 id="命令等级"><a href="#命令等级" class="headerlink" title="命令等级"></a>命令等级</h2><table><thead><tr><th align="left">用户等级</th><th align="left">命令等级</th><th align="left">名称</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">0</td><td align="left">访问级</td></tr><tr><td align="left">1</td><td align="left">0 and 1</td><td align="left">监控级</td></tr><tr><td align="left">2</td><td align="left">0，1 and 2</td><td align="left">配置级</td></tr><tr><td align="left">3-15</td><td align="left">0，1，2 and 3</td><td align="left">管理级</td></tr></tbody></table><p>允许某管理员保存系统配置，则可以将save命令的级别提高到4级，并定义只有该管理员有4级权限。就可以在不影响其他用户的情况下，实现命令的使用控制。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">command-privileage level 2 view user save</span><br></pre></td></tr></table></figure><h2 id="用户界面"><a href="#用户界面" class="headerlink" title="用户界面"></a>用户界面</h2><p>VTY接口最大可配范围：0~4</p><table><thead><tr><th align="left">用户界面类型</th><th align="left">编号</th></tr></thead><tbody><tr><td align="left">Console</td><td align="left">0</td></tr><tr><td align="left">VTY</td><td align="left">0~4</td></tr></tbody></table><figure class="highlight bash"><figcaption><span>R1</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">user-intetface vty 0 4</span><br><span class="line"><span class="built_in">set</span> authentication password clipher pass</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>R2</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">talnet 12.1.1.1</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>R1</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">diaplay <span class="built_in">users</span> <span class="comment"># 查看用户</span></span><br><span class="line">user privilege level 2 <span class="comment"># 设置用户登陆权限</span></span><br></pre></td></tr></table></figure><p><code>user-interface maximum-vty number</code> 可以配置同时登陆到设备的VTY类型用户界面的最大个数，如最大登录用户数设为0，则任何用户都不能通过Telnet或者SSH登陆到路由器。</p><ul><li>配置用户界面命令</li></ul><table><thead><tr><th align="left">命令</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">idle-tineout</td><td align="left">设置超时时间默认十分钟</td></tr><tr><td align="left">screen-length</td><td align="left">设置指定终端屏幕的临时显示行数(0不显示)</td></tr><tr><td align="left">history-command max-size</td><td align="left">设置历史命令缓冲区的大小</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">user-interface console 0</span><br><span class="line">histoty-command max-size 20</span><br><span class="line">indle-timeout 1 30 <span class="comment"># 1分20秒(最好不要改))</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">user-interface console 0</span><br><span class="line">screen-length 512 <span class="comment"># 最大行数512</span></span><br></pre></td></tr></table></figure><h2 id="CTR-快捷键"><a href="#CTR-快捷键" class="headerlink" title="CTR 快捷键"></a>CTR 快捷键</h2><table><thead><tr><th align="left">命令</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">CTRL + TAB</td><td align="left">到达后一标签</td></tr><tr><td align="left">CTRL + SHIFT + TAB</td><td align="left">前一标签</td></tr><tr><td align="left">ALT + 数字</td><td align="left">直接到达某标签</td></tr></tbody></table><h2 id="配置标题消息"><a href="#配置标题消息" class="headerlink" title="配置标题消息"></a>配置标题消息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置在用户登录前显示的标题信息</span></span><br><span class="line">header login information <span class="string">&quot;Welcome to huawei certification&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置在用户登陆后显示的标题信息</span></span><br><span class="line">header shell information <span class="string">&quot;Please dont&#x27;t reboot this devices&quot;</span></span><br></pre></td></tr></table></figure><p><code>dis current-configuration | ? </code><br><code>dis current-configuration | include header </code> 显示包含 header 的命令有哪些 </p><h1 id="文件系统管理"><a href="#文件系统管理" class="headerlink" title="文件系统管理"></a>文件系统管理</h1><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><table><thead><tr><th align="left">命令</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">pwd</td><td align="left">查看当前目录</td></tr><tr><td align="left">dir</td><td align="left">显示当前目录下的文件信息</td></tr><tr><td align="left">more</td><td align="left">查看文本文件的具体内容</td></tr><tr><td align="left">cd</td><td align="left">修改当前用户当前界面的工作目录</td></tr><tr><td align="left">mkdir</td><td align="left">创建新目录</td></tr><tr><td align="left">rmdir</td><td align="left">删除目录</td></tr><tr><td align="left">copy</td><td align="left">复制文件</td></tr><tr><td align="left">move</td><td align="left">移动文件</td></tr><tr><td align="left">rename</td><td align="left">村民们文件</td></tr><tr><td align="left">delete &#x2F; unreserved</td><td align="left">删除&#x2F;永久删除文件</td></tr><tr><td align="left">undelete</td><td align="left">恢复删除的文件</td></tr><tr><td align="left">reset recycle-bin</td><td align="left">彻底删除回收站的文件</td></tr><tr><td align="left">save</td><td align="left">保存配置，要在用户模式下</td></tr></tbody></table><h2 id="配置文件管理"><a href="#配置文件管理" class="headerlink" title="配置文件管理"></a>配置文件管理</h2><p><img src="/assets/Picture/images/B7dYZRDnW2tQmc6.png"></p><ul><li>配置文件查询</li></ul><table><thead><tr><th align="left">命令</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">diaplay curremt-contiguration</td><td align="left">显示当前配置文件</td></tr><tr><td align="left">diaplay saved-configuration</td><td align="left">显示保存的配置文件</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">save Endar.zip <span class="comment"># 保存配置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前配置</span></span><br><span class="line">diaplay current-configuration</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示保存的配置文件</span></span><br><span class="line">diaplay saved-configuration</span><br></pre></td></tr></table></figure><ul><li>系统启动文件查查</li></ul><table><thead><tr><th align="left">命令</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">display startup</td><td align="left">查看系统启动参数</td></tr></tbody></table><ul><li>系统启动配置文件修改</li></ul><p><code>startuo ?</code> :</p><ol><li>path # 加载补丁</li><li>save-configuration # 加载下次的配置</li><li>system-software # 加载下次启动的软件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置系统下次启动时使用的配置文件</span></span><br><span class="line">startup save-configuration Ender.zip</span><br><span class="line">dis startup</span><br></pre></td></tr></table></figure><ul><li>比较当前配置和保存的配置</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compare configuration</span><br></pre></td></tr></table></figure><ul><li>配置文件重装</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清楚下次启动时加载的配置文件</span></span><br><span class="line">reset save-contiguration</span><br></pre></td></tr></table></figure><ul><li>设置环回地址</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">interface loopback 0</span><br><span class="line">ip address 10.1.1.1 32</span><br></pre></td></tr></table></figure><h2 id="存储设备"><a href="#存储设备" class="headerlink" title="存储设备"></a>存储设备</h2><p>SDRAM、Flash、NVRAM、SD Card、USB</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示存储设备信息</span></span><br><span class="line">diaplay version</span><br></pre></td></tr></table></figure><ul><li>存储设备修复</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fixdisk flash:</span><br><span class="line"></span><br><span class="line">fixdisk ad1:</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LAMP</title>
      <link href="/posts/LAMP.html"/>
      <url>/posts/LAMP.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Linux 编译安装 LAMP </p></blockquote><h1 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h1><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>编译工具&amp;开发包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install make gcc openssl</span><br></pre></td></tr></table></figure><p>依赖包</p><table><thead><tr><th align="left">包</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><a href="https://httpd.apache.org/">httpd</a></td><td align="left">Apache 主程序包</td></tr><tr><td align="left"><a href="https://apr.apache.org/download.cgi">apr</a></td><td align="left">Apache 依赖包</td></tr><tr><td align="left"><a href="https://apr.apache.org/download.cgi">apr-util</a></td><td align="left">Apache 依赖包</td></tr><tr><td align="left"><a href="https://ftp.pcre.org/pub/pcre/">pcre</a></td><td align="left">Apache 依赖包</td></tr></tbody></table><span id="more"></span><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><ul><li>apr</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf apr-1.5.2.tar.gz</span><br><span class="line">cd apr-1.5.2</span><br><span class="line">./configure --prefix=/usr/local/apr</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><ul><li>apr-util</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf apr-util-1.5.4.tar.gz</span><br><span class="line">cd apr-tuil-1.5.4</span><br><span class="line">./configure --prefix=/usr/local/apr-util/\</span><br><span class="line">--with-apr=/usr/local/apr/bin/apr-1-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><ul><li>pcre</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">unzip -o pcre-8.38.zip</span><br><span class="line">cd pcre-8.38</span><br><span class="line">./cofigure --prefix=/usr/local/pcre</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><ul><li>Apache</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf httpd-2.4.18.tar.gz -C /usr/local/src/</span><br><span class="line">cd /usr/local/src/httpd-2.4.18/</span><br><span class="line">./configure --prefix=/usr/local/apache2 \</span><br><span class="line">--enable-so \</span><br><span class="line">--enable-ssl \</span><br><span class="line">--with-apr=/usr/local/apr/ \</span><br><span class="line">--with-apr-util=/usr/local/apr-util/ \</span><br><span class="line">--with-pcre=/usr/local/pcre/</span><br></pre></td></tr></table></figure><p>注:<br>–enable-so # 支持动态加载模块哦<br>–enable-rewrite # 支持网站地址重写<br>–with-apr&#x3D;&#x2F;usr&#x2F;local&#x2F;apr # 关联 apr</p><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /usr/local/apache2/conf/httpd.conf</span><br></pre></td></tr></table></figure><h3 id="网站根目录"><a href="#网站根目录" class="headerlink" title="网站根目录"></a>网站根目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /usr/local/apache2/htdocs/</span><br></pre></td></tr></table></figure><h3 id="生成启动脚本"><a href="#生成启动脚本" class="headerlink" title="生成启动脚本"></a>生成启动脚本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/local/apache2/bin/apachectl  /etc/init.d/</span><br><span class="line">chmod +x /etc/init.d/apachectl</span><br></pre></td></tr></table></figure><p>vim &#x2F;etc&#x2F;init.d&#x2F;apachectl</p><figure class="highlight shell"><figcaption><span>apachectl</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">chkconfig: 2345 64 36</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">descroption:  apache service</span></span><br></pre></td></tr></table></figure><h2 id="将服务添加到系统启动列表"><a href="#将服务添加到系统启动列表" class="headerlink" title="将服务添加到系统启动列表"></a>将服务添加到系统启动列表</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --add apachectl</span><br><span class="line">chkconfig apachectl on</span><br><span class="line">chkconfig --list apachectl </span><br><span class="line">service apachectl start</span><br></pre></td></tr></table></figure><h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><h2 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h2><p><a href="https://sourceforge.net/projects/boost/files/latest/download">boost</a><br><a href="https://dev.mysql.com/downloads/mysql/">MySQL</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y remove boost</span><br><span class="line">yum -y remove mysql</span><br></pre></td></tr></table></figure><h2 id="Install-1"><a href="#Install-1" class="headerlink" title="Install"></a>Install</h2><h3 id="添加用户和组"><a href="#添加用户和组" class="headerlink" title="添加用户和组"></a>添加用户和组</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd mysql</span><br><span class="line">useradd -M -s /sbin/nologin -r -g mysql mysql</span><br></pre></td></tr></table></figure><h3 id="创建安装目录和数据存放目录"><a href="#创建安装目录和数据存放目录" class="headerlink" title="创建安装目录和数据存放目录"></a>创建安装目录和数据存放目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir /server</span><br><span class="line">mount /dev/sdb2 /server/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开机自动挂载</span></span><br><span class="line">echo &quot;/dev/sdb2 /server ext4 defaults 0 0&quot; &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /server/mysql/data</span><br><span class="line">tar -zxvf boost_1_59_0.tar.gz</span><br><span class="line">mv booboost_1_59_0 boost</span><br><span class="line">tar -zxvf mysql-5.7.11.tar.gz</span><br><span class="line"></span><br><span class="line">cd mysql-5.7.11</span><br><span class="line"> cmake . \</span><br><span class="line">-DCMAKE_INSTALL_PREFIX=/usr/local/mysql \</span><br><span class="line">-DSYSCONFDIR=/server/mysql/data \</span><br><span class="line">-DSYCONFDIR=/etc \</span><br><span class="line">-DWITH_MYISAM_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_MEMORY_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_READLINE=1 \</span><br><span class="line">-DMYSQL_UNIX_ADDR=/tmp/mysql.sock \</span><br><span class="line">-DMYSQL_TCP_PORT=3306 \</span><br><span class="line">-DENABLED_LOCAL_INFILE=1 \</span><br><span class="line">-DWITH_PARTITION_STORAGE_ENGINE=1 \</span><br><span class="line">-DEXTRA_CHARSETS=all \</span><br><span class="line">-DDEFAULT_CHARSET=utf8 \</span><br><span class="line">-DDEFAULT_COLLATION=utf8_general_ci \</span><br><span class="line">-DDOWNLOAD_BOOST=1 \</span><br><span class="line">DWITH_BOOST=/server/boost</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">make -j 4 # 多核心安装</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看核心数</span></span><br><span class="line">grep processor /proc.cpuinfo | wc -l</span><br><span class="line"></span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>修改目录权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R mysql:mysql /server/mysql/</span><br></pre></td></tr></table></figure><p>生成配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/my.cnf&#123;,.bak&#125;</span><br><span class="line">cp /server/mysql/support-files/my-default.cnf /etc/my.cnf</span><br></pre></td></tr></table></figure><p>生成服务启动脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp /server/mysql/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">chkcongig mysqld on</span><br><span class="line">chkconfig --list mysqld</span><br></pre></td></tr></table></figure><p>初始化数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/server/mysqk/bin/mysqld --initialize-insecure --user=mysql --basedir=/server/mysql --datadir=/server/mydql/data</span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server mysqld start</span><br></pre></td></tr></table></figure><p>添加 path 路径</p><ol><li>方法一</li></ol><figure class="highlight shell"><figcaption><span>vim</span><a href="/etc/profile">link</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export MYSQL_HOME=/server/mysql</span><br><span class="line">export PATH=$PATH:$MYSQL_HOMW/bin</span><br></pre></td></tr></table></figure><p>使修改生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><ol start="2"><li>方法二<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /server/mysql/bin/* /user/local/bin</span><br></pre></td></tr></table></figure></li></ol><p>修改密码</p><ol><li>方法一</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u roor password &quot;123456&quot;</span><br></pre></td></tr></table></figure><ol start="2"><li>方法二</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql</span><br><span class="line">set password=password(&#x27;123456&#x27;);</span><br></pre></td></tr></table></figure><h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><h2 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install php-mcrypt libmcrypt libmcrypt-devel autoconf freetype gd libmcrypt libpng libpng-devel libjpeg libxml2 libxml2-devel zlib curl curl-devel</span><br></pre></td></tr></table></figure><h2 id="Install-2"><a href="#Install-2" class="headerlink" title="Install"></a>Install</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar  zxvf php-7.05.tar.gz</span><br></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cd php-7.05</span><br><span class="line">./configure --prefix=/server/php7/ \</span><br><span class="line">--with-apx2=/use/local/apache2/bin/apxs \</span><br><span class="line">--enable-mbstring \</span><br><span class="line">--with-curl \</span><br><span class="line">--with-gd \</span><br><span class="line">--enable-fpm \</span><br><span class="line">--enab;e-musqld \</span><br><span class="line">--with-pdo-mysql=mysqld \</span><br><span class="line">--with-config-file-path=/server/php7/etc/ \</span><br><span class="line">--with-mysqli=mysqlnd \</span><br><span class="line">--with-mysql-socl=/server/mysql/mysql.sock</span><br></pre></td></tr></table></figure><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make -j 4</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>生成配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp php.ini-production /server/php7/etc/php.int</span><br></pre></td></tr></table></figure><p>添加 Apache 支持</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/apache2/cong/httpd.conf</span><br><span class="line"></span><br><span class="line">Addtype application/x-httpd=php .php .phtml</span><br></pre></td></tr></table></figure><p>创建测试页面</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/apache2/htdocs/</span><br><span class="line">echo &quot;</span><br><span class="line">&lt;?php phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Python pip 速度慢</title>
      <link href="/posts/PipInstall.html"/>
      <url>/posts/PipInstall.html</url>
      
        <content type="html"><![CDATA[<p>解决 Python 安装库时速度慢或者超时问题</p><h1 id="设置超时时间"><a href="#设置超时时间" class="headerlink" title="设置超时时间"></a>设置超时时间</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip --default-timeout=<span class="number">1000</span> install jieba</span><br></pre></td></tr></table></figure><h1 id="i-指定源"><a href="#i-指定源" class="headerlink" title="-i 指定源"></a>-i 指定源</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install wordcloud -i https://pypi.tuna.tsinghua.edu.cn/simple/</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="更改默认设置"><a href="#更改默认设置" class="headerlink" title="更改默认设置"></a>更改默认设置</h1><figure class="highlight python"><figcaption><span>~/.pip/pip.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">global</span>]</span><br><span class="line">index-url = http://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">[install]</span><br><span class="line">trusted-host=mirrors.aliyun.com</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matplotlib 中文乱码</title>
      <link href="/posts/MatplotlibZh.html"/>
      <url>/posts/MatplotlibZh.html</url>
      
        <content type="html"><![CDATA[<p>Linux 解决 matplotlib 中文乱码问题</p><span id="more"></span><h1 id="安装字体"><a href="#安装字体" class="headerlink" title="安装字体"></a>安装字体</h1><ul><li><p>安装中文字体，例如 SimHei</p></li><li><p>检测本机中文字体</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib.font_manager <span class="keyword">import</span> FontManager</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">fm = FontManager()</span><br><span class="line">mat_fonts = <span class="built_in">set</span>(f.name <span class="keyword">for</span> f <span class="keyword">in</span> fm.ttflist)</span><br><span class="line"><span class="comment">#print(mat_fonts)</span></span><br><span class="line">output = subprocess.check_output(<span class="string">&#x27;fc-list :lang=zh -f &quot;%&#123;family&#125;\n&quot;&#x27;</span>, shell=<span class="literal">True</span>)</span><br><span class="line"><span class="comment">#print( &#x27;*&#x27; * 10, &#x27;系统可用的中文字体&#x27;, &#x27;*&#x27; * 10)</span></span><br><span class="line"><span class="comment">#print (output)</span></span><br><span class="line">zh_fonts = <span class="built_in">set</span>(f.split(<span class="string">&#x27;,&#x27;</span>, <span class="number">1</span>)[<span class="number">0</span>] <span class="keyword">for</span> f <span class="keyword">in</span> output.decode(<span class="string">&#x27;utf-8&#x27;</span>).split(<span class="string">&#x27;\n&#x27;</span>))</span><br><span class="line">available = mat_fonts &amp; zh_fonts</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;*&#x27;</span> * <span class="number">10</span>, <span class="string">&#x27;可用的字体&#x27;</span>, <span class="string">&#x27;*&#x27;</span> * <span class="number">10</span>)</span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> available:</span><br><span class="line">     <span class="built_in">print</span> (f)</span><br></pre></td></tr></table></figure><h1 id="配置字体"><a href="#配置字体" class="headerlink" title="配置字体"></a>配置字体</h1><ul><li>复制字体</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> font.ttf /usr/share/fonts</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> font.ttf /usr/lib/python3.7/site-packages/matplotlib/mpl-data/fonts</span><br></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><figure class="highlight plaintext"><figcaption><span>/usr/lib/python3.7/site-packages/matplotlib/mpl-data</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nvim matplotlibrc</span><br></pre></td></tr></table></figure><ul><li>matplotlibrc</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">font.family     : sans-serif                                           </span><br><span class="line">font.serif▏     : serif     </span><br><span class="line"></span><br><span class="line">font.serif         : SimHei,Source Code Pro,DejaVu Serif, Bitstream Vera Serif, Computer Modern Roman, New Century Schoolbook, Century Schoolbook L, Utopia</span><br><span class="line">font.sans-serif    : SimHei,Source Code Pro,DejaVu Sans, Bitstream Vera Sans, Computer Modern Sans Serif, Lucida Grande, Verdana, Geneva, Lucid, Arial, Helvetica</span><br></pre></td></tr></table></figure><h1 id="清楚缓存"><a href="#清楚缓存" class="headerlink" title="清楚缓存"></a>清楚缓存</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf ~/.cache/matplotlib</span><br></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 中文乱码的处理</span></span><br><span class="line">from pylab import mpl</span><br><span class="line">mpl.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = [<span class="string">&#x27;Source Code Pro&#x27;</span>] <span class="comment"># 指定默认字体</span></span><br><span class="line">mpl.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = False <span class="comment"># 解决保存图像是负号&#x27;-&#x27;显示为方块的问题</span></span><br></pre></td></tr></table></figure><hr><p><strong>参考资料</strong></p><ul><li><a href="https://segmentfault.com/a/1190000000621721">Linux下解决matplotlib中文乱码的方法</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Wine 调整分辨率</title>
      <link href="/posts/Wine-dpi.html"/>
      <url>/posts/Wine-dpi.html</url>
      
        <content type="html"><![CDATA[<p>Linux Wine 调整分辨率</p><span id="more"></span><h1 id="终端输入"><a href="#终端输入" class="headerlink" title="终端输入"></a>终端输入</h1><ul><li>应用设置</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">env</span> WINEPREFIX=<span class="string">&quot;<span class="variable">$HOME</span>/.deepinwine/Deepin-WeChat&quot;</span> winecfg</span><br></pre></td></tr></table></figure><ul><li>全局设置</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winecfg</span><br></pre></td></tr></table></figure><h1 id="设置分辨率"><a href="#设置分辨率" class="headerlink" title="设置分辨率"></a>设置分辨率</h1><p><img src="/assets/Picture/images/wine-dpi.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Wine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Xpath 升格用法</title>
      <link href="/posts/Xpath.html"/>
      <url>/posts/Xpath.html</url>
      
        <content type="html"><![CDATA[<p>xpath 升格用法</p><span id="more"></span><h1 id="匹配当前节点下所有子节点"><a href="#匹配当前节点下所有子节点" class="headerlink" title="匹配当前节点下所有子节点 .//"></a>匹配当前节点下所有子节点 <code>.//</code></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xpath(<span class="string">&#x27;//div//&#x27;</span>) <span class="comment"># div 当前节点</span></span><br></pre></td></tr></table></figure><ul><li><code>//</code> 标签下的所有标签</li></ul><h1 id="匹配某标签的属性值-属性名称"><a href="#匹配某标签的属性值-属性名称" class="headerlink" title="匹配某标签的属性值 /@属性名称"></a>匹配某标签的属性值 <code>/@属性名称</code></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取 input value</span></span><br><span class="line">xpath(<span class="string">&#x27;//input/@value&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="匹配多个路径"><a href="#匹配多个路径" class="headerlink" title="匹配多个路径 |"></a>匹配多个路径 <code>|</code></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xpath(<span class="string">&#x27;//div/text() | //div/div/text()&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="按属性匹配"><a href="#按属性匹配" class="headerlink" title="按属性匹配 @"></a>按属性匹配 <code>@</code></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取所有id=&quot;test&quot;的所有文本内容</span></span><br><span class="line">xpath(<span class="string">&#x27;//*[@id=&quot;test&quot;]//text()&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="匹配不包含某个属性的标签-not"><a href="#匹配不包含某个属性的标签-not" class="headerlink" title="匹配不包含某个属性的标签 not"></a>匹配不包含某个属性的标签 <code>not</code></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 多用于表格中匹配中不包含表头信息的数据</span></span><br><span class="line">xpath(<span class="string">&#x27;//table/tr[not(@class=&quot;tbhead&quot;)]&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="匹配包含多个属性的标签-and"><a href="#匹配包含多个属性的标签-and" class="headerlink" title="匹配包含多个属性的标签 and"></a>匹配包含多个属性的标签 <code>and</code></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匹配所有的tr中不包含 tbhead 属性 和包含 head 的tr标签</span></span><br><span class="line">xpath(<span class="string">&#x27;//table/tr[not(@class=&quot;tbhead&quot;) and @class=&quot;head&quot;]&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="匹配包含不同属性的名称相同的标签-or"><a href="#匹配包含不同属性的名称相同的标签-or" class="headerlink" title="匹配包含不同属性的名称相同的标签 or"></a>匹配包含不同属性的名称相同的标签 <code>or</code></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匹配包含class=&quot;speedbar&quot; 或者 class=&quot;content-wrap&quot; 的标签</span></span><br><span class="line">xpath（<span class="string">&#x27;//div[@class=&quot;speedbar&quot; or @class=&quot;content-wrap&quot;]&#x27;</span>）</span><br></pre></td></tr></table></figure><h1 id="将对象还原为字符串-etree-tostring（）"><a href="#将对象还原为字符串-etree-tostring（）" class="headerlink" title="将对象还原为字符串 etree.tostring（）"></a>将对象还原为字符串 <code>etree.tostring（）</code></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将匹配到的对象，作为etree.tostring（）的参数即可，  注： 返回字符串</span></span><br><span class="line">sObj = xml.xpath(<span class="string">&#x27;//*[@id=&quot;test&quot;]&#x27;</span>)[<span class="number">0</span>]<span class="comment"># 使用xpath定位一个节点</span></span><br><span class="line">sStr = etree.tostring(sObj)</span><br></pre></td></tr></table></figure><h1 id="按轴-Axes-匹配"><a href="#按轴-Axes-匹配" class="headerlink" title="按轴(Axes)匹配"></a>按轴(Axes)匹配</h1><h2 id="选取当前节点的所有子元素-child"><a href="#选取当前节点的所有子元素-child" class="headerlink" title="选取当前节点的所有子元素 child"></a>选取当前节点的所有子元素 <code>child</code></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取div下的tr的标签</span></span><br><span class="line">xpath(<span class="string">&#x27;//div[@id=&quot;testid&quot;]/child::tr/td/text()&#x27;</span>)</span><br><span class="line"><span class="comment"># 感觉这种方法鸡肋， 也可以实现</span></span><br><span class="line">xpath(<span class="string">&#x27;//div[@id=&quot;testid&quot;]//tr/td&#x27;</span>) </span><br></pre></td></tr></table></figure><h2 id="选取当前节点的所有属性-attribute"><a href="#选取当前节点的所有属性-attribute" class="headerlink" title="选取当前节点的所有属性 attribute"></a>选取当前节点的所有属性 <code>attribute</code></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取div标签所有的属性值</span></span><br><span class="line">xpath(<span class="string">&#x27;//div/attribute::*&#x27;</span>) </span><br><span class="line"><span class="comment"># 感觉这种方法鸡肋，//div/@* 同样能实现</span></span><br></pre></td></tr></table></figure><h2 id="ancestor：父辈元素-ancestor-or-self：父辈元素及当前元素"><a href="#ancestor：父辈元素-ancestor-or-self：父辈元素及当前元素" class="headerlink" title="ancestor：父辈元素 &#x2F; ancestor-or-self：父辈元素及当前元素"></a>ancestor：父辈元素 &#x2F; ancestor-or-self：父辈元素及当前元素</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取父辈元素的div的所有属性值， 在不好定位的情况下，通过孩子标签定位，这种方法可以用</span></span><br><span class="line">xpath(<span class="string">&#x27;//div[@id=&quot;test&quot;]/ancestor::div/@*&#x27;</span>)</span><br><span class="line">xpath(<span class="string">&#x27;//div[@id=&quot;test&quot;]/ancestor-or-self::div/@*&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="descendant：后代-descendant-or-self：后代及当前节点本身"><a href="#descendant：后代-descendant-or-self：后代及当前节点本身" class="headerlink" title="descendant：后代 &#x2F; descendant-or-self：后代及当前节点本身"></a>descendant：后代 &#x2F; descendant-or-self：后代及当前节点本身</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取孩子元素的div的所有属性值，感觉鸡肋</span></span><br><span class="line">xpath(<span class="string">&#x27;//div[@id=&quot;test&quot;]/descendant::div/@*&#x27;</span>)</span><br><span class="line">xpath(<span class="string">&#x27;//div[@id=&quot;test&quot;]/descendant-or-self::div/@*&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="选取当前节点的所有命名空间节点-namespace"><a href="#选取当前节点的所有命名空间节点-namespace" class="headerlink" title="选取当前节点的所有命名空间节点 namespace"></a>选取当前节点的所有命名空间节点 <code>namespace</code></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xpath(<span class="string">&#x27;//div[@id=&quot;test&quot;]/namespace::*&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="定位-position"><a href="#定位-position" class="headerlink" title="定位 position"></a>定位 <code>position</code></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 和通过下标定位一样， 方法鸡肋</span></span><br><span class="line">xpath(<span class="string">&#x27;//*[@id=&quot;test&quot;]/ol/li[position()=2]/text()&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="Xpath-函数"><a href="#Xpath-函数" class="headerlink" title="Xpath 函数"></a>Xpath 函数</h1><h2 id="统计数量-count"><a href="#统计数量-count" class="headerlink" title="统计数量 count"></a>统计数量 <code>count</code></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计符合要求节点的数量,返回字符串</span></span><br><span class="line">xpath(<span class="string">&#x27;count(//tr[@info])&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="字符串拼接-concat"><a href="#字符串拼接-concat" class="headerlink" title="字符串拼接 concat"></a>字符串拼接 <code>concat</code></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计出来的两个内容的字符串进行“ + ”处理,返回字符串</span></span><br><span class="line">xpath(<span class="string">&#x27;concat(//li[@id=&quot;one&quot;]/text(),//li[@id=&quot;three&quot;]/text())&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="解析当前节点下的字符-string"><a href="#解析当前节点下的字符-string" class="headerlink" title="解析当前节点下的字符 string"></a>解析当前节点下的字符 <code>string</code></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># string()直解析匹配的第一个标签的值，  注： 返回字符串</span></span><br><span class="line">xpath(<span class="string">&#x27;string(//tr)&#x27;</span>) </span><br></pre></td></tr></table></figure><h2 id="获取当前节点的节点名称-local-name"><a href="#获取当前节点的节点名称-local-name" class="headerlink" title="获取当前节点的节点名称 local-name"></a>获取当前节点的节点名称 <code>local-name</code></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 返回当前属性的节点名称，  注： 返回字符串</span></span><br><span class="line">xpath(<span class="string">&#x27;local-name(//*[@id=&quot;test&quot;])&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="以指定的字符开头-starts-with"><a href="#以指定的字符开头-starts-with" class="headerlink" title="以指定的字符开头 starts-with"></a>以指定的字符开头 <code>starts-with</code></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># starts-with定位属性值以8开头的li元素</span></span><br><span class="line">xpath(<span class="string">&#x27;//tr[starts-with(@code,&quot;one&quot;)]/text()&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="小于"><a href="#小于" class="headerlink" title="小于 &lt;"></a>小于 <code>&lt;</code></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匹配所有tr标签属性info小于200的内容</span></span><br><span class="line">xpath(<span class="string">&#x27;//tr[@info&lt;200]/text()&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="根据指定的文本内容选择"><a href="#根据指定的文本内容选择" class="headerlink" title="根据指定的文本内容选择"></a>根据指定的文本内容选择</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定的文本内容可以是文本内容的部分， 也可以是全部</span></span><br><span class="line">xpath(<span class="string">&#x27;//div[2]/ul/li[contains(text(), &quot;指定的文本内容&quot;)]/span/text()&#x27;</span></span><br></pre></td></tr></table></figure><hr><p><strong>Via</strong></p><ul><li><a href="https://www.jianshu.com/p/4fef4142b33f">作者:董小贱</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo SEO 优化</title>
      <link href="/posts/HexoSEO.html"/>
      <url>/posts/HexoSEO.html</url>
      
        <content type="html"><![CDATA[<p>Hexo SEO 优化</p><span id="more"></span><h1 id="添加站点地图"><a href="#添加站点地图" class="headerlink" title="添加站点地图"></a>添加站点地图</h1><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight bash"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#hexo sitemap</span></span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br><span class="line">baidusitemap:</span><br><span class="line">  path: bdmap.xml</span><br></pre></td></tr></table></figure><h1 id="添加-robots"><a href="#添加-robots" class="headerlink" title="添加 robots"></a>添加 robots</h1><p>站点 source 下添加 <code>robots.txt</code></p><figure class="highlight bash"><figcaption><span>robots.txt</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Allow: /</span><br><span class="line">Allow: /archives/</span><br><span class="line">Allow: /categories/</span><br><span class="line">Allow: /tags/</span><br><span class="line">Allow: /about/</span><br><span class="line"></span><br><span class="line">Disallow: /vendors/</span><br><span class="line">Disallow: /js/</span><br><span class="line">Disallow: /css/</span><br><span class="line">Disallow: /fonts/</span><br><span class="line">Disallow: /vendors/</span><br><span class="line">Disallow: /fancybox/</span><br><span class="line"></span><br><span class="line">Sitemap: https://vitan.me/sitemap.xml</span><br><span class="line">Sitemap: https://vitan.me/bdmap.xml</span><br></pre></td></tr></table></figure><h1 id="添加到-Google"><a href="#添加到-Google" class="headerlink" title="添加到 Google"></a>添加到 Google</h1><ul><li>在 <a href="https://search.google.com/search-console">Google Search Console</a> 添加站点地图</li><li>在 <a href="https://ziyuan.baidu.com/linksubmit/index">百度</a> 添加站点地图</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>撤销 Google AdSense</title>
      <link href="/posts/DeleteGoogleAdSense.html"/>
      <url>/posts/DeleteGoogleAdSense.html</url>
      
        <content type="html"><![CDATA[<h1 id="AdSense-账户"><a href="#AdSense-账户" class="headerlink" title="AdSense 账户"></a>AdSense 账户</h1><h2 id="撤销原因"><a href="#撤销原因" class="headerlink" title="撤销原因"></a>撤销原因</h2><p>更换了邮箱之后重新申请了一个，但是提示有多个 AdSense 账户</p><span id="more"></span><h2 id="常规撤销"><a href="#常规撤销" class="headerlink" title="常规撤销"></a>常规撤销</h2><p>登录 <a href="https://www.google.com/adsense/">Google AdSense</a> 点击菜单-&gt;账号-&gt;撤销账号</p><ul><li>个人情况<br>我遇到的情况比较特俗，AdSense 页面的 <code>账号</code> 按钮不可点击，为灰色。</li></ul><h2 id="摸索的方法"><a href="#摸索的方法" class="headerlink" title="摸索的方法"></a>摸索的方法</h2><ol><li>在 <a href="https://myaccount.google.com/">Google 账号</a> 的 <code>数据和个性化</code> -&gt; <code>下载数据、删除数据或为数据制定方案</code> -&gt; <code>删除某项服务或您的帐号</code> 关闭自己的 Google 付款资料</li><li>可以发现 AdSense 页面中的 <code>账号</code> 按钮变为可点击了，撤销成功！</li></ol>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Google </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RaspberryPi 搭建 Gogs Git 服务</title>
      <link href="/posts/GogsOnPi.html"/>
      <url>/posts/GogsOnPi.html</url>
      
        <content type="html"><![CDATA[<p>树莓派搭建 Gogs Git 服务</p><span id="more"></span><h1 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install mariadb-server mariadb-client </span><br></pre></td></tr></table></figure><p>配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vi /etc/mysql/mariadb.conf.d/50-server.cnf </span><br><span class="line">注释掉 </span><br><span class="line">bind-address = 127.0.0.1</span><br></pre></td></tr></table></figure><ul><li>修改 root 密码</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> mysqladmin -u root -p password </span><br></pre></td></tr></table></figure><ul><li>新建 gogs 数据库</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -h127.0.0.1 -uroot -p123456</span><br><span class="line">create database gogs;</span><br></pre></td></tr></table></figure><ul><li>重启 MySQL</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> service mysql restart</span><br></pre></td></tr></table></figure><h1 id="golang"><a href="#golang" class="headerlink" title="golang"></a>golang</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install golang -y</span><br></pre></td></tr></table></figure><h1 id="gogs"><a href="#gogs" class="headerlink" title="gogs"></a><a href="https://gogs.io/">gogs</a></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://cdn.gogs.io/0.11.79/gogs_0.11.79_raspi2_armv6.zip</span><br></pre></td></tr></table></figure><p>解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf gogs_0.11.79_raspi2_armv6.zip</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> 解压后的目录</span><br><span class="line">./gogs web</span><br></pre></td></tr></table></figure><p>配置</p><ul><li>浏览器打开 <code>http://ip:3000</code></li></ul><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190731144809.png"></p><p>后台运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> ./gogs web &gt; nohup.out 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h1 id="Frp-内网穿透"><a href="#Frp-内网穿透" class="headerlink" title="Frp 内网穿透"></a><a href="https://diannaobos.com/frp/">Frp</a> 内网穿透</h1><p>下载安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/fatedier/frp/releases/download/v0.27.1/frp_0.27.1_linux_386.tar.gz</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 解压安装</span></span><br><span class="line">tar -zxvf frp_0.27.1_linux_386.tar.gz</span><br></pre></td></tr></table></figure><p>配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> frp_0.27.1_linux_386</span><br><span class="line">vim frps.ini</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = gogs.vitan.me</span><br><span class="line">server_port = 8000</span><br><span class="line">token = </span><br><span class="line"></span><br><span class="line">[gogs]</span><br><span class="line"><span class="built_in">type</span> =http</span><br><span class="line">privilege_mode = <span class="literal">true</span></span><br><span class="line">local_ip = localhost</span><br><span class="line">locah_port = 3000</span><br><span class="line"></span><br><span class="line">custom_domain = gogs.vitan.me</span><br></pre></td></tr></table></figure><p>启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./frps -c ./frps.ini</span><br></pre></td></tr></table></figure><ul><li>配置好服务器端后,可以在浏览中(<a href="http://ip:8000/static/#/">http://IP:8000/static/#/</a>) 打开 frp 的控制台</li></ul><hr><p><strong>参考</strong></p><ul><li><a href="https://gogs.io/docs/installation/install_from_binary">gogs</a></li><li><a href="https://diannaobos.com/frp/">Frp</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Git </tag>
            
            <tag> RaspberryPi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Termux 局域网共享文件</title>
      <link href="/posts/Termux-Httpd.html"/>
      <url>/posts/Termux-Httpd.html</url>
      
        <content type="html"><![CDATA[<p>Android 跨设备局域网共享文件</p><span id="more"></span><h1 id="http-server"><a href="#http-server" class="headerlink" title="http-server"></a>http-server</h1><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkg install nodejs-lts</span><br><span class="line">npm install http-server -g</span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http-server</span><br></pre></td></tr></table></figure><h2 id="同一局域网"><a href="#同一局域网" class="headerlink" title="同一局域网"></a>同一局域网</h2><p>同一局域网下浏览器登录启动服务后的提示的 ip 即可访问手机的文件，相反电脑同理。</p>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Android </tag>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell</title>
      <link href="/posts/Shell.html"/>
      <url>/posts/Shell.html</url>
      
        <content type="html"><![CDATA[<p>Shell 总结</p><span id="more"></span><h1 id="变量替换和测试"><a href="#变量替换和测试" class="headerlink" title="变量替换和测试"></a>变量替换和测试</h1><h2 id="变量替换"><a href="#变量替换" class="headerlink" title="变量替换"></a>变量替换</h2><p><img src="/assets/Picture/images/20190720191523.png"></p><h2 id="变量测试"><a href="#变量测试" class="headerlink" title="变量测试"></a>变量测试</h2><p><img src="/assets/Picture/images/20190720191707.png"></p><h1 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h1><h2 id="计算字符串长度"><a href="#计算字符串长度" class="headerlink" title="计算字符串长度"></a>计算字符串长度</h2><p>方法一</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;#string&#125;</span></span><br></pre></td></tr></table></figure><p>方法二</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">expr</span> length <span class="string">&quot;<span class="variable">$string</span>&quot;</span></span><br></pre></td></tr></table></figure><ul><li>string 有空格，则必须加双引号</li></ul><h2 id="子串"><a href="#子串" class="headerlink" title="子串"></a>子串</h2><p>获取子串在字符串中的索引位置</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">expr</span> index <span class="variable">$string</span> <span class="variable">$substring</span></span><br></pre></td></tr></table></figure><p>抽取子串</p><p><img src="/assets/Picture/images/20190720192503.png"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>计算字符串长度</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var1=<span class="string">&quot;This is a app&quot;</span></span><br><span class="line">len=<span class="variable">$&#123;#$var1&#125;</span></span><br><span class="line">len=`<span class="built_in">expr</span> length <span class="string">&quot;<span class="variable">$var1</span>&quot;</span>`</span><br></pre></td></tr></table></figure><p>子串索引</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var1=<span class="string">&quot;quicstart is a app&quot;</span></span><br><span class="line">ind=`<span class="built_in">expr</span> index <span class="string">&quot;<span class="variable">$var1</span>&quot;</span> start`</span><br></pre></td></tr></table></figure><p>子串长度</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var1=<span class="string">&quot;quicstart is a app&quot;</span></span><br><span class="line">ind=`<span class="built_in">expr</span> match <span class="string">&quot;$<span class="variable">$var1</span>&quot;</span> app`</span><br></pre></td></tr></table></figure><p>抽取字符串中的子串</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var1=<span class="string">&quot;quicstart is a app&quot;</span></span><br><span class="line">substr1=<span class="variable">$&#123;var1:10&#125;</span></span><br><span class="line">substr2=<span class="variable">$&#123;var1:10:6&#125;</span></span><br><span class="line">substr1=<span class="variable">$&#123;var1:-5&#125;</span></span><br><span class="line">substr1=<span class="variable">$&#123;var1:-10:4&#125;</span></span><br></pre></td></tr></table></figure><ul><li>expr 索引1开始,${string:position}从0开始</li></ul><p>实例</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line">string=<span class="string">&quot;Bigdata process framework is Hadoop,Hadoop is an open source project&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> print_tips</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;***********************&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;(1) 打印string长度&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;(2) 删除字符串中所有Hadoop&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;(3) 替换第一个Hadoop为Mapreduce&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;(4) 替换全部Hadoop为Mapreduce&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;**********************&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> len_of_string</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;#string&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> del_hadoop</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;string/Hadoop/&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> rep_hadoop_mapreduce_first</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;string/Hadoop/Mapreduce&#125;</span>&quot;</span> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> rep_hadoop_mapreduce_all</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;string//Hadoop/Mapreduce&#125;</span>&quot;</span> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;【string=<span class="variable">$string</span>】&quot;</span></span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line">  print_tips</span><br><span class="line">  <span class="built_in">read</span> -p <span class="string">&quot;Pls input your choice(1|2|3|4|q|Q):&quot;</span> choice</span><br><span class="line">  <span class="keyword">case</span> <span class="variable">$choice</span> <span class="keyword">in</span></span><br><span class="line">        1)  len_of_string</span><br><span class="line">            ;;</span><br><span class="line">        2)  del_hadoop</span><br><span class="line">            ;;</span><br><span class="line">        3)  rep_hadoop_mapreduce_first</span><br><span class="line">            ;;</span><br><span class="line">        4)  rep_hadoop_mapreduce_all</span><br><span class="line">            ;;</span><br><span class="line">        q|Q)  <span class="built_in">exit</span></span><br><span class="line">              ;;</span><br><span class="line">        *)</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;Error,input only in &#123;1|2|3|4|q|Q&#125;&quot;</span></span><br><span class="line">            ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h1 id="命令替换"><a href="#命令替换" class="headerlink" title="命令替换"></a>命令替换</h1><p>语法格式</p><p><img src="/assets/Picture/images/20190720194539.png"></p><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p>获取系统所有用户并输出</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/passwd | <span class="built_in">cut</span> -d “:” -^C <span class="comment">#分割的第一个</span></span><br><span class="line"><span class="built_in">cat</span> /etc/passwd | <span class="built_in">cut</span> -d “:” -f 1 <span class="comment">#分段</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"><span class="comment"># 判断进程是否存在，否则启动</span></span><br><span class="line">nginx_process_num=$(ps -ef | grep nginx | grep -v grep | <span class="built_in">wc</span> -l)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$nginx_process_num</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">    systemctl start nginx</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><p><code>\</code>`<code>和</code>$()&#96;</p><ol><li>&#96;&#96;和$()是等价的，但初学推荐$()</li><li>$(())用于进行整数运算，包括加减乘除</li><li>$(((100 + 30) &#x2F; 12))</li></ol><h1 id="有类型变量"><a href="#有类型变量" class="headerlink" title="有类型变量"></a>有类型变量</h1><h2 id="declare-和-typeset-命令"><a href="#declare-和-typeset-命令" class="headerlink" title="declare 和 typeset 命令"></a>declare 和 typeset 命令</h2><p>两者关系:两者等价，都是用来定义变量类型</p><h2 id="declare参数表"><a href="#declare参数表" class="headerlink" title="declare参数表"></a>declare参数表</h2><p><img src="/assets/Picture/images/20190720195605.png"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 声明整数型变量</span></span><br><span class="line"><span class="built_in">declare</span> -i ab <span class="comment">#声明整数型变量</span></span><br><span class="line">ab=56 <span class="comment">#改变变量内容</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ab</span> <span class="comment">#显示变量内容</span></span><br><span class="line">56</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改变变量属性</span></span><br><span class="line"><span class="built_in">declare</span> -i ef <span class="comment">#声明整数型变量</span></span><br><span class="line">ef=1  <span class="comment">#变量赋值（整数值）</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ef</span> <span class="comment">#显示变量内容</span></span><br><span class="line">1</span><br><span class="line">ef=<span class="string">&quot;wer&quot;</span> <span class="comment">#变量赋值（文本值）</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ef</span> </span><br><span class="line">0</span><br><span class="line"></span><br><span class="line"><span class="built_in">declare</span> +i ef <span class="comment">#取消变量属性</span></span><br><span class="line">ef=<span class="string">&quot;wer&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ef</span></span><br><span class="line">wer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置变量只读</span></span><br><span class="line"><span class="built_in">declare</span> -r ab <span class="comment">#设置变量为只读</span></span><br><span class="line">ab=88 <span class="comment">#改变变量内容</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ab</span> <span class="comment">#显示变量内容</span></span><br><span class="line">56</span><br><span class="line"></span><br><span class="line"><span class="comment"># 声明数组变量</span></span><br><span class="line"><span class="built_in">declare</span> -a <span class="built_in">cd</span>=<span class="string">&#x27;([0]=&quot;a&quot; [1]=&quot;b&quot; [2]=&quot;c&quot;)&#x27;</span> <span class="comment">#声明数组变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;cd[1]&#125;</span></span><br><span class="line">b <span class="comment">#显示变量内容</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;cd[@]&#125;</span> <span class="comment">#显示整个数组变量内容</span></span><br><span class="line">a b c</span><br></pre></td></tr></table></figure><ul><li><code>declare -x</code> 声明为环境变量，可在脚本中直接使用</li></ul><h2 id="取消声明的变量"><a href="#取消声明的变量" class="headerlink" title="取消声明的变量"></a>取消声明的变量</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">declare</span> +r</span><br><span class="line"><span class="built_in">declare</span> +i</span><br><span class="line"><span class="built_in">declare</span> +a</span><br><span class="line"><span class="built_in">declare</span> +X</span><br></pre></td></tr></table></figure><h1 id="数学运算"><a href="#数学运算" class="headerlink" title="数学运算"></a>数学运算</h1><p>语法格式<br><img src="/assets/Picture/images/20190720200443.png"></p><p>expr操作符对照表<br><img src="/assets/Picture/images/20190720200649.png"></p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p><img src="/assets/Picture/images/20190720201000.png"></p><h1 id="Bash运算之bc"><a href="#Bash运算之bc" class="headerlink" title="Bash运算之bc"></a>Bash运算之bc</h1><h2 id="bc-操作"><a href="#bc-操作" class="headerlink" title="bc 操作"></a>bc 操作</h2><p><img src="/assets/Picture/images/20190720201134.png"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scale=2 <span class="comment">#精确到小数点后两位</span></span><br><span class="line"><span class="built_in">echo</span> “20+22” | bc</span><br><span class="line"><span class="built_in">echo</span> “scale=3;23+33” | bc</span><br></pre></td></tr></table></figure><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="函数定义和使用"><a href="#函数定义和使用" class="headerlink" title="函数定义和使用"></a>函数定义和使用</h2><p>Linux Shell中的函数和大多数编程语言中的函数一样，将相似的任务或代码封装到函数中，供其他地方调用</p><p>语法一</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">name</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">  command1</span><br><span class="line">  command2</span><br><span class="line">  ....</span><br><span class="line">  commandn</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>语法二</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> name</span><br><span class="line">&#123;</span><br><span class="line">  command1</span><br><span class="line">  command2</span><br><span class="line">  ....</span><br><span class="line">  commandn</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="如何调用"><a href="#如何调用" class="headerlink" title="如何调用"></a>如何调用</h2><ol><li>直接使用函数名调用，可以将其想象成 Shell 中的一条命令</li><li>函数内部可以直接使用函数 $1,$2…$n</li><li>调用函数：function_name $1 $2</li></ol><h2 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 判断进程是否存在，否则启动</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#脚本名含有nginx会返回0</span></span><br><span class="line"><span class="comment"># echo $$ 运行脚本产生的进程id</span></span><br><span class="line">this_pid=$$</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">ps -eff | grep nginx | grep -v grep | grep -v <span class="variable">$this_pid</span> &amp;&gt; /dev/null</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Nignx is running well&quot;</span></span><br><span class="line">    sleepp 3</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    systemctl start nginx</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Nginx is down,start it..&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>判断进程</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netstat -tnlp | grep :80</span><br><span class="line">curl localhost/index.html</span><br></pre></td></tr></table></figure><h1 id="向函数传递参数"><a href="#向函数传递参数" class="headerlink" title="向函数传递参数"></a>向函数传递参数</h1><h2 id="shell传参"><a href="#shell传参" class="headerlink" title="shell传参"></a>shell传参</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> name</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Hello <span class="variable">$1</span>&quot;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Hello <span class="variable">$2</span>&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a>函数返回值</h2><ol><li>return</li><li>echo</li></ol><h3 id="reutrn-返回值"><a href="#reutrn-返回值" class="headerlink" title="reutrn 返回值"></a>reutrn 返回值</h3><ol><li>只能返回1-255的整数</li><li>通常智能用来供其他地方调用获取状态，因此仅返回0（成功)，1(失败)</li></ol><h3 id="echo-返回值"><a href="#echo-返回值" class="headerlink" title="echo 返回值"></a>echo 返回值</h3><ol><li>可以返回任何字符串结果</li><li>通常用于返回数据，如一个字符串值或列表值</li></ol><h1 id="局部变量全局变量"><a href="#局部变量全局变量" class="headerlink" title="局部变量全局变量"></a>局部变量全局变量</h1><h2 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h2><ol><li>不做特殊处理，shell 中变量为全局变量</li><li>大型脚本程序慎用</li></ol><h2 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h2><ol><li>定义时，使用local关键字</li><li>函数内外如果存在同名变量，册函数内部变量覆盖外部变量</li></ol><h2 id="函数库"><a href="#函数库" class="headerlink" title="函数库"></a>函数库</h2><ul><li>为什么要定义函数库</li></ul><ol><li>经常使用的重复代码封装成函数文件</li><li>一般不直接执行，而是由其他脚本调用</li></ol><p>实例</p><figure class="highlight sh"><figcaption><span>库文件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> add</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;`expr <span class="variable">$1</span> + <span class="variable">$2</span>`&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> reduce</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;`expr <span class="variable">$1</span> - <span class="variable">$2</span>`&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> multiple</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;`expr <span class="variable">$1</span> \* <span class="variable">$2</span>`&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> diveid</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;`expr <span class="variable">$1</span> / <span class="variable">$2</span>`&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> sys_load</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Memory Info&quot;</span></span><br><span class="line">    free -m</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Disk Usage&quot;</span></span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">df</span> -h </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">. /home/vitan/workplace/Shell/learn/function/base_function</span><br><span class="line">add 122 3</span><br><span class="line">reduce 9 3</span><br><span class="line">multiple 22 11</span><br><span class="line">diveid 12 3</span><br><span class="line">sys_load</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li>库文件名的后缀是任意的，但一般用 <code>.lib</code></li><li>库文件通常没有可执行权限</li><li>库文件无需和脚本在同级目录，只需在脚本中引时指定</li><li>第一行一般使用 <code>#!/bin/bash/echo</code> ，输出警告信息，避免用户执行</li></ol><h1 id="文件查找之find命令"><a href="#文件查找之find命令" class="headerlink" title="文件查找之find命令"></a>文件查找之find命令</h1><p>find [路径][选项][操作]</p><p><img src="/assets/Picture/images/20190720205155.png"></p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><ol><li>查找 &#x2F;etc 目录下 conf 结尾的文件<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fing /etc -name <span class="string">&#x27;.conf&#x27;</span></span><br></pre></td></tr></table></figure></li><li>查找当前目录下文件名为 aa 的文件，不区分大小写<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -name aa</span><br></pre></td></tr></table></figure></li><li>查找文件属主为 hdfs 的所有文件<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -user hdfs</span><br></pre></td></tr></table></figure></li><li>查找文件属组为 yarn 的所有文件<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -group yarm</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><ol><li>-type</li></ol><ul><li>f 文件 find . -type f</li><li>d 目录 dind . -type d</li><li>c 字符设备文件 dind . -type c</li><li>b 块设备文件 dind . -type b</li><li>l 链接文件 dind . -type l</li><li>p 管道文件 dind . -type p</li></ul><ol start="2"><li>-size</li></ol><ul><li>-n 大小小于n的文件</li><li>+n 大小大于n的文件</li><li>n 大小等于n的文件</li></ul>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 小于10000字节的文件</span></span><br><span class="line">find /etc -size -10000c</span><br><span class="line"><span class="comment"># 大于1M的文件</span></span><br><span class="line">find /etc -size +1M</span><br></pre></td></tr></table></figure><ol start="3"><li>-mtime<ul><li>-n n天以内修改的文件</li><li>+n n天以外修改的文件</li><li>n 正好n天修改的文件</li></ul></li></ol>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查找/etc下5天内修改的conf结尾的文件</span></span><br><span class="line">find /etc -mtime -5 -name <span class="string">&#x27;*.conf&#x27;</span>       </span><br><span class="line"><span class="comment"># 查找10天之前修改且属主为root的文件</span></span><br><span class="line">find /etc -mtime +10 -user root</span><br></pre></td></tr></table></figure><ol start="4"><li>-mmin<ul><li>-n n分种内修改的文件</li><li>+n n分钟外修改的文件</li></ul></li></ol>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 30分钟前修改的文件</span></span><br><span class="line">find /etc -mmin +30</span><br><span class="line"><span class="comment"># 30分钟内修改的目录</span></span><br><span class="line">find /etc -mmin -3o -<span class="built_in">type</span> d</span><br></pre></td></tr></table></figure><ol start="5"><li>-mindepth n<ul><li>表示从n级子目录开始搜索</li></ul></li></ol>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc -mindepth 3</span><br></pre></td></tr></table></figure><ol start="6"><li>-maxdepth n<ul><li>表示最多搜索n-1级子目录</li></ul></li></ol>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find /etc -maxdepth 3 -name <span class="string">&#x27;*.conf&#x27;</span></span><br><span class="line">find ./etc -<span class="built_in">type</span> f -name <span class="string">&#x27;.*conf&#x27;</span> -size +10k -maxdepth 2</span><br><span class="line">find . -<span class="built_in">type</span> f -nogroup</span><br></pre></td></tr></table></figure><ol start="7"><li><p>-perm</p><ul><li>find .perm 644</li></ul></li><li><p>-prune </p><ul><li>通常和-path一起用，用于将特定目录排除在搜索条件之外</li></ul></li></ol>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查找当前目录下所有普通文件，排除test目录</span></span><br><span class="line">find . -path ./etc -prune -o -<span class="built_in">type</span> f</span><br><span class="line"><span class="comment"># 查找当前目录下所有普通文件，但排除etc和opt目录</span></span><br><span class="line">find . -path ./etc -prune -o -path ./opt -prune -o -<span class="built_in">type</span> f</span><br><span class="line"><span class="comment"># 当前目录所有普通文件，排除etc和opt目录，但属主为hdfs</span></span><br><span class="line">find . -path ./etc -prune -o -path ./opt -prune -o -<span class="built_in">type</span> -f -a -user hdfs</span><br><span class="line"><span class="comment"># 当前目录所有普通文件，排除etc和opt目录，但属主为hdfs,文件大小大于</span></span><br><span class="line">find . -path ./etc -prune -o -path ./opt -prune -o -<span class="built_in">type</span> -f -a -user hdfs -a -size +2M</span><br></pre></td></tr></table></figure><ol start="9"><li>-newer file1<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc -newer a</span><br></pre></td></tr></table></figure></li></ol><ul><li><p>操作</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 搜索/etc下的文件非目录，以conf结尾，大于19k，然后删除</span></span><br><span class="line">find ./etc -<span class="built_in">type</span> -f -name <span class="string">&#x27;*.conf&#x27;</span> -size +10k -<span class="built_in">exec</span> <span class="built_in">rm</span> -rf &#123;&#125; \;</span><br><span class="line"></span><br><span class="line">find /var/log/ -name <span class="string">&#x27;*.log&#x27;</span> -mtime +7 -<span class="built_in">exec</span> <span class="built_in">rm</span> -rf &#123;&#125; \;</span><br><span class="line">find /etc -size +10k -<span class="built_in">type</span> -f -name <span class="string">&#x27;*.conf&#x27;</span> -<span class="built_in">exec</span> <span class="built_in">cp</span> &#123;&#125; /root/conf/ \;</span><br></pre></td></tr></table></figure><ul><li>-print 打印输出</li><li>-exec 对搜索的文件执行特定的操作</li><li>-ok 和exec功能一样，但每次操作都会给用户提示</li></ul></li><li><p>逻辑运算符</p><ul><li>-a 与</li><li>-o 或</li><li>-not|! 非</li></ul></li></ul><h1 id="find-locate-whereis和-which-总结及使用场景分析"><a href="#find-locate-whereis和-which-总结及使用场景分析" class="headerlink" title="find locate whereis和 which 总结及使用场景分析"></a>find locate whereis和 which 总结及使用场景分析</h1><h2 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h2><ol><li>文件查找命令，所属软件包mlocate</li><li>不同于find命令是在整块磁盘中搜索，locate在数据库文件中查找</li><li>find默认全部匹配，locate默认部分匹配</li></ol><ul><li>updatedb命令<ol><li>用于更新&#x2F;var&#x2F;lib&#x2F;mlocate&#x2F;mlocate.db</li><li>所使用配置文件&#x2F;etc&#x2F;update.conf</li><li>该命令在后台cron计划任务定期执行</li></ol></li></ul><h2 id="whereis选项和含义"><a href="#whereis选项和含义" class="headerlink" title="whereis选项和含义"></a>whereis选项和含义</h2><ul><li>-b 只返回二进制文件</li><li>-m 只返回帮助文档文件</li><li>-s 只返回源码文件</li></ul><h2 id="which"><a href="#which" class="headerlink" title="which"></a>which</h2><ul><li>仅查找二进制程序文件</li><li>选项<ul><li>-b 只返回二进制文件</li></ul></li></ul><h2 id="各命令使用场景推荐"><a href="#各命令使用场景推荐" class="headerlink" title="各命令使用场景推荐"></a>各命令使用场景推荐</h2><p><img src="/assets/Picture/images/20190721094218.png"></p><h1 id="grep和egrep"><a href="#grep和egrep" class="headerlink" title="grep和egrep"></a>grep和egrep</h1><h2 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h2><p>语法</p><ol><li>grep [option] [pattern] [file1,file2…]</li><li>command | grep [option] [pattern]</li></ol><p>grep参数</p><p><img src="/assets/Picture/images/20190721094721.png"><br><img src="/assets/Picture/images/20190721094812.png"></p><ul><li>grep -E “python | PYTHON” file</li></ul><h2 id="egrep"><a href="#egrep" class="headerlink" title="egrep"></a>egrep</h2><p>egrep语法</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">egrep(选项)(查找模式)(文件名1，文件名2，……)</span><br></pre></td></tr></table></figure><h1 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h1><p>sed(Stream Editor)，流编辑器，对标准输出或文件逐行进行处理</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><ol><li>stdot | sed [option] “pattern command”</li><li>sed [option] “pattern command” file</li></ol><h2 id="选项-1"><a href="#选项-1" class="headerlink" title="选项"></a>选项</h2><p><img src="/assets/Picture/images/20190721095810.png"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sed ‘p’ sed.tet <span class="comment"># p打印出来</span></span><br><span class="line">sed -n‘p’ sed.tet</span><br><span class="line"><span class="comment"># 不加参数，原行也会再打印一次</span></span><br><span class="line">sed ‘/python/p’sed.txt  <span class="comment">#查找行</span></span><br><span class="line">sed -n‘/python/p’sed.txt  <span class="comment">#查找行</span></span><br><span class="line"><span class="comment"># 多个匹配条件</span></span><br><span class="line">sed -n -e ‘/python/p’ -e ‘/PYTHON/p’ sed.txt</span><br><span class="line"><span class="comment">#文件中的</span></span><br><span class="line">Vim edit.sed</span><br><span class="line">/python/p</span><br><span class="line">Sed -n -f edit.sed sed.txt</span><br><span class="line">Sed -n -r‘/python|PYTHON/p’ sed.txt <span class="comment">#使用扩展正则表达式</span></span><br><span class="line"><span class="comment"># 修改</span></span><br><span class="line">sed -n ‘s/love/like/g’ sed.txt <span class="comment"># love替换为like</span></span><br><span class="line">sed -i‘s/love/like/g’ sed.txt <span class="comment">#修改源文件</span></span><br></pre></td></tr></table></figure><h2 id="sed-的-pattern-详解"><a href="#sed-的-pattern-详解" class="headerlink" title="sed 的 pattern 详解"></a>sed 的 pattern 详解</h2><p><img src="/assets/Picture/images/20190721100028.png"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打印file的17行</span></span><br><span class="line">sed -n <span class="string">&quot;17p&quot;</span> file</span><br><span class="line"><span class="comment"># 打印10到20行</span></span><br><span class="line">sed -n <span class="string">&quot;10,20p&quot;</span> file</span><br><span class="line"><span class="comment"># 打印第10行开始，往后加5行的内容</span></span><br><span class="line">sed -n <span class="string">&quot;10,+5p&quot;</span> file</span><br><span class="line"><span class="comment"># 以root开头的行</span></span><br><span class="line">sed -n <span class="string">&quot;/^root/p&quot;</span> file</span><br><span class="line"><span class="comment"># 打印第一个匹配到ftp开头的行</span></span><br><span class="line">sed -n <span class="string">&quot;/^root/,/^ftp/p&quot;</span> file</span><br><span class="line"><span class="comment"># 打印第四行开始，到以hdgs开头的</span></span><br><span class="line">sed -n <span class="string">&quot;4,/^hdfs/p&quot;</span> file</span><br><span class="line"><span class="comment"># 匹配root的行，直到第10行结束</span></span><br><span class="line">sed -n <span class="string">&quot;/root/,10p&quot;</span> file</span><br></pre></td></tr></table></figure><h2 id="sed-中的编辑命令"><a href="#sed-中的编辑命令" class="headerlink" title="sed 中的编辑命令"></a>sed 中的编辑命令</h2><p><img src="/assets/Picture/images/20190721100852.png"><br><img src="/assets/Picture/images/20190721100931.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">sed -i‘1d/ sed.txt # 删除第一行</span><br><span class="line">sed -i ‘1,3d’sed.txt # 删除1-3行</span><br><span class="line">sed -i ‘/\/sbin\/nologin/d’passwd # 把不可登录的账号删除</span><br><span class="line">sed -i ‘/^mail,/^ftp/d’pssswd #mail到ftp</span><br><span class="line">文本追加</span><br><span class="line">sed -i ‘/\/bin\/bash/a This is user which can login to system’pssswd # 行后追加</span><br><span class="line">sed -i ‘/^hdfs/,/&amp;yarn/i AAAAAA’ pssswd # 行间追加</span><br><span class="line">sed -i ‘/root/r list’ passwd #把list内容追加root行后面</span><br><span class="line">sed -n‘/\/bin\/bash/w /tmp/user_login.txt’passwd #保存</span><br><span class="line"></span><br><span class="line">sed -i ‘s/\/bin\/bash/\/BIN\/BASH/g’passwd # 小写的替换为大写</span><br><span class="line">sed -i ‘a/root/ROOT/’passwd # 替换第一个root为大写</span><br><span class="line">sed -i ‘a/root/ROOT/2’passwd # 替换前两个个root为大写</span><br><span class="line">sed -i ‘s/hadoop/HADOOP/ig’str.txt #不区分大小写</span><br><span class="line">sed -n ‘/\/sbin\/nologin/=’passwd # 查看行号,不显示内容</span><br><span class="line"></span><br><span class="line">sed -i ‘s/had..p/hadoops/g’ sed.txt #.任意一个字符</span><br><span class="line">sed -i ‘s/had..p/&amp;s/g’ sed.txt #hadXXp后面加s，反向引用</span><br><span class="line">sed -i ‘s\/(had..ps\)\/1O/g’ sed.txt #后加O</span><br><span class="line">sed -i ‘s/\(had\)...../\1doop/g’sed.txt # had后面替换</span><br></pre></td></tr></table></figure><h2 id="反向引用"><a href="#反向引用" class="headerlink" title="反向引用"></a>反向引用</h2><ul><li>是什么</li></ul><ol><li>&amp;和\1 引用模式匹配到的整个串</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># file中寻找1开头的后跟两任意字符以e结尾的字符</span></span><br><span class="line">sed <span class="string">&quot;s/1..e/&amp;r/g&quot;</span> file</span><br><span class="line">sed <span class="string">&quot;s/\(1...e\)/\1r/g&quot;</span> file <span class="comment"># 使用\1代表搜寻到的字符串</span></span><br></pre></td></tr></table></figure><ul><li>上面两种方法实现一样的功能，分别使用&amp;和\1代表搜寻到的整个字符串</li><li>区别在于&amp;只能表示匹配到的完整字符串，只能引用整个字符串，而\1可以使用()对匹配到的</li><li>要替换匹配的字符串的一部分，name必须使用\1，不能使用&amp;</li></ul><h2 id="sed-引用变量"><a href="#sed-引用变量" class="headerlink" title="sed 引用变量"></a>sed 引用变量</h2><ul><li>注意</li></ul><ol><li>匹配模式中存在变量，则建议使用双引号</li><li>sed中需要引入自定义变量时，如外面使用单引号，则自定义变量必须使用单引号</li></ol><h2 id="用-sed-查询特定内容"><a href="#用-sed-查询特定内容" class="headerlink" title="用 sed 查询特定内容"></a>用 sed 查询特定内容</h2><p>查询命令</p><p><img src="/assets/Picture/images/20190721102519.png"></p><p>实例</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打印/etc/passwd中的第20行内容</span></span><br><span class="line">sed -n <span class="string">&quot;20p&quot;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line">sed -n <span class="string">&quot;8,15p&quot;</span> /etc/passwd</span><br><span class="line">sed -n <span class="string">&quot;8,+5p&quot;</span> /etc/passwd</span><br><span class="line">sed -n <span class="string">&#x27;/^hdfs/p&#x27;</span> /etc/passwd</span><br><span class="line">sed -n <span class="string">&#x27;^root/,/^hdfs/p&#x27;</span> /etc/passwd</span><br><span class="line">sed -n <span class="string">&#x27;8,/\sbin\/nologin/p&#x27;</span> /etc/passwd</span><br><span class="line">sed -n <span class="string">&#x27;\bin\/bash/,5p&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure><p><img src="/assets/Picture/images/20190721103230.png"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">FILE_NAME=/root/my.cnf</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> get_all_segments</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;`sed -n &#x27;/\[.*\]/p&#x27; <span class="variable">$FILE_NAME</span> | sed -e &#x27;s/\[//g&#x27; -e &#x27;s/\]//g&#x27;`&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> count_items_in_segment</span><br><span class="line">&#123;</span><br><span class="line">    items=`sed -n <span class="string">&#x27;/\[&#x27;</span><span class="variable">$1</span><span class="string">&#x27;\]/,/\[.*\]/p&#x27;</span> <span class="variable">$FILE_NAME</span> | grep -v <span class="string">&quot;^#&quot;</span> | grep -v ^$ | grep -v <span class="string">&quot;\[.*\]&quot;</span>`</span><br><span class="line">    index=0</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> <span class="variable">$items</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        index=`<span class="built_in">expr</span> <span class="variable">$index</span> +1`</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$index</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">number=0</span><br><span class="line"><span class="keyword">for</span> segment <span class="keyword">in</span> `get_all_segments`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    num=`<span class="built_in">expr</span> <span class="variable">$number</span> + 1`</span><br><span class="line">    items_count=`coubt_items_in_segment <span class="variable">$segment</span>`</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$number</span>: <span class="variable">$segment</span> <span class="variable">$items_count</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="sed-删除特定内容"><a href="#sed-删除特定内容" class="headerlink" title="sed 删除特定内容"></a>sed 删除特定内容</h2><p><img src="/assets/Picture/images/20190721103352.png"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;15d&#x27;</span> passwd</span><br><span class="line">sed -i <span class="string">&#x27;8,14d&#x27;</span> passwd</span><br><span class="line">sed -i <span class="string">&#x27;/\sbin\/nologin/d&#x27;</span> passwd</span><br><span class="line">sed -i <span class="string">&#x27;/^mail/,/^yarn/d&#x27;</span> passwd</span><br><span class="line">sed -i <span class="string">&#x27;/\sbin\/nologin/,13d&#x27;</span> passwd</span><br><span class="line">sed -i <span class="string">&#x27;5,/^ftp/d&#x27;</span> passwd</span><br><span class="line"><span class="comment"># yarn开头到最后</span></span><br><span class="line">sed -i <span class="string">&#x27;/^yarn/,$&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li><ol><li>删除配置文件中所有的注释行和空行</li></ol></li><li><ol start="2"><li>在配置文件中所有不以#开头的行前面加×符合，主要以#开头的行不添加</li></ol></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i ‘/^#/d;/^$/d’ nginx.conf <span class="comment">#删除注释</span></span><br><span class="line">sed -i ‘/[:blank:]*#/d’ nginx.conf <span class="comment">#删除空行</span></span><br><span class="line">sed -i ‘/^[^#]/\*&amp;/g’nginx.conf  <span class="comment">#非井号开头</span></span><br></pre></td></tr></table></figure><h2 id="sed-修改文件内容"><a href="#sed-修改文件内容" class="headerlink" title="sed 修改文件内容"></a>sed 修改文件内容</h2><p><img src="/assets/Picture/images/20190721104309.png"></p><p>实例</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改第一行的root为ROOT</span></span><br><span class="line">sed -i <span class="string">&#x27;1s/root/ROOT/&#x27;</span> passwd</span><br><span class="line"><span class="comment">#修改5到10行中所有的/sbin/nologin为/bin/bash</span></span><br><span class="line">sed -i <span class="string">&#x27;5,10s/\/sbin\/nologin/\bin\/bash/g&#x27;</span> passed</span><br><span class="line"><span class="comment">#修改匹配到/sbin/nologin的行，将匹配到行中的login改为LOGIN</span></span><br><span class="line">sed -i <span class="string">&#x27;/\sbin\/nologin/s/login/LOGIN/g&#x27;</span> passwd</span><br><span class="line"><span class="comment">#修改以root开头的行，到15行中的所有行，修改行中的nologin为SPARK</span></span><br><span class="line">sed -i <span class="string">&#x27;/^root/,15s/nologin/SPARK/g&#x27;</span> passwd</span><br><span class="line"><span class="comment">#从15行开始到匹配以yarn开头的所有行，修改行中的bin为BIN</span></span><br><span class="line">sed -i <span class="string">&#x27;15,/^yarn/s/bin/BIN/g&#x27;</span> passwd</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;s/[0-9]*//g&#x27;</span> file.txt</span><br></pre></td></tr></table></figure><h2 id="sed-追加文本内容"><a href="#sed-追加文本内容" class="headerlink" title="sed 追加文本内容"></a>sed 追加文本内容</h2><ul><li>语法</li></ul><ol><li>a<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第十行后追加&quot;Add lind behind&quot;</span></span><br><span class="line">sed -i <span class="string">&#x27;10a Add lind behind&#x27;</span> passwd</span><br><span class="line"><span class="comment"># 第10到20行，每一行后面都追加&quot;Test line behind&quot;</span></span><br><span class="line">sed -i <span class="string">&#x27;10,20a Test line behind&#x27;</span> passws</span><br><span class="line"><span class="comment"># 匹配到/bin/bash的行后面追加&quot;insert line for /bin/bash behind&quot;</span></span><br><span class="line">sed -i <span class="string">&#x27;/\bin\/bash/a insert line for /bin/bash behind&#x27;</span> passws</span><br></pre></td></tr></table></figure></li><li>i<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匹配yarn开头的行，在匹配航后面追加&quot;Add lind behind&quot;</span></span><br><span class="line">sed -i <span class="string">&#x27;yarn/i Add lind behind&#x27;</span> passwd</span><br><span class="line"><span class="comment"># 每一行前面都追加“insert line before every line&quot;</span></span><br><span class="line">sed -i <span class="string">&#x27;i insert line before every line&#x27;</span> passwd</span><br></pre></td></tr></table></figure></li><li>r<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将/etc/fstab文件的内容追加到passwd的第20行后面</span></span><br><span class="line">sed -i <span class="string">&#x27;20r /etc/fstab&#x27;</span> passwd</span><br><span class="line"><span class="comment">#将/etc/inittab文件内容追加到passwd文件匹配/bin/bash行后面</span></span><br><span class="line">sed -i <span class="string">&#x27;/\bin\/bash/r /etc/inittab&#x27;</span> passwd</span><br><span class="line"><span class="comment">#将/etc/vconsol.conf文件内容追加到passwd文件中特定行的后面，匹配以ftp开头的行后面</span></span><br><span class="line">sed -i /^ftp/,18r /etc.vconsole.conf’ pssswd</span><br></pre></td></tr></table></figure></li><li>w<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将passwd文件匹配到/bin/bash的行追加到/tmp/sed.txt文件中</span></span><br><span class="line">sed -i <span class="string">&#x27;/\bin\/bash/w /tmp/sed.txt&#x27;</span> passwd</span><br><span class="line"><span class="comment"># 将passwd文件从10行还是到匹配到hsfs开头的所有行内容追加到/tmp/sed-1.txt</span></span><br><span class="line">sed -i <span class="string">&#x27;10,/^hsfs/w /tmp/sed-1.txt&#x27;</span> passwd</span><br></pre></td></tr></table></figure></li></ol><h1 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h1><h2 id="awk-的工作模式"><a href="#awk-的工作模式" class="headerlink" title="awk 的工作模式"></a>awk 的工作模式</h2><ol><li>awk 为一个文本处理工具，通常用于处理数据并产生结果报告。</li><li>命名是由三个创始人姓氏首字母组成</li></ol><h2 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN&#123;&#125;pattern&#123;commands&#125;END&#123;&#125;&#x27;</span> file_name</span><br><span class="line"></span><br><span class="line">standard outpu | awk <span class="string">&#x27;BEGIN&#123;&#125;pattern&#123;commands&#125;END&#123;&#125;&#x27;</span> file_name</span><br></pre></td></tr></table></figure><ul><li>语法格式说明</li></ul><p><img src="/assets/Picture/images/20190721124926.png"></p><h2 id="awk-内置变量"><a href="#awk-内置变量" class="headerlink" title="awk 内置变量"></a>awk 内置变量</h2><p>内置变量对照表</p><p><img src="/assets/Picture/images/20190721125045.png"><br><img src="/assets/Picture/images/20190721130039.png"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $0&#125;END&#123;&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br><span class="line"><span class="comment"># 指定分隔符，输出第一个(既所有用户名)</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;print $1&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br><span class="line"><span class="comment"># 默认空格为分割符</span></span><br><span class="line">awk <span class="string">&#x27;&#123;print $1&#x27;</span> list.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># NF每一个行字段个数（number Filed）</span></span><br><span class="line">awk <span class="string">&#x27;&#123;print NF&#125;&#x27;</span> list.txt <span class="comment"># 返回字段个数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># NR(Number Row)</span></span><br><span class="line">awk <span class="string">&#x27;&#123;print NR&#125;&#x27;</span> list.txt <span class="regexp">/etc/</span>passwd <span class="comment"># 返回行号</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># FNR(File Number Row)对每一个文件单独计数</span></span><br><span class="line">awk <span class="string">&#x27;&#123;print FNR&#125;&#x27;</span> list.txt <span class="regexp">/etc/</span>passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># FS(File Separator)</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;|&quot;&#125;&#123;print $2&#125;&#x27;</span> list.txt <span class="comment">#指定分割符|</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># RS(Row Separator) 行分隔符</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;|&quot;;RS=&quot;--&quot;&#125;&#123;print $2&#125;&#x27;</span> list.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># ORS(Output Row Separatot) 输出行分割符</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;|&quot;;RS=&quot;--&quot;；ORS=&quot;&amp;&quot;&#125;&#123;print $2&#125;&#x27;</span> list.txt</span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;|&quot;;RS=&quot;--&quot;；ORS=&quot;&amp;&quot;;OFS=&quot;:&quot;&#125;&#123;print $2，$3&#125;&#x27;</span> list.txt</span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;&#123;print FILENAME&#125;&#x27;</span> list.txt <span class="comment">#对每一行输出文件名</span></span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;&#123;print ARGC&#125;&#x27;</span> list.txt <span class="comment"># 输出行参数个数</span></span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;print $NF&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd <span class="comment"># 输出行最大自的断</span></span><br></pre></td></tr></table></figure><h2 id="awk-格式化输出"><a href="#awk-格式化输出" class="headerlink" title="awk 格式化输出"></a>awk 格式化输出</h2><p>printf(默认不带分隔符) 语法</p><p><img src="/assets/Picture/images/20190721134349.png"></p><p>修饰符</p><p><img src="/assets/Picture/images/20190721134554.png"></p><p>实例</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不加任何修饰输出 </span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;printf $1&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br><span class="line"><span class="comment"># 换行输出</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;printf &quot;%s\n&quot;,$1&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出两个变量</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;printf &quot;%s%s\n&quot;,$1,$7&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第一个第二个变量长度20(默认右对齐)</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;printf &quot;%20s %20s\n&quot;,$1,$7&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第一个第二个变量长度20(左对齐)</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;printf &quot;%-20s %-20s\n&quot;,$1,$7&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以字符串格式打印/etc/passwd中的第七个字段，以&quot;:&quot;为分隔符</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;printf &quot;%s\n&quot;,$7&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br><span class="line"><span class="comment"># 以10进制格式打印/etc/passwd中的第3个字段，以&quot;:&quot;为分隔符</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125; &#123;printf &quot;%d\n&quot;,$3&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd <span class="comment">#不指定位数默认左对齐（指定位数右对齐 %-d)</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 浮点数</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125; &#123;printf &quot;%o.3f\n&quot;,$3&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd </span><br><span class="line"></span><br><span class="line"><span class="comment"># 16进制</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125; &#123;printf &quot;%x\n&quot;,$3&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd </span><br><span class="line"></span><br><span class="line"><span class="comment"># 8进制</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125; &#123;printf &quot;%o\n&quot;,$3&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 科学计数法</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125; &#123;printf &quot;%e\n&quot;,$3&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br></pre></td></tr></table></figure><h2 id="awk模式匹配的两种用法"><a href="#awk模式匹配的两种用法" class="headerlink" title="awk模式匹配的两种用法"></a>awk模式匹配的两种用法</h2><ul><li>语法</li></ul><ol><li>RegExp 含义：按正则表达式匹配</li><li>关系运算 含义：按关系运算匹配</li></ol><p>实例</p><ul><li>RegExp</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匹配/etc/passwd文件中含有root字符串的所有行</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;/root/&#123;print $0&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">#匹配/etc/passwd中yarn开头的所有行</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;/^yarn/&#123;print $0&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br></pre></td></tr></table></figure><ul><li><p>(运算符)关系运算</p><ul><li>关系运算符：&lt;,&gt;&lt;&#x3D;,&gt;&#x3D;,&#x3D;&#x3D;,!&#x3D;,~(匹配正则表达式),!~</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以：为分隔符，匹配第3个字段小于50的所有行信息</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;$3&lt;50&#123;print $0&#125;&#x27;</span> <span class="regexp">/etc/</span>pssswd</span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;$7==&quot;/bin/bash&quot;&#123;print $0&#125;&#x27;</span> <span class="regexp">/etc/</span>pssswd</span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;$7!=&quot;/bin/bash&quot;&#123;print $0&#125;&#x27;</span> <span class="regexp">/etc/</span>pssswd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三个字符包含3个以上数字的所有行信息</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;$3~/[0-9]&#123;3,&#125;/&#123;print $0&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd <span class="comment"># &#123;3,&#125;重复3次</span></span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;$0~/\sbin\/nologin/&#123;print $0&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd </span><br></pre></td></tr></table></figure><ul><li>布尔运算:||(或),&amp;&amp;(与),!(非)</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以：为分隔符，匹配文件中包含hdfs或者yarn的所有行信息</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;$1==&quot;hdfs&quot; || $1==&quot;yarn&quot; &#123;print $0&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三字段小于50且第四字段大于50的所有行信息</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;$3&lt;50 &amp;&amp; $4&gt;50 &#123;print $0&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;$3&lt;50 &amp;&amp; $7~/\bin\/bash/ &#123;print $0&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br></pre></td></tr></table></figure></li></ul><h2 id="awk-动作中的表达式用法"><a href="#awk-动作中的表达式用法" class="headerlink" title="awk 动作中的表达式用法"></a>awk 动作中的表达式用法</h2><p>算术运算符</p><table><thead><tr><th align="left">运算符</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">+</td><td align="left">加</td></tr><tr><td align="left">-</td><td align="left">减</td></tr><tr><td align="left">*</td><td align="left">乘</td></tr><tr><td align="left">&#x2F;</td><td align="left">除</td></tr><tr><td align="left">%</td><td align="left">模</td></tr><tr><td align="left">^或**</td><td align="left">乘方</td></tr><tr><td align="left">++X</td><td align="left">再返回X变量之前，X变量加1</td></tr><tr><td align="left">X++</td><td align="left">再返回X变量之后，X变量加1</td></tr></tbody></table><ul><li>实例</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN&#123;var=20;var1=&quot;hello&quot;;print var,var1&#125;&#x27;</span></span><br><span class="line">  </span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;num1=20;num2+=num1;print num2,num2&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;num1=20;num2+=num1;print num2+num2&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;num1=20;num2=30;printf &quot;%0.2f\n&quot;,num1/num2&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;x=2;y=x++;print x,y&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;x=2;y=x--;print x,y&#125;&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算文件中空白行数量</span></span><br><span class="line">awk <span class="string">&#x27;/^$/&#123;sumx=0;sum++&#125;END&#123;print sum&#125;&#x27;</span> <span class="regexp">/etc/</span>services</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 计算课程的平均分</span></span><br><span class="line">awk <span class="string">&#x27;&#123;total=S2+$3+$5+$5;AVG=total/4;printf &quot;%-8s,%-5d%-5d%-5d%-8d%0.2f\n&quot;,$1,$2,$3,$4.$5,AVG&#125;&#x27;</span> stu.txt</span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;printf &quot;%-8s%-8s%-8s%-8s%-8s%s\n&quot;,&quot;姓名&quot;,&quot;语文&quot;,&quot;数学&quot;,&quot;英语&quot;,&quot;物理&quot;,&quot;平均分&quot;&#125;&#123;total=$2+$3+$4+$5;AVG=total/4;printf &quot;%-8s%-8d%-8d%-8d%-8d%0.2f\n&quot;,$1,$2,$3,$4.$5,AVG&#125;&#x27;</span> stu.txt</span><br></pre></td></tr></table></figure><h2 id="awk-动作中的条件及循环语句"><a href="#awk-动作中的条件及循环语句" class="headerlink" title="awk 动作中的条件及循环语句"></a>awk 动作中的条件及循环语句</h2><ul><li>条件语句</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(条件表达式)</span><br><span class="line">  动作<span class="number">1</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(条件表达式)</span><br><span class="line">  动作<span class="number">2</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  动作<span class="number">3</span></span><br></pre></td></tr></table></figure><ul><li>实例</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以：为分隔符只打印第3个字段的数值在50-100范围内的行信息</span></span><br><span class="line">awk <span class="string">&#x27;BEFIN&#123;FS=&quot;:&quot;&#125;&#123;if($3&gt;50 &amp;&amp; $3&lt;100&gt;) print $0&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br><span class="line">awk <span class="string">&#x27;BEFIN&#123;FS=&quot;:&quot;&#125;&#123;if($3&gt;50 || $3&lt;100&gt;) print $0&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 小于50的UID</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;if($3&lt;50) printf &quot;%-10s%-5d\n&quot;,&quot;小于50的UID:&quot;,$3&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br><span class="line">  </span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;if($3&lt;50) printf &quot;%-10s%-10s%-5d\n&quot;,&quot;小于50的UID:&quot;,$1,$3&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;if($3&lt;50) printf &quot;%-10s%-10s%-5d\n&quot;,&quot;小于50的UID:&quot;,$1,$3&#125;&#x27;</span> <span class="regexp">/etc/</span>passwd</span><br></pre></td></tr></table></figure><ul><li>vim scripts.awk</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span>&#123;</span><br><span class="line">    FS=<span class="string">&quot;:&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    f(<span class="variable">$3</span>&lt;<span class="number">50</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    printf <span class="string">&quot;%-30s%-20s%-5d\n&quot;</span>,<span class="string">&quot;小于50的UID&quot;</span>,<span class="variable">$1</span>,<span class="variable">$3</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$3</span>&gt;<span class="number">50</span> &amp;&amp; <span class="variable">$3</span>&lt;<span class="number">100</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    printf <span class="string">&quot;%-30s%-20s%-5d\n&quot;</span>,<span class="string">&quot;大于50且小于100的UID&quot;</span>,<span class="variable">$1</span>,<span class="variable">$3</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    printf <span class="string">&quot;%-30s%-20s%-5d\n&quot;</span>,<span class="string">&quot;大于100的UID&quot;</span>,<span class="variable">$1</span>,<span class="variable">$3</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -f scripts.awk <span class="regexp">/etc/</span>passed</span><br></pre></td></tr></table></figure><ul><li>循环语句</li></ul><ol><li>do while 循环</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> <span class="keyword">while</span></span><br><span class="line">  <span class="keyword">do</span> </span><br><span class="line">      动作</span><br><span class="line">  <span class="keyword">while</span>(条件表达式)</span><br></pre></td></tr></table></figure><ol start="2"><li>for 循环</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (初始化计数器;测试计数器;计数器变更)</span><br><span class="line">  动作</span><br></pre></td></tr></table></figure><p>实例</p><ul><li>1+2+…100的和</li></ul><ol><li>while</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      sum+=<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    print sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>awk -f while.wak</p></li><li><p>for</p></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(i0;i&lt;=<span class="number">100</span>;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    sum+=<span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">  print sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>awk -f for.awk</li></ul><ol start="3"><li>do while</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span>&#123;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">    sum+=<span class="number">1</span></span><br><span class="line">    i++</span><br><span class="line">  &#125;<span class="keyword">while</span>(i&lt;=<span class="number">100</span>)</span><br><span class="line">  print sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>awk -f do_while.awk</p></li><li><p>计算每个同学平均分，仅显示大于90</p></li></ul><p><img src="/assets/Picture/images/20190721185930.png"></p><figure class="highlight awk"><figcaption><span>student.awk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span>&#123;</span><br><span class="line">  printf <span class="string">&quot;%-10s%-10s%-10s%-10s%-10s%-10s\n&quot;</span>,<span class="string">&quot;Name&quot;</span>,<span class="string">&quot;Chinese&quot;</span>,<span class="string">&quot;English&quot;</span>,<span class="string">&quot;Math&quot;</span>,<span class="string">&quot;Physical&quot;</span>,<span class="string">&quot;Average&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  total=<span class="variable">$2</span>+<span class="variable">$3</span>+<span class="variable">$4</span>+<span class="variable">$5</span></span><br><span class="line">  avg=total/<span class="number">4</span></span><br><span class="line">  <span class="keyword">if</span>(avg&gt;<span class="number">90</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    printf <span class="string">&quot;%-10s%-10d%-10d%-10d%-10d%-0.2f\n&quot;</span>,<span class="variable">$1</span>,<span class="variable">$2</span>,<span class="variable">$3</span>,<span class="variable">$4</span>,<span class="variable">$5</span>,avg</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>计算平均分大于90的各科总分</li></ul><figure class="highlight awk"><figcaption><span>student.awk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span>&#123;</span><br><span class="line">    printf <span class="string">&quot;%-10s%-10s%-10s%-10s%-10s%-10s\n&quot;</span>,<span class="string">&quot;Name&quot;</span>,<span class="string">&quot;Chinese&quot;</span>,<span class="string">&quot;English&quot;</span>,<span class="string">&quot;Math&quot;</span>,<span class="string">&quot;Physical&quot;</span>,<span class="string">&quot;Average&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  total=<span class="variable">$2</span>+<span class="variable">$3</span>+<span class="variable">$4</span>+<span class="variable">$5</span></span><br><span class="line">  avg=total/<span class="number">4</span></span><br><span class="line">  <span class="keyword">if</span>(avg&gt;<span class="number">90</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    printf <span class="string">&quot;%-10s%-10d%-10d%-10d%-10d%-0.2f\n&quot;</span>,<span class="variable">$1</span>,<span class="variable">$2</span>,<span class="variable">$3</span>,<span class="variable">$4</span>,<span class="variable">$5</span>,avg</span><br><span class="line">    score_chinese+=<span class="variable">$2</span></span><br><span class="line">    score_english+=<span class="variable">$3</span></span><br><span class="line">    score_math+=<span class="variable">$4</span></span><br><span class="line">    score_physical+=<span class="variable">$5</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">END</span>&#123;</span><br><span class="line">  printf <span class="string">&quot;%-10s%-10d%-10d%-10d%-10d\n&quot;</span>,<span class="string">&quot;&quot;</span>,score_chinese,score_english,score_math,score_physical</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="awk-中的字符串函数"><a href="#awk-中的字符串函数" class="headerlink" title="awk 中的字符串函数"></a>awk 中的字符串函数</h2><p>字符串函数对照表</p><p><img src="/assets/Picture/images/20190721191406.png"><br><img src="/assets/Picture/images/20190721191743.png"></p><p>例子</p><ol><li>以:为分隔符，返回文件中每行中的字段长度</li></ol><figure class="highlight awk"><figcaption><span>1.awk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># NF 字段个数</span></span><br><span class="line"><span class="keyword">BEGIN</span>&#123;</span><br><span class="line">  FS=<span class="string">&quot;:&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  i=<span class="number">1</span></span><br><span class="line">  <span class="keyword">while</span>(i&lt;=NF)</span><br><span class="line">  &#123; </span><br><span class="line">    <span class="keyword">if</span>(i==NF)</span><br><span class="line">      printf <span class="string">&quot;%d&quot;</span>,length(<span class="variable">$i</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      printf <span class="string">&quot;%d:&quot;</span>,length(<span class="variable">$i</span>)</span><br><span class="line">    i++</span><br><span class="line">  &#125;</span><br><span class="line">  print <span class="string">&quot;&quot;</span></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><ol start="2"><li>搜索字符串”I have a dream”中出现”ea”子串的位置</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法1</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;str=&quot;I have a dream&quot;;location=index(str,&quot;ea&quot;);print location&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#方法2</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;str=&quot;I have a dream&quot;;location=match(str,&quot;ea&quot;);print location&#125;&#x27;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>将字符串”Hadoop is a bigdata Framework”全部转为小写</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN&#123;str=&quot;Hadoop is a bigdata Framework&quot;;print tolower(str)&#125;&#x27;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>上一题转为大写</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN&#123;str=&quot;Hadoop is a bigdata Framework&quot;;print toupper(str)&#125;&#x27;</span></span><br></pre></td></tr></table></figure><ol start="5"><li>将字符串”Hadoop Kafka Spark Storm”按空格为分隔符，分割每一部分保存到数组arr中</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN&#123;str=&quot;Hadoop Kafka Spark Storm&quot;;split(str,arr,&quot; &quot;);print arr[0]&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历(awk 下标从1开始)</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;str=&quot;Hadoop Kafka Spark Storm&quot;;split(str,arr,&quot; &quot;);for(a in arr) print arr[a]&#125;&#x27;</span></span><br></pre></td></tr></table></figure><ol start="6"><li>搜索字符串”Tranction 2345 start:select * from master”第一个数字出现的位置</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN&#123;str=&quot;Tranction 2345 start:select * from master&quot;;location=match(str,/[0-9]/);print location&#125;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>正则表达式要用 <code>//</code> 引起来</li></ul><ol start="7"><li>截图字符串”transaction start”的子串，条件从第4个字符开始，截取5为</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN&#123;str=&quot;transaction start&quot;;print substr(str,4,5)&#125;&#x27;</span></span><br></pre></td></tr></table></figure><ol start="8"><li>替换”Tranction 243 start，Event ID：9002”中第一个匹配到的数字为$符号</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN&#123;str=&quot;Tranction 243 start，Event ID：9002&quot;;count=sub(/[0-9]+/,&quot;$&quot;,str);print count,str&#125;&#x27;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># gsu所有</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;str=&quot;Tranction 243 start，Event ID：9002&quot;;count=gsub(/[0-9]+/,&quot;$&quot;,str);print count,str&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="awk中的常用选项"><a href="#awk中的常用选项" class="headerlink" title="awk中的常用选项"></a>awk中的常用选项</h2><table><thead><tr><th align="left">选项</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">-v</td><td align="left">参数传递</td></tr><tr><td align="left">-f</td><td align="left">指定脚本文件</td></tr><tr><td align="left">-F</td><td align="left">指定分隔符</td></tr><tr><td align="left">-V</td><td align="left">查看awk的版本号</td></tr></tbody></table><p>实例</p><ul><li>-v 把外部变量引入</li></ul><figure class="highlight sh"><figcaption><span>终端中</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">num1=20</span><br><span class="line">var=<span class="string">&quot;Hello World&quot;</span></span><br><span class="line">awk -v num2=<span class="string">&quot;<span class="variable">$num1</span>&quot;</span> -v var1=<span class="string">&quot;<span class="variable">$var</span>&quot;</span> <span class="string">&#x27;BEGIN&#123;print num2,var1&#125;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>-f 引入文件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -f student.awk /etc/passws</span><br></pre></td></tr></table></figure><ul><li>-F</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">awk -F <span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123;print $7&#125;&#x27;</span> /etc/passwd</span><br><span class="line">awk -F : <span class="string">&#x27;&#123;print $7&#125;&#x27;</span> /etc/passwd</span><br><span class="line"><span class="comment"># 等价于</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;print $7&#125;&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure><h2 id="Shell-数组的用法"><a href="#Shell-数组的用法" class="headerlink" title="Shell 数组的用法"></a>Shell 数组的用法</h2><ul><li>array&#x3D;(“Mike”,”Bell”,”Hellen”)<ul><li>下面的 <code>井</code> 为 <code>#</code></li></ul></li></ul><table><thead><tr><th align="left">解释</th><th align="left">代码</th></tr></thead><tbody><tr><td align="left">打印元素</td><td align="left">echo ${井array[2]}</td></tr><tr><td align="left">打印元素个数</td><td align="left">echo ${井array[@]} &#x2F; echo ${井array[*]}</td></tr><tr><td align="left">打印元素长度</td><td align="left">echo ${井array[3]}</td></tr><tr><td align="left">给元素赋值</td><td align="left">array[3]&#x3D;”LI”</td></tr><tr><td align="left">删除元素</td><td align="left">unset array[2];unset array</td></tr><tr><td align="left">分片访问</td><td align="left">echo ${井array[@]:1:3}</td></tr><tr><td align="left">元素内容替换</td><td align="left">${array[@]&#x2F;e&#x2F;E} #只替换第一个e;${array[@]&#x2F;&#x2F;e&#x2F;E}替换全部e</td></tr></tbody></table><ul><li>数组遍历</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> array</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">   <span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="awk-数组用法"><a href="#awk-数组用法" class="headerlink" title="awk 数组用法"></a>awk 数组用法</h2><ul><li>awk中使用数组时，不仅可以使用数字作为数组下标，也可以使用字符串作为数组下标</li></ul><ol><li>统计主机上所有TCP连接状态，按照每个TCP状态分类</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an | grep tcp | awk <span class="string">&#x27;&#123;arrary[$6]++&#125;END&#123;for(a in arrary) print a,arrary[a]&#125;&#x27;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>计算横向数总和，计算纵向数据总和</li></ol><figure class="highlight sh"><figcaption><span>数据</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Allen 80 90 96 98</span><br><span class="line">Mike  93 98 92 91</span><br><span class="line">Zhang 78 76 87 92</span><br><span class="line">Jerry 86 89 68 92</span><br><span class="line">Han   85 95 75 90</span><br><span class="line">Li    78 88 98 100</span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>stu.awk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">  <span class="built_in">printf</span> <span class="string">&quot;%-10s%-10s%-10s%-10s%-10s%-10s\n&quot;</span>,<span class="string">&quot;Name&quot;</span>,<span class="string">&quot;Chinese&quot;</span>,<span class="string">&quot;Math&quot;</span>,<span class="string">&quot;English&quot;</span>,<span class="string">&quot;Physical&quot;</span>,<span class="string">&quot;Total&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  total=<span class="variable">$2</span>+<span class="variable">$3</span>+<span class="variable">$4</span>+<span class="variable">$5</span></span><br><span class="line">  yuwen_sum+=<span class="variable">$2</span></span><br><span class="line">  math_sum+=<span class="variable">$3</span></span><br><span class="line">  english_sum+=<span class="variable">$4</span></span><br><span class="line">  physical_sum+=<span class="variable">$5</span></span><br><span class="line">  <span class="built_in">printf</span> <span class="string">&quot;%-10s%-10d%-10d%-10d%-10d%-10d\n&quot;</span>,<span class="variable">$1</span>,<span class="variable">$2</span>,<span class="variable">$3</span>,<span class="variable">$4</span>,<span class="variable">$5</span>,total</span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">  <span class="built_in">printf</span> <span class="string">&quot;%-10s%-10d%-10d%-10d%-10d\n&quot;</span>,<span class="string">&quot;&quot;</span>,yuwen_sum,math_sum,english_sum,physical_sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="awk-处理数据例子"><a href="#awk-处理数据例子" class="headerlink" title="awk 处理数据例子"></a>awk 处理数据例子</h2><p>生成随机数据</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">create_random</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">  min=<span class="variable">$1</span></span><br><span class="line">  max=$((<span class="variable">$2</span>-<span class="variable">$min</span>+<span class="number">1</span>))</span><br><span class="line">  num=$(<span class="built_in">date</span> +%s%N)</span><br><span class="line">  <span class="built_in">echo</span> $((<span class="variable">$num</span>%<span class="variable">$max</span>+<span class="variable">$min</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">INDEX=1</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> user <span class="keyword">in</span> Allen Mike Jerry Tracy Hanmeimei Lilei</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">    COUNT=<span class="variable">$RANDOM</span></span><br><span class="line">    NUM1=`create_random 1 <span class="variable">$COUNT</span>`</span><br><span class="line">    NUM2=`<span class="built_in">expr</span> <span class="variable">$COUNT</span> - <span class="variable">$NUM1</span>`</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;`date &#x27;+%y-%m-%d %H:%M:%S&#x27;` <span class="variable">$INDEX</span> Batches: user <span class="variable">$user</span> insert <span class="variable">$COUNT</span> records into databases:product table:datail,insert <span class="variable">$NUM1</span> records successfully,failed <span class="variable">$NUM2</span> records&quot;</span> &gt;&gt; ./db.log.`<span class="built_in">date</span> +%Y%m%d`</span><br><span class="line">    INDEX=`<span class="built_in">expr</span> <span class="variable">$INSEX</span> + 1`</span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><ol><li>统计每个用户分别插入多少record</li></ol><figure class="highlight sh"><figcaption><span>tesst.awk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">  <span class="built_in">printf</span> <span class="string">&quot;%-10s%-10s\n&quot;</span>,<span class="string">&quot;User&quot;</span>,<span class="string">&quot;Total Records&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  USER[<span class="variable">$6</span>]+=<span class="variable">$8</span></span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">  <span class="keyword">for</span>(u <span class="keyword">in</span> USER)</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;%-20s%-20d\n&quot;</span>,u,USER[u]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>统计每个用户分别插入成功和失败各多少record</li></ol><figure class="highlight sh"><figcaption><span>2.awk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">  <span class="built_in">printf</span> <span class="string">&quot;%-10s%-20s%-20s\n&quot;</span>,<span class="string">&quot;User,&quot;</span>Success_Records<span class="string">&quot;,&quot;</span>Filed_records<span class="string">&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  SUCCESS[<span class="variable">$6</span>]+=<span class="variable">$14</span></span></span><br><span class="line"><span class="string">  FAILED[<span class="variable">$6</span>]+=<span class="variable">$17</span></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">END&#123;</span></span><br><span class="line"><span class="string">  for(u in SUCCESS)</span></span><br><span class="line"><span class="string">    printf &quot;</span>%-10s%-20d%-20d\n<span class="string">&quot;,u,SUCCESS[u],FAILED[u]</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>将例子1,2结合，一起输出每个用户分别插入多少条数据，成功失败各多少条</li></ol><figure class="highlight sh"><figcaption><span>3.awk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">  BEGIN&#123;</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;%-30s%-30s%-30s%-30s\n&quot;</span>,<span class="string">&quot;Name&quot;</span>,<span class="string">&quot;total records&quot;</span>,<span class="string">&quot;success records&quot;</span>,<span class="string">&quot;failed records&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    TOTAL_RECORDS[<span class="variable">$6</span>]+=<span class="variable">$8</span></span><br><span class="line">    SUCCESS[<span class="variable">$6</span>]+=<span class="variable">$14</span></span><br><span class="line">    FAILED[<span class="variable">$6</span>]+=<span class="variable">$17</span></span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">    <span class="keyword">for</span>(u <span class="keyword">in</span> TOTAL_RECORDS)</span><br><span class="line">        <span class="built_in">printf</span> <span class="string">&quot;%-30s%-30d%-30d%-30d\n&quot;</span>,u,TOTAL_RECORDS[u],SUCCESS[u],FAILED[u]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>在例子3的基础上，加上结尾，统计全部插入记录数，成功记录数，失败记录数</li></ol><ul><li>方法一</li></ul><figure class="highlight sh"><figcaption><span>3.awk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;%-30s%-30s%-30s%-30s\n&quot;</span>,<span class="string">&quot;Name&quot;</span>,<span class="string">&quot;total records&quot;</span>,<span class="string">&quot;success records&quot;</span>,<span class="string">&quot;failed records&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    TOTAL_RECORDS[<span class="variable">$6</span>]+=<span class="variable">$8</span></span><br><span class="line">    SUCCESS[<span class="variable">$6</span>]+=<span class="variable">$14</span></span><br><span class="line">    FAILED[<span class="variable">$6</span>]+=<span class="variable">$17</span></span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">    <span class="keyword">for</span>(u <span class="keyword">in</span> TOTAL_RECORDS)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"># 在统计出的结果数组中进行累加</span></span><br><span class="line">        records_sum+=TOTAL_RECORDS[u]</span><br><span class="line">        success_sum+=SUCCESS[u]</span><br><span class="line">        failed_sum+=FAILED[u]</span><br><span class="line">        <span class="built_in">printf</span> <span class="string">&quot;%-30s%-30d%-30d%-30d\n&quot;</span>,u,TOTAL_RECORDS[u],SUCCESS[u],FAILED[u]</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;%-30s%-30d%-30d%-30d\n&quot;</span>,<span class="string">&quot;&quot;</span>,records_sum,success_sum,failed_sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>方法二</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;%-30s%-30s%-30s%-30s\n&quot;</span>,<span class="string">&quot;Name&quot;</span>,<span class="string">&quot;total records&quot;</span>,<span class="string">&quot;success records&quot;</span>,<span class="string">&quot;failed records&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    RECORDS[<span class="variable">$6</span>]+=<span class="variable">$8</span></span><br><span class="line">    SUCCESS[<span class="variable">$6</span>]+=<span class="variable">$14</span></span><br><span class="line">    FAILED[<span class="variable">$6</span>]+=<span class="variable">$17</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 在原始数据中进行汇总计算</span></span><br><span class="line">    records_sum+=<span class="variable">$8</span></span><br><span class="line">    success_sum+=<span class="variable">$14</span></span><br><span class="line">    failed_sum+=<span class="variable">$17</span>   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">END&#123;</span><br><span class="line">    <span class="keyword">for</span>(u <span class="keyword">in</span> RECORDS)</span><br><span class="line">        <span class="built_in">printf</span> <span class="string">&quot;%-30s%-30d%-30d%-30d\n&quot;</span>,u,RECORDS[u],SUCCESS[u],FAILED[u]</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;%-30s%-30d%-30d%-30d\n&quot;</span>,<span class="string">&quot;total&quot;</span>,records_sum,success_sum,failed_sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>查找丢失数据的现象，也就是成功+失败的记录数不等于一共插入的记录数，找出这些数据并显示行号和对应行的日志信息</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;if($8!=$14+$17) print NR,$0&#125;&#x27;</span> db.log.20190722</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Shell </tag>
            
            <tag> Bash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>斐讯 N1 盒子降级刷机</title>
      <link href="/posts/N1Box.html"/>
      <url>/posts/N1Box.html</url>
      
        <content type="html"><![CDATA[<p>斐讯 N1 盒子降级刷机</p><span id="more"></span><h1 id="降级"><a href="#降级" class="headerlink" title="降级"></a>降级</h1><ul><li>打开 ADB,点击官方固件的 <code>版本号</code> 4 次</li></ul><h2 id="重启至-Bootloader"><a href="#重启至-Bootloader" class="headerlink" title="重启至 Bootloader"></a>重启至 Bootloader</h2><ul><li>先下载 <a href="https://dl.google.com/android/repository/platform-tools-latest-windows.zip">ADB</a></li><li>连接设备并进入 fastboot<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> adb</span><br><span class="line">adb connect ip:5555</span><br><span class="line">adb shell reboot fastboot</span><br></pre></td></tr></table></figure></li></ul><h2 id="刷入降级"><a href="#刷入降级" class="headerlink" title="刷入降级"></a>刷入降级</h2><ul><li>双公头 USB 数据线与电脑连接，务必连接至靠近 HDMI 接口的那个 USB 接口<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fastboot devices <span class="comment">#查看是否识别到设备</span></span><br><span class="line">fastboot flash boot boot.img</span><br><span class="line">fastboot flash bootloader bootloader.img</span><br><span class="line">fastboot flash recovery recovery.img</span><br><span class="line">fastboot reboot</span><br></pre></td></tr></table></figure></li></ul><h1 id="刷入-w大固件"><a href="#刷入-w大固件" class="headerlink" title="刷入 w大固件"></a>刷入 <a href="https://www.right.com.cn/forum/thread-338759-1-1.html">w大固件</a></h1><ul><li>先安装 <a href="https://androidmtk.com/download-amlogic-usb-burning-tool">Usb Burning Tool</a></li><li>打开设备管理器 &#x3D;&#x3D;&gt; <code>操作</code> &#x3D;&#x3D;&gt;<code>添加过时硬件</code> &#x3D;&#x3D;&gt; 下一步 &#x3D;&#x3D;&gt; 选择 <code>安装我手动从列表选择的硬件</code> &#x3D;&#x3D;&gt; 下一步 &#x3D;&#x3D;&gt; 选择 <code>libusb-win32 Usb Devices</code> &#x3D;&#x3D;&gt; 下一步 &#x3D;&#x3D;&gt; 选择 <code>WorldCup Device</code> &#x3D;&#x3D;&gt; 下一步 &#x3D;&#x3D;&gt; 下一步 </li><li>打开 Usb Burining Tool,去除勾选右边烧录配置的 <code>擦除flash</code> 和 <code>擦除bootloader</code></li><li><a href="https://www.right.com.cn/forum/thread-338759-1-1.html">w大固件</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Android </tag>
            
            <tag> TvBox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Grub 双系统选项、美化</title>
      <link href="/posts/Grub.html"/>
      <url>/posts/Grub.html</url>
      
        <content type="html"><![CDATA[<p>添加 Win10 菜单到 Grub</p><span id="more"></span><h1 id="安装-os-prober"><a href="#安装-os-prober" class="headerlink" title="安装 os-prober"></a>安装 os-prober</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S os-prober </span><br></pre></td></tr></table></figure><h1 id="扫面并添加到菜单"><a href="#扫面并添加到菜单" class="headerlink" title="扫面并添加到菜单"></a>扫面并添加到菜单</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><h1 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h1><p>下载主题 <a href="https://www.gnome-look.org/browse/cat/109/ord/latest/">Gnome-Look</a></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>有的主题有安装脚本，运行即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> -r 主题包名 /boot/grub/themes/  </span><br><span class="line"><span class="built_in">sudo</span> vim /etc/grub.d/00_header</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>上一步添加如下内容</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GRUB_THEME=<span class="string">&quot;/boot/grub/themes/主题包名/theme.txt&quot;</span></span><br><span class="line">GRUB_GFXMODE=<span class="string">&quot;1920x1080x32&quot;</span></span><br></pre></td></tr></table></figure><h2 id="更新配置"><a href="#更新配置" class="headerlink" title="更新配置"></a>更新配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><img src="/assets/Picture/images/Grub.png"></p>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 更换设备后怎么做</title>
      <link href="/posts/Git-Change.html"/>
      <url>/posts/Git-Change.html</url>
      
        <content type="html"><![CDATA[<p>Git 更换设备后怎么做</p><span id="more"></span><h1 id="旧仓库"><a href="#旧仓库" class="headerlink" title="旧仓库"></a>旧仓库</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git init 仓库名字</span><br><span class="line"><span class="comment"># 建立远程连接</span></span><br><span class="line">git remote add origin https://github.com/user/repo.git    </span><br><span class="line"><span class="comment">#获取远程更新</span></span><br><span class="line">git fetch origin  </span><br><span class="line"><span class="comment"># 把更新的内容合并到本地分支</span></span><br><span class="line">git merge origin/master </span><br><span class="line"><span class="comment"># 加入差异的文件,就是本地修改的文件</span></span><br><span class="line">git add . </span><br><span class="line">git commit -m <span class="string">&quot;Commit message&quot;</span> </span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h1 id="新仓库"><a href="#新仓库" class="headerlink" title="新仓库"></a>新仓库</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git init()</span><br><span class="line">git remote add origin https://github.com/user/repo.git</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;Commit message&quot;</span></span><br><span class="line">push origin master</span><br></pre></td></tr></table></figure><h1 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h1><ul><li>拉取时推荐</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin master</span><br><span class="line">git merge origin/master</span><br></pre></td></tr></table></figure><ul><li>不推荐</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ArchLinux Docker</title>
      <link href="/posts/Docker.html"/>
      <url>/posts/Docker.html</url>
      
        <content type="html"><![CDATA[<p>ArchLinux 安装 Docker</p><span id="more"></span><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S docker</span><br></pre></td></tr></table></figure><p>start server</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker </span><br></pre></td></tr></table></figure><h1 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull ubuntu:18.04</span><br><span class="line">docker pull centos <span class="comment"># latest</span></span><br><span class="line">dicker pull centos:6</span><br></pre></td></tr></table></figure><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> docker run -i -t centos /bin/bash</span><br></pre></td></tr></table></figure><ul><li>-it, -i：交互式操作， -t 终端</li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim 集锦</title>
      <link href="/posts/Vim-Mooc.html"/>
      <url>/posts/Vim-Mooc.html</url>
      
        <content type="html"><![CDATA[<p>Vim 重新学习笔记</p><span id="more"></span><h1 id="三个模式"><a href="#三个模式" class="headerlink" title="三个模式"></a>三个模式</h1><h2 id="Insert-编辑模式"><a href="#Insert-编辑模式" class="headerlink" title="Insert 编辑模式"></a>Insert 编辑模式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a i o <span class="comment"># 进入编辑模式</span></span><br><span class="line">ESc <span class="comment"># 进入 normal 模式</span></span><br></pre></td></tr></table></figure><ul><li>i (insert)</li><li>a (append)</li><li>o (oppen a line below)</li></ul><h2 id="Command-模式"><a href="#Command-模式" class="headerlink" title="Command 模式"></a>Command 模式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:wq <span class="comment"># 保存退出</span></span><br><span class="line">:vs <span class="comment"># vertical split 横向分频</span></span><br><span class="line">:sp <span class="comment"># 纵向分频</span></span><br><span class="line">:% s/foo/bar/g <span class="comment"># 全局替换</span></span><br><span class="line">:h option-list <span class="comment"># 查找所有设置选项</span></span><br></pre></td></tr></table></figure><h2 id="Visual-可视-模式"><a href="#Visual-可视-模式" class="headerlink" title="Visual (可视)模式"></a>Visual (可视)模式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">v <span class="comment"># 进入 visual 模式</span></span><br><span class="line">V <span class="comment"># 选择行</span></span><br><span class="line">ctrl v <span class="comment"># 进行快选择</span></span><br></pre></td></tr></table></figure><h1 id="如何快速纠错"><a href="#如何快速纠错" class="headerlink" title="如何快速纠错"></a>如何快速纠错</h1><p>a&#x2F;i&#x2F;o 进入插入模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ctrl h <span class="comment"># 删除上一个字符</span></span><br><span class="line">ctrl w <span class="comment"># 删除上一个单词</span></span><br><span class="line">ctrl u <span class="comment"># 删除当前行</span></span><br></pre></td></tr></table></figure><p>快速切换 Insert 和 Normal</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ctrl c / ctrl [ <span class="comment"># 代替 Esc</span></span><br><span class="line">gi <span class="comment"># 快速跳转到你最后一次编辑的地方并进入插入模式</span></span><br></pre></td></tr></table></figure><p>使用 hjkl 移动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">h <span class="comment"># 左</span></span><br><span class="line">j <span class="comment"># 下</span></span><br><span class="line">k <span class="comment"># 上</span></span><br><span class="line">l <span class="comment"># 右</span></span><br></pre></td></tr></table></figure><h1 id="在单词之间飞舞"><a href="#在单词之间飞舞" class="headerlink" title="在单词之间飞舞"></a>在单词之间飞舞</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">w/W <span class="comment"># 移到下一 word/WORD 开头</span></span><br><span class="line">e/E <span class="comment"># 下一个 word/WORD 尾</span></span><br><span class="line">b/B <span class="comment"># 回到上一个word/WORD 开头</span></span><br></pre></td></tr></table></figure><ul><li>word 指以非空白符分割的单词</li><li>WORD 以空白符分割的单词</li></ul><p>行间搜索移动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f&#123;char&#125; <span class="comment"># 移到 char 字符上</span></span><br><span class="line">t <span class="comment"># 移到 char 前一个字符</span></span><br><span class="line">F <span class="comment"># 反过来搜索前面的字符</span></span><br></pre></td></tr></table></figure><ul><li>; 该行下一个</li><li>, 该行上一个</li></ul><p>水平移动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0 <span class="comment"># 移到行首第一个字符</span></span><br><span class="line">^ <span class="comment"># 第一个非空白字符</span></span><br><span class="line">$ <span class="comment"># 移到行尾</span></span><br><span class="line">g_ <span class="comment"># 移到行尾非空白字符</span></span><br></pre></td></tr></table></figure><p>垂直移到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">() <span class="comment"># 在句子间移动</span></span><br><span class="line">&#123;&#125; <span class="comment"># 在段落间移到</span></span><br></pre></td></tr></table></figure><ul><li>插件 easy-motion</li></ul><p>页面移动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gg、G <span class="comment"># 文件开头/结尾</span></span><br><span class="line">ctrl o <span class="comment"># 快速返回</span></span><br><span class="line"></span><br><span class="line">H/M/L <span class="comment"># 跳到屏幕开头(Head)中间(Middle)结尾(Lower)</span></span><br><span class="line">ctrl u <span class="comment"># 上翻页</span></span><br><span class="line">ctrl f <span class="comment"># 下翻页</span></span><br><span class="line">zz <span class="comment"># 把屏幕置为中间</span></span><br></pre></td></tr></table></figure><h1 id="增删查改"><a href="#增删查改" class="headerlink" title="增删查改"></a>增删查改</h1><p>增</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a/i/o</span><br><span class="line">A/I/O</span><br></pre></td></tr></table></figure><p>快速删除</p><figure class="highlight bash"><figcaption><span>normal 模式下</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x <span class="comment"># 快速删一个字符</span></span><br><span class="line">d <span class="comment"># 删除</span></span><br><span class="line">daw <span class="comment"># 删除一个单词</span></span><br></pre></td></tr></table></figure><ul><li>d x 可以搭配数字执行多次</li></ul><p>快速修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r(replace) c(change) s(substitute) <span class="comment"># 常用</span></span><br></pre></td></tr></table></figure><ul><li>normal 下 r 可以替换一个字符，s 替换并进入插入模式</li><li>使用 c 配合文本对象可以快速进行修改</li></ul><p>查询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/ <span class="comment"># 前向搜索</span></span><br><span class="line">? <span class="comment"># 反向搜索</span></span><br></pre></td></tr></table></figure><ul><li>n&#x2F;N 跳转上一个或者上一个匹配</li><li><ul><li>或者 # 进行当前单词的前向和后向匹配</li></ul></li></ul><h1 id="替换命令"><a href="#替换命令" class="headerlink" title="替换命令"></a>替换命令</h1><p>substitute</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:[range]s[ubsitite]/&#123;pattern&#125;/&#123;string&#125;/[flags]</span><br></pre></td></tr></table></figure><ul><li>range 范围(:10,20),10-20行,% 全部</li><li>pattern 要替换的模式</li><li>string 是替换后的文本</li></ul><h2 id="替换标志位"><a href="#替换标志位" class="headerlink" title="替换标志位"></a>替换标志位</h2><p>Flags 常用标志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">g(global) <span class="comment"># 全局</span></span><br><span class="line">c(confirm) <span class="comment"># 表示确认，可以确认或拒绝修改</span></span><br><span class="line">n(number) <span class="comment"># 报告匹配到的次数而不替换，可以用来匹配次数</span></span><br></pre></td></tr></table></figure><ul><li>:1,6 s&#x2F;self&#x2F;&#x2F; 查询1-6行有几个 self</li><li>:% s&#x2F;&lt;quack&gt;&#x2F;jiao&#x2F;g 替换所有 quack 为 jiao</li></ul><h1 id="Buffer-Windows-Tab"><a href="#Buffer-Windows-Tab" class="headerlink" title="Buffer Windows Tab"></a>Buffer Windows Tab</h1><p>文件操作相关</p><ol><li>Buffer 是打开的一个文件的内存缓冲区</li><li>窗口是 Buffer 可视化的分割区域</li><li>Tab 可以组织窗口为一个工作区</li></ol><h2 id="在-Buffer-之间切换"><a href="#在-Buffer-之间切换" class="headerlink" title="在 Buffer 之间切换"></a>在 Buffer 之间切换</h2><ol><li>使用 :ls 列举当前缓冲区，后 :b n跳转到第 n 个</li><li>:bpre :bnext :bfirst :blast</li><li>或者 :b buffer_name 加上 tab 补全来跳转</li></ol><h2 id="Windows-窗口"><a href="#Windows-窗口" class="headerlink" title="Windows 窗口"></a>Windows 窗口</h2><ol><li><ctrl w>s 水平分割</li><li><ctrl w>v 垂直分割</li><li>或者 :sp :vs</li></ol><p><img src="/assets/Picture/images/window.png"><br><img src="/assets/Picture/images/tab.png"></p><h1 id="宏-macro"><a href="#宏-macro" class="headerlink" title="宏(macro)"></a>宏(macro)</h1><p>可以看做一系列命令合集</p><h2 id="How"><a href="#How" class="headerlink" title="How"></a>How</h2><ol><li>q 录制、技术录制</li><li>q{register} 选择要保存的寄存器，把录制的命令保存其中</li><li>@{register} 回放寄存器中的一系列命令</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">q I<span class="string">&quot; A&quot;</span></span><br><span class="line"></span><br><span class="line">VG <span class="comment"># 全选</span></span><br><span class="line">: I<span class="string">&quot;</span></span><br><span class="line"><span class="string">:t # 重复上一命令</span></span><br><span class="line"><span class="string">:A&quot;</span></span><br></pre></td></tr></table></figure><h1 id="常见的补全"><a href="#常见的补全" class="headerlink" title="常见的补全"></a>常见的补全</h1><table><thead><tr><th align="left">命令</th><th align="left">补全类型</th></tr></thead><tbody><tr><td align="left">ctrl n</td><td align="left">普通关键字</td></tr><tr><td align="left">ctrl x&#x2F;n</td><td align="left">当前缓冲区关键字</td></tr><tr><td align="left">ctrl x&#x2F;i</td><td align="left">包含文件关键字</td></tr><tr><td align="left">ctrl x&#x2F;J</td><td align="left">标签文件关键字</td></tr><tr><td align="left">ctrl x&#x2F;k</td><td align="left">字典查找</td></tr><tr><td align="left">ctrl x&#x2F;l</td><td align="left">整行补全</td></tr><tr><td align="left">ctrl x&#x2F;f</td><td align="left">文件名补全</td></tr><tr><td align="left">ctrl x&#x2F;o</td><td align="left">全能(Omni)补全</td></tr></tbody></table><hr><h2 id="最常用"><a href="#最常用" class="headerlink" title="最常用"></a>最常用</h2><ol><li>ctrl n 和 ctrl p 补全单词</li><li>ctrl x 和 ctrl f 补全文件名</li><li>ctrl x 和 ctrl o 补全代码</li></ol><h1 id="更换配色"><a href="#更换配色" class="headerlink" title="更换配色"></a>更换配色</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:colorscheme <span class="comment"># 显示当前主题配色</span></span><br><span class="line">:colorscheme &lt;ctrl+d&gt; <span class="comment"># 显示所有配色</span></span><br><span class="line">:colorscheme 配色名 <span class="comment"># 修改配色</span></span><br></pre></td></tr></table></figure><h1 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h1><h2 id="基本映射"><a href="#基本映射" class="headerlink" title="基本映射"></a>基本映射</h2><ul><li>normal 模式下(leadser键即 <code>,</code> )</li></ul><ol><li>map 可以实现映射，<code>:map -x</code> 然后按下 - 就会删除一个字符</li><li><code>:map &lt;space&gt; viw</code> 按下空格键时选中整个单词</li><li><code>:map &lt;c-d&gt; dd</code> 删除</li></ol><ul><li><p>消除映射 <code>unmap -</code></p></li><li><p><code>imap &lt;c-d&gt; &lt;Esc&gt;ddi</code> insert 模式映射 ctrl+d 删除一行</p></li><li><p>模式映射映射</p></li></ul><ol><li>用 namap&#x2F;vmap&#x2F;imap 定义映射只在normal&#x2F;visual&#x2F;insert分别有效</li></ol><ul><li><code>:vmap \U</code> 把 visusal 模式下选中的文本大小(u&#x2F;U转换大小写)</li></ul><h2 id="递归与非递归映射"><a href="#递归与非递归映射" class="headerlink" title="递归与非递归映射"></a>递归与非递归映射</h2><p>*map 系列有递归风险,如果安装了一个插件，插件映射了同一个按键的不同行为，有冲突就会有一个失效。</p><p>非递归映射</p><ol><li>*map 对应的 nnoremap&#x2F;vnoremao&#x2F;inoremap</li><li>任何时候都建议使用非递归映射</li></ol><p>示例</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> mapleader = <span class="string">&quot;,&quot;</span></span><br><span class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;leader&gt;</span><span class="keyword">w</span> <span class="symbol">&lt;Esc&gt;</span>:<span class="keyword">w</span><span class="symbol">&lt;cr&gt;</span> # 插入模式保存</span><br><span class="line"><span class="keyword">inoremap</span> jj <span class="symbol">&lt;Esc&gt;</span> # 使用jj直接进入 <span class="keyword">normal</span></span><br><span class="line"># 使用 leader+<span class="keyword">w</span> 直接保存</span><br><span class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;leader&gt;</span><span class="keyword">w</span> <span class="symbol">&lt;Esc&gt;</span>:<span class="keyword">w</span><span class="symbol">&lt;cr&gt;</span></span><br><span class="line"><span class="keyword">noremap</span> <span class="symbol">&lt;leader&gt;</span><span class="keyword">w</span> :<span class="keyword">w</span><span class="symbol">&lt;cr&gt;</span></span><br><span class="line"></span><br><span class="line"># 切换 Buffer</span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;slient&gt;</span> [<span class="keyword">b</span> :<span class="keyword">bprevious</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;slient&gt;</span> [n :<span class="keyword">bnext</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"></span><br><span class="line"># 分屏</span><br><span class="line"><span class="keyword">noremap</span> <span class="symbol">&lt;C-h&gt;</span> <span class="symbol">&lt;C-w&gt;</span>h</span><br><span class="line"><span class="keyword">noremap</span> <span class="symbol">&lt;C-j&gt;</span> <span class="symbol">&lt;C-w&gt;</span><span class="keyword">j</span></span><br><span class="line"><span class="keyword">noremap</span> <span class="symbol">&lt;C-k&gt;</span> <span class="symbol">&lt;C-w&gt;</span><span class="keyword">k</span></span><br><span class="line"><span class="keyword">noremap</span> <span class="symbol">&lt;C-l&gt;</span> <span class="symbol">&lt;C-w&gt;</span><span class="keyword">l</span></span><br><span class="line"></span><br><span class="line"># json 格式化</span><br><span class="line">comr FormatJSON %!python3 -<span class="keyword">m</span> json.tool</span><br><span class="line"></span><br><span class="line"># sudo <span class="keyword">to</span> <span class="keyword">write</span></span><br><span class="line"><span class="keyword">cnoremap</span> w!! <span class="keyword">w</span> !sudo tee % &gt;/dev/null</span><br></pre></td></tr></table></figure><h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><h2 id="常见的插件管理器"><a href="#常见的插件管理器" class="headerlink" title="常见的插件管理器"></a>常见的插件管理器</h2><p>vim-plug,Vundle,Pathogen,Deim </p><h2 id="vim-plug"><a href="#vim-plug" class="headerlink" title="vim-plug"></a><a href="https://github.com/junegunn/vim-plug">vim-plug</a></h2><ul><li>安装 vim-plug</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fLo ~/.vim/autoload/plug.vim --create-dirs \</span><br><span class="line">https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span><br></pre></td></tr></table></figure><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight bash"><figcaption><span>.vimrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">call plug#begin(<span class="string">&#x27;~/.vim/plugged&#x27;</span>)</span><br><span class="line">Plug <span class="string">&#x27;mhinz/vim-startify&#x27;</span> <span class="comment"># 插件</span></span><br><span class="line"><span class="string">&quot; Initialize plugin system</span></span><br><span class="line"><span class="string">call plug#end()</span></span><br></pre></td></tr></table></figure><ul><li><code>source ~/.vimrc</code> 并 <code>:PlugInstall</code></li></ul><h2 id="vim-美观插件"><a href="#vim-美观插件" class="headerlink" title="vim 美观插件"></a>vim 美观插件</h2><ul><li>外观</li></ul><ol><li>修改启动界面: <a href="https://github.com/mhinz/vim-startify">vim-startify</a></li><li>状态栏美化：<a href="https://github.com/vim-airline">vim-airline</a></li><li>增加但代码缩进线条：<a href="https://github.com/yggdroot/indentline">indentline</a></li></ol><ul><li>配色方案</li></ul><ol><li><a href="https://github.com/w0ng/vim-hybird">vim-hybird</a></li><li><a href="https://github.com/altercation/vim-colors-solarized">solarized</a></li><li><a href="https://github.com/morhetz/gruvbox">grubbox</a></li></ol><h2 id="插件推荐网站"><a href="#插件推荐网站" class="headerlink" title="插件推荐网站"></a>插件推荐网站</h2><p><a href="https://vimawesome.com/">vimawesome</a></p><h2 id="文件目录和搜索插件"><a href="#文件目录和搜索插件" class="headerlink" title="文件目录和搜索插件"></a>文件目录和搜索插件</h2><ul><li>文件目录 <a href="https://github.com/scrooloose/nerdtree">nerdtree</a></li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&quot; 查找文件所在位置</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;leader&gt;</span>v :NERDTreeFind<span class="symbol">&lt;cr&gt;</span></span><br><span class="line"><span class="comment">&quot; 切换设置</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;leader&gt;</span>g :NERDTreeToggle<span class="symbol">&lt;cr&gt;</span></span><br></pre></td></tr></table></figure><ul><li>模糊搜索器 <a href="https://github.com/ctrlpvim/ctrlp.vim">ctrip.vim</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let g:ctrlp_map = &#x27;&lt;c-p&gt;&#x27;</span><br><span class="line">let g:ctrlp_cmd = &#x27;CtrlP&#x27;</span><br></pre></td></tr></table></figure><ul><li><p>Crtl + P 后输入要搜索的内容</p></li><li><p>模糊搜索<a href="https://github.com/junegunn/fzf.vim">fzf.vim</a></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Files . <span class="comment"># 搜索当前目录</span></span><br><span class="line">:Ag content <span class="comment"># 搜索字符串</span></span><br></pre></td></tr></table></figure><ul><li>快速跳转位置插件 <a href="https://github.com/easymotion/vim-easymotion">vim-easymotion</a></li></ul><p>映射</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unmap ss &lt;Plus&gt;(easymotion-s2)</span><br></pre></td></tr></table></figure><ul><li>修改成对内容 <a href="https://github.com/tpope/vim-surround">vim-surround</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ds <span class="comment"># delete a surrounding</span></span><br><span class="line">cs <span class="comment"># change a surrounding</span></span><br><span class="line">ys <span class="comment"># you add a surrounding</span></span><br></pre></td></tr></table></figure><ul><li>替换　<a href="https://github.com/brooth/far.vim">far.vim</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim duck.go gua.py</span><br><span class="line">:Far [替换] [替换成的] **/*.py</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="浏览代码"><a href="#浏览代码" class="headerlink" title="浏览代码"></a>浏览代码</h3><p><a href="https://github.com/majutsushi/tagbar">targbar</a></p><figure class="highlight bash"><figcaption><span>vimrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nonormal &lt;leader&gt;t :TagbarToggle&lt;CR&gt;</span><br></pre></td></tr></table></figure><p><a href="https://github.com/lfv89/vim-interestingwords">vim-interestingwords</a> 可以高亮单词</p><h3 id="补全"><a href="#补全" class="headerlink" title="补全"></a>补全</h3><p>补全插件</p><ol><li><a href="https://github.com/shougo/deoplete.nvim">deoplete.nvim</a> 多语言，模糊搜索</li><li><a href="https://github.com/neoclide/coc.nvim">coc.vim</a> 多语言插件支持</li></ol><p>快速注释</p><p><a href="https://github.com/tpope/vim-commentary">vim-commentary</a> <code>gc</code> 注释或取消注释</p><h2 id="格式化与静态检查"><a href="#格式化与静态检查" class="headerlink" title="格式化与静态检查"></a>格式化与静态检查</h2><p>格式化</p><p><a href="https://github.com/sbdchd/neoformat">Neoformat</a> 需要安装对应语言的格式化库，python的autopep8,js的prettier等</p><p>静态检查Lint</p><p>neomake、<a href="https://github.com/w0rp/ale">ale</a> 需要安装对应语言的 lint 库如 eslint&#x2F;pylint&#x2F;golint</p><h2 id="Python-相关"><a href="#Python-相关" class="headerlink" title="Python 相关"></a>Python 相关</h2><p><a href="https://github.com/python-mode/python-mode">Python-mode</a> 具有基本的补全，跳转，重构，格式化功能</p><figure class="highlight bash"><figcaption><span>.vimer</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot; Python-mode</span></span><br><span class="line"><span class="string">let g:pymode_python =  &#x27;python3&#x27;</span></span><br><span class="line"><span class="string">let g:pymode_trim_whitespaces = 1</span></span><br><span class="line"><span class="string">let g:pymode_doc = 1</span></span><br><span class="line"><span class="string">let g:pymode_doc_bind = &#x27;k&#x27;</span></span><br><span class="line"><span class="string">let g:pymode_rope_goto_definition_bind = &quot;</span>&lt;C-J&gt;<span class="string">&quot;</span></span><br><span class="line"><span class="string">let g:pymode_lint = `</span></span><br><span class="line"><span class="string">let g:pymode_lint_checkers = [&#x27;pyflakers&#x27;,&#x27;pep8&#x27;,&#x27;mccabe&#x27;,&#x27;plylint&#x27;]</span></span><br><span class="line"><span class="string">let g:pymode_options_max_line_length = 120</span></span><br></pre></td></tr></table></figure><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><p><a href="https://github.com/tppope/vim-fugitive">Fugitive</a></p><ul><li>命令 <code>:Gedit</code>,<code>:Gdiff</code>,<code>:Gblame</code>,<code>:Gcommit</code> 等</li></ul><p><a href="https://github.com/airblade/vim-gitgutter">vim-gitgutter</a> 显示文件变动</p><p><a href="https://github.com/junegunn/gv.vim">gv.vim</a> <code>:GV</code> 查看提交记录</p><hr><p><strong>学习视频</strong></p><ul><li><a href="https://www.imooc.com/learn/1129">玩转Vim 从放弃到爱不释手</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> Vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cat 追加与覆盖</title>
      <link href="/posts/CatEOF.html"/>
      <url>/posts/CatEOF.html</url>
      
        <content type="html"><![CDATA[<p>Cat  追加与覆盖</p><span id="more"></span><h1 id="追加"><a href="#追加" class="headerlink" title="追加"></a>追加</h1><ul><li>cat &lt;<EOF>&gt;</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt;&gt; cat.txt</span></span><br><span class="line"><span class="string">vitan.me</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><ul><li>cat &gt;&gt;</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">cat</span> &gt;&gt; cat.txt &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">vitan.me</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h1 id="覆盖"><a href="#覆盖" class="headerlink" title="覆盖"></a>覆盖</h1><ul><li>cat &lt;<EOF>&gt;</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; cat.txt</span></span><br><span class="line"><span class="string">vitan.me</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><ul><li>cat &gt;&gt;</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">cat</span> &gt; cat.txt &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">vitan.me</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h1 id="使用变量"><a href="#使用变量" class="headerlink" title="使用变量"></a>使用变量</h1><ul><li>Warnning<br>追加和覆盖若要使用变量必须加 <code>\</code> 如 <strong><code>\$var</code></strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Terminal Socks5 Proxy</title>
      <link href="/posts/CurlSocks5.html"/>
      <url>/posts/CurlSocks5.html</url>
      
        <content type="html"><![CDATA[<p>Some Socks5 Proxy setting</p><span id="more"></span><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy socks5://127.0.0.1:1080</span><br><span class="line">git config --global https.proxy socks5://127.0.0.1:1080</span><br><span class="line">git config --global --<span class="built_in">unset</span> http.proxy</span><br><span class="line">git config --global --<span class="built_in">unset</span> https.proxy</span><br></pre></td></tr></table></figure><h1 id="Curl"><a href="#Curl" class="headerlink" title="Curl"></a>Curl</h1><figure class="highlight bash"><figcaption><span>.curlrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;socks5 = &quot;127.0.0.1:1080&quot;&#x27;</span> &gt;&gt; ~/.curlrc</span><br></pre></td></tr></table></figure><ul><li>ALL_PROXY</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> ALL_PROXY=socks5://127.0.0.1:1080</span><br></pre></td></tr></table></figure><h1 id="Wget"><a href="#Wget" class="headerlink" title="Wget"></a>Wget</h1><figure class="highlight bash"><figcaption><span>EVN Config</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xport http_proxy=http://127.0.0.1:1080</span><br><span class="line">xport http_proxy=httpS://127.0.0.1:1080</span><br></pre></td></tr></table></figure><h2 id="wgetrc"><a href="#wgetrc" class="headerlink" title=".wgetrc"></a>.wgetrc</h2><figure class="highlight bash"><figcaption><span>~/.wgetrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">https_proxy = http://127.0.0.1:8087/</span><br><span class="line">http_proxy = http://127.0.0.1:8087/</span><br><span class="line">ftp_proxy = http://127.0.0.1:8087/</span><br><span class="line"></span><br><span class="line"><span class="comment"># If you do not want to use proxy at all, set this to off.</span></span><br><span class="line">use_proxy = on</span><br></pre></td></tr></table></figure><p>-e</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c -r -np -k -L -p -e <span class="string">&quot;http_proxy=http://127.0.0.1:1080&quot;</span> url</span><br></pre></td></tr></table></figure><h1 id="Pip"><a href="#Pip" class="headerlink" title="Pip"></a>Pip</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S proxychains</span><br></pre></td></tr></table></figure><ul><li>vim &#x2F;etc&#x2F;proxychains.conf</li></ul><figure class="highlight bash"><figcaption><span>/etc/proxychains.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ProxyList]</span><br><span class="line">socks5  127.0.0.1 1080</span><br></pre></td></tr></table></figure><ul><li>usage</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains pip install &lt;package_name&gt;</span><br></pre></td></tr></table></figure><hr><p><strong>参考</strong></p><ul><li><a href="https://my.oschina.net/u/2306127/blog/791258">为wget使用代理</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS DNS</title>
      <link href="/posts/Linux-DNS.html"/>
      <url>/posts/Linux-DNS.html</url>
      
        <content type="html"><![CDATA[<p>CentOS DNS </p><span id="more"></span><h1 id="Bind"><a href="#Bind" class="headerlink" title="Bind"></a>Bind</h1><p>Install</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install <span class="built_in">bind</span> <span class="built_in">bind</span> bind-chroot -y</span><br></pre></td></tr></table></figure><p>Start Service</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service named start</span><br><span class="line">systemctl name start <span class="comment"># CentOs 7</span></span><br><span class="line">systemctl <span class="built_in">enable</span> named-chroot</span><br></pre></td></tr></table></figure><h1 id="Bind-配置"><a href="#Bind-配置" class="headerlink" title="Bind 配置"></a>Bind 配置</h1><figure class="highlight bash"><figcaption><span>named.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /var/named/chroot/etc/named.conf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>/var/named/chroot/etc/named.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">options &#123;</span><br><span class="line">        listen-on port 53 &#123; any; &#125;;# 监听任何ip对53端口的请求</span><br><span class="line">        listen-on-v6 port 53 &#123; ::1; &#125;;</span><br><span class="line">        directory       <span class="string">&quot;/var/named&quot;</span>;</span><br><span class="line">        dump-file       <span class="string">&quot;/var/named/data/cache_dump.db&quot;</span>;</span><br><span class="line">        statistics-file <span class="string">&quot;/var/named/data/named_stats.txt&quot;</span>;</span><br><span class="line">        memstatistics-file <span class="string">&quot;/var/named/data/named_mem_stats.txt&quot;</span>;</span><br><span class="line">        allow-query     &#123; any; &#125;; <span class="comment"># 接收任何来源查询dns记录</span></span><br><span class="line">        recursion <span class="built_in">yes</span>;</span><br><span class="line"></span><br><span class="line">        dnssec-enable <span class="built_in">yes</span>;</span><br><span class="line">        dnssec-validation <span class="built_in">yes</span>;</span><br><span class="line"></span><br><span class="line">        /* Path to ISC DLV key */</span><br><span class="line">        bindkeys-file <span class="string">&quot;/etc/named.iscdlv.key&quot;</span>;</span><br><span class="line"></span><br><span class="line">         managed-keys-directory <span class="string">&quot;/var/named/dynamic&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//以下用于限定 <span class="built_in">bind</span> 服务器的日志参数</span><br><span class="line">logging &#123;</span><br><span class="line">        channel default_debug &#123;</span><br><span class="line">                file <span class="string">&quot;data/named.run&quot;</span>;</span><br><span class="line">                severity dynamic;</span><br><span class="line">        &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//用于指定根服务器的配置信息，一般不能改动</span><br><span class="line">zone <span class="string">&quot;.&quot;</span> IN &#123;</span><br><span class="line">        <span class="built_in">type</span> hint;</span><br><span class="line">        file <span class="string">&quot;named.ca&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">include <span class="string">&quot;/etc/named.zones&quot;</span>; //指定住配置文件，按实际改动</span><br><span class="line">include <span class="string">&quot;/etc/named.root.key&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="配置主配置文件"><a href="#配置主配置文件" class="headerlink" title="配置主配置文件"></a>配置主配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/named/chroot/etc/</span><br><span class="line"><span class="built_in">cp</span> -p named.rfc1912.zones named.zones</span><br><span class="line">vim named.zones</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>/var/named/chroot/etc/named.zones</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">zone <span class="string">&quot;vitan.me&quot;</span> IN &#123;</span><br><span class="line">        <span class="built_in">type</span> master;</span><br><span class="line">        file <span class="string">&quot;vitan.me.zone&quot;</span>;</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone <span class="string">&quot;197.28.149.in-addr.arpa&quot;</span> IN &#123;</span><br><span class="line">        <span class="built_in">type</span> master;</span><br><span class="line">        file <span class="string">&quot;149.28.197.zone&quot;</span>;</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="区域配置文件"><a href="#区域配置文件" class="headerlink" title="区域配置文件"></a>区域配置文件</h2><ul><li>正向解析域</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/named/chroot/var/named</span><br><span class="line"><span class="built_in">cp</span> -p named.localhost vitan.me.zone</span><br><span class="line">vim vitan.me.zone</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>/var/named/chroot/var/named/vitan.me.zone</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$TTL</span> 1D</span><br><span class="line">@       IN SOA  www.vitan.me. mail.vitan.me. (</span><br><span class="line">                2007101100      ; serial</span><br><span class="line">                1D      ; refresh <span class="comment"># 主从刷新时间</span></span><br><span class="line">                1H      ; retry <span class="comment"># 主从通讯失败后重试间隔</span></span><br><span class="line">                1W      ; expire <span class="comment"># 缓存过期时间</span></span><br><span class="line">                3H )    ; minimum <span class="comment"># 没有TTL定义时的最小生存周期</span></span><br><span class="line"></span><br><span class="line">@       IN      NS              www.vitan.me.</span><br><span class="line">@       IN      MX      10      www.vitan.me.</span><br><span class="line">www     IN      A               149.28.197.1</span><br><span class="line">mail    IN      A               149.28.197.1</span><br><span class="line">www1    IN      CNAME           www.vitan.me.</span><br></pre></td></tr></table></figure><ul><li>反向向解析域</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/named/chroot/var/named</span><br><span class="line"><span class="built_in">cp</span> -p named.loopback 149.28.197.zone</span><br><span class="line">vim /var/named/chroot/var/named/149.28.197zone</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>/var/named/chroot/var/named/149.28.197.zone</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$TTL</span> 1D</span><br><span class="line">@       IN SOA  www.vitan.me. mail.vitan.me. (</span><br><span class="line">                2007101100      ; serial</span><br><span class="line">                1D      ; refresh <span class="comment"># 主从刷新时间</span></span><br><span class="line">                1H      ; retry <span class="comment"># 主从通讯失败后重试间隔</span></span><br><span class="line">                1W      ; expire <span class="comment"># 缓存过期时间</span></span><br><span class="line">                3H )    ; minimum <span class="comment"># 没有TTL定义时的最小生存周期</span></span><br><span class="line"></span><br><span class="line">@       IN      NS              www.vitan.me.</span><br><span class="line">@       IN      MX      10      www.vitan.me.</span><br><span class="line">www     IN      A               149.28.197.1</span><br><span class="line">mail    IN      A               149.28.197.1</span><br><span class="line">www1    IN      CNAME           www.vitan.me.</span><br></pre></td></tr></table></figure><h1 id="重启-DNS-服务"><a href="#重启-DNS-服务" class="headerlink" title="重启 DNS 服务"></a>重启 DNS 服务</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service named restart/reload</span><br><span class="line">systemctl named restart <span class="comment"># CentOs 7</span></span><br></pre></td></tr></table></figure><h1 id="客户端配置与测试"><a href="#客户端配置与测试" class="headerlink" title="客户端配置与测试"></a>客户端配置与测试</h1><ul><li>以便能使用 nslookup dig 和 host</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install bind-utils -y</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>/etc/resolv.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/resolv.conf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>/etc/resolv.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">search vitan.me</span><br><span class="line">nameserver 149.28.197.1</span><br></pre></td></tr></table></figure><h1 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dig www.vitan.me</span><br><span class="line">nslookup www.vitan.me</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS  DHCP</title>
      <link href="/posts/Linux-DHCP.html"/>
      <url>/posts/Linux-DHCP.html</url>
      
        <content type="html"><![CDATA[<p>CentOS DHCP</p><span id="more"></span><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br><span class="line">yum install dhcp -y</span><br></pre></td></tr></table></figure><h1 id="修改-ip"><a href="#修改-ip" class="headerlink" title="修改 ip"></a>修改 ip</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-eth2</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=<span class="string">&quot;eth2&quot;</span></span><br><span class="line">BOOTPROTO=static</span><br><span class="line">HWADDR=<span class="string">&quot;00:0D:29:G1:2D:3B&quot;</span></span><br><span class="line">NM_CONTROLLED=<span class="string">&quot;yes&quot;</span></span><br><span class="line">ONBOOT=<span class="string">&quot;yes&quot;</span></span><br><span class="line">BOOTPROTO=<span class="string">&quot;none&quot;</span></span><br><span class="line">IPADDR=192.168.22.11</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.22.1 </span><br></pre></td></tr></table></figure><ul><li>重启网络</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service network restart</span><br><span class="line">systemctl network restart</span><br></pre></td></tr></table></figure><h1 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h1><ul><li>路径</li></ul><figure class="highlight bash"><figcaption><span>dhcpd.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/dhcp/dhcpd.conf</span><br></pre></td></tr></table></figure><ul><li>复制 dhcpd.conf.samplle</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> -p /usr/share/doc/dhcp-6.1.1/dhcpd.conf.sample /etc/dhcp/dhcpd.conf</span><br></pre></td></tr></table></figure><ul><li>配置文件设置</li></ul><figure class="highlight bash"><figcaption><span>/etc/dhcp/dhcpd.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">ddns-update-style interim;// dhcp 服务器和dns 服务器的动态信息更新模式     </span><br><span class="line">ignore client-updates;       </span><br><span class="line">default-lease-time           259200; <span class="comment">#预设租约为 3 天</span></span><br><span class="line">max-lease-time               518400; <span class="comment"># 最大租约为 6 天</span></span><br><span class="line"></span><br><span class="line">subnet 192.168.22.0 netmask 255.255.255.0 &#123;</span><br><span class="line">      option routers                  192.168.22.254;#预设路由</span><br><span class="line">      option subnet-mask              255.255.255.0;</span><br><span class="line">      option domain-search            <span class="string">&quot;vitan.me&quot;</span>; <span class="comment"># 给予一个领域名</span></span><br><span class="line">      option domain-name-servers      192.168.22.1;</span><br><span class="line">      option time-offset              -18000; <span class="comment">#时区</span></span><br><span class="line">      range   192.168.1.10   192.168.1.100;</span><br><span class="line"></span><br><span class="line">      <span class="comment"># 关于固定的 IP </span></span><br><span class="line">      host win7 &#123;</span><br><span class="line">        hardware ethernet    08:00:27:11:EB:C2; <span class="comment">#客户端网卡 MAC</span></span><br><span class="line">        fixed-address        192.168.100.30;    <span class="comment">#给予固定的 IP</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>启动</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service dhcpd start</span><br><span class="line">systemctl start dhcp <span class="comment">#CentOs 7</span></span><br><span class="line">dhcpd <span class="comment"># 检测错误</span></span><br><span class="line">chkconfig --levels 235 dhcpd on <span class="comment"># 开机启动</span></span><br></pre></td></tr></table></figure><h1 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h1><figure class="highlight bash"><figcaption><span>ifcfg.eth2</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-eth2</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=<span class="string">&quot;eth2&quot;</span></span><br><span class="line">BOOTPROTO=dhcp</span><br><span class="line">HWADDR=<span class="string">&quot;00:0D:29:G1:2D:3B&quot;</span></span><br><span class="line">NM_CONTROLLED=<span class="string">&quot;yes&quot;</span></span><br><span class="line">ONBOOT=<span class="string">&quot;yes&quot;</span></span><br><span class="line">BOOTPROTO=<span class="string">&quot;none&quot;</span></span><br><span class="line">IPADDR=192.168.22.100</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.22.1 </span><br></pre></td></tr></table></figure><ul><li>重启网络</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ifdown eth2</span><br><span class="line">ifup eth2</span><br><span class="line"></span><br><span class="line">service network restart</span><br></pre></td></tr></table></figure><h1 id="查看租约情况"><a href="#查看租约情况" class="headerlink" title="查看租约情况"></a>查看租约情况</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /var/pib/dhcpd/dhcpd.leases</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim 增删查改、翻页和寄存器</title>
      <link href="/posts/vimcopyppaste.html"/>
      <url>/posts/vimcopyppaste.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Vim 增删查改、复制捏贴、翻页和寄存器。<br>Vim 里剪切 (cut) 复制(copy) 粘贴(psate) 分别对应 delete&#x2F;yank&#x2F;put</p></blockquote><span id="more"></span><h1 id="复制粘贴"><a href="#复制粘贴" class="headerlink" title="复制粘贴"></a>复制粘贴</h1><h2 id="Normal-模式下"><a href="#Normal-模式下" class="headerlink" title="Normal 模式下"></a>Normal 模式下</h2><ul><li>yp dp vp</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">y <span class="comment"># 复制(yank)</span></span><br><span class="line">p <span class="comment"># 粘贴(put)</span></span><br><span class="line">d <span class="comment"># 剪贴</span></span><br><span class="line">vp <span class="comment"># v(visual) 命令选中要复制的地方，后 p</span></span><br></pre></td></tr></table></figure><ul><li>配合文本对象</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yyiw <span class="comment"># 复制一个单词</span></span><br><span class="line">yy   <span class="comment"># 复制一行</span></span><br><span class="line"><span class="built_in">dd</span>   <span class="comment"># 删除一行</span></span><br><span class="line">o    <span class="comment"># 下一行</span></span><br><span class="line">V    <span class="comment"># 快选两行</span></span><br><span class="line">v    <span class="comment">#　选择文本</span></span><br></pre></td></tr></table></figure><h2 id="Insert-模式下"><a href="#Insert-模式下" class="headerlink" title="Insert 模式下"></a>Insert 模式下</h2><ul><li>保留复制内容的缩进</li></ul><ol><li>vimrc 设置了自动缩进 <code>:set autoindent</code> 会使复制的代码缩进错乱</li></ol><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">set</span> paste </span><br><span class="line">:<span class="keyword">set</span> nopaste # 取消</span><br></pre></td></tr></table></figure><h1 id="增删查改翻页移动"><a href="#增删查改翻页移动" class="headerlink" title="增删查改翻页移动"></a>增删查改翻页移动</h1><h2 id="增删查改"><a href="#增删查改" class="headerlink" title="增删查改"></a>增删查改</h2><p>增（大写相反）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a# append 当前字母后面插入</span><br><span class="line">i <span class="comment"># insert 当前字母前面插入</span></span><br><span class="line">o <span class="comment"># open a line 向下打开新一行</span></span><br></pre></td></tr></table></figure><p>删</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">d  <span class="comment"># 删除</span></span><br><span class="line">dw <span class="comment"># 删除单词</span></span><br><span class="line">diw <span class="comment"># delete inner word 删除不包含空格的一个单词</span></span><br><span class="line">daw <span class="comment"># delete around word</span></span><br><span class="line"><span class="built_in">dd</span> <span class="comment"># 删除一行</span></span><br><span class="line">x <span class="comment"># 删除一个字符</span></span><br></pre></td></tr></table></figure><p>改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c</span><br><span class="line">ciw <span class="comment"># Change inner word</span></span><br><span class="line">ct  <span class="comment"># 括号里面的内容（修改到右边括号）</span></span><br><span class="line">ci” <span class="comment"># 删除双引号里的内容</span></span><br></pre></td></tr></table></figure><p>查</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fs <span class="comment"># 查找当前行第一个出现的 s ，使用 ； 查找下一个</span></span><br><span class="line">Fs <span class="comment"># 往回查</span></span><br><span class="line">/word <span class="comment"># 查找所以单词 word</span></span><br><span class="line">?word <span class="comment">#往回查</span></span><br></pre></td></tr></table></figure><h1 id="移动翻页"><a href="#移动翻页" class="headerlink" title="移动翻页"></a>移动翻页</h1><p>移动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">hjkl <span class="comment"># 上下左右</span></span><br><span class="line">w <span class="comment"># word 移动单词</span></span><br><span class="line">b <span class="comment">#back word 往回移动单词</span></span><br><span class="line">:18 <span class="comment"># 移动到18行</span></span><br><span class="line">18G <span class="comment"># 移动到14行</span></span><br><span class="line">0 <span class="comment"># 回到开头</span></span><br><span class="line">$ <span class="comment"># 行尾</span></span><br><span class="line">gg <span class="comment"># 文件开头</span></span><br><span class="line">G <span class="comment"># 文件结尾</span></span><br><span class="line">Ctrl o <span class="comment"># 返回刚刚的位置</span></span><br></pre></td></tr></table></figure><p>翻页</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ctrl + f <span class="comment"># forward</span></span><br><span class="line">ctrl + u <span class="comment"># upward</span></span><br></pre></td></tr></table></figure><h1 id="Vim-寄存器"><a href="#Vim-寄存器" class="headerlink" title="Vim 寄存器"></a>Vim 寄存器</h1><p>使用 d 删除或者 y 复制的内容都放在了 “无名寄存器”</p><ul><li>调换两字符</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">x</span>  # 删除一个字符放到无名寄存器</span><br><span class="line"><span class="keyword">p</span>  # 粘贴</span><br></pre></td></tr></table></figure><h2 id="寄存器-register"><a href="#寄存器-register" class="headerlink" title="寄存器(register)"></a>寄存器(register)</h2><p><code>&quot;&#123;register&#125;</code> 可以指定寄存器，不指定默认使用无名寄存器，<code>&quot;&quot;</code> 表示</p><h2 id="无名寄存器"><a href="#无名寄存器" class="headerlink" title="无名寄存器"></a>无名寄存器</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&quot;ayiw # 复制一个单词到寄存器 a </span></span><br><span class="line"><span class="comment">&quot;bdd  # 删除当前行到寄存器 b</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;a p  # 粘贴寄存器 a 的内容</span></span><br><span class="line"><span class="comment">&quot;b p  # 粘贴寄存器 b 的内容</span></span><br></pre></td></tr></table></figure><h2 id="其他寄存器"><a href="#其他寄存器" class="headerlink" title="其他寄存器"></a>其他寄存器</h2><ul><li>”a-z 有名寄存器<ul><li>“0 复制专业寄存器（y复制的文本会拷到复制及长期0）</li><li>“+ 系统剪切板 （可以再复制前加上 “+ 复制到系统剪切板）<ul><li><code>:set cliboard=unnamed</code> 可直接复制系统剪切板内容</li></ul></li><li>”% 当前文件名</li><li>“. 上次插入的文本</li></ul></li></ul><h2 id="查看寄存器内容"><a href="#查看寄存器内容" class="headerlink" title="查看寄存器内容"></a>查看寄存器内容</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">reg</span> <span class="keyword">a</span> # 查看 <span class="keyword">a</span> 寄存器内容</span><br><span class="line">:<span class="keyword">reg</span> <span class="keyword">b</span> # 查看 <span class="keyword">b</span> 寄存器内容</span><br></pre></td></tr></table></figure><h2 id="查看是否支持-clipboard"><a href="#查看是否支持-clipboard" class="headerlink" title="查看是否支持 clipboard"></a>查看是否支持 clipboard</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">echo</span> <span class="built_in">has</span>(<span class="string">&#x27;clipboard&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>1 为支持</li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git Clone Error</title>
      <link href="/posts/GitSOCKS4.html"/>
      <url>/posts/GitSOCKS4.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Failed to receive SOCKS4 connect request ack.</p></blockquote><span id="more"></span><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy &#x27;socks5://127.0.0.1:1080&#x27; </span><br><span class="line">git config --global https.proxy &#x27;socks5://127.0.0.1:1080&#x27; </span><br></pre></td></tr></table></figure><blockquote><p>error: RPC failed; curl 18 transfer closed with outstanding read data remaining</p></blockquote><h1 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h1><ul><li><ol><li>–depth 1</li></ol></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">关闭压缩</span></span><br><span class="line">git config --global core.compression 0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">部分克隆</span></span><br><span class="line">git clone --depth 1 http://github.com/large-repository </span><br><span class="line">cd large-repository</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入新目录并检索其余的克隆</span></span><br><span class="line">git fetch --unshallow</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者</span></span><br><span class="line">git fetch --depth=2147483647</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">做一个定期拉</span></span><br><span class="line">git pull --all</span><br></pre></td></tr></table></figure><ul><li><ol start="2"><li>切换使用 ssh(git clone <a href="mailto:&#117;&#x73;&#x65;&#x72;&#x6e;&#97;&#x6d;&#x65;&#x40;&#109;&#x79;&#x64;&#x6f;&#109;&#97;&#105;&#x6e;&#x2e;&#x63;&#x6f;&#109;">&#117;&#x73;&#x65;&#x72;&#x6e;&#97;&#x6d;&#x65;&#x40;&#109;&#x79;&#x64;&#x6f;&#109;&#97;&#105;&#x6e;&#x2e;&#x63;&#x6f;&#109;</a>:my_group&#x2F;my_repository.git)</li></ol></li><li><ol start="3"><li>增加缓冲区大小</li></ol></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.postBuffer 524288000</span><br></pre></td></tr></table></figure><hr><p><strong>参考</strong></p><ul><li><a href="https://stackoverflow.com/questions/38618885/error-rpc-failed-curl-transfer-closed-with-outstanding-read-data-remaining">stackoverflow</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Termux </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Post 模板</title>
      <link href="/posts/Hexo-Post.html"/>
      <url>/posts/Hexo-Post.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>在新建文章时，Hexo 会根据 scaffolds 文件夹内相对应的文件来建立文件.</p></blockquote><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new photo <span class="string">&quot;My Gallery&quot;</span></span><br></pre></td></tr></table></figure><p>在执行这行指令时，Hexo 会尝试在 scaffolds 文件夹中寻找 photo.md，并根据其内容建立文章，可以在模版中使用的变量：</p><ul><li>layout 文章的布局，可以取值post（默认值）或page，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。</li><li>title 文章的标题</li><li>date 创建日期，文件的创建日期</li><li>updated 修改日期，文件的修改日期</li><li>comments 是否开启评论，默认值true</li><li>tags 标签</li><li>categories 分类</li><li>permalink url中的名字，默认值文件名</li></ul><h1 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line"><span class="built_in">date</span>: &#123;&#123; <span class="built_in">date</span> &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line">- Linux</span><br><span class="line">categories:</span><br><span class="line">- notes</span><br><span class="line">author:</span><br><span class="line">- Vitan</span><br><span class="line">- /images/Hexo.svg</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spyder</title>
      <link href="/posts/spyder.html"/>
      <url>/posts/spyder.html</url>
      
        <content type="html"><![CDATA[<p>spyder3 No module named ‘PyQt5.QtWebKitWidgets’</p><span id="more"></span><p>解决 Spyder3 无法启动</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install pyqt5==<span class="number">5.11</span><span class="number">.2</span></span><br></pre></td></tr></table></figure><hr><p><strong>相关 issue</strong></p><ul><li><a href="https://github.com/spyder-ide/spyder/issues/6990">6990</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linus Wine</title>
      <link href="/posts/wine.html"/>
      <url>/posts/wine.html</url>
      
        <content type="html"><![CDATA[<p>Linux Wine</p><span id="more"></span><p>ArchLinux</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S wine wine_gecko wine-mono winetricks</span><br></pre></td></tr></table></figure><p>字体乱码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch zh.reg</span><br></pre></td></tr></table></figure><ul><li>内容</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">REGEDIT4</span><br><span class="line"></span><br><span class="line">  [HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink]</span><br><span class="line">  &quot;Lucida Sans Unicode&quot;=&quot;wqy-microhei.ttc&quot;</span><br><span class="line">  &quot;Microsoft Sans Serif&quot;=&quot;wqy-microhei.ttc&quot;</span><br><span class="line">  &quot;Microsoft YaHei&quot;=&quot;SourceHanSansCN-Medium.otf&quot;</span><br><span class="line">  &quot;MS Sans Serif&quot;=&quot;wqy-microhei.ttc&quot;</span><br><span class="line">  &quot;Tahoma&quot;=&quot;wqy-microhei.ttc&quot;</span><br><span class="line">  &quot;Tahoma Bold&quot;=&quot;wqy-microhei.ttc&quot;</span><br><span class="line">  &quot;SimSun&quot;=&quot;wqy-microhei.ttc&quot;</span><br><span class="line">  &quot;Arial&quot;=&quot;wqy-microhei.ttc&quot;</span><br><span class="line">  &quot;Arial Black&quot;=&quot;wqy-microhei.ttc&quot;</span><br><span class="line">  &quot;宋体&quot;=&quot;SourceHanSansCN-Medium.otf&quot;</span><br><span class="line">  &quot;新细宋体&quot;=&quot;SourceHanSansCN-Medium.otf&quot;</span><br></pre></td></tr></table></figure><ul><li>Run</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">egedit zh.reg</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git Pull 覆盖本地文件</title>
      <link href="/posts/GitPull.html"/>
      <url>/posts/GitPull.html</url>
      
        <content type="html"><![CDATA[<p>放弃对于本地的项目中修改，Git pull强制覆盖</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git fetch --all</span><br><span class="line">git reset --hard origin/master</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Git </tag>
            
            <tag> Ununtu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Termux ADB</title>
      <link href="/posts/Termux-ADB.html"/>
      <url>/posts/Termux-ADB.html</url>
      
        <content type="html"><![CDATA[<p>Termux ADB</p><span id="more"></span><h2 id="下载-arm-版-ADB"><a href="#下载-arm-版-ADB" class="headerlink" title="下载 arm 版 ADB"></a>下载 arm 版 ADB</h2><p><a href="https://github.com/ivitan/Shell/releases/download/Adb/adb.zip">Download</a></p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><ol><li>解压后 <code>mv arm/adb $PREFIX/bin</code></li><li>添加权限 <code>chmod +x $PREFIX/bin/adb</code></li></ol><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><ol><li>远程连接设备（已开启USB网络调试）</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb connect ip</span><br></pre></td></tr></table></figure><h2 id="ADB"><a href="#ADB" class="headerlink" title="ADB"></a>ADB</h2><p><a href="/posts/Adb.html">ADB 与 Fastboot 常用命令</a></p>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ADB </tag>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery Selector</title>
      <link href="/posts/jQuerySelector.html"/>
      <url>/posts/jQuerySelector.html</url>
      
        <content type="html"><![CDATA[<p>jQuery 选择器</p><span id="more"></span><p>#元素选择器</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// id 选择器</span></span><br><span class="line">$(<span class="string">&quot;#myELement&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 元素选择器</span></span><br><span class="line">$(<span class="string">&quot;div&quot;</span>)</span><br><span class="line">$(<span class="string">&quot;span&quot;</span>)</span><br><span class="line">$(<span class="string">&quot;button&quot;</span>)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// .class 选择</span></span><br><span class="line">$(<span class="string">&quot;.myClass&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通配符选择(选取所有元素)</span></span><br><span class="line">$(<span class="string">&quot;*&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="层叠选择器"><a href="#层叠选择器" class="headerlink" title="层叠选择器"></a>层叠选择器</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//所有form元素中的input元素 </span></span><br><span class="line">$(<span class="string">&quot;form input&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">//id值为main的所有的子元素</span></span><br><span class="line">$(<span class="string">&quot;#main &gt; *&quot;</span>)   </span><br><span class="line"></span><br><span class="line"><span class="comment">/*所有的label元素的下一个input元素节点，</span></span><br><span class="line"><span class="comment">返回的是label标签后面直接跟一个input标签的所有input标签元素 */</span>       </span><br><span class="line">$(<span class="string">&quot;label + input&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">//同胞选择器，返回id为prev的标签元素的所有的属于同一个父元素的div标签</span></span><br><span class="line">$(<span class="string">&quot;#prev ~ div&quot;</span>)       </span><br></pre></td></tr></table></figure><h1 id="基本过滤选择器"><a href="#基本过滤选择器" class="headerlink" title="基本过滤选择器"></a>基本过滤选择器</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//所有tr元素的第一个</span></span><br><span class="line">$(<span class="string">&quot;tr:first&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//所有tr元素的最后一个 s</span></span><br><span class="line">$(<span class="string">&quot;tr:last&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">//过滤掉：checked的选择器的所有的input元素 </span></span><br><span class="line">$(<span class="string">&quot;input:not(:checked) + span&quot;</span>)  </span><br><span class="line"></span><br><span class="line"><span class="comment">//所有的tr元素的第1，3，5... ...个元素 </span></span><br><span class="line">(<span class="string">&quot;tr:odd&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">//所有的td元素中序号为2的那个td元素</span></span><br><span class="line">$(<span class="string">&quot;td:eq(2)&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">//td元素中序号大于4的所有td元素 </span></span><br><span class="line">$(<span class="string">&quot;td:gt(4)&quot;</span>)   </span><br><span class="line"></span><br><span class="line">td元素中序号小于<span class="number">4</span>的所有的td元素     </span><br><span class="line">$(<span class="string">&quot;td:ll(4)&quot;</span>)   </span><br><span class="line"></span><br><span class="line"><span class="comment">//所有标题元素（h1 - h6）</span></span><br><span class="line">$(<span class="string">&quot;:header&quot;</span>) </span><br><span class="line"></span><br><span class="line">$(<span class="string">&quot;div:animated&quot;</span>) </span><br></pre></td></tr></table></figure><h1 id="内容过滤选择器"><a href="#内容过滤选择器" class="headerlink" title="内容过滤选择器"></a>内容过滤选择器</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//所有div中含有John文本的元素</span></span><br><span class="line">$(<span class="string">&quot;div:contains(&#x27;John&#x27;)&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//所有的为空（也不包括文本节点）的td元素的数组 </span></span><br><span class="line">$(<span class="string">&quot;td:empty&quot;</span>)        </span><br><span class="line"></span><br><span class="line"><span class="comment">//所有含有p标签的div元素   </span></span><br><span class="line">$(<span class="string">&quot;div:has(p)&quot;</span>)      </span><br><span class="line"></span><br><span class="line"><span class="comment">//所有的以td为父节点的元素数组 </span></span><br><span class="line">$(<span class="string">&quot;td:parent&quot;</span>)        </span><br></pre></td></tr></table></figure><h1 id="可视化过滤选择器"><a href="#可视化过滤选择器" class="headerlink" title="可视化过滤选择器"></a>可视化过滤选择器</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//所有的被hidden的div元素 </span></span><br><span class="line">$(<span class="string">&quot;div:hidden&quot;</span>)  </span><br><span class="line"></span><br><span class="line"><span class="comment">//所有的可视化的div元素    </span></span><br><span class="line">$(<span class="string">&quot;div:visible&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="属性过滤选择器"><a href="#属性过滤选择器" class="headerlink" title="属性过滤选择器"></a>属性过滤选择器</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//含有id属性的div元素 </span></span><br><span class="line">$(<span class="string">&quot;div[id]&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//name属性等于&#x27;newsletter&#x27;的input元素 </span></span><br><span class="line">$(<span class="string">&quot;input[name=&#x27;newsletter&#x27;]&quot;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment">//name属性不等于&#x27;newsletter&#x27;的input元素 </span></span><br><span class="line">$(<span class="string">&quot;input[name!=&#x27;newsletter&#x27;]&quot;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment">//name属性以&#x27;news&#x27;开头的input元素 </span></span><br><span class="line">$(<span class="string">&quot;input[name^=&#x27;news&#x27;]&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">// name属性以&#x27;news&#x27;结尾的input元素 </span></span><br><span class="line">$(<span class="string">&quot;input[name$=&#x27;news&#x27;]&quot;</span>)   </span><br><span class="line"></span><br><span class="line"><span class="comment">//name属性包含&#x27;news&#x27;的input元素     </span></span><br><span class="line">$(<span class="string">&quot;input[name*=&#x27;man&#x27;]&quot;</span>)          </span><br><span class="line">    </span><br><span class="line"><span class="comment">//可以使用多个属性进行联合选择，得到所有的含有id属性并且属性以man结尾的元素 </span></span><br><span class="line">$(<span class="string">&quot;input[id][name$=&#x27;man&#x27;]&quot;</span>)    </span><br></pre></td></tr></table></figure><h1 id="子元素过滤选择器"><a href="#子元素过滤选择器" class="headerlink" title="子元素过滤选择器"></a>子元素过滤选择器</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;ul li:nth-child(2)&quot;</span>),$(<span class="string">&quot;ul li:nth-child(odd)&quot;</span>),$(<span class="string">&quot;ul li:nth-child(3n + 1)&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">//返回所有的div元素的第一个子节点的数组</span></span><br><span class="line">$(<span class="string">&quot;div span:first-child&quot;</span>)   </span><br><span class="line"></span><br><span class="line"><span class="comment">//返回所有的div元素的最后一个节点的数组 </span></span><br><span class="line">$(<span class="string">&quot;div span:last-child&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">//返回所有的div中只有唯一一个子节点的所有子节点的数组 </span></span><br><span class="line">$(<span class="string">&quot;div button:only-child&quot;</span>)       </span><br></pre></td></tr></table></figure><h1 id="表单元素选择器："><a href="#表单元素选择器：" class="headerlink" title="表单元素选择器："></a>表单元素选择器：</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//所有的表单输入元素，包括input, textarea, select 和 button </span></span><br><span class="line">$(<span class="string">&quot;:input&quot;</span>)  </span><br><span class="line">    </span><br><span class="line"><span class="comment">//所有的text input元素 </span></span><br><span class="line">$(<span class="string">&quot;:text&quot;</span>)                     </span><br><span class="line"></span><br><span class="line"><span class="comment">//所有的password input元素 </span></span><br><span class="line">$(<span class="string">&quot;:password&quot;</span>)           </span><br><span class="line"></span><br><span class="line"><span class="comment">//所有的radio input元素</span></span><br><span class="line">$(<span class="string">&quot;:radio&quot;</span>)                    </span><br><span class="line"></span><br><span class="line"><span class="comment">//所有的checkbox input元素</span></span><br><span class="line">$(<span class="string">&quot;:checkbox&quot;</span>)             </span><br><span class="line"></span><br><span class="line"><span class="comment">//所有的submit input元素 </span></span><br><span class="line">$(<span class="string">&quot;:submit&quot;</span>)               </span><br><span class="line"></span><br><span class="line"><span class="comment">// 所有的image input元素 </span></span><br><span class="line">$(<span class="string">&quot;:image&quot;</span>)                </span><br><span class="line"></span><br><span class="line"><span class="comment">//所有的reset input元素 </span></span><br><span class="line">$(<span class="string">&quot;:reset&quot;</span>)                   </span><br><span class="line"></span><br><span class="line"><span class="comment">//所有的button input元素 </span></span><br><span class="line">$(<span class="string">&quot;:button&quot;</span>)                </span><br><span class="line"></span><br><span class="line"><span class="comment">// 所有的file input元素 </span></span><br><span class="line">$(<span class="string">&quot;:file&quot;</span>)                    </span><br><span class="line"></span><br><span class="line"><span class="comment">// 所有类型为hidden的input元素或表单的隐藏域 </span></span><br><span class="line">$(<span class="string">&quot;:hidden&quot;</span>)              </span><br></pre></td></tr></table></figure><h1 id="表单元素过滤选择器"><a href="#表单元素过滤选择器" class="headerlink" title="表单元素过滤选择器"></a>表单元素过滤选择器</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//所有的可操作的表单元素 </span></span><br><span class="line">$(<span class="string">&quot;:enabled&quot;</span>)             </span><br><span class="line"></span><br><span class="line"><span class="comment">//所有的不可操作的表单元素 </span></span><br><span class="line">$(<span class="string">&quot;:disabled&quot;</span>)            </span><br><span class="line"></span><br><span class="line"><span class="comment">//所有的被checked的表单元素</span></span><br><span class="line">$(<span class="string">&quot;:checked&quot;</span>)             </span><br><span class="line"></span><br><span class="line"><span class="comment">//所有的select 的子元素中被selected的元素 </span></span><br><span class="line">$(<span class="string">&quot;select option:selected&quot;</span>) </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//选取一个 name 为”S_03_22″的input text框的上一个td的text值</span><br><span class="line">$(”input[@ name =S_03_22]“).parent().prev().text() </span><br><span class="line">    </span><br><span class="line">//名字以”S_”开始，并且不是以”_R”结尾的</span><br><span class="line">$(”input[@ name ^=&#x27;S_&#x27;]“).not(”[@ name $=&#x27;_R&#x27;]“) </span><br><span class="line">    </span><br><span class="line">//一个名为 radio_01的radio所选的值</span><br><span class="line">$(”input[@ name =radio_01][@checked]“).val(); </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//查找A元素下面的所有子节点，包括非直接子节点</span><br><span class="line">$(&quot;A B&quot;) </span><br><span class="line"></span><br><span class="line">//查找A元素下面的直接子节点</span><br><span class="line">$(&quot;A&gt;B&quot;) </span><br><span class="line"></span><br><span class="line">//查找A元素后面的兄弟节点，包括非直接子节点</span><br><span class="line">$(&quot;A+B&quot;) </span><br><span class="line"></span><br><span class="line">//查找A元素后面的兄弟节点，不包括非直接子节点</span><br><span class="line">$(&quot;A~B&quot;)  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git Commit Emoji</title>
      <link href="/posts/GitEmoji.html"/>
      <url>/posts/GitEmoji.html</url>
      
        <content type="html"><![CDATA[<p>Git Commit Emoji</p><span id="more"></span><h1 id="Emoji"><a href="#Emoji" class="headerlink" title="Emoji"></a>Emoji</h1><table><thead><tr><th align="left">emoji</th><th align="left">emoji 代码</th><th align="left">commit 说明</th></tr></thead><tbody><tr><td align="left">:tada: (庆祝)</td><td align="left"><code>:tada:</code></td><td align="left">初次提交</td></tr><tr><td align="left">:sparkles: (火花)</td><td align="left"><code>:sparkles:</code></td><td align="left">引入新功能</td></tr><tr><td align="left">:bookmark: (书签)</td><td align="left"><code>:bookmark:</code></td><td align="left">发行&#x2F;版本标签</td></tr><tr><td align="left">:bug: (bug)</td><td align="left"><code>:bug:</code></td><td align="left">修复 bug</td></tr><tr><td align="left">:ambulance: (急救车)</td><td align="left"><code>:ambulance:</code></td><td align="left">重要补丁</td></tr><tr><td align="left">:globe_with_meridians: (地球)</td><td align="left"><code>:globe_with_meridians:</code></td><td align="left">国际化与本地化</td></tr><tr><td align="left">:lipstick: (口红)</td><td align="left"><code>:lipstick:</code></td><td align="left">更新 UI 和样式文件</td></tr><tr><td align="left">:clapper: (场记板)</td><td align="left"><code>:clapper:</code></td><td align="left">更新演示&#x2F;示例</td></tr><tr><td align="left">:rotating_light: (警车灯)</td><td align="left"><code>:rotating_light:</code></td><td align="left">移除 linter 警告</td></tr><tr><td align="left">:wrench: (扳手)</td><td align="left"><code>:wrench:</code></td><td align="left">修改配置文件</td></tr><tr><td align="left">:heavy_plus_sign: (加号)</td><td align="left"><code>:heavy_plus_sign:</code></td><td align="left">增加一个依赖</td></tr><tr><td align="left">:heavy_minus_sign: (减号)</td><td align="left"><code>:heavy_minus_sign:</code></td><td align="left">减少一个依赖</td></tr><tr><td align="left">:arrow_up: (上升箭头)</td><td align="left"><code>:arrow_up:</code></td><td align="left">升级依赖</td></tr><tr><td align="left">:arrow_down: (下降箭头)</td><td align="left"><code>:arrow_down:</code></td><td align="left">降级依赖</td></tr><tr><td align="left">:zap: (闪电)<br>:racehorse: (赛马)</td><td align="left"><code>:zap:</code><br><code>:racehorse:</code></td><td align="left">提升性能</td></tr><tr><td align="left">:chart_with_upwards_trend: (上升趋势图)</td><td align="left"><code>:chart_with_upwards_trend:</code></td><td align="left">添加分析或跟踪代码</td></tr><tr><td align="left">:rocket: (火箭)</td><td align="left"><code>:rocket:</code></td><td align="left">部署功能</td></tr><tr><td align="left">:white_check_mark: (白色复选框)</td><td align="left"><code>:white_check_mark:</code></td><td align="left">增加测试</td></tr><tr><td align="left">:memo: (备忘录)</td><td align="left"><code>:memo:</code></td><td align="left">撰写文档</td></tr><tr><td align="left">:hammer: (锤子)</td><td align="left"><code>:hammer:</code></td><td align="left">重大重构</td></tr><tr><td align="left">:art: (调色板)</td><td align="left"><code>:art:</code></td><td align="left">改进代码结构&#x2F;代码格式</td></tr><tr><td align="left">:fire: (火焰)</td><td align="left"><code>:fire:</code></td><td align="left">移除代码或文件</td></tr><tr><td align="left">:pencil2: (铅笔)</td><td align="left"><code>:pencil2:</code></td><td align="left">修复 typo</td></tr><tr><td align="left">:construction: (施工)</td><td align="left"><code>:construction:</code></td><td align="left">工作进行中</td></tr><tr><td align="left">:construction_worker: (工人)</td><td align="left"><code>:construction_worker:</code></td><td align="left">添加 CI 构建系统</td></tr><tr><td align="left">:green_heart: (绿心)</td><td align="left"><code>:green_heart:</code></td><td align="left">修复 CI 构建问题</td></tr><tr><td align="left">:lock: (锁)</td><td align="left"><code>:lock:</code></td><td align="left">修复安全问题</td></tr><tr><td align="left">:whale: (鲸鱼)</td><td align="left"><code>:whale:</code></td><td align="left">Docker 相关工作</td></tr><tr><td align="left">:apple: (苹果)</td><td align="left"><code>:apple:</code></td><td align="left">修复 macOS 下的问题</td></tr><tr><td align="left">:penguin: (企鹅)</td><td align="left"><code>:penguin:</code></td><td align="left">修复 Linux 下的问题</td></tr><tr><td align="left">:checkered_flag: (旗帜)</td><td align="left"><code>:checked_flag:</code></td><td align="left">修复 Windows 下的问题</td></tr></tbody></table><hr><p><strong>Via</strong></p><ul><li><a href="https://github.com/liuchengxu/git-commit-emoji-cn/blob/master/README.md">Git-commit-emoji</a></li></ul><h1 id="Emoji-Log"><a href="#Emoji-Log" class="headerlink" title="Emoji-Log"></a>Emoji-Log</h1><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight bash"><figcaption><span>.bash/.zshrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#.# Better Git Logs.</span></span><br><span class="line"><span class="comment">### Using EMOJI-LOG (https://github.com/ahmadawais/Emoji-Log).</span></span><br><span class="line"><span class="comment"># Git Commit, Add all and Push — in one step.</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">gcap</span></span>() &#123;</span><br><span class="line">    git add . &amp;&amp; git commit -m <span class="string">&quot;$*&quot;</span> &amp;&amp; git push</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># NEW.</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">gnew</span></span>() &#123;</span><br><span class="line">    gcap <span class="string">&quot;📦 NEW: <span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># IMPROVE.</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">gimp</span></span>() &#123;</span><br><span class="line">    gcap <span class="string">&quot;👌 IMPROVE: <span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># FIX.</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">gfix</span></span>() &#123;</span><br><span class="line">    gcap <span class="string">&quot;🐛 FIX: <span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># RELEASE.</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">grlz</span></span>() &#123;</span><br><span class="line">    gcap <span class="string">&quot;🚀 RELEASE: <span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># DOC.</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">gdoc</span></span>() &#123;</span><br><span class="line">    gcap <span class="string">&quot;📖 DOC: <span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># TEST.</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">gtst</span></span>() &#123;</span><br><span class="line">    gcap <span class="string">&quot;✅ TEST: <span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="别名到-gitconfig"><a href="#别名到-gitconfig" class="headerlink" title="别名到 ~&#x2F;.gitconfig"></a>别名到 ~&#x2F;.gitconfig</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Git Commit, Add all and Push — in one step.</span></span><br><span class="line"><span class="built_in">cap</span> = <span class="string">&quot;!f() &#123; git add .; git commit -m \&quot;<span class="variable">$@</span>\&quot;; git push; &#125;; f&quot;</span></span><br><span class="line"><span class="comment"># NEW.</span></span><br><span class="line">new = <span class="string">&quot;!f() &#123; git cap \&quot;📦 NEW: <span class="variable">$@</span>\&quot;; &#125;; f&quot;</span></span><br><span class="line"><span class="comment"># IMPROVE.</span></span><br><span class="line">imp = <span class="string">&quot;!f() &#123; git cap \&quot;👌 IMPROVE: <span class="variable">$@</span>\&quot;; &#125;; f&quot;</span></span><br><span class="line"><span class="comment"># FIX.</span></span><br><span class="line">fix = <span class="string">&quot;!f() &#123; git cap \&quot;🐛 FIX: <span class="variable">$@</span>\&quot;; &#125;; f&quot;</span></span><br><span class="line"><span class="comment"># RELEASE.</span></span><br><span class="line">rlz = <span class="string">&quot;!f() &#123; git cap \&quot;🚀 RELEASE: <span class="variable">$@</span>\&quot;; &#125;; f&quot;</span></span><br><span class="line"><span class="comment"># DOC.</span></span><br><span class="line">doc = <span class="string">&quot;!f() &#123; git cap \&quot;📖 DOC: <span class="variable">$@</span>\&quot;; &#125;; f&quot;</span></span><br><span class="line"><span class="comment"># TEST.</span></span><br><span class="line">tst = <span class="string">&quot;!f() &#123; git cap \&quot;✅ TEST: <span class="variable">$@</span>\&quot;; &#125;; f&quot;</span></span><br></pre></td></tr></table></figure><h1 id="gitmoji-cli"><a href="#gitmoji-cli" class="headerlink" title="gitmoji-cli"></a>gitmoji-cli</h1><h2 id="install"><a href="#install" class="headerlink" title="install"></a>install</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g gitmoji-cli</span><br></pre></td></tr></table></figure><h2 id="usage"><a href="#usage" class="headerlink" title="usage"></a>usage</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gitmoji --<span class="built_in">help</span></span><br><span class="line">gitmoji -c</span><br></pre></td></tr></table></figure><hr><p><strong>Via</strong></p><ul><li><a href="https://opensource.com/article/19/2/emoji-log-git-commit-messages">OpenSource.com</a></li><li><a href="https://github.com/carloscuesta/gitmoji-cli">gitmoji-cli</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Termux </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ArchLinux NTFS</title>
      <link href="/posts/ArchNtfs.html"/>
      <url>/posts/ArchNtfs.html</url>
      
        <content type="html"><![CDATA[<p>解决 ArchLInux 无法挂载 NTFS 的U盘和硬盘</p><span id="more"></span><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><pre><code class="bash">sudo pacman -Syu sudo pacman -S ntfs-3g </code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 同时部署到 Github Coding</title>
      <link href="/posts/HexoGithubCoding.html"/>
      <url>/posts/HexoGithubCoding.html</url>
      
        <content type="html"><![CDATA[<p>Hexo 同时部署到 Github Coding</p><span id="more"></span><h2 id="添加-SSH-公钥"><a href="#添加-SSH-公钥" class="headerlink" title="添加 SSH 公钥"></a>添加 SSH 公钥</h2><ol><li>Github Coding添加同一个 SSH 公钥</li><li>Github Coding 都部署好相关的仓库</li></ol><h2 id="设置-config-yml"><a href="#设置-config-yml" class="headerlink" title="设置 _config.yml"></a>设置 _config.yml</h2> <figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repository:</span> </span><br><span class="line">    <span class="attr">github:</span> <span class="string">ssh://git@github.com/ivitan/ivitan.github.io,master</span></span><br><span class="line">    <span class="attr">coding:</span> <span class="string">git@git.coding.net:Vitan/vitan.coding.me.git,master</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Termux </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据分析(是否出险)</title>
      <link href="/posts/Spyder-1.html"/>
      <url>/posts/Spyder-1.html</url>
      
        <content type="html"><![CDATA[<p>以下是相关分析步骤与过程</p><ol><li>将Hw4文件导入</li><li>使用auto_ins作如下分析</li></ol><ul><li>1、首先对loss重新编码为1&#x2F;0，有数值为1，命名为loss_flag</li><li>2、对loss_flag列进行描述分析（计数计频次）</li><li>3、分析是否出险和年龄、驾龄、性别、婚姻状态等变量之间的关系</li></ul><span id="more"></span><h1 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h1><p>Hw4文件导入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.chdir(<span class="string">&#x27;/home/vitan/Python/Python/HW4&#x27;</span>)</span><br><span class="line"><span class="comment"># 将auto_ins.csv读取进来,命名为auto</span></span><br><span class="line">auto = pd.read_csv(<span class="string">&#x27;auto_ins.csv&#x27;</span>,encoding=<span class="string">&#x27;gbk&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h1><ul><li>定义codeMy(x)函数，其作用是对auto里的loss重新编码为1&#x2F;0，有数值为1，命名为loss_flag</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">codeMy</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">if</span> x &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><pre><code>- 对auto里的loss重新编码为1/0，有数值为1，命名为loss_flag<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto.loss_flag = auto.Loss.<span class="built_in">map</span>(codeMy)</span><br></pre></td></tr></table></figure>- 应用匿名函数的方法对loss重新编码为1/0，有数值为1，命名为loss_flag1<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto[<span class="string">&quot;loss_flag1&quot;</span>]= auto.Loss.<span class="built_in">map</span>(<span class="keyword">lambda</span> x:<span class="number">1</span> <span class="keyword">if</span> x &gt; <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span>)</span><br></pre></td></tr></table></figure></code></pre><h1 id="画图"><a href="#画图" class="headerlink" title="画图"></a>画图</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><ul><li>对loss_flag列进行描述分析（计数计频次）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto.loss_flag.value_counts()</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/d71f8b2fgy1g0n5e60z7gj20ao06wwec.jpg"></p><ul><li>对loss_flag出险情况进行百分比统计</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto.loss_flag.value_counts()/auto.loss_flag.count()</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/d71f8b2fgy1g0n5ev4yt8j20ao06wwec.jpg"></p><ul><li>绘制是否出险柱形图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto.loss_flag.value_counts().plot(kind=<span class="string">&quot;bar&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1g0n5u8ajf7j20aj06vjr7.jpg"></p><ul><li>分析是否出险和年龄、驾龄、性别、婚姻状态等变量之间的关系</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置画布fig</span></span><br><span class="line">fig = plt.figure()</span><br><span class="line"><span class="comment">#将画布设计成1行2列结构，增加第一个子图层ax1</span></span><br><span class="line">ax1 = fig.add_subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line"><span class="comment">#将画布设计成1行2列结构，增加第二个子图层ax2</span></span><br><span class="line">ax2 = fig.add_subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line"><span class="comment">#是否出险和年龄关系：绘制箱形图（盒须图），分析出险和年龄的关系</span></span><br><span class="line">sns.boxplot(x=<span class="string">&quot;loss_flag&quot;</span>,y=<span class="string">&quot;Age&quot;</span>,data=auto,ax =ax1)</span><br><span class="line"></span><br><span class="line"><span class="comment">#是否出险和驾龄：绘制箱形图（盒须图），分析出险和驾龄的关系</span></span><br><span class="line">sns.boxplot(x=<span class="string">&quot;loss_flag&quot;</span>,y=<span class="string">&quot;exp&quot;</span>,data=auto,ax =ax2)</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/d71f8b2fgy1g0n5mv40ebj20aq07faa2.jpg"><br><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1g0n5nop9tvj20aq07faa2.jpg"></p><ul><li>是否出险和性别：绘制面积堆积柱形图，分析出险和性别的关系</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> stack2dim <span class="keyword">import</span> *</span><br><span class="line">stack2dim(auto,<span class="string">&quot;Gender&quot;</span>,<span class="string">&quot;loss_flag&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1g0n5odvgqgj20ar07at8m.jpg"></p><ul><li>是否出险和婚姻状态：绘制面积堆积柱形图，分析出险和婚姻的关系</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stack2dim(auto,<span class="string">&quot;Marital&quot;</span>,<span class="string">&quot;loss_flag&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1g0n5ppeo0yj20ar07awee.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用算法</title>
      <link href="/posts/PythonAlgorithm.html"/>
      <url>/posts/PythonAlgorithm.html</url>
      
        <content type="html"><![CDATA[<p>Python 排序</p><span id="more"></span><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">bubble_sort</span>(<span class="params">li</span>):</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(li)-<span class="number">1</span>): <span class="comment"># i表示第几趟</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(li)-i-<span class="number">1</span>): <span class="comment"># j表示图中的箭头</span></span><br><span class="line">        <span class="keyword">if</span> li[j] &gt; li[j+<span class="number">1</span>]:</span><br><span class="line">            li[j], li[j+<span class="number">1</span>] = li[j+<span class="number">1</span>], li[j]</span><br></pre></td></tr></table></figure><p>冒泡排序(优化)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">bubble_sort_1</span>(<span class="params">li</span>):</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(li)-<span class="number">1</span>): <span class="comment"># i表示第几趟</span></span><br><span class="line">    exchange = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(li)-i-<span class="number">1</span>): <span class="comment"># j表示图中的箭头</span></span><br><span class="line">        <span class="keyword">if</span> li[j] &gt; li[j+<span class="number">1</span>]:</span><br><span class="line">            li[j], li[j+<span class="number">1</span>] = li[j+<span class="number">1</span>], li[j]</span><br><span class="line">            exchange = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> exchange:</span><br><span class="line">        <span class="keyword">return</span></span><br></pre></td></tr></table></figure><p><img src="/assets/Picture/images/maopao.gif"></p><h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">select</span>(<span class="params">li</span>):</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(li)):</span><br><span class="line">    <span class="comment"># 第i趟开始时 无序区：li[i:]</span></span><br><span class="line">    <span class="comment"># 找无序区最小值，保存最小值的位置</span></span><br><span class="line">    min_index = i</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i + <span class="number">1</span>, <span class="built_in">len</span>(li)):</span><br><span class="line">        <span class="keyword">if</span> li[j] &lt; li[min_index]:</span><br><span class="line">            min_index = j</span><br><span class="line">    li[min_index], li[i] = li[i], li[min_index]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/assets/Picture/images/xuanze.gif"></p><h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">insert_sort</span>(<span class="params">li</span>):</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(li)): <span class="comment"># i是摸到的牌的下标</span></span><br><span class="line">    tmp = li[i]     <span class="comment"># tmp是摸到牌的值</span></span><br><span class="line">    <span class="comment"># 方法一</span></span><br><span class="line">    j = i - <span class="number">1</span> <span class="comment"># j是手里最后一张牌的下标    li[j]是手里最后一张牌的值</span></span><br><span class="line">    <span class="keyword">while</span> j &gt;= <span class="number">0</span> <span class="keyword">and</span> li[j] &gt; tmp:   <span class="comment"># 两个终止条件：j小于0表示tmp是最小的 顺序不要乱 </span></span><br><span class="line">        li[j+<span class="number">1</span>] = li[j]</span><br><span class="line">        j -= <span class="number">1</span></span><br><span class="line">    <span class="comment"># 方法二</span></span><br><span class="line">    <span class="comment"># for j in range(i-1, -1, -1):</span></span><br><span class="line">    <span class="comment">#     if li[j] &gt; tmp:</span></span><br><span class="line">    <span class="comment">#         li[j+1] = li[j]</span></span><br><span class="line">    <span class="comment">#     else:</span></span><br><span class="line">    <span class="comment">#         break</span></span><br><span class="line">    li[j+<span class="number">1</span>] = tmp   <span class="comment">#将摸到的牌 插入到 往前挪过之后的 j 的后一位</span></span><br></pre></td></tr></table></figure><p><img src="/assets/Picture/images/charu.gif"></p><h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">quick_sort</span>(<span class="params">lists, left, right</span>):</span><br><span class="line">    <span class="comment"># 快速排序</span></span><br><span class="line">    <span class="keyword">if</span> left &gt;= right:</span><br><span class="line">        <span class="keyword">return</span> lists</span><br><span class="line">    key = lists[left]</span><br><span class="line">    low = left</span><br><span class="line">    high = right</span><br><span class="line">    <span class="keyword">while</span> left &lt; right:</span><br><span class="line">        <span class="keyword">while</span> left &lt; right <span class="keyword">and</span> lists[right] &gt;= key:</span><br><span class="line">            right -= <span class="number">1</span></span><br><span class="line">        lists[left] = lists[right]</span><br><span class="line">        <span class="keyword">while</span> left &lt; right <span class="keyword">and</span> lists[left] &lt;= key:</span><br><span class="line">            left += <span class="number">1</span></span><br><span class="line">        lists[right] = lists[left]</span><br><span class="line">    lists[right] = key</span><br><span class="line">    quick_sort(lists, low, left - <span class="number">1</span>)</span><br><span class="line">    quick_sort(lists, left + <span class="number">1</span>, high)</span><br><span class="line">    <span class="keyword">return</span> lists</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">part</span>(<span class="params">li, left, right</span>):  <span class="comment"># 列表,最左索引,最右索引</span></span><br><span class="line">    tmp = li[left]  <span class="comment"># 先找个临时变量把第一个元素存起来</span></span><br><span class="line">    <span class="keyword">while</span> left &lt; right:  <span class="comment"># 当最左小于最右</span></span><br><span class="line">        <span class="keyword">while</span> left &lt; right <span class="keyword">and</span> li[right] &gt;= tmp:  <span class="comment"># 当最左&lt;最右 且 最右边的值大于等于临时变量</span></span><br><span class="line">            right -= <span class="number">1</span>  <span class="comment"># 最右 往左 挪 1 个单位长度</span></span><br><span class="line">        li[left] = li[right]  <span class="comment"># 都不满足:把挪完之后的最右的值 赋值给 最左的值(即最右的值小于临时变量时,这个值挪到当前最左的值)</span></span><br><span class="line">        <span class="keyword">while</span> left &lt; right <span class="keyword">and</span> li[left] &lt;= tmp:  <span class="comment"># 当最左&lt;最右 且 最左边的值小于等于临时变量</span></span><br><span class="line">            left += <span class="number">1</span>  <span class="comment"># 最左 往右 挪 1 个单位长度</span></span><br><span class="line">        li[right] = li[left]  <span class="comment"># 都不满足:把挪完之后的最左的值 赋值给 最右的值(即最左的值大于临时变量时,这个值挪到当前最右的值)</span></span><br><span class="line">    li[left] = tmp  <span class="comment"># 当前最左最右的值相等时,把这个值赋给临时变量</span></span><br><span class="line">    <span class="keyword">return</span> left  <span class="comment"># 返回当前临时变量的索引</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">quick</span>(<span class="params">li, left, right</span>):</span><br><span class="line">   <span class="keyword">if</span> left &lt; right:  <span class="comment"># 如果左索引&lt;右索引</span></span><br><span class="line">       mid = part(li, left, right)  <span class="comment"># 调用part进行分区 返回一个索引赋给mid</span></span><br><span class="line">       quick(li, left, mid - <span class="number">1</span>)  <span class="comment"># 递归调用quick 直到left=mid-1</span></span><br><span class="line">       quick(li, mid + <span class="number">1</span>, right)  <span class="comment"># 递归调用quick 直到mid+1=right</span></span><br><span class="line"></span><br><span class="line">li = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">1000</span>))</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line">random.shuffle(li)</span><br><span class="line"><span class="built_in">print</span>(li)</span><br><span class="line"></span><br><span class="line">quick(li, <span class="number">0</span>, <span class="built_in">len</span>(li) - <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure><p><img src="/assets/Picture/images/kuaisu.gif"></p><h2 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">sift</span>(<span class="params">li, low, high</span>):</span><br><span class="line">   tmp = li[low]</span><br><span class="line">   i = low</span><br><span class="line">   j = <span class="number">2</span> * i + <span class="number">1</span></span><br><span class="line">   <span class="keyword">while</span> j &lt;= high: <span class="comment"># 退出条件2：当前i位置是叶子结点，j位置超过了high</span></span><br><span class="line">       <span class="comment"># j 指向更大的孩子</span></span><br><span class="line">       <span class="keyword">if</span> j + <span class="number">1</span> &lt;= high <span class="keyword">and</span> li[j+<span class="number">1</span>] &gt; li[j]:</span><br><span class="line">           j = j + <span class="number">1</span> <span class="comment"># 如果右孩子存在并且更大，j指向右孩子</span></span><br><span class="line">       <span class="keyword">if</span> tmp &lt; li[j]:</span><br><span class="line">           li[i] = li[j]</span><br><span class="line">           i = j</span><br><span class="line">           j = <span class="number">2</span> * i + <span class="number">1</span></span><br><span class="line">       <span class="keyword">else</span>:       <span class="comment"># 退出条件1：tmp的值大于两个孩子的值</span></span><br><span class="line">           <span class="keyword">break</span></span><br><span class="line">   li[i] = tmp</span><br><span class="line"></span><br><span class="line"><span class="meta">@cal_time</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">heap_sort</span>(<span class="params">li</span>):</span><br><span class="line">   <span class="comment"># 1. 建堆</span></span><br><span class="line">   n = <span class="built_in">len</span>(li)</span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n//<span class="number">2</span>-<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">       <span class="comment"># i 是建堆时要调整的子树的根的下标</span></span><br><span class="line">       sift(li, i, n-<span class="number">1</span>)</span><br><span class="line">   <span class="comment"># 2.挨个出数</span></span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n-<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>): <span class="comment">#i表示当前的high值 也表示棋子的位置</span></span><br><span class="line">       li[i], li[<span class="number">0</span>] = li[<span class="number">0</span>], li[i]</span><br><span class="line">       <span class="comment"># 现在堆的范围 0~i-1</span></span><br><span class="line">       sift(li, <span class="number">0</span>, i-<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><img src="/assets/Picture/images/zengdui.gif"></p><h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">merge</span>(<span class="params">li, low, mid, high</span>):</span><br><span class="line">   i = low</span><br><span class="line">   j = mid + <span class="number">1</span></span><br><span class="line">   ltmp = []</span><br><span class="line">   <span class="keyword">while</span> i &lt;= mid <span class="keyword">and</span> j &lt;= high:</span><br><span class="line">       <span class="keyword">if</span> li[i] &lt; li[j]:</span><br><span class="line">           ltmp.append(li[i])</span><br><span class="line">           i += <span class="number">1</span></span><br><span class="line">       <span class="keyword">else</span>:</span><br><span class="line">           ltmp.append(li[j])</span><br><span class="line">           j += <span class="number">1</span></span><br><span class="line">   <span class="keyword">while</span> i &lt;= mid:</span><br><span class="line">       ltmp.append(li[i])</span><br><span class="line">       i += <span class="number">1</span></span><br><span class="line">   <span class="keyword">while</span> j &lt;= high:</span><br><span class="line">       ltmp.append(li[j])</span><br><span class="line">       j += <span class="number">1</span></span><br><span class="line">   <span class="comment"># for k in range(low, high+1):</span></span><br><span class="line">   <span class="comment">#     li[k] = ltmp[k-low]</span></span><br><span class="line">   li[low:high+<span class="number">1</span>] = ltmp</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">merge_sort</span>(<span class="params">li, low, high</span>):</span><br><span class="line">   <span class="keyword">if</span> low &lt; high:</span><br><span class="line">       mid = (low + high) // <span class="number">2</span></span><br><span class="line">       merge_sort(li, low, mid)</span><br><span class="line">       merge_sort(li, mid+<span class="number">1</span>, high)</span><br><span class="line">       merge(li, low, mid, high)</span><br><span class="line"></span><br><span class="line"><span class="comment"># li = list(range(10000))</span></span><br><span class="line"><span class="comment"># random.shuffle(li)</span></span><br><span class="line"><span class="comment"># merge_sort(li, 0, len(li)-1)</span></span><br><span class="line"><span class="comment"># print(li)</span></span><br><span class="line">li = [<span class="number">10</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">7</span>]</span><br><span class="line">merge_sort(li, <span class="number">0</span>, <span class="built_in">len</span>(li)-<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><img src="/assets/Picture/images/guibing.gif"></p><hr><p><strong>Via</strong></p><ul><li><a href="https://juejin.im/post/5b6ba2d26fb9a04fde5af361">掘金</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用实现</title>
      <link href="/posts/PythonCommonlyUse.html"/>
      <url>/posts/PythonCommonlyUse.html</url>
      
        <content type="html"><![CDATA[<p>常用实现</p><span id="more"></span><h2 id="九九乘法表"><a href="#九九乘法表" class="headerlink" title="九九乘法表"></a>九九乘法表</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">   <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, i+<span class="number">1</span>):</span><br><span class="line">       <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;x&#123;&#125;=&#123;&#125;\t&#x27;</span>.<span class="built_in">format</span>(j, i, i*j), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">   <span class="built_in">print</span>()</span><br></pre></td></tr></table></figure><h1 id="列出目录文件"><a href="#列出目录文件" class="headerlink" title="列出目录文件"></a>列出目录文件</h1><ul><li>路径下的所有文件和文件夹的路径</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">path = &#x27;~/path&#x27;</span><br><span class="line">for i in os.listdir(path):</span><br><span class="line">    print(os.path.join(path,i))</span><br></pre></td></tr></table></figure><ul><li>读取路径下的文本</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">txt_processing</span>(<span class="params">folder_path</span>):</span><br><span class="line">folder_list = os.listdir(folder_path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历文件夹</span></span><br><span class="line"><span class="keyword">for</span> folder <span class="keyword">in</span> folder_list:</span><br><span class="line">    new_folder_path = os.path.join(folder_path,folder) <span class="comment"># 拼接路径</span></span><br><span class="line">    files = os.listdir(new_folder_path) <span class="comment"># 258/分类</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        <span class="comment"># if j &gt; 1000000000000000: # 要读的每个分类的文件个数</span></span><br><span class="line">        <span class="comment">#     break</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(file):  <span class="comment"># 判断是否是文件夹，不是文件夹才打开</span></span><br><span class="line">            TxtPath = os.path.join(new_folder_path, file)</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(TxtPath,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">                Txt = fp.read()</span><br></pre></td></tr></table></figure><ul><li>输出以 xxx 为后缀的文件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> os.listdir(filepath):</span><br><span class="line">    path = os.path.join(fillepath,i)</span><br><span class="line"><span class="keyword">if</span> path.endswith(<span class="string">&#x27;.xxx&#x27;</span>):</span><br><span class="line">    <span class="built_in">print</span>(path)</span><br></pre></td></tr></table></figure><h1 id="判断奇偶数"><a href="#判断奇偶数" class="headerlink" title="判断奇偶数"></a>判断奇偶数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">number = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;输入数字:&#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> (num % <span class="number">2</span> ) == <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;：是偶数&#x27;</span>.<span class="built_in">format</span>(number))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;：是奇数&#x27;</span>.<span class="built_in">format</span>(number))</span><br></pre></td></tr></table></figure><h1 id="字符串判断"><a href="#字符串判断" class="headerlink" title="字符串判断"></a>字符串判断</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&quot;runoob.com&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>.isalnum()) <span class="comment"># 判断所有字符都是数字或者字母</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>.isalpha()) <span class="comment"># 判断所有字符都是字母</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>.isdigit()) <span class="comment"># 判断所有字符都是数字</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>.islower()) <span class="comment"># 判断所有字符都是小写</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>.isupper()) <span class="comment"># 判断所有字符都是大写</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>.istitle()) <span class="comment"># 判断所有单词都是首字母大写，像标题</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>.isspace()) <span class="comment"># 判断所有字符都是空白字符、\t、\n、\r</span></span><br></pre></td></tr></table></figure><h1 id="字符串到小写转换"><a href="#字符串到小写转换" class="headerlink" title="字符串到小写转换"></a>字符串到小写转换</h1><pre><code class="python">str = &#39;vitan.me&#39;# 把所有字符中的小写字母转换成大写字母print(str.upper())         # 把所有字符中的大写字母转换成小写字母print(str.lower())      # 把第一个字母转化为大写字母，其余小写print(str.capitalize())  # 把每个单词的第一个字母转化为大写，其余小写 print(str.title())     </code></pre>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Date Types</title>
      <link href="/posts/PythonDateTypes.html"/>
      <url>/posts/PythonDateTypes.html</url>
      
        <content type="html"><![CDATA[<p>数据类型</p><span id="more"></span><h1 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h1><h2 id="Int-整形"><a href="#Int-整形" class="headerlink" title="Int 整形"></a>Int 整形</h2><p>整数类型</p><ul><li>声明：</li></ul><ol><li>十进制：<code>0~9</code></li><li>var &#x3D; 十进制数字</li><li>var &#x3D; 进制数字</li></ol><ul><li>二进制：<code>0~1</code>, 符号:  <code>0b</code></li><li>八进制：<code>0~7</code>,符号:  <code>0o</code></li><li>十六进制：<code>0~9A~F</code>,符号: <code>0x</code></li></ul><h2 id="Float-浮点型"><a href="#Float-浮点型" class="headerlink" title="Float 浮点型"></a>Float 浮点型</h2><p>即小数</p><ul><li>声明：</li><li>var &#x3D; 小数</li></ul><h2 id="Bool-布尔类型"><a href="#Bool-布尔类型" class="headerlink" title="Bool 布尔类型"></a>Bool 布尔类型</h2><p>只有两个值：True 和 False</p><h2 id="Complex-复数类型"><a href="#Complex-复数类型" class="headerlink" title="Complex 复数类型"></a>Complex 复数类型</h2><p>复数的完整结构:实数部分+虚数部分 </p><ul><li>声明：</li></ul><ol><li>var &#x3D; 实数 + 虚数 如：var &#x3D; 5 + 4j</li><li>var &#x3D; complex(实数，虚数值) 如：var &#x3D; complex(5,3)</li></ol><h1 id="String类型-字符类型"><a href="#String类型-字符类型" class="headerlink" title="String类型,字符类型"></a>String类型,字符类型</h1><h2 id="String-字符串类型"><a href="#String-字符串类型" class="headerlink" title="String 字符串类型"></a>String 字符串类型</h2><p>即文字类型</p><ul><li>声明：</li></ul><ol><li>var &#x3D; ‘str…’</li><li>var &#x3D; “str…”</li><li>var &#x3D; ‘’’str…’’’    or   var &#x3D; “””str…”””</li></ol><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p>某种特定的格式使得字符的意义发生改变</p><table><thead><tr><th align="left">符号</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left"><code>\</code></td><td align="left">续行符</td></tr><tr><td align="left"><code>\\</code></td><td align="left">反斜杠符号()</td></tr><tr><td align="left"><code>\&#39;</code></td><td align="left">单引号</td></tr><tr><td align="left"><code>\&quot;</code></td><td align="left">双引号</td></tr><tr><td align="left"><code>\a</code></td><td align="left">响铃</td></tr><tr><td align="left"><code>\b</code></td><td align="left">退格(backspace)</td></tr><tr><td align="left"><code>\e</code></td><td align="left">转义</td></tr><tr><td align="left"><code>\000</code></td><td align="left">空</td></tr><tr><td align="left"><code>\n</code></td><td align="left">换行</td></tr><tr><td align="left"><code>\v</code></td><td align="left">纵向制表符</td></tr><tr><td align="left"><code>\t</code></td><td align="left">横向制表符</td></tr><tr><td align="left"><code>\r</code></td><td align="left">回车</td></tr><tr><td align="left"><code>\f</code></td><td align="left">换页</td></tr><tr><td align="left"><code>\oyy</code></td><td align="left">八进制数，yy代表的字符，例如：\o12代表换行</td></tr><tr><td align="left"><code>\xyy</code></td><td align="left">十六进制数，yy代表的字符，例如：\x0a代表换行</td></tr><tr><td align="left"><code>\other</code></td><td align="left">其它的字符以普通格式输出</td></tr></tbody></table><h2 id="元字符串"><a href="#元字符串" class="headerlink" title="元字符串"></a>元字符串</h2><p>任意字符串之前添加字母r或者R，则当前字符串中所有转义字符在使用时都不会进行转义操作</p><h1 id="列表类型-List"><a href="#列表类型-List" class="headerlink" title="列表类型(List)"></a>列表类型(List)</h1><p>一系列数据的顺序组合，并且组合之后可以修改</p><ul><li>声明：<ul><li>list &#x3D; []</li></ul></li></ul><h2 id="元组类型-Tuple"><a href="#元组类型-Tuple" class="headerlink" title="元组类型(Tuple)"></a>元组类型(Tuple)</h2><p>一系列数据的顺序组合，但是组合之后不可以修改</p><ul><li>声明:<ul><li>tuple &#x3D; ()</li></ul></li></ul><h2 id="字典类型-Dict"><a href="#字典类型-Dict" class="headerlink" title="字典类型(Dict)"></a>字典类型(Dict)</h2><p>具有键值映射关系的一组无序数据组合，可以修改</p><ul><li>声明:<ul><li>dict &#x3D; {‘key1’:’value1’,’key2’:’value2’…}</li></ul></li></ul><h2 id="集合类型-Set"><a href="#集合类型-Set" class="headerlink" title="集合类型(Set)"></a>集合类型(Set)</h2><p>一组特定数据的无序组合，所有数据不会重复</p><ul><li>声明:</li><li>var &#x3D; {value1,value2…}</li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Regression Validation</title>
      <link href="/posts/RegressionValidation.html"/>
      <url>/posts/RegressionValidation.html</url>
      
        <content type="html"><![CDATA[<p>回归分析</p><span id="more"></span><h1 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas </span><br><span class="line">df = pandas.read_csv(<span class="string">&#x27;house-prices.csv&#x27;</span>)</span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure><h1 id="one-hot-处理"><a href="#one-hot-处理" class="headerlink" title="one-hot 处理"></a>one-hot 处理</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对Brick与Neighborhood两列数据进行one-hot处理</span></span><br><span class="line">house =  pandas.concat([df,pandas.get_dummies(df[<span class="string">&#x27;Brick&#x27;</span>]),pandas.get_dummies(df[<span class="string">&#x27;Neighborhood&#x27;</span>])] ,axis=<span class="number">1</span>)</span><br><span class="line"><span class="comment">#删除No列</span></span><br><span class="line"><span class="keyword">del</span> house[<span class="string">&#x27;No&#x27;</span>]</span><br><span class="line"><span class="comment">#删除West列</span></span><br><span class="line"><span class="keyword">del</span> house[<span class="string">&#x27;West&#x27;</span>]</span><br><span class="line"><span class="comment">#删除Brick列</span></span><br><span class="line"><span class="keyword">del</span> house[<span class="string">&#x27;Brick&#x27;</span>]</span><br><span class="line"><span class="comment">#删除Neighborhood列</span></span><br><span class="line"><span class="keyword">del</span> house[<span class="string">&#x27;Neighborhood&#x27;</span>]</span><br><span class="line"><span class="comment">#删除Home列</span></span><br><span class="line"><span class="keyword">del</span> house[<span class="string">&#x27;Home&#x27;</span>]</span><br><span class="line">house.head()</span><br></pre></td></tr></table></figure><h1 id="statsmodels-api"><a href="#statsmodels-api" class="headerlink" title="statsmodels.api"></a>statsmodels.api</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#X为house的&#x27;SqFt&#x27;, &#x27;Bedrooms&#x27;, &#x27;Bathrooms&#x27;, &#x27;Offers&#x27;, &#x27;Yes&#x27;, &#x27;East&#x27;, &#x27;North&#x27;列</span></span><br><span class="line">X = house[[<span class="string">&#x27;SqFt&#x27;</span>, <span class="string">&#x27;Bedrooms&#x27;</span>, <span class="string">&#x27;Bathrooms&#x27;</span>, <span class="string">&#x27;Offers&#x27;</span>, <span class="string">&#x27;Yes&#x27;</span>, <span class="string">&#x27;East&#x27;</span>, <span class="string">&#x27;North&#x27;</span>]]</span><br><span class="line"><span class="comment">#Y为house的Price列的values</span></span><br><span class="line">Y = house[<span class="string">&#x27;Price&#x27;</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy.core.multiarray</span><br><span class="line"><span class="keyword">from</span> pandas.core <span class="keyword">import</span> datetools</span><br><span class="line"><span class="comment">#导入statsmodels.api里面的sm，用于评估模型</span></span><br><span class="line"><span class="keyword">import</span> statsmodels.api <span class="keyword">as</span> sm</span><br><span class="line"><span class="comment">#利用sm.add_constant为X增加一列名为const,值为1的数据</span></span><br><span class="line">X2 = sm.add_constant(X)</span><br><span class="line"><span class="comment">#调用sm的OLS函数对Y,X2进行模型创建</span></span><br><span class="line">est = sm.OLS(Y,X2)</span><br><span class="line"><span class="comment">#调用est的fit函数创建回归结果</span></span><br><span class="line">est2 = est.fit()</span><br><span class="line"><span class="comment">#输出打印est2的概要信息</span></span><br><span class="line"><span class="built_in">print</span>(est2.summary())</span><br><span class="line">est2.aic</span><br></pre></td></tr></table></figure><h2 id="最优组合"><a href="#最优组合" class="headerlink" title="最优组合"></a>最优组合</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">predictorcols = [<span class="string">&#x27;SqFt&#x27;</span>, <span class="string">&#x27;Bedrooms&#x27;</span>, <span class="string">&#x27;Bathrooms&#x27;</span>, <span class="string">&#x27;Offers&#x27;</span>, <span class="string">&#x27;Yes&#x27;</span>, <span class="string">&#x27;East&#x27;</span>, <span class="string">&#x27;North&#x27;</span>]</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(predictorcols)+<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> variables <span class="keyword">in</span> itertools.combinations(predictorcols,i):</span><br><span class="line">        <span class="built_in">print</span>(variables)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools<span class="comment">#导入itertools库</span></span><br><span class="line"><span class="comment">#创建字典AICs ，用于保存每个列名组合的aic结果</span></span><br><span class="line">AICs = &#123;&#125;</span><br><span class="line"><span class="comment">#for循环，循环变量i从1到predictorcols列表的长度加1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(predictorcols)+<span class="number">1</span>):</span><br><span class="line">    <span class="comment">#再次for循环，循环变量var的范围为predictorcols的各种i个元素组合集合itertools.combinations(predictorcols,i)</span></span><br><span class="line">    <span class="keyword">for</span> var <span class="keyword">in</span> itertools.combinations(predictorcols,i):   </span><br><span class="line">        <span class="comment">#predictors为数据框X里的var列的数据，记得要先将var转换成list</span></span><br><span class="line">        predictors  = X[<span class="built_in">list</span>(var)]</span><br><span class="line">        <span class="comment">#利用sm.add_constant为predictors增加一列名为const,值为1的数据</span></span><br><span class="line">        predictors2 =  sm.add_constant(predictors)</span><br><span class="line">        <span class="comment">#调用sm的OLS函数对y,predictors2进行模型创建</span></span><br><span class="line">        est = sm.OLS(Y,predictors2)</span><br><span class="line">        <span class="comment">#调用est的fit函数创建回归结果</span></span><br><span class="line">        res = est.fit()</span><br><span class="line">        <span class="built_in">print</span>(res.aic) <span class="comment"># 每种组合的aic值</span></span><br><span class="line">    <span class="comment">#将res.aic的结果赋值给 AICs的每一个var   </span></span><br><span class="line">        AICs[var] =  res.aic</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入collections的Counter</span></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="comment">#调用Counter，对AICs进行降序排序</span></span><br><span class="line">c = Counter(AICs)</span><br><span class="line"><span class="comment">#调用排序后的c倒数10个数据对象</span></span><br><span class="line">c.most_common()[::-<span class="number">10</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安居客二手房</title>
      <link href="/posts/ScrapyAnjuke.html"/>
      <url>/posts/ScrapyAnjuke.html</url>
      
        <content type="html"><![CDATA[<p>Scrapy anjuke.com 广州二手房数据(保存为 csv)</p><span id="more"></span><h1 id="Spiders"><a href="#Spiders" class="headerlink" title="Spiders"></a>Spiders</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> Spider,Request</span><br><span class="line"><span class="keyword">from</span> anjuke.items <span class="keyword">import</span> AnjukeItem</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AnjukehouseSpider</span>(<span class="title class_ inherited__">Spider</span>):</span><br><span class="line">    name = <span class="string">&#x27;anjukeHouse&#x27;</span></span><br><span class="line">    allowed_domains = [<span class="string">&#x27;anjuke.com&#x27;</span>]</span><br><span class="line">    start_urls = [<span class="string">&#x27;https://guangzhou.anjuke.com/sale/p1-rd1/#filtersort&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, response</span>):</span><br><span class="line">        <span class="comment"># 所有房子URL</span></span><br><span class="line">        urls = response.xpath(<span class="string">&#x27;//div[@class=&quot;house-title&quot;]/a/@href&#x27;</span>).extract()</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">            <span class="keyword">yield</span> Request(url,callback=<span class="variable language_">self</span>.parse_detail)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 下一页</span></span><br><span class="line">        <span class="built_in">next</span> = response.xpath(<span class="string">&#x27;//*[@id=&quot;content&quot;]/div[4]/div[7]/a[7]/@href&#x27;</span>).extract()</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">next</span>:</span><br><span class="line">            <span class="built_in">next</span> = response.urljoin(<span class="built_in">next</span>[<span class="number">0</span>])</span><br><span class="line">            <span class="keyword">yield</span> Request(<span class="built_in">next</span>,callback=<span class="variable language_">self</span>.parse)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse_detail</span>(<span class="params">self,response</span>):</span><br><span class="line">        item = AnjukeItem()</span><br><span class="line">        item[<span class="string">&#x27;date&#x27;</span>] = response.xpath(<span class="string">&#x27;//span[@class=&quot;house-encode&quot;]/text()&#x27;</span>).extract()[<span class="number">0</span>].split()</span><br><span class="line">        item[<span class="string">&#x27;tittle&#x27;</span>] = response.xpath(<span class="string">&#x27;//h3[@class=&quot;long-title&quot;]/text()&#x27;</span>).extract()</span><br><span class="line">        item[<span class="string">&#x27;price&#x27;</span>] = response.xpath(<span class="string">&#x27;//span[@class=&quot;light info-tag&quot;]/em/text()&#x27;</span>).extract_first().split()</span><br><span class="line"></span><br><span class="line">        houseInfo = response.xpath(<span class="string">&#x27;//div[@class=&quot;houseInfo-content&quot;]/text()&#x27;</span>).extract()</span><br><span class="line">        item[<span class="string">&#x27;huxing&#x27;</span>] = houseInfo[<span class="number">2</span>].strip().replace(<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;\t&quot;</span>,<span class="string">&quot;&quot;</span>).split()</span><br><span class="line">        item[<span class="string">&#x27;area&#x27;</span>] = houseInfo[<span class="number">7</span>].strip().split()</span><br><span class="line">        item[<span class="string">&#x27;built&#x27;</span>] = houseInfo[<span class="number">9</span>].strip().replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;\t&quot;</span>, <span class="string">&quot;&quot;</span>).split()</span><br><span class="line">        item[<span class="string">&#x27;chaoxiang&#x27;</span>] = houseInfo[<span class="number">10</span>].strip().split()</span><br><span class="line">        item[<span class="string">&#x27;leixing&#x27;</span>] = houseInfo[-<span class="number">8</span>].strip().split()</span><br><span class="line">        item[<span class="string">&#x27;louceng&#x27;</span>] = houseInfo[-<span class="number">7</span>].strip().split()</span><br><span class="line">        item[<span class="string">&#x27;zhuangxiu&#x27;</span>] = houseInfo[-<span class="number">6</span>].strip().split()</span><br><span class="line">        <span class="built_in">print</span>(item)</span><br><span class="line">    <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><h2 id="items"><a href="#items" class="headerlink" title="items"></a>items</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> Item,Field</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AnjukeItem</span>(<span class="title class_ inherited__">Item</span>):</span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    <span class="comment"># name = scrapy.Field()</span></span><br><span class="line">    tittle = Field()</span><br><span class="line">    huxing = Field()</span><br><span class="line">    area = Field()</span><br><span class="line">    chaoxiang = Field()</span><br><span class="line">    louceng = Field()</span><br><span class="line">    price = Field()</span><br><span class="line">    zhuangxiu = Field()</span><br><span class="line">    leixing = Field()</span><br><span class="line">    date = Field()</span><br><span class="line">    built = Field()</span><br></pre></td></tr></table></figure><h2 id="settings"><a href="#settings" class="headerlink" title="settings"></a>settings</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">BOT_NAME = <span class="string">&#x27;anjuke&#x27;</span></span><br><span class="line"></span><br><span class="line">SPIDER_MODULES = [<span class="string">&#x27;anjuke.spiders&#x27;</span>]</span><br><span class="line">NEWSPIDER_MODULE = <span class="string">&#x27;anjuke.spiders&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Obey robots.txt rules</span></span><br><span class="line">ROBOTSTXT_OBEY = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">DOWNLOAD_DELAY = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">DEFAULT_REQUEST_HEADERS = &#123;</span><br><span class="line">    <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;en&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;user-agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;accept&#x27;</span>: <span class="string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;accept-encoding&#x27;</span>: <span class="string">&#x27;gzip, deflate, br&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;accept-language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;cache-control&#x27;</span>: <span class="string">&#x27;max-age=0&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line"><span class="string">&#x27;anjuke.pipelines.Pipeline_ToCSV&#x27;</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="pipelines"><a href="#pipelines" class="headerlink" title="pipelines"></a>pipelines</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Pipeline_ToCSV</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.csvwriter = csv.writer(<span class="built_in">open</span>(<span class="string">&#x27;anjuke.csv&#x27;</span>, <span class="string">&#x27;w&#x27;</span>), delimiter=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.csvwriter.writerow([<span class="string">&#x27;date&#x27;</span>,<span class="string">&#x27;tittle&#x27;</span>, <span class="string">&#x27;price&#x27;</span>, <span class="string">&#x27;huxing&#x27;</span>, <span class="string">&#x27;area&#x27;</span>,<span class="string">&#x27;built&#x27;</span>,<span class="string">&#x27;chaoxiang&#x27;</span>,<span class="string">&#x27;leibie&#x27;</span>,<span class="string">&#x27;loucheng&#x27;</span>,<span class="string">&#x27;zhuangxiu&#x27;</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">process_item</span>(<span class="params">self, item, ampa</span>):</span><br><span class="line">        rows = <span class="built_in">zip</span>(item[<span class="string">&#x27;date&#x27;</span>],item[<span class="string">&#x27;tittle&#x27;</span>], item[<span class="string">&#x27;price&#x27;</span>],item[<span class="string">&#x27;huxing&#x27;</span>],item[<span class="string">&#x27;area&#x27;</span>],item[<span class="string">&#x27;built&#x27;</span>],item[<span class="string">&#x27;chaoxiang&#x27;</span>],item[<span class="string">&#x27;leixing&#x27;</span>],item[<span class="string">&#x27;louceng&#x27;</span>],item[<span class="string">&#x27;zhuangxiu&#x27;</span>])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> rows:</span><br><span class="line">            <span class="variable language_">self</span>.csvwriter.writerow(row)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><h1 id="Selenium"><a href="#Selenium" class="headerlink" title="Selenium"></a>Selenium</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 18-12-28 下午6:48</span></span><br><span class="line"><span class="comment"># @Author  : Vitan</span></span><br><span class="line"><span class="comment"># @File    : anjuke.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span>  BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> pandas</span><br><span class="line"><span class="keyword">import</span> time,random</span><br><span class="line"></span><br><span class="line">broswer = webdriver.Chrome()</span><br><span class="line">wait = WebDriverWait(broswer,<span class="number">10</span>)</span><br><span class="line">houseInfo = []</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_urls</span>():</span><br><span class="line">    page_urls = []</span><br><span class="line">    star_url = <span class="string">&#x27;https://guangzhou.anjuke.com/sale/p&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">51</span>):</span><br><span class="line">        url = star_url+<span class="built_in">str</span>(i)</span><br><span class="line">        page_urls.append(url)</span><br><span class="line">    <span class="keyword">return</span> page_urls</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">HouseUrl</span>(<span class="params">url</span>):</span><br><span class="line">    time.sleep(random.random()*<span class="number">10</span>)</span><br><span class="line">    broswer.get(url)</span><br><span class="line">    wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, <span class="string">&#x27;.curr&#x27;</span>)))</span><br><span class="line">    urls = broswer.find_elements_by_css_selector(<span class="string">&#x27;.houseListTitle&#x27;</span>) <span class="comment"># a 标签</span></span><br><span class="line">    house_urls = []</span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> urls:</span><br><span class="line">        urls = a.get_attribute(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line">        house_urls.append(urls)</span><br><span class="line">    <span class="keyword">return</span> house_urls</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_detail</span>(<span class="params">url</span>):</span><br><span class="line">    time.sleep(random.random()*<span class="number">10</span>)</span><br><span class="line">    broswer.get(url)</span><br><span class="line">    wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, <span class="string">&#x27;.houseInfoBox&#x27;</span>)))</span><br><span class="line">    info = &#123;&#125;</span><br><span class="line">    <span class="comment"># info[&#x27;标题&#x27;] = broswer.find_element_by_css_selector(&#x27;.long-title&#x27;).get_attribute(&#x27;textContent&#x27;)</span></span><br><span class="line">    <span class="comment"># info[&#x27;总价&#x27;] = broswer.find_elements_by_css_selector(&#x27;.basic-info span&#x27;)[0].get_attribute(&#x27;textContent&#x27;)</span></span><br><span class="line">    <span class="comment"># info[&#x27;户型&#x27;] = broswer.find_elements_by_css_selector(&#x27;.basic-info span&#x27;)[1].get_attribute(&#x27;textContent&#x27;)</span></span><br><span class="line">    <span class="comment"># info[&#x27;面积&#x27;] = broswer.find_elements_by_css_selector(&#x27;.basic-info span&#x27;)[2].get_attribute(&#x27;textContent&#x27;)</span></span><br><span class="line">    <span class="comment"># info[&#x27;单价&#x27;] = broswer.find_elements_by_css_selector(&#x27;.houseInfo-content&#x27;)[2].get_attribute(&#x27;textContent&#x27;)</span></span><br><span class="line">    <span class="comment"># info[&#x27;朝向&#x27;] = broswer.find_elements_by_css_selector(&#x27;.houseInfo-content&#x27;)[7].get_attribute(&#x27;textContent&#x27;)</span></span><br><span class="line">    <span class="comment"># info[&#x27;月供&#x27;] = broswer.find_elements_by_css_selector(&#x27;.houseInfo-content&#x27;)[8].get_attribute(&#x27;textContent&#x27;)</span></span><br><span class="line">    <span class="comment"># info[&#x27;楼层&#x27;] = broswer.find_elements_by_css_selector(&#x27;.houseInfo-content&#x27;)[-7].get_attribute(&#x27;textContent&#x27;)</span></span><br><span class="line">    <span class="comment"># info[&#x27;装修&#x27;] = broswer.find_elements_by_css_selector(&#x27;.houseInfo-content&#x27;)[-6].get_attribute(&#x27;textContent&#x27;)</span></span><br><span class="line">    html = broswer.page_source</span><br><span class="line">    soup = BeautifulSoup(html,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    info[<span class="string">&#x27;标题&#x27;</span>] = soup.select(<span class="string">&#x27;.long-title&#x27;</span>)[<span class="number">0</span>].text</span><br><span class="line">    info[<span class="string">&#x27;总价&#x27;</span>] = soup.select(<span class="string">&#x27;.basic-info span&#x27;</span>)[<span class="number">0</span>].text</span><br><span class="line">    info[<span class="string">&#x27;户型&#x27;</span>] = soup.select(<span class="string">&#x27;.basic-info span&#x27;</span>)[<span class="number">1</span>].text</span><br><span class="line">    info[<span class="string">&#x27;面积&#x27;</span>] = soup.select(<span class="string">&#x27;.basic-info span&#x27;</span>)[<span class="number">2</span>].text</span><br><span class="line">    info[<span class="string">&#x27;单价&#x27;</span>] = soup.select(<span class="string">&#x27;.houseInfo-content&#x27;</span>)[<span class="number">2</span>].text</span><br><span class="line">    info[<span class="string">&#x27;朝向&#x27;</span>] = soup.select(<span class="string">&#x27;.houseInfo-content&#x27;</span>)[<span class="number">7</span>].text</span><br><span class="line">    info[<span class="string">&#x27;月供&#x27;</span>] = soup.select(<span class="string">&#x27;.houseInfo-content&#x27;</span>)[<span class="number">8</span>].text</span><br><span class="line">    info[<span class="string">&#x27;楼层&#x27;</span>] = soup.select(<span class="string">&#x27;.houseInfo-content&#x27;</span>)[-<span class="number">7</span>].text</span><br><span class="line">    info[<span class="string">&#x27;装修&#x27;</span>] = soup.select(<span class="string">&#x27;.houseInfo-content&#x27;</span>)[-<span class="number">6</span>].text</span><br><span class="line">    k = [<span class="string">&#x27;标题&#x27;</span>,<span class="string">&#x27;总价&#x27;</span>,<span class="string">&#x27;户型&#x27;</span>,<span class="string">&#x27;面积&#x27;</span>,<span class="string">&#x27;单价&#x27;</span>,<span class="string">&#x27;朝向&#x27;</span>,<span class="string">&#x27;月供&#x27;</span>,<span class="string">&#x27;楼层&#x27;</span>,<span class="string">&#x27;装修&#x27;</span>]</span><br><span class="line">    info_adj = <span class="built_in">dict</span>(<span class="built_in">zip</span>(k,<span class="built_in">list</span>(info.values())))</span><br><span class="line">    houseInfo.append(info_adj)</span><br><span class="line">    <span class="built_in">print</span>(houseInfo)</span><br><span class="line">    <span class="keyword">return</span> houseInfo</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_to_csv</span>(<span class="params">houseInfo</span>):</span><br><span class="line">    df = pandas.DataFrame(houseInfo)</span><br><span class="line">    df.to_csv(<span class="string">&#x27;maoming.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    page_urls = get_urls()</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> page_urls:</span><br><span class="line">        house_urls = HouseUrl(url)</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> house_urls:</span><br><span class="line">            houseInfo=get_detail(url)</span><br><span class="line">            save_to_csv(houseInfo)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Visualization</title>
      <link href="/posts/Visualization.html"/>
      <url>/posts/Visualization.html</url>
      
        <content type="html"><![CDATA[<p>Python 数据可视化</p><span id="more"></span><h1 id="读取"><a href="#读取" class="headerlink" title="读取"></a>读取</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="comment">#将purchase_order.tab文件里面的相关字段名赋值给m_cols</span></span><br><span class="line">m_cols = [<span class="string">&#x27;Time&#x27;</span>,<span class="string">&#x27;Action&#x27;</span>,<span class="string">&#x27;User&#x27;</span>,<span class="string">&#x27;Product&#x27;</span>, <span class="string">&#x27;Quantity&#x27;</span>,<span class="string">&#x27;Price&#x27;</span>]</span><br><span class="line"><span class="comment">#读取purchase_order.tab文件，文件间隔符为\t，读取进来后Dates为第一列数据，文件列名为以上m_cols编码为utf-8,</span></span><br><span class="line">orders = pd.read_csv(<span class="string">&#x27;purchase_order.tab&#x27;</span>,sep = <span class="string">&#x27;\t&#x27;</span>,parse_dates = &#123;<span class="string">&#x27;Dates&#x27;</span>:[<span class="number">0</span>]&#125;,names = m_cols)</span><br><span class="line"><span class="comment">#查看orders整个数据框的相关信息</span></span><br><span class="line">orders.head()</span><br></pre></td></tr></table></figure><p>查看记录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看orders的Product列前5行数据</span></span><br><span class="line">orders[<span class="string">&#x27;Product&#x27;</span>].head()</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看Product为P0006944501的Price列数据，并获取其描述性统计信息</span></span><br><span class="line">orders.ix[orders[<span class="string">&#x27;Product&#x27;</span>] ==<span class="string">&#x27;P0006944501&#x27;</span>,<span class="string">&#x27;Product&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看Product为P0006944501的Price列数据，求其均值</span></span><br><span class="line">orders[orders[<span class="string">&#x27;Product&#x27;</span>]==<span class="string">&#x27;P0006944501&#x27;</span>][<span class="string">&#x27;Price&#x27;</span>].describe()</span><br><span class="line">orders[orders[<span class="string">&#x27;Product&#x27;</span>]==<span class="string">&#x27;P0006944501&#x27;</span>][<span class="string">&#x27;Price&#x27;</span>].mea()</span><br><span class="line"></span><br><span class="line"><span class="comment">#计算orders里面有哪些Product</span></span><br><span class="line">orders[<span class="string">&#x27;Product&#x27;</span>].unique()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#求orders里面不同类别的Product共有多少个</span></span><br><span class="line"><span class="built_in">len</span>(orders[<span class="string">&#x27;Product&#x27;</span>].unique())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># select Product, avg(Price) from orders </span></span><br><span class="line"><span class="comment"># group by Product limit 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#按Product统计其各自的销售价格均值</span></span><br><span class="line">orders.groupby(<span class="string">&#x27;Product&#x27;</span>)[<span class="string">&#x27;Price&#x27;</span>].mean()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># select Product, avg(Price) from orders </span></span><br><span class="line"><span class="comment"># group by Product order by avg(Price) desc limit 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#按Product统计其各自的销售价格均值并将求得的数据进行降序排序</span></span><br><span class="line">orders.groupby(<span class="string">&#x27;Product&#x27;</span>)[<span class="string">&#x27;Price&#x27;</span>].mean().sort_values(ascending=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>增加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#为orders增加新列Total_Price，并利用orders里面的相关数据计算求得</span></span><br><span class="line">orders[<span class="string">&#x27;Total_Price&#x27;</span>] = orders[<span class="string">&#x27;Quantity&#x27;</span>] * orders[<span class="string">&#x27;Price&#x27;</span>]</span><br></pre></td></tr></table></figure><p>排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#select User, sum(Total_Price) from orders</span></span><br><span class="line"><span class="comment">#gorup by User order by sum(Total_Price) desc limit 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#按客户统计他们的消费总金额，并按降序排列</span></span><br><span class="line">orders.groupby(<span class="string">&#x27;User&#x27;</span>)[<span class="string">&#x27;Total_Price&#x27;</span>].<span class="built_in">sum</span>().sort_values(ascending = <span class="literal">False</span>)</span><br></pre></td></tr></table></figure><h1 id="再次读取"><a href="#再次读取" class="headerlink" title="再次读取"></a>再次读取</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">m_cols = [<span class="string">&#x27;Time&#x27;</span>,<span class="string">&#x27;Action&#x27;</span>,<span class="string">&#x27;User&#x27;</span>,<span class="string">&#x27;Product&#x27;</span>]</span><br><span class="line"><span class="comment">#读取purchase_view.tab文件，文件间隔符为\t，要求读取进来后Dates为第一列数据，文件列名为以上m_cols编码为utf-8,</span></span><br><span class="line">views =pd.read_csv(<span class="string">&#x27;purchase_view.tab&#x27;</span>,sep=<span class="string">&#x27;\t&#x27;</span>,parse_dates=&#123;<span class="string">&#x27;Dates&#x27;</span>:[<span class="number">0</span>]&#125;,names =m_cols,encoding=<span class="string">&#x27;UTF-8&#x27;</span>)</span><br><span class="line"><span class="comment">#查看views整个数据框的相关信息</span></span><br><span class="line">views.info()</span><br><span class="line"><span class="comment">#查看前5行数据</span></span><br><span class="line">views.head()</span><br></pre></td></tr></table></figure><p>分组、排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## SELECT User, Product, COUNT(Product) FROM Orders GROUP BY User, Product</span></span><br><span class="line"><span class="comment">#在购买数据表中按不同用户不同产品进行分组，并统计每个用户产品的购买数量，将统计结果以“buys”作为字段名添加进统计结果中</span></span><br><span class="line">orders_cnt= orders.groupby([<span class="string">&#x27;User&#x27;</span>,<span class="string">&#x27;Product&#x27;</span>])[<span class="string">&#x27;Action&#x27;</span>].count().reset_index(name=<span class="string">&#x27;buys&#x27;</span>)</span><br><span class="line">orders_cnt.head()</span><br><span class="line"></span><br><span class="line"><span class="comment">## SELECT User, Product, COUNT(Product) FROM views GROUP BY User, Product</span></span><br><span class="line"><span class="comment">#在浏览记录表数据表中按不同用户不同产品进行分组，并统计每个用户产品的浏览量，并对统计结果按浏览量降序排列，最后将统计结果以“views”作为字段名添加进统计结果中,</span></span><br><span class="line">views_cnt =views.groupby([<span class="string">&#x27;User&#x27;</span>,<span class="string">&#x27;Product&#x27;</span>])[<span class="string">&#x27;Action&#x27;</span>].count().sort_values(ascending=<span class="literal">False</span>).reset_index(name = <span class="string">&#x27;views&#x27;</span>)</span><br></pre></td></tr></table></figure><p>合并</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将用户购买与浏览产品的数据合并在一起，生成表格merge_df,以views_cnt作为右连接表，连接结果为右连接</span></span><br><span class="line">merge_df = pd.merge(orders_cnt,views_cnt,on=[<span class="string">&#x27;User&#x27;</span>,<span class="string">&#x27;Product&#x27;</span>],how=<span class="string">&#x27;right&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li><a href="http://www.cnblogs.com/zxlovenet/p/4005256.html">数据表的连接问题</a></li><li><a href="https://blog.csdn.net/ZK_J1994/article/details/77717700">merge与concat的区别</a></li></ul><p>不同日期與時間</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">views.head()<span class="comment">#查看views</span></span><br><span class="line">views.info()<span class="comment">#查看views的相关信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># year, month, day, date, hour </span></span><br><span class="line"><span class="comment">#查看views的Dates列数据的年、月、日期等信息</span></span><br><span class="line">views[<span class="string">&#x27;Dates&#x27;</span>].dt.hour</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># select date, count(action) from views</span></span><br><span class="line"><span class="comment"># group by date</span></span><br><span class="line"><span class="comment">#在views表中，统计每一天网站的用户浏览总次数</span></span><br><span class="line">views_cnt_by_date  = views.groupby(views[<span class="string">&#x27;Dates&#x27;</span>].dt.date)[<span class="string">&#x27;Action&#x27;</span>].count()</span><br><span class="line">views_cnt_by_date.head()<span class="comment">#查看以上统计结果</span></span><br></pre></td></tr></table></figure><h1 id="绘制图表"><a href="#绘制图表" class="headerlink" title="绘制图表"></a>绘制图表</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">%pylab inline</span><br><span class="line"></span><br><span class="line"><span class="comment">#对每天用户浏览网站情况绘制折线图，图大小为10*5</span></span><br><span class="line"> views_cnt_by_date.plot(kind=<span class="string">&#x27;line&#x27;</span>,figsize=[<span class="number">10</span>,<span class="number">5</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># select hour(Dates), count(action) from views</span></span><br><span class="line"><span class="comment"># group by  hour(Dates)</span></span><br><span class="line"><span class="comment">#在views表中，统计一天24内每个小时网站的用户浏览总次数</span></span><br><span class="line">views_cnt_by_hour  = views.groupby(views[<span class="string">&#x27;Dates&#x27;</span>].dt.hour)[<span class="string">&#x27;Action&#x27;</span>].count()</span><br><span class="line"></span><br><span class="line">%pylab inline</span><br><span class="line"><span class="comment">#各个小时用户浏览网站情况绘制折线图，图大小为10*5，标题为view count by hour</span></span><br><span class="line">views_cnt_by_hour.plot(kind=<span class="string">&#x27;line&#x27;</span>,figsize=[<span class="number">10</span>,<span class="number">5</span>],title=<span class="string">&#x27;view count by hour&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#增加新列Total_price,并利用orders相关数据计算</span></span><br><span class="line">orders[<span class="string">&#x27;Total_price&#x27;</span>] = orders[<span class="string">&#x27;Quantity&#x27;</span>] * orders[<span class="string">&#x27;Price&#x27;</span>]</span><br><span class="line"><span class="comment">#按客户统计他们的消费总金额，并按降序排列,最终取前10个用户的统计数据</span></span><br><span class="line">g = orders.groupby(<span class="string">&#x27;User&#x27;</span>)[<span class="string">&#x27;Total_price&#x27;</span>].<span class="built_in">sum</span>().sort_values(ascending=<span class="literal">False</span>)[<span class="number">0</span>:<span class="number">10</span>]</span><br><span class="line"><span class="comment">#绘制前10个用户的消费金额柱形图，图片大小10*5</span></span><br><span class="line">g.plot(kind=<span class="string">&#x27;bar&#x27;</span>,figsize=[<span class="number">10</span>,<span class="number">5</span>],color=<span class="string">&#x27;y&#x27;</span>)</span><br></pre></td></tr></table></figure><p>统计</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在views表中统计网站每天的浏览总数</span></span><br><span class="line">view_daily_cnt = views.groupby(views[<span class="string">&#x27;Dates&#x27;</span>].dt.date)[<span class="string">&#x27;Action&#x27;</span>].count()</span><br><span class="line">view_daily_cnt.head()</span><br><span class="line"></span><br><span class="line"><span class="comment">#在orders表中统计网站每天用户的购买总次数</span></span><br><span class="line">orders_daily_cnt = orders.groupby(orders[<span class="string">&#x27;Dates&#x27;</span>].dt.date)[<span class="string">&#x27;Action&#x27;</span>].count()</span><br><span class="line">orders_daily_cnt.head()</span><br></pre></td></tr></table></figure><p>合并</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将view_daily_cnt与orders_daily_cnt表按列方向拼接,不需要按主键合并</span></span><br><span class="line">df =pd.concat([view_daily_cnt,orders_daily_cnt],axis=<span class="number">1</span>)</span><br><span class="line">    <span class="comment">##关于merge与concat的区别：https://blog.csdn.net/ZK_J1994/article/details/77717700</span></span><br><span class="line">df=df.dropna()<span class="comment">#删除具有空值的行,并将删除结果覆盖原数据框</span></span><br><span class="line">df.head()</span><br><span class="line">df.columns=[<span class="string">&#x27;Views&#x27;</span>,<span class="string">&#x27;Orders&#x27;</span>]<span class="comment">#将df的字段名命名为&#x27;Views&#x27;, &#x27;Orders&#x27;</span></span><br><span class="line">    df.head()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对df数据绘制折线图，图的大小为10*5，设置X轴刻度的显示旋转度为30</span></span><br><span class="line">df.plot(kind=<span class="string">&#x27;line&#x27;</span>,figsize=[<span class="number">10</span>,<span class="number">5</span>],rot=<span class="number">30</span>)</span><br></pre></td></tr></table></figure><ul><li><a href="https://www.cnblogs.com/xitingxie/p/8359392.html">plot里面各参数的使用说明</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Data Transformation</title>
      <link href="/posts/DataTransformation.html"/>
      <url>/posts/DataTransformation.html</url>
      
        <content type="html"><![CDATA[<p>数据处理</p><span id="more"></span><h1 id="数据转换"><a href="#数据转换" class="headerlink" title="数据转换"></a>数据转换</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br><span class="line">df = pandas.read_excel(<span class="string">&#x27;house_sample.xlsx&#x27;</span>)<span class="comment">#读取excel文件数据</span></span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure><h2 id="数据运算"><a href="#数据运算" class="headerlink" title="数据运算"></a>数据运算</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将总价*10000</span></span><br><span class="line">df[<span class="string">&#x27;总价&#x27;</span>]*<span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment">#求总价列数据的平方根</span></span><br><span class="line">np.sqrt(df[<span class="string">&#x27;总价&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#将‘朝向’与‘户型’两列数据拼接在一起</span></span><br><span class="line">df[<span class="string">&#x27;朝向&#x27;</span>]+df[<span class="string">&#x27;户型&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#求每套房的房价均值（记得要先将总价*10000）</span></span><br><span class="line">df[<span class="string">&#x27;总价&#x27;</span>]*<span class="number">10000</span>/df[<span class="string">&#x27;建筑面积&#x27;</span>]</span><br><span class="line"><span class="comment">#df.head()</span></span><br></pre></td></tr></table></figure><h2 id="切分"><a href="#切分" class="headerlink" title="切分"></a>切分</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#以“元”为分界对s进行切分，并获取切分后的第一个字符</span></span><br><span class="line">s = <span class="string">&#x27;1.5元/平米・月&#x27;</span></span><br><span class="line">s.split(<span class="string">&#x27;元&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义removeDollar函数实现对字符e按‘元’进行切分并获取切分后的第一个字符</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">removeDollar</span>(<span class="params">e</span>): </span><br><span class="line">    <span class="keyword">return</span> e.split(<span class="string">&#x27;元&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">removeDollar(s)<span class="comment">#调用以上函数对s进行应用</span></span><br><span class="line"><span class="comment">#将函数removeDollar套用到df的物业费列</span></span><br><span class="line">df[<span class="string">&#x27;物 业 费&#x27;</span>].<span class="built_in">map</span>(removeDollar)</span><br></pre></td></tr></table></figure><h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">removeDollar</span>(<span class="params">e</span>):</span><br><span class="line"><span class="keyword">return</span> e.split(<span class="string">&#x27;元&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#将上面函数以匿名函数形式套用到df的物业费列</span></span><br><span class="line">df[<span class="string">&#x27;物 业 费&#x27;</span>].<span class="built_in">map</span>(<span class="keyword">lambda</span> e:e.split(<span class="string">&#x27;元&#x27;</span>)[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">square</span>(<span class="params">e</span>):</span><br><span class="line">    <span class="keyword">return</span> e * e </span><br><span class="line">square(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">square2 = <span class="keyword">lambda</span> e: e * e</span><br><span class="line">square2(<span class="number">2</span>)  </span><br></pre></td></tr></table></figure><ul><li>行列最值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">df = pandas.DataFrame([</span><br><span class="line">                [<span class="number">60</span>,<span class="number">70</span>,<span class="number">50</span>],\</span><br><span class="line">                [<span class="number">80</span>,<span class="number">79</span>,<span class="number">68</span>],\</span><br><span class="line">                [<span class="number">63</span>,<span class="number">66</span>,<span class="number">82</span>]], columns = [<span class="string">&#x27;First&#x27;</span>, <span class="string">&#x27;Second&#x27;</span>, <span class="string">&#x27;Third&#x27;</span>])</span><br><span class="line">df</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对df的每一行数据应用匿名函数进行计算，匿名函数实现对每一行数据的最大值与最小值计算</span></span><br><span class="line">df.apply(<span class="keyword">lambda</span> e:e.<span class="built_in">max</span>()-e.<span class="built_in">min</span>(),axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#对df的每一列数据应用匿名函数进行计算，匿名函数实现对每一列数据的最大值与最小值计算</span></span><br><span class="line">df.apply(<span class="keyword">lambda</span> e:e.<span class="built_in">max</span>()-e.<span class="built_in">min</span>())</span><br></pre></td></tr></table></figure><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p>导入数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br><span class="line">df = pandas.read_excel(<span class="string">&#x27;house_sample.xlsx&#x27;</span>)</span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure><p>实操</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">convertNaN</span>(<span class="params">e</span>):</span><br><span class="line">    <span class="keyword">if</span> e == <span class="string">&#x27;暂无资料&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> np.nan</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> e</span><br><span class="line">        </span><br><span class="line"><span class="comment">#将函数convertNaN应用到df的每个数据元素上</span></span><br><span class="line">df.applymap(convertNaN)</span><br><span class="line"></span><br><span class="line"><span class="comment">#以匿名函数形式将函数套用到df的每个数据元素上</span></span><br><span class="line">df.applymap(<span class="keyword">lambda</span> e:np.nan <span class="keyword">if</span> e ==<span class="string">&#x27;暂无资料&#x27;</span> <span class="keyword">else</span> e)</span><br></pre></td></tr></table></figure><h1 id="时间转换"><a href="#时间转换" class="headerlink" title="时间转换"></a>时间转换</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入时间处理库datetime</span></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="comment">#获取系统当前时间</span></span><br><span class="line">current_time = datetime.now()</span><br><span class="line"></span><br><span class="line"><span class="built_in">type</span>(current_time)</span><br></pre></td></tr></table></figure><h2 id="时间String"><a href="#时间String" class="headerlink" title="时间&lt;—-&gt;String"></a>时间&lt;—-&gt;String</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将时间转换成字符串</span></span><br><span class="line">current_time.strftime(<span class="string">&#x27;%Y/%m%d&#x27;</span>)</span><br><span class="line"></span><br><span class="line">s = <span class="string">&#x27;2017/04-22&#x27;</span></span><br><span class="line"><span class="comment">#将字符串转换成时间</span></span><br><span class="line"><span class="built_in">print</span>(datetime.strptime(s,<span class="string">&#x27;%Y/%m-%d&#x27;</span>))</span><br></pre></td></tr></table></figure><h2 id="时间回溯"><a href="#时间回溯" class="headerlink" title="时间回溯"></a>时间回溯</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> timedelta</span><br><span class="line"><span class="comment">#newday为当前时间往前回溯10天</span></span><br><span class="line">newday = current_time - timedelta(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(newday)</span><br><span class="line"></span><br><span class="line">current_time - newday</span><br><span class="line"><span class="comment">#将current_time往后推迟10天</span></span><br><span class="line">current_time + timedelta(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">    <span class="comment">#dt代表往前推移的每一个日期</span></span><br><span class="line">    dt = current_time - timedelta(i)</span><br><span class="line">    <span class="comment">#将dt转换成字符串类似格式为“2017/04/21”，并打印输出</span></span><br><span class="line">    <span class="built_in">print</span>(dt.strftime(<span class="string">&#x27;%Y/%m/%d&#x27;</span>))</span><br></pre></td></tr></table></figure><h2 id="时间戳"><a href="#时间戳" class="headerlink" title="时间戳"></a>时间戳</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> mktime</span><br><span class="line"><span class="comment">#利用mktime将current_time转换成unix时间戳</span></span><br><span class="line">mktime(current_time.timetuple())</span><br><span class="line"></span><br><span class="line"><span class="comment">#将上面的unix时间戳转换成datetime，调用datetime的fromtimestamp</span></span><br><span class="line"><span class="built_in">print</span>(datetime.fromtimestamp(<span class="number">1544492604.0</span>))</span><br></pre></td></tr></table></figure><h2 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h2><p>数据导入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br><span class="line">df = pandas.read_excel(<span class="string">&#x27;house_sample.xlsx&#x27;</span>)</span><br><span class="line">df.head()</span><br><span class="line">df.info()</span><br></pre></td></tr></table></figure><h2 id="时间转换-1"><a href="#时间转换-1" class="headerlink" title="时间转换"></a>时间转换</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将df的&#x27;张贴日期&#x27;列转换成日期（datetime）形式</span></span><br><span class="line">df[<span class="string">&#x27;张贴日期&#x27;</span>] =pandas.to_datetime(df[<span class="string">&#x27;张贴日期&#x27;</span>],<span class="built_in">format</span>=<span class="string">&#x27;西元%Y年%m月%d日&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="数据重塑"><a href="#数据重塑" class="headerlink" title="数据重塑"></a>数据重塑</h1><h2 id="数据导入"><a href="#数据导入" class="headerlink" title="数据导入"></a>数据导入</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;house_sample.xlsx&#x27;</span>)</span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure><h2 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a>数据操作</h2><ul><li>one-hot</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将df的&quot;朝向&quot;列数据进行one-hot处理，即转换成虚拟变量</span></span><br><span class="line">pd.get_dummies(df[<span class="string">&#x27;朝向&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#利用pandas的concat函数将“朝向”列数据进行one-hot处理后，与原来的df数据框合并</span></span><br><span class="line">df = jion(pd.compat([df,pd.get_dummies([<span class="string">&#x27;朝向&#x27;</span>])],axis=<span class="number">1</span>))</span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/d71f8b2fgy1fy2qy19bzvj203k08pa9y.jpg"></p><ul><li>删除数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除df的&#x27;朝向&#x27;数据</span></span><br><span class="line">df = df.drop(<span class="string">&#x27;朝向&#x27;</span>,axis=<span class="number">1</span>)</span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure><h2 id="数据透视表"><a href="#数据透视表" class="headerlink" title="数据透视表"></a>数据透视表</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#利用数据透视表绘制以下表格</span></span><br><span class="line">df2 = df.pivot_table(index=<span class="string">&#x27;张贴日期&#x27;</span>,columns=<span class="string">&#x27;产权性质&#x27;</span>,values=<span class="string">&#x27;总价&#x27;</span>,aggfunc=<span class="built_in">sum</span>,fill_value=<span class="number">0</span>)</span><br><span class="line"><span class="comment">#表中数据为对应交叉对象的总价之和</span></span><br><span class="line">df2.head()</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/d71f8b2fgy1fy2r0yfipgj208p077dg7.jpg"></p><ul><li>转换</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将上面表格的行索引与列索引进行对换</span></span><br><span class="line">df3 = df.pivot_table(index=<span class="string">&#x27;产权性质&#x27;</span>,columns=<span class="string">&#x27;张贴日期&#x27;</span>,values=<span class="string">&#x27;总价&#x27;</span>,aggfunc=<span class="built_in">sum</span>,fill_value=<span class="number">0</span>)</span><br><span class="line">df3.head()</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/d71f8b2fgy1fy2r25wh3fj20hq067wen.jpg"></p><h1 id="利用转置函数实现上面的行索引与列索引对换"><a href="#利用转置函数实现上面的行索引与列索引对换" class="headerlink" title="利用转置函数实现上面的行索引与列索引对换"></a>利用转置函数实现上面的行索引与列索引对换</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2.T</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/d71f8b2fgy1fy2r3aj8ejj20ho065wen.jpg"></p><ul><li>表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#调整上面的参数，绘制以下表格</span></span><br><span class="line">df_multi_idx = df.pivot_table(index=[<span class="string">&#x27;装修&#x27;</span>,<span class="string">&#x27;楼层&#x27;</span>],columns=<span class="string">&#x27;张贴日期&#x27;</span>,values=<span class="string">&#x27;总价&#x27;</span>,aggfunc=<span class="built_in">sum</span>,fill_value=<span class="number">0</span>)</span><br><span class="line">df_multi_idx.head()</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/d71f8b2fgy1fy2r4alq9qj20fm08lwet.jpg"></p><ul><li>unstack函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#利用unstack函数转换成宽表格</span></span><br><span class="line">df_wide = df_multi_idx.unstack()</span><br><span class="line">df_wide.head()</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/d71f8b2fgy1fy2r5crzljj20hc08mt95.jpg"></p><ul><li>stack函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#利用stack转换成长表格</span></span><br><span class="line">df_long = df_wide.stack()</span><br><span class="line">df_long.head()</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/d71f8b2fgy1fy2r6ol8gaj20fs08f3yv.jpg"></p><h1 id="综合练习"><a href="#综合练习" class="headerlink" title="综合练习"></a>综合练习</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br><span class="line"><span class="comment">#将抓取返回的数据列组合成数据框df</span></span><br><span class="line">df = pandas.read_excel(<span class="string">&#x27;news.xlsx&#x27;</span>)</span><br><span class="line"><span class="comment">#输出打印df的行数与列数</span></span><br><span class="line">df.shape</span><br><span class="line">df.head(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><h2 id="整理文章关键词"><a href="#整理文章关键词" class="headerlink" title="整理文章关键词"></a>整理文章关键词</h2><p>空单元格处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#判断df中每一列是否有空的单元格</span></span><br><span class="line">df.isnull().<span class="built_in">any</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">#将具有空单元格的行数据删除</span></span><br><span class="line">df = df.dropna()</span><br><span class="line">df.shape</span><br></pre></td></tr></table></figure><p>关键字处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">&#x27;keyword&#x27;</span>].head(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#对df的keyword列提取关键词并将提取结果覆盖原keyword列 提示：先根据空格切割split再索引</span></span><br><span class="line">s = <span class="string">&#x27;    \n关键字 : \n联合报农发农业部门&#x27;</span></span><br><span class="line">df[<span class="string">&#x27;keyword&#x27;</span>] = df[<span class="string">&#x27;keyword&#x27;</span>].<span class="built_in">map</span>(<span class="keyword">lambda</span> e:e.split(<span class="string">&#x27;:&#x27;</span>)[<span class="number">1</span>].strip())</span><br><span class="line">df.head(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/d71f8b2fgy1fy2rgd6jh1j20a303vgmb.jpg"><br><img src="http://ww1.sinaimg.cn/large/d71f8b2fgy1fy2rguhdh6j20ko05mq3z.jpg"></p><p>正则表达法抽取时间与源数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">&#x27;source&#x27;</span>].head()</span><br><span class="line"></span><br><span class="line"><span class="comment">#法一 对source列根据空格应用切割函数</span></span><br><span class="line">df[<span class="string">&#x27;source&#x27;</span>].<span class="built_in">map</span>(<span class="keyword">lambda</span> e:e.split()[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">df.head(<span class="number">3</span>)</span><br><span class="line"><span class="comment">#法二 根据正则表达式提取str.extract</span></span><br><span class="line">df[<span class="string">&#x27;source&#x27;</span>].<span class="built_in">str</span>.extract(<span class="string">&#x27;(\d+年\d+月\d+)日&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#根据正则表达式提取后的数据&#x27;datetime&#x27;, &#x27;from&#x27;合并入df</span></span><br><span class="line">df[[<span class="string">&#x27;datetime&#x27;</span>,<span class="string">&#x27;from&#x27;</span>]] = df[<span class="string">&#x27;source&#x27;</span>].<span class="built_in">str</span>.extract(<span class="string">&#x27;(\d+年\d+月\d+日) \d+:\d+\n(\w*)&#x27;</span>)</span><br></pre></td></tr></table></figure><p>转换时间格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将pandas整列数据转换成日期格式</span></span><br><span class="line"><span class="comment"># s = &#x27;2018年06月14日&#x27;</span></span><br><span class="line"><span class="comment"># import datetime</span></span><br><span class="line"><span class="comment"># s.strptime(s,&#x27;%Y年%m月%d日&#x27;)</span></span><br><span class="line">df[<span class="string">&#x27;datetime&#x27;</span>] = pandas.to_datetime(df[<span class="string">&#x27;datetime&#x27;</span>],<span class="built_in">format</span>=<span class="string">&#x27;%Y年%m月%d日&#x27;</span>)</span><br><span class="line">df[<span class="string">&#x27;datetime&#x27;</span>].head()</span><br></pre></td></tr></table></figure><h2 id="刪除Source"><a href="#刪除Source" class="headerlink" title="刪除Source"></a>刪除Source<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除source列数据</span></span><br><span class="line"><span class="keyword">del</span> df[<span class="string">&#x27;source&#x27;</span>]</span><br><span class="line"></span><br><span class="line">df.head(<span class="number">3</span>)</span><br></pre></td></tr></table></figure></h2><p><strong>数据</strong></p><ul><li><a href="https://github.com/ivitan/Note/tree/master/Python/Class/%E6%95%B0%E6%8D%AE%E6%B8%85%E7%90%862">链接</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tmux</title>
      <link href="/posts/tmux.html"/>
      <url>/posts/tmux.html</url>
      
        <content type="html"><![CDATA[<p>Tmux 可以复用终端、分屏、托管进程等</p><span id="more"></span><h1 id="Tmux"><a href="#Tmux" class="headerlink" title="Tmux"></a>Tmux</h1><p>alias</p><figure class="highlight bash"><figcaption><span>vimrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> tnew=<span class="string">&#x27;tmux new =s&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h1><table><thead><tr><th align="center">名词</th><th align="center">含义</th><th align="left">解析</th></tr></thead><tbody><tr><td align="center">session</td><td align="center">会话</td><td align="left">一个服务器可以包含多个会话</td></tr><tr><td align="center">window</td><td align="center">窗口</td><td align="left">一个会话可以包含多个窗口</td></tr><tr><td align="center">pane</td><td align="center">面板</td><td align="left">一个窗口可以包含多个面板[强悍的分屏]</td></tr></tbody></table><hr><h1 id="输入命令-tmux-使用工具"><a href="#输入命令-tmux-使用工具" class="headerlink" title="输入命令 tmux 使用工具"></a>输入命令 tmux 使用工具</h1><table><thead><tr><th align="left">命令</th><th align="left">分屏状态</th></tr></thead><tbody><tr><td align="left">Ctrl+b z</td><td align="left">缩放窗格</td></tr><tr><td align="left">Ctrl+b ?</td><td align="left">显示快捷键帮助</td></tr><tr><td align="left">Ctrl+b C-o</td><td align="left">调换窗口位置，类似与vim 里的C-w</td></tr><tr><td align="left">Ctrl+b 空格键</td><td align="left">采用下一个内置布局</td></tr><tr><td align="left">Ctrl+b !</td><td align="left">把当前窗口变为新窗口</td></tr><tr><td align="left">Ctrl+b “</td><td align="left">横向分隔窗口</td></tr><tr><td align="left">Ctrl+b %</td><td align="left">纵向分隔窗口</td></tr><tr><td align="left">Ctrl+b q</td><td align="left">显示分隔窗口的编号</td></tr><tr><td align="left">Ctrl+b o</td><td align="left">跳到下一个分隔窗口</td></tr><tr><td align="left">Ctrl+b 上下键</td><td align="left">上一个及下一个分隔窗口</td></tr><tr><td align="left">Ctrl+b C-方向键</td><td align="left">调整分隔窗口大小</td></tr><tr><td align="left">Ctrl+b c</td><td align="left">创建新窗口</td></tr><tr><td align="left">Ctrl+b 0~9</td><td align="left">选择几号窗口</td></tr><tr><td align="left">Ctrl+b c</td><td align="left">创建新窗口</td></tr><tr><td align="left">Ctrl+b n</td><td align="left">选择下一个窗口</td></tr><tr><td align="left">Ctrl+b l</td><td align="left">切换到最后使用的窗口</td></tr><tr><td align="left">Ctrl+b p</td><td align="left">选择前一个窗口</td></tr><tr><td align="left">Ctrl+b w</td><td align="left">以菜单方式显示及选择窗口</td></tr><tr><td align="left">Ctrl+b t</td><td align="left">显示时钟</td></tr><tr><td align="left">Ctrl+b ;</td><td align="left">切换到最后一个使用的面板</td></tr><tr><td align="left">Ctrl+b x</td><td align="left">关闭面板</td></tr><tr><td align="left">Ctrl+b &amp;</td><td align="left">关闭窗口</td></tr><tr><td align="left">Ctrl+b s</td><td align="left">以菜单方式显示和选择会话</td></tr><tr><td align="left">Ctrl+b d</td><td align="left">退出tumx，并保存当前会话，这时，tmux仍在后台运行，可以通过tmux attach进入 到指定的会话</td></tr></tbody></table><h2 id="窗格间移动"><a href="#窗格间移动" class="headerlink" title="窗格间移动"></a>窗格间移动</h2><table><thead><tr><th align="left">命令</th><th align="left">分屏状态</th></tr></thead><tbody><tr><td align="left">Ctrl+b ←</td><td align="left">选择左边的窗格</td></tr><tr><td align="left">Ctrl+b →</td><td align="left">选择右边的窗格</td></tr><tr><td align="left">Ctrl+b ↑</td><td align="left">选择上边的窗格</td></tr><tr><td align="left">Ctrl+b ↓</td><td align="left">选择下边的窗格</td></tr><tr><td align="left">Ctrl+b {</td><td align="left">来向左交换窗格</td></tr><tr><td align="left">Ctrl+b }</td><td align="left">来向右交换窗格</td></tr><tr><td align="left">Ctrl+b o</td><td align="left">切换到下一个窗格（从左到右，从上到下）</td></tr><tr><td align="left">Ctrl+b ;</td><td align="left">移动到先前活动的窗格</td></tr></tbody></table><h2 id="打开-创建新窗口"><a href="#打开-创建新窗口" class="headerlink" title="打开&#x2F;创建新窗口"></a>打开&#x2F;创建新窗口</h2><table><thead><tr><th align="left">命令</th><th align="left">分屏状态</th></tr></thead><tbody><tr><td align="left">Ctrl+b c</td><td align="left">创建一个新窗口</td></tr><tr><td align="left">Ctrl+b n</td><td align="left">移动到下一个窗口</td></tr><tr><td align="left">Ctrl+b p</td><td align="left">移动到上一个窗口。</td></tr><tr><td align="left">Ctrl+b 0 ~ Ctrl+b 9</td><td align="left">立即移动到特定窗口</td></tr><tr><td align="left">Ctrl+b l</td><td align="left">移动到先前选择的窗口</td></tr><tr><td align="left">Ctrl+b w</td><td align="left">以交互方式选择当前窗口</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据处理</title>
      <link href="/posts/PyData.html"/>
      <url>/posts/PyData.html</url>
      
        <content type="html"><![CDATA[<p>数据处理</p><span id="more"></span><h1 id="数据筛选"><a href="#数据筛选" class="headerlink" title="数据筛选"></a>数据筛选</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.DataFrame([&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;frank&#x27;</span>, <span class="string">&#x27;gender&#x27;</span>:<span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;age&#x27;</span>:<span class="number">29</span>&#125;, </span><br><span class="line">                &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;mary&#x27;</span>,  <span class="string">&#x27;gender&#x27;</span>:<span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;age&#x27;</span>:<span class="number">23</span>&#125;, </span><br><span class="line">                &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;tom&#x27;</span>,   <span class="string">&#x27;gender&#x27;</span>:<span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;age&#x27;</span>:<span class="number">35</span>&#125;, </span><br><span class="line">                &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;ted&#x27;</span>,   <span class="string">&#x27;gender&#x27;</span>:<span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;age&#x27;</span>:<span class="number">33</span>&#125;, </span><br><span class="line">                &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;jean&#x27;</span>,  <span class="string">&#x27;gender&#x27;</span>:<span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;age&#x27;</span>:<span class="number">21</span>&#125;, </span><br><span class="line">                &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;lisa&#x27;</span>,  <span class="string">&#x27;gender&#x27;</span>:<span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;age&#x27;</span>:<span class="number">20</span>&#125;])</span><br></pre></td></tr></table></figure><h2 id="筛选"><a href="#筛选" class="headerlink" title="筛选"></a>筛选</h2><ol><li>查看df前5行<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head(<span class="number">5</span>)</span><br></pre></td></tr></table></figure></li><li>利用ix索引查找行号名为1的行记录<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.ix[<span class="number">1</span>]</span><br></pre></td></tr></table></figure></li><li>利用ix查找行号名为1-3的行记录<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.ix[<span class="number">1</span>:<span class="number">3</span>]</span><br></pre></td></tr></table></figure></li><li>利用列名返回name列数据<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">&#x27;name&#x27;</span>]</span><br></pre></td></tr></table></figure></li><li>返回name与age列数据<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[[<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;age&#x27;</span>]]</span><br></pre></td></tr></table></figure></li><li>返回行名号为1、2的name与age列数据<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.ix[<span class="number">1</span>:<span class="number">2</span>,[<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;age&#x27;</span>]]</span><br></pre></td></tr></table></figure></li><li>返回gender列数据<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">&#x27;gender&#x27;</span>]</span><br><span class="line">df.gender</span><br></pre></td></tr></table></figure></li><li>判断每行的gender列数据是否为M<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.gender==<span class="string">&#x27;M&#x27;</span></span><br></pre></td></tr></table></figure></li><li>返回男性的行数据<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[df.gender==<span class="string">&#x27;M&#x27;</span>]</span><br></pre></td></tr></table></figure></li><li>判断各行记录age列是否大于30<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.age&gt;<span class="number">30</span></span><br></pre></td></tr></table></figure></li><li>返回年龄大于30岁的行数据<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[df.age&gt;<span class="number">30</span>]</span><br></pre></td></tr></table></figure></li><li>返回男性且年龄大于30的行数据 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.ix[(df.gender==<span class="string">&#x27;M&#x27;</span>) &amp; (df.age&gt;<span class="number">30</span>),]</span><br></pre></td></tr></table></figure></li><li>返回男性或年龄大于30的行数据<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.ix[(df.gender==<span class="string">&#x27;M&#x27;</span>) | (df.age&gt;<span class="number">30</span>),]</span><br></pre></td></tr></table></figure></li><li>df增加employee列，其值均为True<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">&#x27;employee&#x27;</span>]=<span class="literal">True</span></span><br><span class="line">```python</span><br><span class="line"><span class="number">14.</span> 利用<span class="keyword">del</span>删除employee列</span><br><span class="line">```python</span><br><span class="line"><span class="keyword">del</span> df[<span class="string">&#x27;employee&#x27;</span>]</span><br></pre></td></tr></table></figure></li><li>再次为df增加employee列<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">&#x27;employee&#x27;</span>]=<span class="literal">True</span></span><br><span class="line">df.head()<span class="comment">#查看df前5行</span></span><br></pre></td></tr></table></figure></li><li>利用df.drop函数删除employee列，按列删除<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = df.drop(<span class="string">&#x27;employee&#x27;</span>,axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></li><li>利用loc查看行号名为5的行数据<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f.loc[<span class="number">5</span>]</span><br></pre></td></tr></table></figure></li><li>为df增加行号名为6的行数据，数据为{‘age’:20, ‘gender’: ‘F’, ‘name’:’qoo’}<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[<span class="number">6</span>]=&#123;<span class="string">&#x27;age&#x27;</span>:<span class="number">20</span>, <span class="string">&#x27;gender&#x27;</span>: <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;qoo&#x27;</span>&#125;</span><br></pre></td></tr></table></figure></li><li>利用df.drop删除索引号为6的记录<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = df.drop(<span class="number">6</span>)</span><br></pre></td></tr></table></figure></li><li>利用df.append增加以上行数据到df中，ignore_index为True<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = df.append(pd.DataFrame([&#123;<span class="string">&#x27;age&#x27;</span>:<span class="number">20</span>, <span class="string">&#x27;gender&#x27;</span>: <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;qoo&#x27;</span>&#125;]), ignore_index=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure></li><li>利用df.drop删除索引号为6的行数据<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.drop(<span class="number">6</span>)</span><br></pre></td></tr></table></figure></li><li>为df增加一列数据userid，值为101-106,提示：利用range函数<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">&#x27;userid&#x27;</span>] = <span class="built_in">range</span>(<span class="number">101</span>,<span class="number">107</span>)</span><br></pre></td></tr></table></figure></li><li>利用set_index设置userid为索引列，代替原来行号名<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = df.set_index(<span class="string">&#x27;userid&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ol><ul><li>oc——通过行（行名字）标签索引行数据 iloc——通过行号（行序号，从0开始）索引行数据 ix——通过行标签或者行号索引行数据（基于loc和iloc 的混合）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#分别利用行名与行序号返回第一条行数据</span></span><br><span class="line">df.loc[<span class="number">101</span>]</span><br><span class="line">df.iloc[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#返回df第2，4，6行的数据</span></span><br><span class="line">df.iloc[[<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>]]</span><br><span class="line">df.loc[[<span class="number">102</span>,<span class="number">104</span>,<span class="number">106</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment">#利用ix返回行名为101,103,105的记录</span></span><br><span class="line">df.ix[[<span class="number">101</span>,<span class="number">103</span>,<span class="number">105</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment">#利用loc返回行名为[101,103,105]的记录</span></span><br><span class="line">df.loc[[<span class="number">101</span>,<span class="number">103</span>,<span class="number">105</span>]]</span><br></pre></td></tr></table></figure><h1 id="检测缺失值"><a href="#检测缺失值" class="headerlink" title="检测缺失值"></a>检测缺失值</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy  <span class="keyword">as</span> np</span><br><span class="line">df = pd.DataFrame([\</span><br><span class="line">            [<span class="string">&#x27;frank&#x27;</span>, <span class="string">&#x27;M&#x27;</span>,    np.nan], \</span><br><span class="line">            [<span class="string">&#x27;mary&#x27;</span> , np.nan, np.nan], \</span><br><span class="line">            [<span class="string">&#x27;tom&#x27;</span>  , <span class="string">&#x27;M&#x27;</span>,    <span class="number">35</span>], \</span><br><span class="line">            [<span class="string">&#x27;ted&#x27;</span>  , <span class="string">&#x27;M&#x27;</span>,    <span class="number">33</span>], \</span><br><span class="line">            [<span class="string">&#x27;jean&#x27;</span> , np.nan, <span class="number">21</span>], \</span><br><span class="line">            [<span class="string">&#x27;lisa&#x27;</span> , <span class="string">&#x27;F&#x27;</span>,    <span class="number">20</span>]])</span><br><span class="line">df.columns = [<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;gender&#x27;</span>, <span class="string">&#x27;age&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a>数据操作</h2><ul><li>判断df的gender列每个单元格是否为空</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.gender.isnull()</span><br></pre></td></tr></table></figure><ul><li>判断df的age列是否存在空的单元格（结果只需知道有没有存在）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.age.isnull().<span class="built_in">any</span>()</span><br></pre></td></tr></table></figure><ul><li>判断df整个数据框是否存在空的单元格（结果只需知道有没有存在）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.isnull().values.<span class="built_in">any</span>()</span><br></pre></td></tr></table></figure><ul><li>求df的age列空的单元格的总数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.age.isnull().<span class="built_in">sum</span>()</span><br></pre></td></tr></table></figure><ul><li>求df所有列空单元格的总数</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.isnull().sum().sum()</span><br></pre></td></tr></table></figure><h1 id="Imputing-Missing-Value"><a href="#Imputing-Missing-Value" class="headerlink" title="Imputing Missing Value"></a>Imputing Missing Value</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy  <span class="keyword">as</span> np</span><br><span class="line">df = pd.DataFrame([\</span><br><span class="line">             [<span class="string">&#x27;frank&#x27;</span>, <span class="string">&#x27;M&#x27;</span>,    np.nan], \</span><br><span class="line">             [np.nan , np.nan, np.nan], \</span><br><span class="line">             [<span class="string">&#x27;tom&#x27;</span>  , <span class="string">&#x27;M&#x27;</span>,    <span class="number">35</span>], \</span><br><span class="line">             [<span class="string">&#x27;ted&#x27;</span>  , <span class="string">&#x27;M&#x27;</span>,    <span class="number">33</span>], \</span><br><span class="line">             [<span class="string">&#x27;jean&#x27;</span> , np.nan, <span class="number">21</span>], \</span><br><span class="line">             [<span class="string">&#x27;lisa&#x27;</span> , <span class="string">&#x27;F&#x27;</span>,    <span class="number">20</span>]])</span><br><span class="line">df.columns = [<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;gender&#x27;</span>, <span class="string">&#x27;age&#x27;</span>]</span><br></pre></td></tr></table></figure><ul><li>删除</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除df具有Nan值的行</span></span><br><span class="line">df.dropna()</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除df所有列均为空值的行记录</span></span><br><span class="line">df.dropna(how=<span class="string">&#x27;all&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除df空值超过2个的行记录</span></span><br><span class="line">df.dropna(thresh=<span class="number">2</span>)</span><br><span class="line"><span class="comment">#删除df的age列</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除df中整列值均为nan的列</span></span><br><span class="line">df.dropna(axis=<span class="number">1</span>,how=<span class="string">&#x27;all&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>增加</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在df中增加一新列employee，且值为空（np.nan）</span></span><br><span class="line"> df[<span class="string">&#x27;employee&#x27;</span>]=np.nan</span><br></pre></td></tr></table></figure><ul><li>填补</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#填补df里任意空单元格的值为0</span></span><br><span class="line">df.fillna(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#将df的age列的均值填入该列值为空的单元格</span></span><br><span class="line">df[<span class="string">&#x27;age&#x27;</span>].fillna(df[<span class="string">&#x27;age&#x27;</span>].mean())</span><br><span class="line"></span><br><span class="line"><span class="comment">#将df的age列的空单元格，按性别填入该类性别的平均年龄值</span></span><br><span class="line">df[<span class="string">&#x27;age&#x27;</span>].fillna(df.groupby(<span class="string">&#x27;gender&#x27;</span>)[<span class="string">&#x27;age&#x27;</span>].transform(<span class="string">&#x27;mean&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用向后填补方面对df的空值单元格进行填补</span></span><br><span class="line">df.fillna(method=<span class="string">&#x27;backfill&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用向前填补对df的空值单元格进行填补</span></span><br><span class="line">df.fillna(method=<span class="string">&#x27;pad&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>数据2</li></ul> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">df2 = pd.DataFrame([[<span class="number">1</span>, <span class="number">870</span>],\</span><br><span class="line">            [<span class="number">2</span>, <span class="number">900</span>],\</span><br><span class="line">            [np.nan, np.nan],\</span><br><span class="line">            [<span class="number">4</span>, <span class="number">950</span>],\</span><br><span class="line">            [<span class="number">5</span>,<span class="number">1080</span>],\</span><br><span class="line">            [<span class="number">6</span>,<span class="number">1200</span>]])</span><br><span class="line">df2.columns = [<span class="string">&#x27;time&#x27;</span>, <span class="string">&#x27;val&#x27;</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用内插法对df2进行填补</span></span><br><span class="line">df2.interpolate()</span><br></pre></td></tr></table></figure><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><ul><li>读取数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br><span class="line">df = pandas.read_csv(<span class="string">&#x27;house_data.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#用del删除列名为&#x27;Unnamed: 0&#x27;的列</span></span><br><span class="line"><span class="keyword">del</span> df[<span class="string">&#x27;Unnamed: 0&#x27;</span>]</span><br><span class="line">df.head(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h2 id="检视"><a href="#检视" class="headerlink" title="检视"></a>检视</h2><ul><li>检视前几行资料</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><ul><li>检视后三行资料</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.tail(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><ul><li>检视DataFrame 信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看df所有的信息(列名，各列非空计数，数据类型)</span></span><br><span class="line">df.info()</span><br></pre></td></tr></table></figure><ul><li>检视字段名称</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看df所有列名</span></span><br><span class="line">df.columns</span><br></pre></td></tr></table></figure><ul><li>检视字段型态</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看df各列数据类型</span></span><br><span class="line">df.dtypes</span><br></pre></td></tr></table></figure><h2 id="舍弃第一栏"><a href="#舍弃第一栏" class="headerlink" title="舍弃第一栏"></a>舍弃第一栏</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将文件读取进来，命名为df，并且在读取文件同时删除第1列</span></span><br><span class="line">df = pandas.read_csv(<span class="string">&#x27;house_data.csv&#x27;</span>,index_col=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h2 id="将”暂无资料”变成缺失值"><a href="#将”暂无资料”变成缺失值" class="headerlink" title="将”暂无资料”变成缺失值"></a>将”暂无资料”变成缺失值</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#筛选df数据框中“物业费”列的值为“暂无资料”的行记录</span></span><br><span class="line">df[df[<span class="string">&#x27;物 业 费&#x27;</span>]==<span class="string">&#x27;暂无资料&#x27;</span>]</span><br><span class="line"><span class="comment"># df.ix[df[&#x27;物 业 费&#x27;]==&#x27;暂无资料&#x27;,]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment">#将“物业费”列的值为“暂无资料”的单元格设置为空</span></span><br><span class="line">df.loc[df[<span class="string">&#x27;物 业 费&#x27;</span>]==<span class="string">&#x27;暂无资料&#x27;</span>,<span class="string">&#x27;物 业 费&#x27;</span>]=np.nan</span><br><span class="line">df.head(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas</span><br><span class="line"><span class="comment">#读取文件同时，将“暂无资料”的单元格设置为空，且去掉第一列</span></span><br><span class="line">df = pandas.read_csv(<span class="string">&#x27;house_data.csv&#x27;</span>,index_col=<span class="number">0</span>,na_values=<span class="string">&#x27;暂无资料&#x27;</span>)</span><br><span class="line">df.head(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h2 id="取得叙述性统计"><a href="#取得叙述性统计" class="headerlink" title="取得叙述性统计"></a>取得叙述性统计</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对df各非字符串列进行描述性统计（计数，均值，标准差，最大最小，4分位等）</span></span><br><span class="line">df.describe()</span><br></pre></td></tr></table></figure><h2 id="侦测缺失值"><a href="#侦测缺失值" class="headerlink" title="侦测缺失值"></a>侦测缺失值</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对事个数据框df每个单元格进行缺失值判断</span></span><br><span class="line">df.isnull()</span><br></pre></td></tr></table></figure><h2 id="缺失值"><a href="#缺失值" class="headerlink" title="缺失值"></a>缺失值</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对数据框各列分别进行判断，返回每列是否有缺失值</span></span><br><span class="line">df.isnull().<span class="built_in">any</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">#对数据框df按列统计各列各有多少个缺失值</span></span><br><span class="line">df.isnull().<span class="built_in">sum</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">#统计数据框各列缺失值与各占各列非空单元格的比例</span></span><br><span class="line">df.count() <span class="comment"># 所有非空单元格</span></span><br><span class="line">df.isnull().<span class="built_in">sum</span>()/df.count()</span><br></pre></td></tr></table></figure><ul><li>删除有缺失值的字段</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#用drop删除df的“参考月供”列数据</span></span><br><span class="line">df = df.drop(<span class="string">&#x27;参考月供&#x27;</span>,axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="筛选字段"><a href="#筛选字段" class="headerlink" title="筛选字段"></a>筛选字段</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对数据框df的“产权性质”列所有出现的值进行计数</span></span><br><span class="line">df[<span class="string">&#x27;产权性质&#x27;</span>].value_counts()</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取产权性质为&#x27;个人产权&#x27;的行记录</span></span><br><span class="line">df[df[<span class="string">&#x27;产权性质&#x27;</span>]==<span class="string">&#x27;个人产权&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看获取产权性质为&#x27;个人产权&#x27;的行记录的前3行</span></span><br><span class="line">df[df[<span class="string">&#x27;产权性质&#x27;</span>] == <span class="string">&#x27;个人产权&#x27;</span>].head(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">df.iloc[<span class="number">5</span>:<span class="number">7</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#筛选&#x27;建筑面积&#x27;大于100且總價大于2000的行记录，查看第1行</span></span><br><span class="line">df[(df[<span class="string">&#x27;建筑面积&#x27;</span>]&gt;<span class="number">100</span>) &amp; (df[<span class="string">&#x27;總價&#x27;</span>]&gt;<span class="number">2000</span>)]</span><br><span class="line"></span><br><span class="line">df.loc[df[<span class="string">&#x27;建筑面积&#x27;</span>] &gt; <span class="number">100</span>].head(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#筛选产权性质为“个人产权”的行记录</span></span><br><span class="line">df[<span class="string">&#x27;产权性质&#x27;</span>]</span><br><span class="line">df.head(<span class="number">3</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="舍弃包含缺失值的字段"><a href="#舍弃包含缺失值的字段" class="headerlink" title="舍弃包含缺失值的字段"></a>舍弃包含缺失值的字段</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#筛选建筑类别为空的行记录，并查看前3行，问，建筑类别列数据是否均为空</span></span><br><span class="line">df[df[<span class="string">&#x27;建筑类别&#x27;</span>].isnull()]</span><br><span class="line"></span><br><span class="line"><span class="comment">#利用dropna删除df的列,并将结果重新赋值给df（整列均为空的列）</span></span><br><span class="line">f.dropna(axis=<span class="number">1</span>,how=<span class="string">&#x27;all&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="补齐缺失值"><a href="#补齐缺失值" class="headerlink" title="补齐缺失值"></a>补齐缺失值</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对物业费为空的单元格，填补为0</span></span><br><span class="line">df[<span class="string">&#x27;物 业 费&#x27;</span>] = df[<span class="string">&#x27;物 业 费&#x27;</span>].fillna(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#计算&#x27;總價&#x27;列为空的单元格个数</span></span><br><span class="line">df[<span class="string">&#x27;總價&#x27;</span>].isnull().<span class="built_in">sum</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">#筛选出‘總價’为空的行记录</span></span><br><span class="line">df[df[<span class="string">&#x27;總價&#x27;</span>].isnull()]</span><br><span class="line"></span><br><span class="line"><span class="comment">#利用‘總價’列与‘建筑面积’列求均价</span></span><br><span class="line">(df[<span class="string">&#x27;總價&#x27;</span>] / df[<span class="string">&#x27;建筑面积&#x27;</span>]).mean()    </span><br><span class="line">df[<span class="string">&#x27;總價&#x27;</span>].isnull().<span class="built_in">sum</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">#对‘總價’列单元格为空的，按上面求的“均价”与建筑面积相乘进行计算</span></span><br><span class="line">df[<span class="string">&#x27;總價&#x27;</span>] = df[<span class="string">&#x27;總價&#x27;</span>].fillna((df[<span class="string">&#x27;總價&#x27;</span>] / df[<span class="string">&#x27;建筑面积&#x27;</span>]).mean()* df[<span class="string">&#x27;建筑面积&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#再次计算‘總價’为空的单元格个数</span></span><br><span class="line">df[<span class="string">&#x27;總價&#x27;</span>].isnull().<span class="built_in">sum</span>()</span><br></pre></td></tr></table></figure><h1 id="将资料写入CSV-中"><a href="#将资料写入CSV-中" class="headerlink" title="将资料写入CSV 中"></a>将资料写入CSV 中</h1> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.to_csv(<span class="string">&#x27;house_final.csv&#x27;</span>, index_label=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pycharm Shortcut</title>
      <link href="/posts/PycharmShortcut.html"/>
      <url>/posts/PycharmShortcut.html</url>
      
        <content type="html"><![CDATA[<p>PyCharm 快捷键</p><span id="more"></span><h1 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h1><table><thead><tr><th align="left">快捷键</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">Ctrl + Q</td><td align="left">快速查看文档</td></tr><tr><td align="left">Ctrl + F1</td><td align="left">显示错误描述或警告信息</td></tr><tr><td align="left">Ctrl + &#x2F;</td><td align="left">行注释</td></tr><tr><td align="left">Ctrl + Alt + L</td><td align="left">代码格式化</td></tr><tr><td align="left">Ctrl + Alt + O</td><td align="left">自动导入</td></tr><tr><td align="left">Ctrl + Alt + I</td><td align="left">自动缩进</td></tr><tr><td align="left">Tab &#x2F; Shift + Tab</td><td align="left">缩进、不缩进当前行</td></tr><tr><td align="left">Ctrl+C&#x2F;Ctrl+Insert</td><td align="left">复制当前行或选定的代码块到剪贴板</td></tr><tr><td align="left">Ctrl + D</td><td align="left">复制选定的区域或行到后面或下一行</td></tr><tr><td align="left">Ctrl + Y</td><td align="left">删除当前行</td></tr><tr><td align="left">Shift + Enter</td><td align="left">下一行另起一行</td></tr><tr><td align="left">Ctrl +Ｊ</td><td align="left">插入模版</td></tr><tr><td align="left">Ctrl + Numpad+&#x2F;-</td><td align="left">展开折叠代码块</td></tr><tr><td align="left">Ctrl + Numpad+</td><td align="left">全部展开</td></tr><tr><td align="left">Ctrl + Numpad-</td><td align="left">全部折叠</td></tr><tr><td align="left">Ctrl + Delete</td><td align="left">删除到字符结束</td></tr><tr><td align="left">Ctrl + Backspace</td><td align="left">删除到字符开始</td></tr><tr><td align="left">Ctrl + Shift + F7</td><td align="left">将当前单词在整个文件中高亮，F3移动到下一个，ESC取消高亮</td></tr><tr><td align="left">Alt+Enter</td><td align="left">import模块</td></tr><tr><td align="left">Alt + up&#x2F;down</td><td align="left">方法上移或下移动</td></tr><tr><td align="left">Alt + Shift + up&#x2F;down</td><td align="left">当前行上移或下移动</td></tr><tr><td align="left">Ctrl + B&#x2F;鼠标左键</td><td align="left">转到方法定义处</td></tr><tr><td align="left">Ctrl + W</td><td align="left">选中增加的代码块</td></tr><tr><td align="left">Shift + F6</td><td align="left">方法或变量重命名</td></tr><tr><td align="left">Ctrl + E</td><td align="left">最近访问的文件</td></tr><tr><td align="left">Esc</td><td align="left">从其他窗口回到编辑窗口</td></tr><tr><td align="left">Shift + Esc</td><td align="left">隐藏当前窗口，焦点到编辑窗口</td></tr><tr><td align="left">F12</td><td align="left">回到先前的工具窗口</td></tr></tbody></table><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><table><thead><tr><th align="left">快捷键</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">Alt + Shift + F10</td><td align="left">运行模式配置</td></tr><tr><td align="left">Alt + Shift + F9</td><td align="left">调试模式配置</td></tr><tr><td align="left">Shift + F10</td><td align="left">运行</td></tr><tr><td align="left">Shift + F9</td><td align="left">调试</td></tr><tr><td align="left">Ctrl + Shift + F10</td><td align="left">运行编辑器配置</td></tr><tr><td align="left">Ctrl + Alt + R</td><td align="left">运行manage.py任务</td></tr></tbody></table><h1 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h1><table><thead><tr><th align="left">快捷键</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">F8</td><td align="left">跳过</td></tr><tr><td align="left">F7</td><td align="left">进入</td></tr><tr><td align="left">Shift + F8</td><td align="left">退出</td></tr><tr><td align="left">Alt + F9</td><td align="left">运行游标</td></tr><tr><td align="left">Alt + F8</td><td align="left">验证表达式</td></tr><tr><td align="left">Ctrl + Alt + F8</td><td align="left">快速验证表达式</td></tr><tr><td align="left">F9</td><td align="left">恢复程序</td></tr><tr><td align="left">Ctrl + F8</td><td align="left">断点开关</td></tr><tr><td align="left">Ctrl + Shift + F8</td><td align="left">查看断点</td></tr></tbody></table><h1 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h1><table><thead><tr><th align="left">快捷键</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">Ctrl + Space</td><td align="left">基本的代码完成（类、方法、属性）</td></tr><tr><td align="left">Ctrl + Alt + Space</td><td align="left">快速导入任意类</td></tr><tr><td align="left">Ctrl + Shift + Enter</td><td align="left">语句完成</td></tr><tr><td align="left">Ctrl + P</td><td align="left">参数信息（在方法中调用参数）</td></tr><tr><td align="left">Ctrl + Q</td><td align="left">快速查看文档</td></tr><tr><td align="left">Shift + F1</td><td align="left">外部文档</td></tr><tr><td align="left">Ctrl + 鼠标</td><td align="left">简介</td></tr><tr><td align="left">Ctrl + F1</td><td align="left">显示错误描述或警告信息</td></tr><tr><td align="left">Alt + Insert</td><td align="left">自动生成代码</td></tr><tr><td align="left">Ctrl + O</td><td align="left">重新方法</td></tr><tr><td align="left">Ctrl + Alt + T</td><td align="left">选中</td></tr><tr><td align="left">Ctrl + &#x2F;</td><td align="left">行注释</td></tr><tr><td align="left">Ctrl + Shift + &#x2F;</td><td align="left">块注释</td></tr><tr><td align="left">Ctrl + W</td><td align="left">选中增加的代码块</td></tr><tr><td align="left">Ctrl + Shift + W</td><td align="left">回到之前状态</td></tr><tr><td align="left">Ctrl + Shift + ]&#x2F;[</td><td align="left">选定代码块结束、开始</td></tr><tr><td align="left">Alt + Enter</td><td align="left">快速修正</td></tr><tr><td align="left">Ctrl + Alt + L</td><td align="left">代码格式化</td></tr><tr><td align="left">Ctrl + Alt + O</td><td align="left">自动导入</td></tr><tr><td align="left">Ctrl + Alt + I</td><td align="left">自动缩进</td></tr><tr><td align="left">Tab &#x2F; Shift + Tab</td><td align="left">缩进、不缩进当前行</td></tr><tr><td align="left">Ctrl+X&#x2F;Shift+Delete</td><td align="left">剪切当前行或选定的代码块到剪贴板</td></tr><tr><td align="left">Ctrl+C&#x2F;Ctrl+Insert</td><td align="left">复制当前行或选定的代码块到剪贴板</td></tr><tr><td align="left">Ctrl+V&#x2F;Shift+Insert</td><td align="left">从剪贴板粘贴</td></tr><tr><td align="left">Ctrl + Shift + V</td><td align="left">从最近的缓冲区粘贴</td></tr><tr><td align="left">Ctrl + D</td><td align="left">复制选定的区域或行到后面或下一行</td></tr><tr><td align="left">Ctrl + Y</td><td align="left">删除当前行</td></tr><tr><td align="left">Ctrl + Shift + J</td><td align="left">添加智能线</td></tr><tr><td align="left">Ctrl + Enter</td><td align="left">智能线切割</td></tr><tr><td align="left">Shift + Enter</td><td align="left">下一行另起一行</td></tr><tr><td align="left">Ctrl + Shift + U</td><td align="left">在选定的区域或代码块间切换</td></tr><tr><td align="left">Ctrl + Delete</td><td align="left">删除到字符结束</td></tr><tr><td align="left">Ctrl + Backspace</td><td align="left">删除到字符开始</td></tr><tr><td align="left">Ctrl + Numpad+&#x2F;-</td><td align="left">展开折叠代码块</td></tr><tr><td align="left">Ctrl + Numpad+</td><td align="left">全部展开</td></tr><tr><td align="left">Ctrl + Numpad-</td><td align="left">全部折叠</td></tr><tr><td align="left">Ctrl + F4</td><td align="left">关闭运行的选项卡</td></tr></tbody></table><h1 id="查找-替换"><a href="#查找-替换" class="headerlink" title="查找&#x2F;替换"></a>查找&#x2F;替换</h1><table><thead><tr><th align="left">快捷键</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">F3</td><td align="left">下一个</td></tr><tr><td align="left">Shift + F3</td><td align="left">前一个</td></tr><tr><td align="left">Ctrl + R</td><td align="left">替换</td></tr><tr><td align="left">Ctrl + Shift + F</td><td align="left">全局查找</td></tr><tr><td align="left">Ctrl + Shift + R</td><td align="left">全局替换</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scrapy</title>
      <link href="/posts/ScrapyCommand.html"/>
      <url>/posts/ScrapyCommand.html</url>
      
        <content type="html"><![CDATA[<p>Scrapy 命令</p><span id="more"></span><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pip install scrapy</span><br></pre></td></tr></table></figure><h1 id="创建-运行"><a href="#创建-运行" class="headerlink" title="创建&#x2F;运行"></a>创建&#x2F;运行</h1><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy startproject projectName</span><br></pre></td></tr></table></figure><h2 id="项目-tree"><a href="#项目-tree" class="headerlink" title="项目 tree"></a>项目 tree</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">├── scrapy.cfg  项目的配置文件</span><br><span class="line">└── zhihu  该项目的python模块。之后您将在此加入代码</span><br><span class="line">    ├── __init__.py</span><br><span class="line">    ├── items.py  项目中的 item 文件.</span><br><span class="line">    ├── middlewares.py</span><br><span class="line">    ├── pipelines.py</span><br><span class="line">    ├── __pycache__</span><br><span class="line">    ├── settings.py  项目的设置文件</span><br><span class="line">    └── spiders  放置 spider 代码的目录</span><br><span class="line">        ├── __init__.py</span><br><span class="line">        └── __pycache__</span><br></pre></td></tr></table></figure><h2 id="创建新的-spider"><a href="#创建新的-spider" class="headerlink" title="创建新的 spider"></a>创建新的 spider</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy genspider mydomain mydomain.com</span><br></pre></td></tr></table></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl mydomain</span><br></pre></td></tr></table></figure><h1 id="项目操作"><a href="#项目操作" class="headerlink" title="项目操作"></a>项目操作</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl zhihu <span class="comment"># 执行项目</span></span><br><span class="line">scrapy check [-l] &lt;zhihu&gt; <span class="comment"># 检查错误</span></span><br><span class="line">scrapy <span class="built_in">list</span> <span class="comment"># 返回 spider 名称</span></span><br><span class="line">scrapy edit &lt;zhihu&gt; <span class="comment"># 在命令行编辑</span></span><br><span class="line">scrapy fetch url <span class="comment"># 下载网页源码</span></span><br><span class="line">scrapy fetch --nolog url <span class="comment"># 无日志</span></span><br><span class="line">scrapy fetch --nolog --no-redirect url <span class="comment"># 重定向</span></span><br><span class="line">scrapy view url <span class="comment"># 下载网页后浏览器打开</span></span><br><span class="line">scrapy shell <span class="comment"># 交互模式</span></span><br><span class="line">scrapy crawl user -o items.json <span class="comment"># 保存数据（sv,xml,json,jsonlines,pickle,marshal）</span></span><br></pre></td></tr></table></figure><h1 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h1><p>网页源码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">&#x27;http://example.com/&#x27;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Example website<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;images&#x27;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;image1.html&#x27;</span>&gt;</span>Name: My image 1 <span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;image1_thumb.jpg&#x27;</span> /&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;image2.html&#x27;</span>&gt;</span>Name: My image 2 <span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;image2_thumb.jpg&#x27;</span> /&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;image3.html&#x27;</span>&gt;</span>Name: My image 3 <span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;image3_thumb.jpg&#x27;</span> /&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;image4.html&#x27;</span>&gt;</span>Name: My image 4 <span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;image4_thumb.jpg&#x27;</span> /&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;image5.html&#x27;</span>&gt;</span>Name: My image 5 <span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;image5_thumb.jpg&#x27;</span> /&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>交互模式下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crapy shell https://doc.scrapy.org/en/latest/_static/selectors-sample1.html</span><br></pre></td></tr></table></figure><ol><li>构建一个选择器来选择title标签内的文本</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># xpath</span></span><br><span class="line">response.selector.xpath(<span class="string">&#x27;//title/text()&#x27;</span>)</span><br><span class="line"><span class="comment"># selector 可省略</span></span><br><span class="line">response.xpath(<span class="string">&#x27;//title/text()&#x27;</span>)</span><br><span class="line">  </span><br><span class="line"><span class="comment"># css</span></span><br><span class="line">response.css(<span class="string">&#x27;title::text&#x27;</span>)</span><br></pre></td></tr></table></figure><p>提取文本数据，必须调用selector .extract() 方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">response.xpath(<span class="string">&#x27;//title/text()&#x27;</span>).extract() <span class="comment"># 所有</span></span><br><span class="line">response.css(<span class="string">&#x27;title::text&#x27;</span>).extract_first() <span class="comment"># 第一个</span></span><br></pre></td></tr></table></figure><ol start="2"><li>获取属性</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">response.xpath(<span class="string">&#x27;//a/Ahref&#x27;</span>).extract()</span><br><span class="line">response.css(<span class="string">&#x27;a::attr(href)&#x27;</span>).extract()</span><br><span class="line"></span><br><span class="line">response.css(<span class="string">&#x27;img&#x27;</span>).xpath(<span class="string">&#x27;@src&#x27;</span>).extract()</span><br><span class="line">response.xpath(<span class="string">&#x27;//div[@id=&quot;images&quot;]/a/text()&#x27;</span>).extract_first()</span><br></pre></td></tr></table></figure><p>default 默认返回值作为参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.xpath(<span class="string">&#x27;//div[@id=&quot;not-exists&quot;]/text()&#x27;</span>).extract_first(default=<span class="string">&#x27;not-found&#x27;</span>)</span><br></pre></td></tr></table></figure><ol start="3"><li>获取文本内容</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">response.xpath(<span class="string">&#x27;//a/text()&#x27;</span>).extract()</span><br><span class="line">response.css(<span class="string">&#x27;a::text()&#x27;</span>).estract()</span><br></pre></td></tr></table></figure><ol start="4"><li>模糊查找(属性名包含)</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查找三星包含image</span></span><br><span class="line">response.xpath(<span class="string">&#x27;//a[contains(@href,&quot;image&quot;)]/@href&#x27;</span>).extract()</span><br><span class="line">response.css(<span class="string">&#x27;a[href* = image]::attr(href)&#x27;</span>).extract()</span><br><span class="line"></span><br><span class="line"><span class="comment"># a 标签里面的image里的src属性</span></span><br><span class="line">response.xpath(<span class="string">&quot;//a[contains(@href,&#x27;image&#x27;)]/img/@src&quot;</span>).extract()</span><br><span class="line">response.css(<span class="string">&#x27;a[href* = image] img::attr(src)&#x27;</span>).extract()</span><br></pre></td></tr></table></figure><h2 id="嵌套选择器"><a href="#嵌套选择器" class="headerlink" title="嵌套选择器"></a>嵌套选择器</h2><ol><li>xpath,css</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">links = response.xpath(<span class="string">&#x27;//a[contains(@href, &quot;image&quot;)]&#x27;</span>)</span><br><span class="line">links.extract()</span><br><span class="line"><span class="keyword">for</span> index, link <span class="keyword">in</span> <span class="built_in">enumerate</span>(links):</span><br><span class="line">  args = (index, link.xpath(<span class="string">&#x27;@href&#x27;</span>).extract(), link.xpath(<span class="string">&#x27;img/@src&#x27;</span>).extract())</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&#x27;Link number %d points to url %s and image %s&#x27;</span> % args</span><br></pre></td></tr></table></figure><h2 id="具有正则表达式的选择器"><a href="#具有正则表达式的选择器" class="headerlink" title="具有正则表达式的选择器"></a>具有正则表达式的选择器</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">response.css(<span class="string">&#x27;a::text&#x27;</span>).re(<span class="string">&#x27;Name\:(.*)&#x27;</span>) <span class="comment"># 返回的是列表</span></span><br><span class="line">response.css(<span class="string">&#x27;a::text&#x27;</span>).re_first(<span class="string">&#x27;Name\:(.*)&#x27;</span>) <span class="comment"># 第一个值</span></span><br><span class="line">response.css(<span class="string">&#x27;a::text&#x27;</span>).re_first(<span class="string">&#x27;Name\:(.*)&#x27;</span>).strip() <span class="comment"># 去空格</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取图像名称</span></span><br><span class="line">response.xpath(<span class="string">&#x27;//a[contains(@href, &quot;image&quot;)]/text()&#x27;</span>).re(<span class="string">r&#x27;Name:\s*(.*)&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取第一个匹配的字符串</span></span><br><span class="line">response.xpath(<span class="string">&#x27;//a[contains(@href, &quot;image&quot;)]/text()&#x27;</span>).re_first(<span class="string">r&#x27;Name:\s*(.*)&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="定义-Item"><a href="#定义-Item" class="headerlink" title="定义 Item"></a>定义 Item</h1><p>Item 是保存爬取到的数据的容器；其使用方法和python字典类似.</p><ul><li>编辑 tutorial 目录中的 items.py 文件:</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DmozItem</span>(scrapy.Item):</span><br><span class="line">    title = scrapy.Field()</span><br><span class="line">    link = scrapy.Field()</span><br><span class="line">    desc = scrapy.Field()</span><br></pre></td></tr></table></figure><hr><p><strong>官方文档</strong></p><ul><li><a href="https://docs.scrapy.org/en/latest/">英文</a></li><li><a href="https://scrapy-chs.readthedocs.io/zh_CN/1.0/index.html">中文</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python SQL</title>
      <link href="/posts/PythonSQL.html"/>
      <url>/posts/PythonSQL.html</url>
      
        <content type="html"><![CDATA[<p>Python SQL 操作</p><span id="more"></span><h1 id="MonngoDB"><a href="#MonngoDB" class="headerlink" title="MonngoDB"></a>MonngoDB</h1><h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 普通连接</span></span><br><span class="line">client = MongoClient(<span class="string">&#x27;localhost&#x27;</span>, <span class="number">27017</span>)</span><br><span class="line"><span class="comment"># client = MongoClient(&#x27;mongodb://localhost:27017/&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 密码连接</span></span><br><span class="line">client = MongoClient(<span class="string">&#x27;mongodb://username:password@localhost:27017/dbname&#x27;</span>)</span><br><span class="line">db = client.mydatabase</span><br><span class="line"><span class="comment"># db = client[&#x27;mydatabase&#x27;]</span></span><br></pre></td></tr></table></figure><h2 id="增删查改"><a href="#增删查改" class="headerlink" title="增删查改"></a>增删查改</h2><ul><li>增(insert)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 增加一条记录</span></span><br><span class="line">person = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;zone&#x27;</span>,<span class="string">&#x27;sex&#x27;</span>:<span class="string">&#x27;boy&#x27;</span>&#125;</span><br><span class="line">person_id = test.insert_one(person).inserted_id</span><br><span class="line"><span class="built_in">print</span>(person_id)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 批量插入</span></span><br><span class="line">persons = [&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;zone&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span>&#125;, &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;zone1&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy1&#x27;</span>&#125;]</span><br><span class="line">result = test.insert_many(persons)</span><br><span class="line"><span class="built_in">print</span>(result.inserted_ids)</span><br></pre></td></tr></table></figure><ul><li>删(delete)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line"></span><br><span class="line">myclient = pymongo.MongoClient(<span class="string">&quot;mongodb://localhost:27017/&quot;</span>)</span><br><span class="line">mydb = myclient[<span class="string">&quot;mydatabase&quot;</span>]</span><br><span class="line">mycol = mydb[<span class="string">&quot;customers&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除地址为“Mountain 21”的文档：</span></span><br><span class="line">myquery = &#123; <span class="string">&quot;address&quot;</span>: <span class="string">&quot;Mountain 21&quot;</span> &#125;</span><br><span class="line">mycol.delete_one(myquery)</span><br><span class="line"></span><br><span class="line"><span class="comment"># delete_many() 删除多个</span></span><br><span class="line">myquery = &#123; <span class="string">&quot;address&quot;</span>: &#123;<span class="string">&quot;$regex&quot;</span>: <span class="string">&quot;^S&quot;</span>&#125; &#125;</span><br><span class="line">x = mycol.delete_many(myquery)</span><br><span class="line"><span class="built_in">print</span>(x.deleted_count, <span class="string">&quot; documents deleted.&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除单条记录</span></span><br><span class="line">result1 = test.delete_one(&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;zone&#x27;</span>&#125;)</span><br><span class="line">pprint.pprint(result1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 批量删除</span></span><br><span class="line">result1 = test.delete_many(&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;zone&#x27;</span>&#125;)</span><br><span class="line">pprint.pprint(result1)</span><br></pre></td></tr></table></figure><ul><li>改(update)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Valley 345”更改为“Canyon 123” </span></span><br><span class="line">myquery = &#123; <span class="string">&quot;address&quot;</span>: <span class="string">&quot;Valley 345&quot;</span> &#125;</span><br><span class="line">newvalues = &#123; <span class="string">&quot;$set&quot;</span>: &#123; <span class="string">&quot;address&quot;</span>: <span class="string">&quot;Canyon 123&quot;</span> &#125; &#125;</span><br><span class="line"></span><br><span class="line">mycol.update_one(myquery, newvalues)</span><br><span class="line"></span><br><span class="line"><span class="comment">#print &quot;customers&quot; after the update:</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> mycol.find():</span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># update_many() 更新多个</span></span><br><span class="line">myquery = &#123; <span class="string">&quot;address&quot;</span>: &#123; <span class="string">&quot;$regex&quot;</span>: <span class="string">&quot;^S&quot;</span> &#125; &#125;</span><br><span class="line">newvalues = &#123; <span class="string">&quot;$set&quot;</span>: &#123; <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Minnie&quot;</span> &#125; &#125;</span><br><span class="line"></span><br><span class="line">x = mycol.update_many(myquery, newvalues)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(x.modified_count, <span class="string">&quot;documents updated.&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新单条记录</span></span><br><span class="line">res = test.update_one(&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;zone&#x27;</span>&#125;, &#123;<span class="string">&#x27;$set&#x27;</span>: &#123;<span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;girl girl&#x27;</span>&#125;&#125;)</span><br><span class="line"><span class="built_in">print</span>(res.matched_count)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新多条记录</span></span><br><span class="line">test.update_many(&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;zone&#x27;</span>&#125;, &#123;<span class="string">&#x27;$set&#x27;</span>: &#123;<span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;girl girl&#x27;</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><ul><li>查(Querry)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line"></span><br><span class="line">myclient = pymongo.MongoClient(<span class="string">&quot;mongodb://localhost:27017/&quot;</span>)</span><br><span class="line">mydb = myclient[<span class="string">&quot;mydatabase&quot;</span>]</span><br><span class="line">mycol = mydb[<span class="string">&quot;customers&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找地址以字母“S”或更高开头的文档：</span></span><br><span class="line">myquery = &#123; <span class="string">&quot;address&quot;</span>: &#123; <span class="string">&quot;$gt&quot;</span>: <span class="string">&quot;S&quot;</span> &#125; &#125;</span><br><span class="line"></span><br><span class="line">mydoc = mycol.find(myquery)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> mydoc:</span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 正则表达式过滤</span></span><br><span class="line">myquery = &#123; <span class="string">&quot;address&quot;</span>: &#123; <span class="string">&quot;$regex&quot;</span>: <span class="string">&quot;^S&quot;</span> &#125; &#125;</span><br><span class="line"></span><br><span class="line">mydoc = mycol.find(myquery)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> mydoc:</span><br><span class="line">    <span class="built_in">print</span>(x)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pprint</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找多条记录</span></span><br><span class="line">pprint.pprint(test.find())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加查找条件</span></span><br><span class="line">pprint.pprint(test.find(&#123;<span class="string">&quot;sex&quot;</span>: <span class="string">&quot;boy&quot;</span>&#125;).sort(<span class="string">&quot;name&quot;</span>))</span><br></pre></td></tr></table></figure><h1 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h1><ul><li>sort()方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">results = collection.find().sort(<span class="string">&#x27;name&#x27;</span>, pymongo.ASCENDING)</span><br><span class="line"><span class="built_in">print</span>([result[<span class="string">&#x27;name&#x27;</span>] <span class="keyword">for</span> result <span class="keyword">in</span> results])</span><br></pre></td></tr></table></figure><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">client = pymongo.MongoClient(<span class="string">&#x27;localhost&#x27;</span>)</span><br><span class="line">b = client[<span class="string">&#x27;MaFengWoView&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_to_mongo</span>(<span class="params">view</span>):</span><br><span class="line"><span class="keyword">if</span> db[<span class="string">&#x27;MaFengWoView&#x27;</span>].insert_one(view):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Saving to MongoDB&#x27;</span>,view)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"> save_to_mongo(view)</span><br></pre></td></tr></table></figure><h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><h2 id="连接创建"><a href="#连接创建" class="headerlink" title="连接创建"></a>连接创建</h2><ul><li>创建一个名为“customers”的表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mysql.connector</span><br><span class="line"></span><br><span class="line">mydb = mysql.connector.connect(</span><br><span class="line">host=<span class="string">&quot;localhost&quot;</span>,</span><br><span class="line">user=<span class="string">&quot;yourusername&quot;</span>,</span><br><span class="line">passwd=<span class="string">&quot;yourpassword&quot;</span>,</span><br><span class="line">database=<span class="string">&quot;mydatabase&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">mycursor = mydb.cursor()</span><br><span class="line"></span><br><span class="line">mycursor.execute(<span class="string">&quot;CREATE TABLE customers (name VARCHAR(255), address VARCHAR(255))&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>检查表是否存在</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mycursor = mydb.cursor()</span><br><span class="line"></span><br><span class="line">mycursor.execute(<span class="string">&quot;SHOW TABLES&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> mycursor:</span><br><span class="line">    <span class="built_in">print</span>(x)</span><br></pre></td></tr></table></figure><ul><li>创建表时创建主键(存在用ALTER TABLE)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mysql.connector</span><br><span class="line"></span><br><span class="line">mydb = mysql.connector.connect(</span><br><span class="line">host=<span class="string">&quot;localhost&quot;</span>,</span><br><span class="line">user=<span class="string">&quot;yourusername&quot;</span>,</span><br><span class="line">passwd=<span class="string">&quot;yourpassword&quot;</span>,</span><br><span class="line">database=<span class="string">&quot;mydatabase&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">mycursor = mydb.cursor()</span><br><span class="line"></span><br><span class="line">mycursor.execute(<span class="string">&quot;CREATE TABLE customers (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255))&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h1><ul><li>单行</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mycursor = mydb.cursor()</span><br><span class="line"></span><br><span class="line">sql = <span class="string">&quot;INSERT INTO customers (name, address) VALUES (%s, %s)&quot;</span></span><br><span class="line">val = (<span class="string">&quot;John&quot;</span>, <span class="string">&quot;Highway 21&quot;</span>)</span><br><span class="line">mycursor.execute(sql, val)</span><br><span class="line"></span><br><span class="line">mydb.commit()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(mycursor.rowcount, <span class="string">&quot;record inserted.&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>多行</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">mycursor = mydb.cursor()</span><br><span class="line"></span><br><span class="line">sql = <span class="string">&quot;INSERT INTO customers (name, address) VALUES (%s, %s)&quot;</span></span><br><span class="line">val = [</span><br><span class="line">    (<span class="string">&#x27;Peter&#x27;</span>, <span class="string">&#x27;Lowstreet 4&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Amy&#x27;</span>, <span class="string">&#x27;Apple st 652&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Hannah&#x27;</span>, <span class="string">&#x27;Mountain 21&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Valley 345&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Sandy&#x27;</span>, <span class="string">&#x27;Ocean blvd 2&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Betty&#x27;</span>, <span class="string">&#x27;Green Grass 1&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Richard&#x27;</span>, <span class="string">&#x27;Sky st 331&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Susan&#x27;</span>, <span class="string">&#x27;One way 98&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Vicky&#x27;</span>, <span class="string">&#x27;Yellow Garden 2&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Ben&#x27;</span>, <span class="string">&#x27;Park Lane 38&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;William&#x27;</span>, <span class="string">&#x27;Central st 954&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Chuck&#x27;</span>, <span class="string">&#x27;Main Road 989&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Viola&#x27;</span>, <span class="string">&#x27;Sideway 1633&#x27;</span>)</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">mycursor.executemany(sql, val)</span><br><span class="line"></span><br><span class="line">mydb.commit()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(mycursor.rowcount, <span class="string">&quot;was inserted.&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="Select"><a href="#Select" class="headerlink" title="Select"></a>Select</h2><ul><li>所有</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mycursor = mydb.cursor()</span><br><span class="line"></span><br><span class="line">mycursor.execute(<span class="string">&quot;SELECT * FROM customers&quot;</span>)</span><br><span class="line"></span><br><span class="line">myresult = mycursor.fetchall()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> myresult:</span><br><span class="line">    <span class="built_in">print</span>(x)</span><br></pre></td></tr></table></figure><ul><li>列</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mycursor = mydb.cursor()</span><br><span class="line"></span><br><span class="line">mycursor.execute(<span class="string">&quot;SELECT name, address FROM customers&quot;</span>)</span><br><span class="line"></span><br><span class="line">myresult = mycursor.fetchall()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> myresult:</span><br><span class="line">     <span class="built_in">print</span>(x)</span><br></pre></td></tr></table></figure><hr><p><strong>参考</strong></p><ul><li><a href="https://api.mongodb.com/python/current/tutorial.html">官方文档</a></li><li><a href="https://www.w3schools.com/python/python_mongodb_drop_collection.asp">W3School</a></li><li><a href="https://juejin.im/post/5be245b251882516bc477aae">zone</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Qunar</title>
      <link href="/posts/Qunar.html"/>
      <url>/posts/Qunar.html</url>
      
        <content type="html"><![CDATA[<p>Selenium Qunar.com</p><!---more--><h1 id="修改版"><a href="#修改版" class="headerlink" title="修改版"></a>修改版</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> selenium.common.exceptions <span class="keyword">import</span> WebDriverException,TimeoutException</span><br><span class="line"><span class="keyword">from</span> pyquery.pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">wait = WebDriverWait(driver,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">client = pymongo.MongoClient(<span class="string">&#x27;localhost&#x27;</span>)</span><br><span class="line">db = client[<span class="string">&#x27;Qunar&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lastPage</span>(<span class="params">url</span>):</span><br><span class="line">    driver.get(url)</span><br><span class="line">    wait.until(EC.presence_of_element_located((By.CSS_SELECTOR,<span class="string">&#x27;.next&#x27;</span>)))</span><br><span class="line">    html = driver.page_source</span><br><span class="line">    soup = BeautifulSoup(html,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    total = <span class="built_in">int</span>(soup.select(<span class="string">&#x27;.pager a&#x27;</span>)[-<span class="number">2</span>].text)</span><br><span class="line">    <span class="keyword">return</span> total</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">search_next</span>(<span class="params">page</span>):</span><br><span class="line">    <span class="built_in">next</span> = driver.find_element_by_css_selector(<span class="string">&#x27;.next&#x27;</span>)</span><br><span class="line">    wait.until(EC.presence_of_element_located((By.CSS_SELECTOR,<span class="string">&#x27;.next&#x27;</span>)))</span><br><span class="line">    <span class="built_in">next</span>.click()</span><br><span class="line">    wait.until(EC.text_to_be_present_in_element((By.CSS_SELECTOR,<span class="string">&#x27;.pager em&#x27;</span>),<span class="built_in">str</span>(page)))</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_url</span>():</span><br><span class="line">    doc = pq(driver.page_source)</span><br><span class="line">    doc = doc.find(<span class="string">&#x27;.sight_item_caption&#x27;</span>)</span><br><span class="line">    li = []</span><br><span class="line">    <span class="keyword">for</span> box <span class="keyword">in</span> doc.items():</span><br><span class="line">        url = <span class="string">&#x27;http://piao.qunar.com&#x27;</span>+<span class="built_in">str</span>(box.find(<span class="string">&#x27;.name&#x27;</span>).attr(<span class="string">&#x27;href&#x27;</span>))</span><br><span class="line">        li.append(url)</span><br><span class="line">    <span class="keyword">return</span> li</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_comment_last</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="comment"># 评论总页数</span></span><br><span class="line">    driver.get(url)</span><br><span class="line">    wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, <span class="string">&#x27;.mp-pager-next.mp-pager-item&#x27;</span>)))</span><br><span class="line">    doc = pq(driver.page_source)</span><br><span class="line">    doc = doc.find(<span class="string">&#x27;#pageContainer&#x27;</span>)</span><br><span class="line">    li = [i.text() <span class="keyword">for</span> i <span class="keyword">in</span> doc.find(<span class="string">&#x27;.mp-pager-item&#x27;</span>).items()]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(li[-<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_comment_next</span>(<span class="params">page</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">next</span> = driver.find_element_by_css_selector(<span class="string">&#x27;.mp-pager-next.mp-pager-item&#x27;</span>)</span><br><span class="line">        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, <span class="string">&#x27;.mp-pager-next.mp-pager-item&#x27;</span>)))</span><br><span class="line">        <span class="built_in">next</span>.click()</span><br><span class="line">        wait.until(EC.text_to_be_present_in_element((By.CSS_SELECTOR,<span class="string">&#x27;.mp-pager em&#x27;</span>),<span class="built_in">str</span>(page)))</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">except</span> TimeoutException:</span><br><span class="line">        get_comment_next(page)</span><br><span class="line">    <span class="keyword">except</span> WebDriverException:</span><br><span class="line">        get_comment_next(page)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_comments</span>():</span><br><span class="line">    doc = pq(driver.page_source)</span><br><span class="line">    doc = doc.find(<span class="string">&#x27;.mp-comments-list&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> doc.find(<span class="string">&#x27;.mp-comments-item&#x27;</span>).items():</span><br><span class="line">        usr = item.find(<span class="string">&#x27;.mp-comments-username&#x27;</span>).text()</span><br><span class="line">        date = item.find(<span class="string">&#x27;.mp-comments-time&#x27;</span>).text()</span><br><span class="line">        comment = item.find(<span class="string">&#x27;.mp-comments-desc&#x27;</span>).text()</span><br><span class="line">        view = &#123;</span><br><span class="line">            <span class="string">&#x27;user&#x27;</span>:usr,</span><br><span class="line">            <span class="string">&#x27;date&#x27;</span>:date,</span><br><span class="line">            <span class="string">&#x27;comment&#x27;</span>:comment</span><br><span class="line">        &#125;</span><br><span class="line">        save_to_mongo(view)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_to_mongo</span>(<span class="params">view</span>):</span><br><span class="line">    <span class="keyword">if</span> db[<span class="string">&#x27;comment&#x27;</span>].insert_one(view):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Saving to MongoDB&#x27;</span>,view)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    url = <span class="string">&#x27;http://piao.qunar.com/ticket/list_%E6%88%90%E9%83%BD.html#from=home_remen&amp;in_track=qunar_djmp_gnmdd_%E6%88%90%E9%83%BD&#x27;</span></span><br><span class="line">    total = lastPage(url)</span><br><span class="line">    all_url = get_url()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,total+<span class="number">1</span>):</span><br><span class="line">        search_next(i)</span><br><span class="line">        all_url.extend(get_url())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> all_url:</span><br><span class="line">        total = get_comment_last(url)</span><br><span class="line">        get_comments()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,total+<span class="number">1</span>):</span><br><span class="line">            get_comment_next(i)</span><br><span class="line">            get_comments()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h1 id="自动获取页数"><a href="#自动获取页数" class="headerlink" title="自动获取页数"></a>自动获取页数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 18-11-20 上午11:53</span></span><br><span class="line"><span class="comment"># @Author  : Vitan</span></span><br><span class="line"><span class="comment"># @File    : Qunar.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> selenium.common.exceptions <span class="keyword">import</span> WebDriverException,NoSuchElementException,TimeoutException</span><br><span class="line"><span class="keyword">from</span> pyquery.pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">wait = WebDriverWait(driver,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">client = pymongo.MongoClient(<span class="string">&#x27;localhost&#x27;</span>)</span><br><span class="line">db = client[<span class="string">&#x27;Qunar&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lastPage</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = <span class="string">&#x27;http://piao.qunar.com/ticket/list_%E6%88%90%E9%83%BD.html?keyword=%E6%88%90%E9%83%BD&amp;page=1#from=home_remen&amp;in_track=qunar_djmp_gnmdd_%E6%88%90%E9%83%BD&#x27;</span></span><br><span class="line">        driver.get(url)</span><br><span class="line">        doc = pq(driver.page_source)</span><br><span class="line">        doc = <span class="built_in">str</span>(doc.find(<span class="string">&#x27;.pager&#x27;</span>))</span><br><span class="line">        pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;&lt;div.*?&lt;a.*?data-pager-pageno=&quot;63&quot;&gt;(\d+)&lt;/a&gt;&#x27;</span>, re.S)</span><br><span class="line">        result = re.<span class="keyword">match</span>(pattern, doc)</span><br><span class="line">        total = <span class="built_in">int</span>(result.group(<span class="number">1</span>))</span><br><span class="line">        <span class="built_in">print</span>(total)</span><br><span class="line">        <span class="keyword">return</span> total</span><br><span class="line">    <span class="keyword">except</span> TimeoutException:</span><br><span class="line">        <span class="keyword">return</span> total</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_url</span>():</span><br><span class="line">    doc = pq(driver.page_source)</span><br><span class="line">    doc = doc.find(<span class="string">&#x27;.sight_item_caption&#x27;</span>)</span><br><span class="line">    li = []</span><br><span class="line">    <span class="keyword">for</span> box <span class="keyword">in</span> doc.items():</span><br><span class="line">        url = <span class="string">&#x27;http://piao.qunar.com&#x27;</span>+<span class="built_in">str</span>(box.find(<span class="string">&#x27;.name&#x27;</span>).attr(<span class="string">&#x27;href&#x27;</span>))</span><br><span class="line">        li.append(url)</span><br><span class="line">    <span class="keyword">return</span> li</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_comment_last</span>():</span><br><span class="line">    <span class="comment"># 评论总页数</span></span><br><span class="line">    doc = pq(driver.page_source)</span><br><span class="line">    doc = doc.find(<span class="string">&#x27;#pageContainer&#x27;</span>)</span><br><span class="line">    li = [i.text() <span class="keyword">for</span> i <span class="keyword">in</span> doc.find(<span class="string">&#x27;.mp-pager-item&#x27;</span>).items()]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(li[-<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_comment_next</span>(<span class="params">i</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">next</span> = driver.find_element_by_css_selector(<span class="string">&#x27;.mp-pager-next.mp-pager-item&#x27;</span>)</span><br><span class="line">        <span class="built_in">next</span>.click()</span><br><span class="line">        wait.until(EC.text_to_be_present_in_element((By.CSS_SELECTOR,<span class="string">&#x27;.pager em&#x27;</span>),<span class="built_in">str</span>(i)))</span><br><span class="line">    <span class="keyword">except</span> TimeoutException:</span><br><span class="line">        get_comment_next(i)</span><br><span class="line">    <span class="keyword">except</span> WebDriverException:</span><br><span class="line">        get_comment_next(i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_page_comments</span>():</span><br><span class="line">    doc = pq(driver.page_source)</span><br><span class="line">    doc = doc.find(<span class="string">&#x27;.mp-comments-list&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> doc.find(<span class="string">&#x27;.mp-comments-item&#x27;</span>).items():</span><br><span class="line">        usr = item.find(<span class="string">&#x27;.mp-comments-username&#x27;</span>).text()</span><br><span class="line">        date = item.find(<span class="string">&#x27;.mp-comments-time&#x27;</span>).text()</span><br><span class="line">        comment = item.find(<span class="string">&#x27;.mp-comments-desc&#x27;</span>).text()</span><br><span class="line">        view = &#123;</span><br><span class="line">            <span class="string">&#x27;user&#x27;</span>:usr,</span><br><span class="line">            <span class="string">&#x27;date&#x27;</span>:date,</span><br><span class="line">            <span class="string">&#x27;comment&#x27;</span>:comment</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">print</span>(view)</span><br><span class="line">        save_to_mongo(view)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_all_url</span>():</span><br><span class="line">    <span class="comment"># 所有景点 Url</span></span><br><span class="line">    driver.execute_script(<span class="string">&#x27;window.open()&#x27;</span>)  <span class="comment"># 打开新的选项卡</span></span><br><span class="line">    driver.switch_to.window(driver.window_handles[<span class="number">1</span>])</span><br><span class="line">    total = lastPage()</span><br><span class="line">    driver.switch_to.window(driver.window_handles[<span class="number">0</span>])</span><br><span class="line">    all_url = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, total - <span class="number">60</span>):</span><br><span class="line">        url = <span class="string">&#x27;http://piao.qunar.com/ticket/list_%E6%88%90%E9%83%BD.html?keyword=%E6%88%90%E9%83%BD&amp;page=&#x27;</span> + <span class="built_in">str</span>(</span><br><span class="line">            i) + <span class="string">&#x27;#from=home_remen&amp;in_track=qunar_djmp_gnmdd_%E6%88%90%E9%83%BD&#x27;</span></span><br><span class="line">        driver.get(url)</span><br><span class="line">        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, <span class="string">&#x27;.next&#x27;</span>)))</span><br><span class="line">        all_url.extend(get_url())</span><br><span class="line">        <span class="built_in">print</span>(all_url)</span><br><span class="line">    <span class="keyword">return</span> all_url</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_allcomment_url</span>():</span><br><span class="line">    all_url = get_all_url()</span><br><span class="line">    <span class="comment"># 景点所有评论</span></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> all_url:</span><br><span class="line">        driver.get(url)</span><br><span class="line">        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, <span class="string">&#x27;.mp-pager-next.mp-pager-item&#x27;</span>)))</span><br><span class="line">        total = get_comment_last()  <span class="comment"># 评论页数</span></span><br><span class="line">        get_page_comments()</span><br><span class="line">        <span class="built_in">print</span>(total)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, total + <span class="number">1</span>):</span><br><span class="line">            get_comment_next(i)</span><br><span class="line">            get_page_comments()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_to_mongo</span>(<span class="params">view</span>):</span><br><span class="line">    <span class="keyword">if</span> db[<span class="string">&#x27;comment&#x27;</span>].insert_one(view):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Saving to MongoDB&#x27;</span>,view)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    get_allcomment_url()</span><br><span class="line">    get_page_comments()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h1 id="手动设置页数"><a href="#手动设置页数" class="headerlink" title="手动设置页数"></a>手动设置页数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 18-11-20 上午11:53</span></span><br><span class="line"><span class="comment"># @Author  : Vitan</span></span><br><span class="line"><span class="comment"># @File    : Qunar.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> selenium.common.exceptions <span class="keyword">import</span> WebDriverException,NoSuchElementException,TimeoutException</span><br><span class="line"><span class="keyword">from</span> pyquery.pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">wait = WebDriverWait(driver,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">client = pymongo.MongoClient(<span class="string">&#x27;localhost&#x27;</span>)</span><br><span class="line">db = client[<span class="string">&#x27;Qunar&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_url</span>():</span><br><span class="line">    doc = pq(driver.page_source)</span><br><span class="line">    doc = doc.find(<span class="string">&#x27;.sight_item_caption&#x27;</span>)</span><br><span class="line">    li = []</span><br><span class="line">    <span class="keyword">for</span> box <span class="keyword">in</span> doc.items():</span><br><span class="line">        url = <span class="string">&#x27;http://piao.qunar.com&#x27;</span>+<span class="built_in">str</span>(box.find(<span class="string">&#x27;.name&#x27;</span>).attr(<span class="string">&#x27;href&#x27;</span>))</span><br><span class="line">        li.append(url)</span><br><span class="line">    <span class="keyword">return</span> li</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_comment_last</span>():</span><br><span class="line">    <span class="comment"># 评论总页数</span></span><br><span class="line">    doc = pq(driver.page_source)</span><br><span class="line">    doc = doc.find(<span class="string">&#x27;#pageContainer&#x27;</span>)</span><br><span class="line">    li = [i.text() <span class="keyword">for</span> i <span class="keyword">in</span> doc.find(<span class="string">&#x27;.mp-pager-item&#x27;</span>).items()]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(li[-<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_comment_next</span>(<span class="params">i</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">next</span> = driver.find_element_by_css_selector(<span class="string">&#x27;.mp-pager-next.mp-pager-item&#x27;</span>)</span><br><span class="line">        <span class="built_in">next</span>.click()</span><br><span class="line">        wait.until(EC.text_to_be_present_in_element((By.CSS_SELECTOR,<span class="string">&#x27;.pager em&#x27;</span>),<span class="built_in">str</span>(i)))</span><br><span class="line">    <span class="keyword">except</span> TimeoutException:</span><br><span class="line">        get_comment_next(i)</span><br><span class="line">    <span class="keyword">except</span> WebDriverException:</span><br><span class="line">        get_comment_next(i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_page_comments</span>():</span><br><span class="line">    doc = pq(driver.page_source)</span><br><span class="line">    doc = doc.find(<span class="string">&#x27;.mp-comments-list&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> doc.find(<span class="string">&#x27;.mp-comments-item&#x27;</span>).items():</span><br><span class="line">        usr = item.find(<span class="string">&#x27;.mp-comments-username&#x27;</span>).text()</span><br><span class="line">        date = item.find(<span class="string">&#x27;.mp-comments-time&#x27;</span>).text()</span><br><span class="line">        comment = item.find(<span class="string">&#x27;.mp-comments-desc&#x27;</span>).text()</span><br><span class="line">        view = &#123;</span><br><span class="line">            <span class="string">&#x27;user&#x27;</span>:usr,</span><br><span class="line">            <span class="string">&#x27;date&#x27;</span>:date,</span><br><span class="line">            <span class="string">&#x27;comment&#x27;</span>:comment</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">print</span>(view)</span><br><span class="line">        save_to_mongo(view)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_to_mongo</span>(<span class="params">view</span>):</span><br><span class="line">    <span class="keyword">if</span> db[<span class="string">&#x27;comment&#x27;</span>].insert_one(view):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Saving to MongoDB&#x27;</span>,view)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 所有景点 Url</span></span><br><span class="line">    all_url = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">2</span>):</span><br><span class="line">        url = <span class="string">&#x27;http://piao.qunar.com/ticket/list_%E6%88%90%E9%83%BD.html?keyword=%E6%88%90%E9%83%BD&amp;page=&#x27;</span>+ <span class="built_in">str</span>(i) +<span class="string">&#x27;#from=home_remen&amp;in_track=qunar_djmp_gnmdd_%E6%88%90%E9%83%BD&#x27;</span></span><br><span class="line">        driver.get(url)</span><br><span class="line">        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR,<span class="string">&#x27;.next&#x27;</span>)))</span><br><span class="line">        all_url.extend(get_url())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 景点所有评论Url</span></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> all_url:</span><br><span class="line">        driver.get(url)</span><br><span class="line">        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR,<span class="string">&#x27;.mp-pager-next.mp-pager-item&#x27;</span>)))</span><br><span class="line">        total = get_comment_last() <span class="comment"># 评论页数</span></span><br><span class="line">        <span class="built_in">print</span>(total)</span><br><span class="line">        get_page_comments()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,total+<span class="number">1</span>):</span><br><span class="line">            get_comment_next(i)</span><br><span class="line">            get_page_comments()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读写 Excel 文件</title>
      <link href="/posts/PythonExcel.html"/>
      <url>/posts/PythonExcel.html</url>
      
        <content type="html"><![CDATA[<p>读写 Excel</p><span id="more"></span><h1 id="读-Excel"><a href="#读-Excel" class="headerlink" title="读 Excel"></a>读 Excel</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_file</span>(<span class="params"><span class="string">&#x27;file.xlsx&#x27;</span></span>):</span><br><span class="line">data = xlrd.open_workbook(url)</span><br><span class="line">table = data.sheets()[<span class="number">0</span>] <span class="comment"># 打开第一张表</span></span><br><span class="line">nrows = table.nrows <span class="comment"># 获取表的行数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(nrows): <span class="comment"># 循环逐行打印</span></span><br><span class="line">   <span class="built_in">print</span>(table.row_values(i)[<span class="number">1</span>:])</span><br></pre></td></tr></table></figure><h1 id="写-Excel"><a href="#写-Excel" class="headerlink" title="写 Excel"></a>写 Excel</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line">data = xlrd.open_workbook(<span class="string">&#x27;excelFile.xls&#x27;</span>)</span><br><span class="line">excel = copy(data)                                       </span><br><span class="line"></span><br><span class="line"><span class="comment">#使用wlrd的方法获取已有的的行数</span></span><br><span class="line">rows = data.sheet()[num].nrows                  </span><br><span class="line"><span class="comment">#获得要操作的sheet</span></span><br><span class="line">table = excel.get_sheet(num)                      </span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> n:</span><br><span class="line">  <span class="comment">#xlwt的写方法，参数为行，列，值，行</span></span><br><span class="line">  table.write(rows,num1,value)  </span><br><span class="line">  num1 = num1+<span class="number">1</span> </span><br><span class="line"></span><br><span class="line">excel.save(name)      </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pandas</title>
      <link href="/posts/PythonPandas.html"/>
      <url>/posts/PythonPandas.html</url>
      
        <content type="html"><![CDATA[<p>Python  Data.Frame</p><span id="more"></span><h1 id="panadas"><a href="#panadas" class="headerlink" title="panadas"></a>panadas</h1><h2 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">data = pandas.read_excel(<span class="string">&#x27;file.xlsx&#x27;</span>)</span><br><span class="line">data = pandas.read_csv(<span class="string">&#x27;file.csv&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>查看前10行</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(data.head[<span class="number">10</span>])</span><br></pre></td></tr></table></figure><ul><li>数据集中有多少个列(columns)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(data.shape[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><ul><li>打印出全部的列名称</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(data.columns)</span><br></pre></td></tr></table></figure><ul><li>数据集的索引</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(data.index)</span><br></pre></td></tr></table></figure><ul><li>panadas.DataFrame 构造函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandas.DataFrame( data, index, columns, dtype, copy)</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">data</td><td align="left">数据采取各种形式，如ndarray：series，map，lists，dict， ，constant和另一个DataFrame</td></tr><tr><td align="left">index</td><td align="left">对于行标签，要用于结果帧的索引是可选缺省值np.arrange(n)，如果没有传递索引值</td></tr><tr><td align="left">columns</td><td align="left">对于列标签，可选的默认语法是 - np.arange(n)。这只有在没有索引传递的情况下才是这样</td></tr><tr><td align="left">dtype</td><td align="left">每列的数据类型</td></tr><tr><td align="left">copy</td><td align="left">如果默认值为False，则此命令（或任何它）用于复制数据</td></tr></tbody></table><h1 id="创建数据帧"><a href="#创建数据帧" class="headerlink" title="创建数据帧"></a>创建数据帧</h1><h2 id="列表创建数据框"><a href="#列表创建数据框" class="headerlink" title="列表创建数据框"></a>列表创建数据框</h2><ul><li>空数据帧</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># 空数据帧 </span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.DataFrame()</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure><ul><li>有数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">data = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">df = pd.DataFrame(data)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure><ul><li>有表头</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">data = [[<span class="string">&#x27;Alex&#x27;</span>,<span class="number">10</span>],[<span class="string">&#x27;Bob&#x27;</span>,<span class="number">12</span>],[<span class="string">&#x27;Clarke&#x27;</span>,<span class="number">13</span>]]</span><br><span class="line">df = pd.DataFrame(data,columns=[<span class="string">&#x27;Name&#x27;</span>,<span class="string">&#x27;Age&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure><ul><li>df &#x3D; pd.DataFrame(data,columns&#x3D;[‘Name’,’Age’],dtype&#x3D;float)(设置数据类型)</li></ul><h2 id="从ndarrays-列表的字典来创建数据帧"><a href="#从ndarrays-列表的字典来创建数据帧" class="headerlink" title="从ndarrays &#x2F;列表的字典来创建数据帧"></a>从ndarrays &#x2F;列表的字典来创建数据帧</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">data = &#123;<span class="string">&#x27;Name&#x27;</span>:[<span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="string">&#x27;Steve&#x27;</span>, <span class="string">&#x27;Ricky&#x27;</span>],<span class="string">&#x27;Age&#x27;</span>:[<span class="number">28</span>,<span class="number">34</span>,<span class="number">29</span>,<span class="number">42</span>]&#125;</span><br><span class="line">df = pd.DataFrame(data)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure><ul><li>所有的ndarrays必须具有相同的长度。如果传递了索引（index），则索引的长度应等于数组的长度。如果没有传递索引，则默认情况下，索引将为range(n)，其中n为数组长度。</li></ul><h2 id="数组创建一个索引的数据帧（DataFrame）"><a href="#数组创建一个索引的数据帧（DataFrame）" class="headerlink" title="数组创建一个索引的数据帧（DataFrame）"></a>数组创建一个索引的数据帧（DataFrame）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">data = &#123;<span class="string">&#x27;Name&#x27;</span>:[<span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="string">&#x27;Steve&#x27;</span>, <span class="string">&#x27;Ricky&#x27;</span>],<span class="string">&#x27;Age&#x27;</span>:[<span class="number">28</span>,<span class="number">34</span>,<span class="number">29</span>,<span class="number">42</span>]&#125;</span><br><span class="line">df = pd.DataFrame(data, index=[<span class="string">&#x27;rank1&#x27;</span>,<span class="string">&#x27;rank2&#x27;</span>,<span class="string">&#x27;rank3&#x27;</span>,<span class="string">&#x27;rank4&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure><h2 id="字典列表来创建数据帧"><a href="#字典列表来创建数据帧" class="headerlink" title="字典列表来创建数据帧"></a>字典列表来创建数据帧</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">data = [&#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span>&#125;,&#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">10</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">20</span>&#125;]</span><br><span class="line">df = pd.DataFrame(data)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure><ul><li>字典，行索引和列索引列表创建数据帧</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">data = [&#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span>&#125;,&#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">10</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">20</span>&#125;]</span><br><span class="line"></span><br><span class="line"><span class="comment">#With two column indices, values same as dictionary keys</span></span><br><span class="line">df1 = pd.DataFrame(data, index=[<span class="string">&#x27;first&#x27;</span>, <span class="string">&#x27;second&#x27;</span>], columns=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#With two column indices with one index with other name</span></span><br><span class="line">df2 = pd.DataFrame(data, index=[<span class="string">&#x27;first&#x27;</span>, <span class="string">&#x27;second&#x27;</span>], columns=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b1&#x27;</span>])</span><br></pre></td></tr></table></figure><h1 id="从系列的字典来创建"><a href="#从系列的字典来创建" class="headerlink" title="从系列的字典来创建"></a>从系列的字典来创建</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">d = &#123;<span class="string">&#x27;one&#x27;</span> : pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]),</span><br><span class="line">        <span class="string">&#x27;two&#x27;</span> : pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>])&#125;</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(d)</span><br></pre></td></tr></table></figure><ul><li>字典的系列可以传递以形成一个DataFrame。 所得到的索引是通过的所有系列索引的并集。</li></ul><h1 id="列操作"><a href="#列操作" class="headerlink" title="列操作"></a>列操作</h1><h2 id="列选择"><a href="#列选择" class="headerlink" title="列选择"></a>列选择</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">d = &#123;<span class="string">&#x27;one&#x27;</span> : pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]),</span><br><span class="line">        <span class="string">&#x27;two&#x27;</span> : pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>])&#125;</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(d)</span><br><span class="line"><span class="built_in">print</span>(df [<span class="string">&#x27;one&#x27;</span>])</span><br></pre></td></tr></table></figure><h2 id="列添加"><a href="#列添加" class="headerlink" title="列添加"></a>列添加</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">d = &#123;<span class="string">&#x27;one&#x27;</span> : pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]),</span><br><span class="line">        <span class="string">&#x27;two&#x27;</span> : pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>])&#125;</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(d)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Adding a new column to an existing DataFrame object with column label by passing new series</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;Adding a new column by passing as Series:&quot;</span>)</span><br><span class="line">df[<span class="string">&#x27;three&#x27;</span>]=pd.Series([<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>],index=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;Adding a new column using the existing columns in DataFrame:&quot;</span>)</span><br><span class="line">df[<span class="string">&#x27;four&#x27;</span>]=df[<span class="string">&#x27;one&#x27;</span>]+df[<span class="string">&#x27;three&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure><h2 id="列删除"><a href="#列删除" class="headerlink" title="列删除"></a>列删除</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Using the previous DataFrame, we will delete a column</span></span><br><span class="line"><span class="comment"># using del function</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">d = &#123;<span class="string">&#x27;one&#x27;</span> : pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]), </span><br><span class="line">  <span class="string">&#x27;two&#x27;</span> : pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]), </span><br><span class="line">  <span class="string">&#x27;three&#x27;</span> : pd.Series([<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>], index=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>])&#125;</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(d)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;Our dataframe is:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># using del function</span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;Deleting the first column using DEL function:&quot;</span>)</span><br><span class="line"><span class="keyword">del</span> df[<span class="string">&#x27;one&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># using pop function</span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;Deleting another column using POP function:&quot;</span>)</span><br><span class="line">df.pop(<span class="string">&#x27;two&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure><h1 id="行操作"><a href="#行操作" class="headerlink" title="行操作"></a>行操作</h1><h2 id="行选择"><a href="#行选择" class="headerlink" title="行选择"></a>行选择</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">d = &#123;<span class="string">&#x27;one&#x27;</span> : pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]), </span><br><span class="line">    <span class="string">&#x27;two&#x27;</span> : pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>])&#125;</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(d)</span><br><span class="line"><span class="built_in">print</span>(df.loc[<span class="string">&#x27;b&#x27;</span>])</span><br></pre></td></tr></table></figure><h2 id="按整数位置选择"><a href="#按整数位置选择" class="headerlink" title="按整数位置选择"></a>按整数位置选择</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">d = &#123;<span class="string">&#x27;one&#x27;</span> : pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]),</span><br><span class="line">    <span class="string">&#x27;two&#x27;</span> : pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>])&#125;</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(d)</span><br><span class="line"><span class="built_in">print</span>(df.iloc[<span class="number">2</span>])</span><br></pre></td></tr></table></figure><h2 id="行切片"><a href="#行切片" class="headerlink" title="行切片"></a>行切片</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mport pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">d = &#123;<span class="string">&#x27;one&#x27;</span> : pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]), </span><br><span class="line">    <span class="string">&#x27;two&#x27;</span> : pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>])&#125;</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(d)</span><br><span class="line"><span class="built_in">print</span>(df[<span class="number">2</span>:<span class="number">4</span>])</span><br></pre></td></tr></table></figure><h2 id="附加行"><a href="#附加行" class="headerlink" title="附加行"></a>附加行</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]], columns = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line">df2 = pd.DataFrame([[<span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>]], columns = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line"></span><br><span class="line">df = df.append(df2)</span><br></pre></td></tr></table></figure><h2 id="删除行"><a href="#删除行" class="headerlink" title="删除行"></a>删除行</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]], columns = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line">df2 = pd.DataFrame([[<span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>]], columns = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line"></span><br><span class="line">df = df.append(df2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Drop rows with label 0</span></span><br><span class="line">df = df.drop(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><hr><p><strong>Via</strong></p><ul><li><a href="https://www.yiibai.com/pandas/python_pandas_dataframe.html">Pandas数据帧（DataFrame）</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS 选择器</title>
      <link href="/posts/CSSselector.html"/>
      <url>/posts/CSSselector.html</url>
      
        <content type="html"><![CDATA[<p>Css 选择器与权重</p><span id="more"></span><h1 id="引入-CSS"><a href="#引入-CSS" class="headerlink" title="引入 CSS"></a>引入 CSS</h1><h2 id="行间引入"><a href="#行间引入" class="headerlink" title="行间引入"></a>行间引入</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> style = &quot;<span class="attribute">width</span>:<span class="number">100px</span>;<span class="attribute">height</span>:<span class="number">100px</span>;&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="页面级引入-内嵌式"><a href="#页面级引入-内嵌式" class="headerlink" title="页面级引入(内嵌式)"></a>页面级引入(内嵌式)</h2><ul><li><code>&lt;head&gt;</code> 和 <code>&lt;/head&gt;</code> 之间</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;css/<span class="selector-tag">text</span>&quot;&gt;</span><br><span class="line"><span class="selector-class">.text</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">padding-left</span>: o;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125; </span><br><span class="line">&lt;/style&gt; </span><br></pre></td></tr></table></figure><h2 id="导入式"><a href="#导入式" class="headerlink" title="导入式"></a>导入式</h2><ol><li>在style元素中导入CSS文件</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;<span class="selector-tag">text</span>/css&quot;&gt;    </span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;CSS样式文件的绝对地址&quot;</span>;</span><br><span class="line"><span class="keyword">@import</span> url(<span class="string">&quot;样式文件的绝对地址&quot;</span>);</span><br><span class="line">&lt;/style&gt;        </span><br></pre></td></tr></table></figure><ol start="2"><li>在CSS文件中再导入CSS文件</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*某个CSS文件*/</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;另一个CSS文件的地址&quot;</span>;</span><br><span class="line"><span class="selector-class">.test</span>&#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">   <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">   <span class="attribute">background-color</span>: red; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="链接式"><a href="#链接式" class="headerlink" title="链接式"></a>链接式</h2><ul><li>网页的 <code>&lt;head&gt;&lt;/head&gt;</code> 标签对中使用<code>&lt;link&gt;</code> 标记来引入外部样式表文件</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link type=&quot;<span class="selector-tag">text</span>/css&quot; rel=&quot;stylesheet&quot; href=&quot;CSS样式文件的地址&quot;&gt;</span><br></pre></td></tr></table></figure><h1 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h1><h2 id="基础选择器"><a href="#基础选择器" class="headerlink" title="基础选择器"></a>基础选择器</h2><table><thead><tr><th align="left">选择器</th><th align="left">含义</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">*</td><td align="left">通用选择器，匹配任何元素</td><td align="left">*{font-size:16px;}</td></tr><tr><td align="left">E</td><td align="left">标签选择器，匹配所有使用E标签的元素</td><td align="left">p{font-family:arial;}</td></tr><tr><td align="left">.error</td><td align="left">class选择器，匹配所有class属性中包含error的元素</td><td align="left">.error{font-weight:bold;}</td></tr><tr><td align="left">#correct</td><td align="left">id选择器，匹配所有id属性值为correct的元素</td><td align="left">#correct{font-style:italic;}</td></tr></tbody></table><ul><li>id(唯一)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;only&gt;</span></span></span><br><span class="line"><span class="string"><span class="tag">123</span></span></span><br><span class="line"><span class="string"><span class="tag">&lt;/div&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#only</span>&#123;</span><br><span class="line">   <span class="attribute">background-color</span>: red;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li>class</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;only&gt;</span></span></span><br><span class="line"><span class="string"><span class="tag">123</span></span></span><br><span class="line"><span class="string"><span class="tag">&lt;/div&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.only</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>可以有多个 class</li></ul><h2 id="标准选择器"><a href="#标准选择器" class="headerlink" title="标准选择器"></a>标准选择器</h2><ul><li>会选择所有相同元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>123</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>123</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">span</span>&#123;</span><br><span class="line">   <span class="attribute">background-color</span>: green;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>通配符选择器 </p><ul><li>会匹配所有的元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="组合选择器"><a href="#组合选择器" class="headerlink" title="组合选择器"></a>组合选择器</h2><table><thead><tr><th align="left">选择器</th><th align="left">含义</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">E,F</td><td align="left">多元素选择器，同时匹配所有E元素或F元素</td><td align="left">div,p{background-attachment:fixed;}</td></tr><tr><td align="left">E F</td><td align="left">后代元素选择器，匹配所有属于E元素的后代F元素</td><td align="left">div a{background-color:blue;}</td></tr><tr><td align="left">E &gt; F</td><td align="left">子元素选择器，匹配所有E元素的子元素F</td><td align="left">div&gt;p{background-image:url(xxx.gif)}</td></tr><tr><td align="left">E+F</td><td align="left">毗邻元素选择器，匹配所有紧随E元素之后的同级元素F</td><td align="left">p+div{background-position:x% y%}</td></tr></tbody></table><ul><li>父子选择器&#x2F;派生选择器</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">span</span>&#123;</span><br><span class="line">   <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>直接子元素选择器</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">em</span>&gt;</span>134<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">em</span>&gt;</span>323<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &gt; <span class="selector-tag">em</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>并列选择器</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span> =<span class="string">&quot;demo&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span> = <span class="string">&quot;demo1&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-class">.demo</span>&#123;</span><br><span class="line">   <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>分组选择器</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>1<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>2<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">spam</span>&gt;</span>3<span class="tag">&lt;/<span class="name">spam</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">em</span>,</span><br><span class="line"><span class="selector-tag">strong</span>,</span><br><span class="line"><span class="selector-tag">span</span>&#123;</span><br><span class="line">   <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h2><table><thead><tr><th align="left">选择器</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">E:first-child</td><td align="left">匹配父元素E下的第一个子元素</td></tr><tr><td align="left">E:link</td><td align="left">匹配所有未被点击的链接</td></tr><tr><td align="left">E:visited</td><td align="left">匹配所有已被点击的链接</td></tr><tr><td align="left">E:active</td><td align="left">匹配鼠标已经按下、还没有释放的E元素</td></tr><tr><td align="left">E:hover</td><td align="left">匹配鼠标悬停其上的E元素</td></tr><tr><td align="left">E:focus</td><td align="left">匹配获得当前焦点的E元素</td></tr><tr><td align="left">E:lang(c)</td><td align="left">匹配lang属性等于c的E元素</td></tr></tbody></table><h2 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h2><table><thead><tr><th align="left">选择器</th><th align="left">含义</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">E[att]</td><td align="left">匹配所有具有att属性的E元素</td><td align="left">p[style]{background-repeat:repeat-y;}</td></tr><tr><td align="left">E[att&#x3D;val]</td><td align="left">匹配所有att属性等于“val”的E元素</td><td align="left">div[class&#x3D;”c1”]</td></tr><tr><td align="left">E[att~&#x3D;val]</td><td align="left">匹配所有att属性具有多个空格分隔的值、其中一个值等于“val”的E元素</td><td align="left">div[class~&#x3D;c2]</td></tr><tr><td align="left">E[att｜&#x3D;val]</td><td align="left">匹配所有att属性具有多个连字号分隔（hyphen-separated）的值、其中一个值以“val”开头的E元素</td><td align="left">p[lang｜&#x3D;en]</td></tr></tbody></table><h2 id="伪元素"><a href="#伪元素" class="headerlink" title="伪元素"></a>伪元素</h2><table><thead><tr><th align="left">选择器</th><th align="left">含义</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">E:first-line</td><td align="left">匹配E元素的第一行</td><td align="left">p:first-line{color:red;}</td></tr><tr><td align="left">E:first-letter</td><td align="left">匹配E元素的第一个字母</td><td align="left">.c1:first-letter{color:blue;}</td></tr><tr><td align="left">E:before</td><td align="left">在E元素之前插入生成的内容</td><td align="left">.ctn before{content:””;display:block;;height:40px;width:40px;}</td></tr><tr><td align="left">E:after</td><td align="left">在E元素之后插入生成的内容</td><td align="left">.ctn after{content:””;display:block;;height:40px;width:40px;}</td></tr></tbody></table><h1 id="选择器的权重"><a href="#选择器的权重" class="headerlink" title="选择器的权重"></a>选择器的权重</h1><ul><li>!important &gt; 行间样式 &gt; id &gt; class | 属性 &gt; 标签选择器 &gt; 通配符</li></ul><table><thead><tr><th align="left">选择器</th><th align="center">权重</th></tr></thead><tbody><tr><td align="left">!important</td><td align="center">Infinity</td></tr><tr><td align="left">行间样式</td><td align="center">100</td></tr><tr><td align="left">id</td><td align="center">100</td></tr><tr><td align="left">class、属性、伪累</td><td align="center">10</td></tr><tr><td align="left">标签、伪属性</td><td align="center">1</td></tr><tr><td align="left">通配符</td><td align="center">0</td></tr></tbody></table><h2 id="权重的计算"><a href="#权重的计算" class="headerlink" title="权重的计算"></a>权重的计算</h2><ol><li>在比较样式的优先级时，只需统计选择符中的id、class和标签名的个数，然后把相应的权值相加即可，最后根据结果排出优先级</li><li>权值较大的优先级越高，权值相同的，后定义的优先级较高，样式值含有<code>！important</code>，优先级最高<ul><li>div .class1 #people 的权值等于 1+10+100&#x3D;111</li></ul></li></ol><h1 id="颜色的三种方法"><a href="#颜色的三种方法" class="headerlink" title="颜色的三种方法"></a>颜色的三种方法</h1><h2 id="纯英文单词"><a href="#纯英文单词" class="headerlink" title="纯英文单词"></a>纯英文单词</h2> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">color</span>: red</span><br></pre></td></tr></table></figure><h2 id="十六进制颜色"><a href="#十六进制颜色" class="headerlink" title="十六进制颜色"></a>十六进制颜色</h2><p><code>＃RRGGBB</code>，其中 RR（红色），GG（绿色）和 BB（蓝色）。所有值必须介于0和FF之间。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">color</span>: <span class="number">#ff4040</span></span><br></pre></td></tr></table></figure><ul><li>两位相同可以缩写</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">color</span>: # f40;</span><br></pre></td></tr></table></figure><h2 id="RGB"><a href="#RGB" class="headerlink" title="RGB"></a>RGB</h2><p>RGB（红，绿，蓝）。每个参数（红色，绿色和蓝色）定义颜色的亮度，可在0和255之间，或一个百分比值（从0％到100％）之间的整数。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-color</span>:<span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.5</span>);</span><br></pre></td></tr></table></figure><hr><p><strong>参考</strong></p><ul><li><a href="https://www.w3cschool.cn/css/css-selector.html">W3School</a></li><li><a href="https://www.jianshu.com/p/a53ba8e1fe72">CSS选择器与优先级浅析</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 常用标签</title>
      <link href="/posts/HTMLTag.html"/>
      <url>/posts/HTMLTag.html</url>
      
        <content type="html"><![CDATA[<p>HTML 标签</p><span id="more"></span><h1 id="什么是HTML"><a href="#什么是HTML" class="headerlink" title="什么是HTML"></a>什么是HTML</h1><p>Hyper Text Markup Language，超级文本标记语言</p><ul><li>普通文本a:无特殊意义,超级文本<a>:超链接</li><li>超文本：文本具备特殊的功能</li><li>标记：超文本的组成形式<a></li><li>语言：拥有自己的语法结构</li></ul><h1 id="HTML基础语法"><a href="#HTML基础语法" class="headerlink" title="HTML基础语法"></a>HTML基础语法</h1><h2 id="标记语法"><a href="#标记语法" class="headerlink" title="标记语法"></a>标记语法</h2><p>标记以封闭类型划分：</p><ol><li>封闭类型标记.也称双标记，必须成对出现<br>&lt;标记&gt;内容&lt;&#x2F;标记&gt;</li><li>非封闭类型的标记,也叫做空标记&#x2F;单标记<br>&lt;标记&gt; 或 &lt;标记&#x2F;&gt;</li></ol><p>例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>  <span class="attr">href</span>=<span class="string">“www.baidu.com”</span> <span class="attr">id</span>=<span class="string">“baidu-link”</span>&gt;</span>标签内容<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>a 为标签名，也叫元素；</li><li>href，id为属性；</li><li>双引号中的值为属性值</li></ul><h2 id="元素"><a href="#元素" class="headerlink" title="元素"></a>元素</h2><p>指尖括号及尖括号间所包围的内容部分<br>元素可以包含文本内容和其他元素，也可以是空的<br>a. 包含文本内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>b. 元素嵌套：形成更为复杂的语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>注意:（1）嵌套顺序；（2）代码缩进（保证代码可读性）</li></ul><p>c.空标记<b></b></p><h2 id="属性和值"><a href="#属性和值" class="headerlink" title="属性和值"></a>属性和值</h2><p>属性是用来修饰元素的 &lt;标记 属性&#x3D;”值” 属性&#x3D;”值”&gt;</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>常用的标准属性<ul><li>id： 定义元素在页面中的唯一标识</li><li>title：鼠标移入到元素上时提示的文本</li><li>class：样式相关，定义元素引用的类选择器</li><li>style：样式相关，定义元素的行内样式</li></ul></li></ul><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>在源码中编写，但不会被浏览器所解释的内容，成为注释.可以将对代码的解释说明放在注释中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--  注释内容  --&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文档结构"><a href="#文档结构" class="headerlink" title="文档结构"></a>文档结构</h2><ul><li>文档类型声明<ul><li>指定HTML的版本和风格<code>&lt;!DOCTYPE html&gt;</code></li></ul></li><li>HTML页面<br>表示HTML页面的开始与结束</li></ul><p>语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>位于<!doctype html>之下</li></ul><h1 id="HTML页面"><a href="#HTML页面" class="headerlink" title="HTML页面"></a>HTML页面</h1><ul><li>包含页面头部和页面主体两部分</li></ul><h2 id="页面头部：定义页面全局信息"><a href="#页面头部：定义页面全局信息" class="headerlink" title="页面头部：定义页面全局信息"></a>页面头部：定义页面全局信息</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>紧跟在html之后，是html中的首个子元素</p></li><li><p>头部所包含的内容（子元素）</p><ul><li>网页标题：<code>&lt;title&gt;标题内容&lt;/title&gt;</code></li><li>定义网页的编码格式,关键字，描述<ul><li>网页的编码格式：<code>&lt;meta charset=&quot;utf-8&quot;&gt;</code></li><li>关键字：<code>&lt;meta name=&quot;keywords&quot; content=&quot;关键字&quot;&gt;</code></li><li>描述：<code>&lt;meta name=&quot;description&quot; content=&quot;描述内容&quot;&gt;</code></li></ul></li></ul></li><li><p>定义或引用javascript：<code>&lt;script&gt;&lt;/script&gt;</code></p></li><li><p><code>&lt;style&gt;&lt;/style&gt;</code>定义内部样式<br>-<code> &lt;link&gt;</code>引入外部样式</p></li></ul><h2 id="页面主体：网页显示的主体内容"><a href="#页面主体：网页显示的主体内容" class="headerlink" title="页面主体：网页显示的主体内容"></a>页面主体：网页显示的主体内容</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>属性<ul><li>text：表示文本颜色S</li><li>bgcolor：表示网页的背景颜色</li></ul></li></ul><h2 id="简单完整写法如下"><a href="#简单完整写法如下" class="headerlink" title="简单完整写法如下"></a>简单完整写法如下</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>页面名称<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">”stylesheet“</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;文件路径&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span>样式<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span>js脚本<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="常用标签及属性"><a href="#常用标签及属性" class="headerlink" title="常用标签及属性"></a>常用标签及属性</h1><h2 id="分区元素"><a href="#分区元素" class="headerlink" title="分区元素"></a>分区元素</h2><h3 id="块分区元素"><a href="#块分区元素" class="headerlink" title="块分区元素"></a>块分区元素</h3><ul><li>div ，标签用于组合其他HTML元素，本身无实在意义。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;collapsed&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;expanded&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        /div&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="行内分区元素"><a href="#行内分区元素" class="headerlink" title="行内分区元素"></a>行内分区元素</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>特点 多个元素在一行内显示</li><li>作用 设置同一行文字内的不同格式</li></ul><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>H1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>H2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            ...</span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>H3<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>H4<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>改变字号（一级最大，六级最小, 加粗显示,上下有垂直的空白距离,独立成行</li></ul><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">&quot; https://vitan.me&quot;</span>&gt;</span>Vitan<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>属性<ul><li>href：链接地址</li><li>target：目标，打开新网页的形式</li></ul></li><li>取值：<ul><li>_blank：在新标签页中打开</li><li>_self：在自身页面中打开（默认值）</li><li>title：鼠标放到链接上的提示</li></ul></li></ul><h2 id="Anchor-锚点"><a href="#Anchor-锚点" class="headerlink" title="Anchor(锚点)"></a>Anchor(锚点)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;123.html#001&quot;</span>&gt;</span>跳到001<span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br><span class="line">...文字省略 </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;001&quot;</span> <span class="attr">id</span>=<span class="string">&quot;001&quot;</span> &gt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br><span class="line">...文字省略 </span><br></pre></td></tr></table></figure><h2 id="电话邮件"><a href="#电话邮件" class="headerlink" title="电话邮件"></a>电话邮件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 点击后直接拨打 10086 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;tel:10086&quot;</span>&gt;</span>10086<span class="tag">&lt;/<span class="name">a</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 点击后直接给qq6@qq.com发邮件，主题为：TestObject        --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:qq@qq.com?subject=TestObject&quot;</span>&gt;</span>qq@qq.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span>     </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 点击后直接给10086发信息，消息内容默认为message_body --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;sms:10086?body=message_body&quot;</span>&gt;</span>给 10086 发短信<span class="tag">&lt;/<span class="name">a</span>&gt;</span>   </span><br><span class="line">   </span><br><span class="line"><span class="comment">&lt;!-- 点击后直接发送自己的位置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;geopoint:116.281469,39.866035&quot;</span>&gt;</span>我的位置<span class="tag">&lt;/<span class="name">a</span>&gt;</span>   </span><br></pre></td></tr></table></figure><h2 id="协议限定符"><a href="#协议限定符" class="headerlink" title="协议限定符"></a>协议限定符</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">&quot;javascript:while(1)&#123;alert(&#x27;嘻嘻嘻&#x27;)&#125;&quot;</span>&gt;</span>点我呀<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;url&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;some_text&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>url 可为网络，绝对路径，相对路径链接</li><li>width：图像宽度</li><li>height：图像高度</li></ul><h2 id="alt-属性"><a href="#alt-属性" class="headerlink" title="alt 属性"></a>alt 属性</h2><ul><li>图片占位符，浏览器无法载入图像时，替换文本属性告诉读者她们失去的信息。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;boat.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Big Boat&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="title-属性"><a href="#title-属性" class="headerlink" title="title 属性"></a>title 属性</h2><ul><li>图片提示符<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;boat.gif&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Big Boat&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="ol-有序列表"><a href="#ol-有序列表" class="headerlink" title="ol(有序列表)"></a>ol(有序列表)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span> = <span class="string">&quot;1&quot;</span> <span class="attr">reversed</span> = <span class="string">&quot;reversed&quot;</span> <span class="attr">start</span> = <span class="string">“2”</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Apple<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Banana<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>tpye<ul><li>1 阿拉伯数字</li><li>a 小写英文字母</li><li>A 大写英文字母</li><li>i 小写罗马数字</li><li>I 大写罗马数字</li></ul></li><li>reversd 倒叙</li><li>start 从第几个开始</li></ul><h2 id="ul-无序列表"><a href="#ul-无序列表" class="headerlink" title="ul(无序列表)"></a>ul(无序列表)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul type = &quot;disc&quot;&gt;</span><br><span class="line">        &lt;li&gt;Apple&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;Banana&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ul><li>type<ul><li>disc 实心圆</li><li>square 方形</li><li>circle 圆</li></ul></li></ul><h2 id="自定义列表"><a href="#自定义列表" class="headerlink" title="自定义列表"></a>自定义列表</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>- black hot drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>- white cold drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>border 不定义边框属性，表格将不显示边框</li><li>width ：设置表格的宽度</li><li>height：设置表格的高度</li><li>align：设置表格的对齐方式，取值: left&#x2F;center&#x2F;right</li><li>border：设置表格边框宽度</li><li>cellpadding：内边距（单元格边框与内容之间的距离）</li><li>cellspacing：外边距（单元格之间的距离）</li><li>bgcolor：设置表格的背景颜色</li></ul><h3 id="包含的子元素："><a href="#包含的子元素：" class="headerlink" title="包含的子元素："></a>包含的子元素：</h3><ul><li><p><code>&lt;tr&gt;&lt;/tr&gt; </code>（创建表行）</p><ul><li>属性<ul><li>align：该行内容水平对齐方式，取值: left&#x2F;center&#x2F;right</li><li>valign：该行内容的垂直对齐方式，取值: top&#x2F;middle&#x2F;bottom</li><li>bgcolor：设置表格的背景颜色</li></ul></li></ul></li><li><p><code>&lt;td&gt;&lt;/td&gt;</code> （创建单元格）</p><ul><li>属性<ul><li>align：内容水平对齐方式</li><li>valign：内容垂直对齐方式</li><li>width ：宽度</li><li>height ：高度</li></ul></li></ul></li><li><p><code>&lt;caption&gt;&lt;/caption&gt;</code> （表格标题）</p></li><li><th></th> （列标题）  - 行标题或列标题，字体有加粗的效果，放在tr中</li><li><p><code>&lt;thead&gt;&lt;/thead&gt; </code>（表头）</p></li><li><p><code>&lt;tbody&gt;&lt;/tbody&gt;</code> 表主体）</p></li><li><p><code>&lt;tfoot&gt;&lt;/tfoot&gt;</code> （表尾）</p></li></ul><h2 id="表格表头"><a href="#表格表头" class="headerlink" title="表格表头"></a>表格表头</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Header 1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Header 2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h1><ul><li>表单元素是允许用户在表单中输入内容,比如：<code>文本域(textarea)</code>、<code>下拉列表</code>、<code>单选框(radio-buttons)</code>、<code>复选框(checkboxes)</code>等等。表单使用表单标签 <form> 来设置:<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">.</span><br><span class="line">input 元素</span><br><span class="line">.</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span>   </span><br></pre></td></tr></table></figure></li></ul><h2 id="常用的表单控件"><a href="#常用的表单控件" class="headerlink" title="常用的表单控件"></a>常用的表单控件</h2><table><thead><tr><th align="left">控件名</th><th align="left">code</th></tr></thead><tbody><tr><td align="left">文本框</td><td align="left"><code>&lt;input type=&quot;text&quot;&gt;</code></td></tr><tr><td align="left">密码框</td><td align="left"><code>&lt;input type=&quot;password&quot;&gt;</code>,专属属性:maxlength：限制输入的字符数，取值：数字，readonly：设置文本控件只读</td></tr><tr><td align="left">单选按钮</td><td align="left"><code>&lt;input type=&quot;radio&quot;&gt;</code></td></tr><tr><td align="left">复选框</td><td align="left"><code>&lt;input type=&quot;checkbox&quot;&gt;</code>,专属属性:checked，设置默认被选中</td></tr><tr><td align="left">提交按钮</td><td align="left"><code>&lt;input type=&quot;submit&quot;&gt;</code></td></tr><tr><td align="left">重置按钮</td><td align="left"><code>&lt;input type=&quot;reset&quot;&gt;</code></td></tr><tr><td align="left">普通按钮</td><td align="left"><code>&lt;input type=&quot;button&quot;&gt;</code></td></tr><tr><td align="left">图片按钮</td><td align="left"><code>&lt;input type=&quot;image&quot; src=&quot;&quot;&gt;</code></td></tr><tr><td align="left">隐藏域</td><td align="left"><code>&lt;input type=&quot;hidden&quot;&gt;</code></td></tr><tr><td align="left">文件选择框</td><td align="left"><code>&lt;input type=&quot;file&quot;&gt;</code></td></tr></tbody></table><h2 id="文本域-Text-Fields"><a href="#文本域-Text-Fields" class="headerlink" title="文本域 Text Fields"></a>文本域 Text Fields</h2><ul><li><code>&lt;input type=&quot;text&quot;&gt; </code>标签来设定，当用户要在表单中键入字母、数字等内容时，就会用到文本域。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;form&gt;</span><br><span class="line">    First name: &lt;input type=&quot;text&quot; name=&quot;firstname&quot;&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 密码字段通过标签&lt;input type=&quot;password&quot;&gt; 来定义--&gt;</span><br><span class="line">    UserName: &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;br&gt;</span><br><span class="line">    Password: &lt;input type=&quot;passord&quot; name=&quot;password&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="单选按钮-Radio-Buttons"><a href="#单选按钮-Radio-Buttons" class="headerlink" title="单选按钮 Radio Buttons"></a>单选按钮 Radio Buttons</h2><ul><li><code>&lt;input type=&quot;radio&quot;&gt;</code> 定义<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>&gt;</span>Male<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span>Female</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="复选框-Checkboxes"><a href="#复选框-Checkboxes" class="headerlink" title="复选框 Checkboxes"></a>复选框 Checkboxes</h2><ul><li><code>&lt;input type=&quot;checkbox&quot;&gt;</code> 定义<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fruit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;applee&quot;</span>&gt;</span>Apple<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fruit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;banana&quot;</span>&gt;</span>Banana</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="提交按钮-Submit-Button"><a href="#提交按钮-Submit-Button" class="headerlink" title="提交按钮 Submit Button"></a>提交按钮 Submit Button</h2><ul><li><code>&lt;input type=&quot;submit&quot;&gt; </code>定义<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">&quot;input&quot;</span> <span class="attr">action</span>=<span class="string">&quot;html_form_action.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">Username: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>实例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span> = <span class="string">&quot;get&quot;</span> <span class="attr">action</span> = <span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        UserName:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:#999&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">onfocus</span>=<span class="string">&quot;if(this.value == &#x27;请输入用户名&#x27;)&#123;this.value=&#x27;&#x27;;this.style.color=&#x27;#424242&#x27;&#125;&quot;</span> <span class="attr">onblur</span>=<span class="string">&quot;if(this.value==&#x27;&#x27;)&#123;this.value=&#x27;请输入用户名&#x27;;this.style.color=&#x27;#999&#x27;&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        Password:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;password&quot;</span> <span class="attr">name</span> = <span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form method = "get" action = "">    <p>        UserName:<input type="text" name="username" style="color:#999" value="请输入用户名" onfocus="if(this.value == '请输入用户名'){this.value='';this.style.color='#424242'}" onblur="if(this.value==''){this.value='请输入用户名';this.style.color='#999'}">    </p>        <p>        Password:<input type = "password" name = "password">    </p>    <input type = "submit"></form><p>#段落</p><h2 id="p"><a href="#p" class="headerlink" title="p"></a>p</h2><ul><li>默认文字大小,独立成行,上下垂直空白<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="span"><a href="#span" class="headerlink" title="span"></a>span</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="br-换行"><a href="#br-换行" class="headerlink" title="br 换行"></a>br 换行</h2> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="hr-分割线"><a href="#hr-分割线" class="headerlink" title="hr 分割线"></a>hr 分割线</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>size：尺寸，取值单位为 px（像素），可以省略</li><li>width：宽度，取值单位为px（像素）可以省略或百分比</li><li>color：颜色，取值自然颜色值</li><li>align：水平对齐方式，取值：left&#x2F;center&#x2F;right</li></ul><h1 id="文本字体"><a href="#文本字体" class="headerlink" title="文本字体"></a>文本字体</h1><h2 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br></pre></td></tr></table></figure><p>##斜体</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>斜体<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>斜体<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>￥30<span class="tag">&lt;<span class="name">del</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">s</span>&gt;</span>$30<span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="上下标"><a href="#上下标" class="headerlink" title="上下标"></a>上下标</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span>上标<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span>下标<span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="地址"><a href="#地址" class="headerlink" title="地址"></a>地址</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span>地址<span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="编码与解码"><a href="#编码与解码" class="headerlink" title="编码与解码"></a>编码与解码</h1><table><thead><tr><th align="left">显示结果</th><th align="left">描述</th><th align="left">实体名称</th><th align="left">实体编号</th></tr></thead><tbody><tr><td align="left"></td><td align="left">空格</td><td align="left"><code>&amp;nbsp; </code></td><td align="left"><code>&amp;#160;</code></td></tr><tr><td align="left">&lt;</td><td align="left">小于号</td><td align="left"><code>&amp;lt;</code></td><td align="left"><code>&amp;#60;</code></td></tr><tr><td align="left">&gt;</td><td align="left">大于号</td><td align="left"><code>&amp;gt;</code></td><td align="left"><code>&amp;#62;</code></td></tr><tr><td align="left">&amp;</td><td align="left">和号</td><td align="left"><code>&amp;amp;</code></td><td align="left"><code>&amp;#38;</code></td></tr><tr><td align="left">“</td><td align="left">引号</td><td align="left"><code>&amp;quot;</code></td><td align="left"><code>&amp;#34;</code></td></tr><tr><td align="left">‘</td><td align="left">撇号</td><td align="left"><code>&amp;apos;</code> (IE不支持)</td><td align="left"><code>&amp;#39;</code></td></tr><tr><td align="left">￠</td><td align="left">分</td><td align="left"><code>&amp;cent;</code></td><td align="left"><code>&amp;#162;</code></td></tr><tr><td align="left">£</td><td align="left">镑</td><td align="left"><code>&amp;pound;</code></td><td align="left"><code>&amp;#163;</code></td></tr><tr><td align="left">¥</td><td align="left">日圆</td><td align="left"><code>&amp;yen;</code></td><td align="left"><code>&amp;#165;</code></td></tr><tr><td align="left">€</td><td align="left">欧元</td><td align="left"><code>&amp;euro;</code></td><td align="left"><code>&amp;#8364;</code></td></tr><tr><td align="left">§</td><td align="left">小节</td><td align="left"><code>&amp;sect;</code></td><td align="left"><code>&amp;#167;</code></td></tr><tr><td align="left">©</td><td align="left">版权</td><td align="left"><code>&amp;copy;</code></td><td align="left"><code>&amp;#169;</code></td></tr><tr><td align="left">®</td><td align="left">注册商标</td><td align="left"><code>&amp;reg;</code></td><td align="left"><code>&amp;#174;</code></td></tr><tr><td align="left">™</td><td align="left">商标</td><td align="left"><code>&amp;trade;</code></td><td align="left"><code>&amp;#8482;</code></td></tr><tr><td align="left">×</td><td align="left">乘号</td><td align="left"><code>&amp;times;</code></td><td align="left"><code>&amp;#215;</code></td></tr><tr><td align="left">÷</td><td align="left">除号</td><td align="left"><code>&amp;divide;</code></td><td align="left"><code>&amp;#247;</code></td></tr></tbody></table><ul><li><a href="http://www.w3school.com.cn/tags/html_ref_entities.html">More</a></li></ul><hr><p><strong>参考</strong></p><ul><li><a href="https://www.jianshu.com/p/57cecb7cfc4c">melody瓶子</a></li><li><a href="https://www.w3schools.com/html/">W3School</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Excel 函数</title>
      <link href="/posts/ExcelFunction.html"/>
      <url>/posts/ExcelFunction.html</url>
      
        <content type="html"><![CDATA[<p>Excel 函数</p><!---more---><h1 id="数字处理"><a href="#数字处理" class="headerlink" title="数字处理"></a>数字处理</h1><p>取绝对值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">=ABS(数字) </span><br><span class="line"># 如：</span><br><span class="line">ABS(-2) =2</span><br></pre></td></tr></table></figure><p>向下取整</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">=INT(数字) </span><br><span class="line"># 如：</span><br><span class="line">INT(5.6)=5 ; INT(5.2)=5</span><br></pre></td></tr></table></figure><p>四舍五入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">=ROUND(数字,小数位数) </span><br><span class="line"># 如： </span><br><span class="line">ROUND(5.6,0)=6 ; ROUND(5.2,0)=5</span><br></pre></td></tr></table></figure><h1 id="判断公式"><a href="#判断公式" class="headerlink" title="判断公式"></a>判断公式</h1><ul><li><p>把公式产生的错误值显示为空</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C2=IFERROR(A2/B2,&quot;&quot;) </span><br><span class="line">#  如：</span><br><span class="line">IFERROR(2/0,&quot;错误&quot;) = &quot;错误&quot;</span><br></pre></td></tr></table></figure><ul><li>说明：如果是错误值则显示为空，否则正常显示。</li></ul></li><li><p>IF多条件判断返回值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C2=IF(AND(A2&lt;500,B2=&quot;未到期&quot;),&quot;补款&quot;,&quot;&quot;)</span><br></pre></td></tr></table></figure><ul><li>说明：两个条件同时成立用AND,任一个成立用OR函数。</li></ul></li></ul><h1 id="统计公式"><a href="#统计公式" class="headerlink" title="统计公式"></a>统计公式</h1><p>统计两个表格重复的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B2=COUNTIF(Sheet15!A:A,A2)</span><br></pre></td></tr></table></figure><ul><li>说明：如果返回值大于0说明在另一个表中存在，0则不存在。</li></ul><p>统计不重复的总人数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C2=SUMPRODUCT(1/COUNTIF(A2:A8,A2:A8))</span><br></pre></td></tr></table></figure><ul><li>说明:用COUNTIF统计出每人的出现次数，用1除的方式把出现次数变成分母，然后相加。</li></ul><h1 id="求和公式"><a href="#求和公式" class="headerlink" title="求和公式"></a>求和公式</h1><p>隔列求和</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">H3=SUMIF($A$2:$G$2,H$2,A3:G3) </span><br><span class="line">或</span><br><span class="line">=SUMPRODUCT((MOD(COLUMN(B3:G3),2)=0)*B3:G3)</span><br></pre></td></tr></table></figure><ul><li>说明：如果标题行没有规则用第2个公式</li></ul><p>单条件求和</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">F2=SUMIF(A:A,E2,C:C)</span><br></pre></td></tr></table></figure><ul><li>说明：SUMIF函数的基本用法</li></ul><p>单条件模糊求和</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">=SUMIF(A2:A4,&quot;*A*&quot;,C2:C4)</span><br><span class="line">=SUMIF(A2:A4,&quot;*A*&quot;,C2:C4)</span><br><span class="line">=SUMIF(A2:A4,&quot;*A*&quot;,C2:C4)</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx8kdqfs8nj209507fwgx.jpg"></p><ul><li>说明：如果需要进行模糊求和，就需要掌握通配符的使用，其中星号是表示任意多个字符，如”<em>A</em>“就表示a前和后有任意多个字符，即包含A。</li></ul><p>多条件模糊求和</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C11=SUMIFS(C2:C7,A2:A7,A11&amp;&quot;*&quot;,B2:B7,B11)</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx8kexfwl2j209t065tat.jpg"></p><ul><li>说明：在sumifs中可以使用通配符*</li></ul><p>多表相同位置求和</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b2=SUM(Sheet1:Sheet19!B2)</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx8kgfwoxlj208y04n75k.jpg"></p><ul><li>说明：在表中间删除或添加表后，公式结果会自动更新。</li></ul><p>按日期和产品求和</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">F2=SUMPRODUCT((MONTH($A$2:$A$25)=F$1)*($B$2:$B$25=$E2)*$C$2:$C$25)</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx8khi926oj20a005xgob.jpg"></p><ul><li>说明：SUMPRODUCT可以完成多条件求和</li></ul><h1 id="查找与引用公式"><a href="#查找与引用公式" class="headerlink" title="查找与引用公式"></a>查找与引用公式</h1><p>单条件查找公式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C11=VLOOKUP(B11,B3:F7,4,FALSE)</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx8kligjavj20a606gdiu.jpg"></p><ul><li>说明：查找是VLOOKUP最擅长的，基本用法</li></ul><p>双向查找公式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=INDEX(C3:H7,MATCH(B10,B3:B7,0),MATCH(C10,C2:H2,0))</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx8kmqj7r8j20d3074n10.jpg"></p><ul><li>说明：利用MATCH函数查找位置，用INDEX函数取值</li></ul><p>查找最后一条符合条件的记录。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C13 = LOOKUP(1,0/(C5:C10=B13),D5:D10)</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx8kngxy5tj209v07tjt9.jpg"></p><ul><li>说明：0&#x2F;(条件)可以把不符合条件的变成错误值，而lookup可以忽略错误值</li></ul><h2 id="多条件查找"><a href="#多条件查找" class="headerlink" title="多条件查找"></a>多条件查找</h2><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx8kppnnmaj20d808c0vh.jpg"></p><ul><li>说明:公式原理同上一个公式</li></ul><p>指定区域最后一个非空值查找</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B14=LOOKUP(1,0/(B2:B13&lt;&gt;&quot;&quot;),$A2:$A13)</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx8kquebpdj20ax0a8jun.jpg"></p><p>按数字区域间取对应的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D9=VLOOKUP(C9,B$4:C$6,2)</span><br><span class="line">or</span><br><span class="line">D9=LOOKUP(C9,B$4:B6,C$4:C$5)</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx8l4ove6sj20as0bgwje.jpg"></p><ul><li>公式说明：VLOOKUP和LOOKUP函数都可以按区间取值，一定要注意，销售量列的数字一定要升序排列。</li></ul><h1 id="字符串处理公式"><a href="#字符串处理公式" class="headerlink" title="字符串处理公式"></a>字符串处理公式</h1><p>多单元格字符串合并</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C2=PHONETIC(A2:A7)</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx8kvrf9x1j208x05kjsa.jpg"></p><ul><li>说明：Phonetic函数只能对字符型内容合并，数字不可以。</li></ul><p>截取除后3位之外的部分</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=LEFT(D1,LEN(D1)-3)</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx8kwlf6hnj20700493yv.jpg"></p><ul><li>说明：LEN计算出总长度,LEFT从左边截总长度-3个</li></ul><p>截取-前的部分</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B2=Left(A1,FIND(&quot;-&quot;,A1)-1)</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx8l7paax9j208m04cwfu.jpg"></p><ul><li>说明：用FIND函数查找位置，用LEFT截取。</li></ul><p>截取字符串中任一段的公式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B1=TRIM(MID(SUBSTITUTE($A1,&quot; &quot;,REPT(&quot; &quot;,20)),20,20))</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx8l8kx8szj20br04cwf1.jpg"></p><ul><li>说明:公式是利用强插N个空字符的方式进行截取</li></ul><p>字符串查找</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B2=IF(COUNT(FIND(&quot;河南&quot;,A2))=0,&quot;否&quot;,&quot;是&quot;)</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx8l9u3emjj209004wgml.jpg"></p><ul><li>说明: FIND查找成功，返回字符的位置，否则返回错误值，而COUNT可以统计出数字的 个数，这里可以用来判断查找是否成功。</li></ul><p>字符串查找一对多</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B2=IF(COUNT(FIND(&#123;&quot;辽宁&quot;,&quot;黑龙江&quot;,&quot;吉林&quot;&#125;,A2))=0,&quot;其他&quot;,&quot;东北&quot;)</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx8lbzg388j209s059gn7.jpg"></p><ul><li>说明：设置FIND第一个参数为常量数组，用COUNT函数统计FIND查找结果</li></ul><h1 id="日期计算公式"><a href="#日期计算公式" class="headerlink" title="日期计算公式"></a>日期计算公式</h1><p>两日期相隔的年、月、天数计算</p><ul><li>A1是开始日期（2011-12-1），B1是结束日期(2013-6-10)。<ul><li>相隔多少天？<code>=datedif(A1,B1,&quot;d&quot;)</code> 结果：557</li><li>相隔多少月? <code>=datedif(A1,B1,&quot;m&quot;) </code>结果：18</li><li>相隔多少年? <code>=datedif(A1,B1,&quot;Y&quot;)</code> 结果：1</li><li>不考虑年相隔多少月？<code>=datedif(A1,B1,&quot;Ym&quot;)</code> 结果：6</li><li>不考虑年相隔多少天？<code>=datedif(A1,B1,&quot;YD&quot;)</code>  结果：192</li><li>不考虑年月相隔多少天？<code>=datedif(A1,B1,&quot;MD&quot;) </code>结果：9</li><li>datedif函数第3个参数说明：<ul><li>“Y” 时间段中的整年数。</li><li>“M” 时间段中的整月数。</li><li>“D” 时间段中的天数。</li><li>“MD” 天数的差。忽略日期中的月和年。</li><li>“YM” 月数的差。忽略日期中的日和年。</li><li>“YD” 天数的差。忽略日期中的年。</li></ul></li></ul></li></ul><p>扣除周末天数的工作日天数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C2=NETWORKDAYS.INTL(IF(B2&lt;DATE(2015,1,1),DATE(2015,1,1),B2),DATE(2015,1,31),11)</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx8lgn3f80j209z06amyx.jpg"></p><ul><li>说明：返回两个日期之间的所有工作日数，使用参数指示哪些天是周末，以及有多少天是周末。周末和任何指定为假期的日期不被视为工作日</li></ul><hr><p><strong>Via</strong></p><ul><li><a href="https://blog.csdn.net/HaHa_Sir/article/details/78970082">链接</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Selenium 马蜂窝评论</title>
      <link href="/posts/PythonSeleniumMa.html"/>
      <url>/posts/PythonSeleniumMa.html</url>
      
        <content type="html"><![CDATA[<p> Selenium 马蜂窝评论内容</p><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 18-11-13 上午11:56</span></span><br><span class="line"><span class="comment"># @Author  : Vitan</span></span><br><span class="line"><span class="comment"># @File    : SeleniumMaFengWo.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> selenium.common.exceptions <span class="keyword">import</span> NoSuchAttributeException</span><br><span class="line"><span class="keyword">from</span> selenium.common.exceptions <span class="keyword">import</span> TimeoutException</span><br><span class="line"><span class="keyword">from</span> pyquery.pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line"></span><br><span class="line">broswer = webdriver.Firefox()</span><br><span class="line">wait = WebDriverWait(broswer,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">client = pymongo.MongoClient(<span class="string">&#x27;localhost&#x27;</span>)</span><br><span class="line">db = client[<span class="string">&#x27;MaFengWoView&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">search_first</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        broswer.get(url)</span><br><span class="line">        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR,<span class="string">&#x27;.pi.pg-last&#x27;</span>)))</span><br><span class="line">        total = <span class="built_in">int</span>(broswer.find_element_by_css_selector(<span class="string">&#x27;.pi.pg-last&#x27;</span>).get_attribute(<span class="string">&#x27;data-page&#x27;</span>))</span><br><span class="line">        <span class="built_in">print</span>(total)</span><br><span class="line">        place()</span><br><span class="line">        <span class="keyword">return</span> total</span><br><span class="line">    <span class="keyword">except</span> TimeoutException:</span><br><span class="line">        <span class="keyword">return</span> search_first(url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">search_next</span>(<span class="params">page</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">next</span> = broswer.find_element_by_css_selector(<span class="string">&#x27;.pi.pg-next&#x27;</span>)</span><br><span class="line">        <span class="built_in">next</span>.click()</span><br><span class="line">        wait.until(EC.text_to_be_present_in_element((By.CSS_SELECTOR,<span class="string">&#x27;.pg-current&#x27;</span>),<span class="built_in">str</span>(page)))</span><br><span class="line">        place()</span><br><span class="line">    <span class="keyword">except</span> NoSuchAttributeException:</span><br><span class="line">        search_next(page)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">place</span>():</span><br><span class="line">    anchors = broswer.find_elements_by_css_selector(<span class="string">&#x27;.scenic-list.clearfix li a&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> anchors:</span><br><span class="line">        url = a.get_attribute(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(url)</span><br><span class="line">        total = view_first(url)</span><br><span class="line">        <span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,total+<span class="number">1</span>):</span><br><span class="line">            view_next(page)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># html = broswer.page_source</span></span><br><span class="line">    <span class="comment"># doc = pq(html)</span></span><br><span class="line">    <span class="comment"># anchors = doc(&#x27;.scenic-list.clearfix li a&#x27;)</span></span><br><span class="line">    <span class="comment"># for a in anchors.items():</span></span><br><span class="line">    <span class="comment">#     url = a.attr(&#x27;href&#x27;)</span></span><br><span class="line">    <span class="comment">#     print(url)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">view_first</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        broswer.get(url)</span><br><span class="line">        wait.until(EC.presence_of_element_located((By.CSS_SELECTOR,<span class="string">&#x27;.pi.pg-last&#x27;</span>)))</span><br><span class="line">        total = <span class="built_in">int</span>(broswer.find_element_by_css_selector(<span class="string">&#x27;.pi.pg-last&#x27;</span>).get_attribute(<span class="string">&#x27;data-page&#x27;</span>))</span><br><span class="line">        get_view()</span><br><span class="line">        <span class="keyword">return</span> total</span><br><span class="line">    <span class="keyword">except</span> TimeoutException:</span><br><span class="line">        <span class="keyword">return</span> view_first(url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">view_next</span>(<span class="params">page</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">next</span> = broswer.find_element_by_css_selector(<span class="string">&#x27;.pi.pg-next&#x27;</span>)</span><br><span class="line">        <span class="built_in">next</span>.click()</span><br><span class="line">        wait.until(EC.text_to_be_present_in_element((By.CSS_SELECTOR,<span class="string">&#x27;.pg-current&#x27;</span>),<span class="built_in">str</span>(page)))</span><br><span class="line">        get_view()</span><br><span class="line">    <span class="keyword">except</span> NoSuchAttributeException:</span><br><span class="line">        view_next(page)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_view</span>():</span><br><span class="line">    html = broswer.page_source</span><br><span class="line">    doc = pq(html)</span><br><span class="line">    lis = doc(<span class="string">&#x27;.rev-item.comment-item.clearfix&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> lis.items():</span><br><span class="line">        view = &#123;</span><br><span class="line">            <span class="string">&#x27;name&#x27;</span>:li.find(<span class="string">&#x27;.name&#x27;</span>).text().strip(),</span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>:li.find(<span class="string">&#x27;.level&#x27;</span>).text().strip(),</span><br><span class="line">            <span class="string">&#x27;txt&#x27;</span>:li.find(<span class="string">&#x27;.rev-txt&#x27;</span>).text().strip()</span><br><span class="line">        &#125;</span><br><span class="line">        save_to_mongo(view)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_to_mongo</span>(<span class="params">view</span>):</span><br><span class="line">    <span class="keyword">if</span> db[<span class="string">&#x27;MaFengWoView&#x27;</span>].insert_one(view):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Saving to MongoDB&#x27;</span>,view)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    url = <span class="string">&#x27;http://www.mafengwo.cn/jd/10088/gonglve.html&#x27;</span></span><br><span class="line">    total = search_first(url)</span><br><span class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,total+<span class="number">1</span>):</span><br><span class="line">        search_next(page)</span><br><span class="line">    <span class="comment">#     print(&#x27;Clicking&#x27;,page,&#x27;页&#x27;)</span></span><br><span class="line">    <span class="comment"># url = &#x27;http://www.mafengwo.cn/poi/449.html&#x27;</span></span><br><span class="line">    <span class="comment"># total = view_first(url)</span></span><br><span class="line">    <span class="comment"># for page in range(2,total+1):</span></span><br><span class="line">    <span class="comment">#     view_next(page)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K-means 图片压缩</title>
      <link href="/posts/PythonSklearnImage.html"/>
      <url>/posts/PythonSklearnImage.html</url>
      
        <content type="html"><![CDATA[<p>K-means 图片压缩</p><!---more---><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 18-11-12 10:10</span></span><br><span class="line"><span class="comment"># @Author  : Vitan</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_sample_image</span><br><span class="line"><span class="keyword">import</span> matplotlib.image <span class="keyword">as</span> img</span><br><span class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> KMeans</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入图片</span></span><br><span class="line">picture = load_sample_image(<span class="string">&#x27;china.jpg&#x27;</span>) <span class="comment"># 内置</span></span><br><span class="line">pic2 = img.imread(<span class="string">&#x27;v.jpg&#x27;</span>) <span class="comment"># 外部</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据图片的分辨率，可适当降低分辨率。</span></span><br><span class="line">image = picture[::<span class="number">3</span>,::<span class="number">3</span>]<span class="comment"># 横纵每三个点去一个颜色值</span></span><br><span class="line">plt.imshow(image)</span><br><span class="line">img.imsave(<span class="string">&#x27;pure.jpg&#x27;</span>,image)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再用k均值聚类算法，将图片中所有的颜色值做聚类。</span></span><br><span class="line">X = image.reshape(-<span class="number">1</span>,<span class="number">3</span>) <span class="comment">#reshape为一维</span></span><br><span class="line">mod = KMeans(n_clusters = <span class="number">64</span>)</span><br><span class="line">labels = mod.fit_predict(X)  <span class="comment">#每个点的颜色分类，0-63</span></span><br><span class="line">colors = mod.cluster_centers_  <span class="comment">#64个聚类中心，颜色值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 还原颜色，维数，数据类型</span></span><br><span class="line">new_img = colors[labels]</span><br><span class="line">new_img = new_img.reshape(image.shape)</span><br><span class="line">new_img = new_img.astype(np.uint8)</span><br><span class="line"><span class="built_in">print</span>(new_img)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示压缩图片</span></span><br><span class="line">plt.imshow(new_img)</span><br><span class="line">img.imsave(<span class="string">&#x27;E://zip.jpg&#x27;</span>,new_img)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Matplotlib 各种图</title>
      <link href="/posts/PythonMatplotlib.html"/>
      <url>/posts/PythonMatplotlib.html</url>
      
        <content type="html"><![CDATA[<p>Matplotlib 各种图</p><span id="more"></span><h1 id="垂直条形图"><a href="#垂直条形图" class="headerlink" title="垂直条形图"></a>垂直条形图</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入绘图模块</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="comment"># 构建数据</span></span><br><span class="line">GDP = [<span class="number">12406.8</span>,<span class="number">13908.57</span>,<span class="number">9386.87</span>,<span class="number">9143.64</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文乱码的处理</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] =[<span class="string">&#x27;SimHei&#x27;</span>]</span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图</span></span><br><span class="line">plt.bar(<span class="built_in">range</span>(<span class="number">4</span>), GDP, align = <span class="string">&#x27;center&#x27;</span>,color=<span class="string">&#x27;steelblue&#x27;</span>, alpha = <span class="number">0.8</span>)</span><br><span class="line"><span class="comment"># 添加轴标签</span></span><br><span class="line">plt.ylabel(<span class="string">&#x27;GDP&#x27;</span>)</span><br><span class="line"><span class="comment"># 添加标题</span></span><br><span class="line">plt.title(<span class="string">&#x27;四个直辖市GDP大比拼&#x27;</span>)</span><br><span class="line"><span class="comment"># 添加刻度标签</span></span><br><span class="line">plt.xticks(<span class="built_in">range</span>(<span class="number">4</span>),[<span class="string">&#x27;北京市&#x27;</span>,<span class="string">&#x27;上海市&#x27;</span>,<span class="string">&#x27;天津市&#x27;</span>,<span class="string">&#x27;重庆市&#x27;</span>])</span><br><span class="line"><span class="comment"># 设置Y轴的刻度范围</span></span><br><span class="line">plt.ylim([<span class="number">5000</span>,<span class="number">15000</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为每个条形图添加数值标签</span></span><br><span class="line"><span class="keyword">for</span> x,y <span class="keyword">in</span> <span class="built_in">enumerate</span>(GDP):</span><br><span class="line">    plt.text(x,y+<span class="number">100</span>,<span class="string">&#x27;%s&#x27;</span> %<span class="built_in">round</span>(y,<span class="number">1</span>),ha=<span class="string">&#x27;center&#x27;</span>)</span><br><span class="line">plt.savefig(<span class="string">&#x27;垂直条形图.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx0j1550lxj20c0080jre.jpg"></p><ul><li>解析<ol><li>由于matplotlib对中文的支持并不是很友好，所以需要提前对绘图进行字体的设置，即通过rcParams来设置字体，这里将字体设置为微软雅黑，同时为了避免坐标轴不能正常的显示负号，也需要进行设置；</li><li>bar 函数指定了条形图的x轴、y轴值，设置x轴刻度标签为水平居中，条形图的填充色color为铁蓝色，同时设置透明度alpha为0.8；</li><li>添加y轴标签、标题、x轴刻度标签值，为了让条形图显示各柱体之间的差异，将y轴范围设置在5000~15000；</li><li>通过循环的方式，添加条形图的数值标签；</li></ol></li></ul><h1 id="水平条形图"><a href="#水平条形图" class="headerlink" title="水平条形图"></a>水平条形图</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入绘图模块</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="comment"># 构建数据</span></span><br><span class="line">price = [<span class="number">39.5</span>,<span class="number">39.9</span>,<span class="number">45.4</span>,<span class="number">38.9</span>,<span class="number">33.34</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文乱码的处理</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] =[<span class="string">&#x27;SimHei&#x27;</span>]</span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图</span></span><br><span class="line">plt.barh(<span class="built_in">range</span>(<span class="number">5</span>), price, align = <span class="string">&#x27;center&#x27;</span>,color=<span class="string">&#x27;steelblue&#x27;</span>, alpha = <span class="number">0.8</span>)</span><br><span class="line"><span class="comment"># 添加轴标签</span></span><br><span class="line">plt.xlabel(<span class="string">&#x27;价格&#x27;</span>)</span><br><span class="line"><span class="comment"># 添加标题</span></span><br><span class="line">plt.title(<span class="string">&#x27;不同平台书的最低价比较&#x27;</span>)</span><br><span class="line"><span class="comment"># 添加刻度标签</span></span><br><span class="line">plt.yticks(<span class="built_in">range</span>(<span class="number">5</span>),[<span class="string">&#x27;亚马逊&#x27;</span>,<span class="string">&#x27;当当网&#x27;</span>,<span class="string">&#x27;中国图书网&#x27;</span>,<span class="string">&#x27;京东&#x27;</span>,<span class="string">&#x27;天猫&#x27;</span>])</span><br><span class="line"><span class="comment"># 设置Y轴的刻度范围</span></span><br><span class="line">plt.xlim([<span class="number">32</span>,<span class="number">47</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为每个条形图添加数值标签</span></span><br><span class="line"><span class="keyword">for</span> x,y <span class="keyword">in</span> <span class="built_in">enumerate</span>(price):</span><br><span class="line">    plt.text(y+<span class="number">0.1</span>,x,<span class="string">&#x27;%s&#x27;</span> %y,va=<span class="string">&#x27;center&#x27;</span>)</span><br><span class="line">plt.savefig(<span class="string">&#x27;水平条形图.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图形    </span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx0j4ktleuj20c00800ss.jpg"></p><h1 id="水平交错条形图"><a href="#水平交错条形图" class="headerlink" title="水平交错条形图"></a>水平交错条形图</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入绘图模块</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># 构建数据</span></span><br><span class="line">Y2016 = [<span class="number">15600</span>,<span class="number">12700</span>,<span class="number">11300</span>,<span class="number">4270</span>,<span class="number">3620</span>]</span><br><span class="line">Y2017 = [<span class="number">17400</span>,<span class="number">14800</span>,<span class="number">12000</span>,<span class="number">5200</span>,<span class="number">4020</span>]</span><br><span class="line">labels = [<span class="string">&#x27;北京&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,<span class="string">&#x27;香港&#x27;</span>,<span class="string">&#x27;深圳&#x27;</span>,<span class="string">&#x27;广州&#x27;</span>]</span><br><span class="line">bar_width = <span class="number">0.45</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文乱码的处理</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] =[<span class="string">&#x27;SimHei&#x27;</span>]</span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图</span></span><br><span class="line">plt.bar(np.arange(<span class="number">5</span>), Y2016, label = <span class="string">&#x27;2016&#x27;</span>, color = <span class="string">&#x27;steelblue&#x27;</span>, alpha = <span class="number">0.8</span>, width = bar_width)</span><br><span class="line">plt.bar(np.arange(<span class="number">5</span>)+bar_width, Y2017, label = <span class="string">&#x27;2017&#x27;</span>, color = <span class="string">&#x27;indianred&#x27;</span>, alpha = <span class="number">0.8</span>, width = bar_width)</span><br><span class="line"><span class="comment"># 添加轴标签</span></span><br><span class="line">plt.xlabel(<span class="string">&#x27;Top5城市&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;家庭数量&#x27;</span>)</span><br><span class="line"><span class="comment"># 添加标题</span></span><br><span class="line">plt.title(<span class="string">&#x27;亿万财富家庭数Top5城市分布&#x27;</span>)</span><br><span class="line"><span class="comment"># 添加刻度标签</span></span><br><span class="line">plt.xticks(np.arange(<span class="number">5</span>)+bar_width,labels)</span><br><span class="line"><span class="comment"># 设置Y轴的刻度范围</span></span><br><span class="line">plt.ylim([<span class="number">2500</span>, <span class="number">19000</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为每个条形图添加数值标签</span></span><br><span class="line"><span class="keyword">for</span> x2016,y2016 <span class="keyword">in</span> <span class="built_in">enumerate</span>(Y2016):</span><br><span class="line">    plt.text(x2016, y2016+<span class="number">100</span>, <span class="string">&#x27;%s&#x27;</span> %y2016)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x2017,y2017 <span class="keyword">in</span> <span class="built_in">enumerate</span>(Y2017):</span><br><span class="line">    plt.text(x2017+bar_width, y2017+<span class="number">100</span>, <span class="string">&#x27;%s&#x27;</span> %y2017)</span><br><span class="line"><span class="comment"># 显示图例</span></span><br><span class="line">plt.legend()</span><br><span class="line">plt.savefig(<span class="string">&#x27;水平交错条形图.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx0jcakoz3j20c0080mxb.jpg"></p><h1 id="垂直堆叠条形图"><a href="#垂直堆叠条形图" class="headerlink" title="垂直堆叠条形图"></a>垂直堆叠条形图</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入模块</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入数据</span></span><br><span class="line">data = pd.read_excel(<span class="string">&#x27;C:\\Users\\Administrator\\Desktop\\货运.xls&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图</span></span><br><span class="line">plt.bar(np.arange(<span class="number">8</span>), data.loc[<span class="number">0</span>,:][<span class="number">1</span>:], color = <span class="string">&#x27;red&#x27;</span>, alpha = <span class="number">0.8</span>, label = <span class="string">&#x27;铁路&#x27;</span>, align = <span class="string">&#x27;center&#x27;</span>)</span><br><span class="line">plt.bar(np.arange(<span class="number">8</span>), data.loc[<span class="number">1</span>,:][<span class="number">1</span>:],  bottom = data.loc[<span class="number">0</span>,:][<span class="number">1</span>:], color = <span class="string">&#x27;green&#x27;</span>, alpha = <span class="number">0.8</span>, label = <span class="string">&#x27;公路&#x27;</span>, align = <span class="string">&#x27;center&#x27;</span>)</span><br><span class="line">plt.bar(np.arange(<span class="number">8</span>), data.loc[<span class="number">2</span>,:][<span class="number">1</span>:],  bottom = data.loc[<span class="number">0</span>,:][<span class="number">1</span>:]+data.loc[<span class="number">1</span>,:][<span class="number">1</span>:], color = <span class="string">&#x27;m&#x27;</span>, alpha = <span class="number">0.8</span>, label = <span class="string">&#x27;水运&#x27;</span>, align = <span class="string">&#x27;center&#x27;</span>)</span><br><span class="line">plt.bar(np.arange(<span class="number">8</span>), data.loc[<span class="number">3</span>,:][<span class="number">1</span>:],  bottom = data.loc[<span class="number">0</span>,:][<span class="number">1</span>:]+data.loc[<span class="number">1</span>,:][<span class="number">1</span>:]+data.loc[<span class="number">2</span>,:][<span class="number">1</span>:], color = <span class="string">&#x27;black&#x27;</span>, alpha = <span class="number">0.8</span>, label = <span class="string">&#x27;民航&#x27;</span>, align = <span class="string">&#x27;center&#x27;</span>)</span><br><span class="line"><span class="comment"># 添加轴标签</span></span><br><span class="line">plt.xlabel(<span class="string">&#x27;月份&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;货物量(万吨)&#x27;</span>)</span><br><span class="line"><span class="comment"># 添加标题</span></span><br><span class="line">plt.title(<span class="string">&#x27;2017年各月份物流运输量&#x27;</span>)</span><br><span class="line"><span class="comment"># 添加刻度标签</span></span><br><span class="line">plt.xticks(np.arange(<span class="number">8</span>),data.columns[<span class="number">1</span>:])</span><br><span class="line"><span class="comment"># 设置Y轴的刻度范围</span></span><br><span class="line">plt.ylim([<span class="number">0</span>,<span class="number">500000</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为每个条形图添加数值标签</span></span><br><span class="line"><span class="keyword">for</span> x_t,y_t <span class="keyword">in</span> <span class="built_in">enumerate</span>(data.loc[<span class="number">0</span>,:][<span class="number">1</span>:]):</span><br><span class="line">    plt.text(x_t,y_t/<span class="number">2</span>,<span class="string">&#x27;%sW&#x27;</span> %(<span class="built_in">round</span>(y_t/<span class="number">10000</span>,<span class="number">2</span>)),ha=<span class="string">&#x27;center&#x27;</span>, color = <span class="string">&#x27;white&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x_g,y_g <span class="keyword">in</span> <span class="built_in">enumerate</span>(data.loc[<span class="number">0</span>,:][<span class="number">1</span>:]+data.loc[<span class="number">1</span>,:][<span class="number">1</span>:]):</span><br><span class="line">    plt.text(x_g,y_g/<span class="number">2</span>,<span class="string">&#x27;%sW&#x27;</span> %(<span class="built_in">round</span>(y_g/<span class="number">10000</span>,<span class="number">2</span>)),ha=<span class="string">&#x27;center&#x27;</span>, color = <span class="string">&#x27;white&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x_s,y_s <span class="keyword">in</span> <span class="built_in">enumerate</span>(data.loc[<span class="number">0</span>,:][<span class="number">1</span>:]+data.loc[<span class="number">1</span>,:][<span class="number">1</span>:]+data.loc[<span class="number">2</span>,:][<span class="number">1</span>:]):</span><br><span class="line">    plt.text(x_s,y_s-<span class="number">20000</span>,<span class="string">&#x27;%sW&#x27;</span> %(<span class="built_in">round</span>(y_s/<span class="number">10000</span>,<span class="number">2</span>)),ha=<span class="string">&#x27;center&#x27;</span>, color = <span class="string">&#x27;white&#x27;</span>)    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图例</span></span><br><span class="line">plt.legend(loc=<span class="string">&#x27;upper center&#x27;</span>, ncol=<span class="number">4</span>)</span><br><span class="line"><span class="comment"># 显示图形    </span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx0k3zz5g9j20b907utae.jpg"></p><h1 id="matplotlib-饼图"><a href="#matplotlib-饼图" class="headerlink" title="matplotlib(饼图)"></a>matplotlib(饼图)</h1><h2 id="pie-函数参数解读"><a href="#pie-函数参数解读" class="headerlink" title="pie 函数参数解读"></a>pie 函数参数解读</h2><h2 id="饼图的绘制可以使用matplotlib库中的pie函数"><a href="#饼图的绘制可以使用matplotlib库中的pie函数" class="headerlink" title="饼图的绘制可以使用matplotlib库中的pie函数"></a>饼图的绘制可以使用matplotlib库中的pie函数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">plt.pie(x, explode=<span class="literal">None</span>, labels=<span class="literal">None</span>, colors=<span class="literal">None</span>,</span><br><span class="line">        autopct=<span class="literal">None</span>, pctdistance=<span class="number">0.6</span>, shadow=<span class="literal">False</span>,</span><br><span class="line">        labeldistance=<span class="number">1.1</span>, startangle=<span class="literal">None</span>,</span><br><span class="line">        radius=<span class="literal">None</span>, counterclock=<span class="literal">True</span>, wedgeprops=<span class="literal">None</span>,</span><br><span class="line">        textprops=<span class="literal">None</span>, center=(<span class="number">0</span>, <span class="number">0</span>), frame=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure></h2><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">x</td><td align="left">指定绘图的数据</td></tr><tr><td align="left">explode</td><td align="left">指定饼图某些部分的突出显示，即呈现爆炸式</td></tr><tr><td align="left">labels</td><td align="left">为饼图添加标签说明，类似于图例说明</td></tr><tr><td align="left">colors</td><td align="left">指定饼图的填充色</td></tr><tr><td align="left">autopct</td><td align="left">自动添加百分比显示，可以采用格式化的方法显示</td></tr><tr><td align="left">pctdistance</td><td align="left">设置百分比标签与圆心的距离</td></tr><tr><td align="left">shadow</td><td align="left">是否添加饼图的阴影效果</td></tr><tr><td align="left">labeldistance</td><td align="left">设置各扇形标签（图例）与圆心的距离</td></tr><tr><td align="left">startangle</td><td align="left">设置饼图的初始摆放角度</td></tr><tr><td align="left">radius</td><td align="left">设置饼图的半径大小</td></tr><tr><td align="left">counterclock</td><td align="left">是否让饼图按逆时针顺序呈现</td></tr><tr><td align="left">wedgeprops</td><td align="left">设置饼图内外边界的属性，如边界线的粗细、颜色等</td></tr><tr><td align="left">textprops</td><td align="left">设置饼图中文本的属性，如字体大小、颜色等</td></tr><tr><td align="left">center</td><td align="left">定饼图的中心点位置，默认为原点</td></tr><tr><td align="left">frame</td><td align="left">是否要显示饼图背后的图框，如果设置为True的话，需要同时控制图框x轴、y轴的范围和饼图的中心位置</td></tr></tbody></table><h2 id="绘制"><a href="#绘制" class="headerlink" title="绘制"></a>绘制</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入第三方模块</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置绘图的主题风格（不妨使用R中的ggplot分隔）</span></span><br><span class="line">plt.style.use(<span class="string">&#x27;ggplot&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构造数据</span></span><br><span class="line">edu = [<span class="number">0.2515</span>,<span class="number">0.3724</span>,<span class="number">0.3336</span>,<span class="number">0.0368</span>,<span class="number">0.0057</span>]</span><br><span class="line">labels = [<span class="string">&#x27;中专&#x27;</span>,<span class="string">&#x27;大专&#x27;</span>,<span class="string">&#x27;本科&#x27;</span>,<span class="string">&#x27;硕士&#x27;</span>,<span class="string">&#x27;其他&#x27;</span>]</span><br><span class="line"></span><br><span class="line">explode = [<span class="number">0</span>,<span class="number">0.1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]  <span class="comment"># 用于突出显示大专学历人群</span></span><br><span class="line">colors=[<span class="string">&#x27;#9999ff&#x27;</span>,<span class="string">&#x27;#ff9999&#x27;</span>,<span class="string">&#x27;#7777aa&#x27;</span>,<span class="string">&#x27;#2442aa&#x27;</span>,<span class="string">&#x27;#dd5555&#x27;</span>] <span class="comment"># 自定义颜色</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文乱码和坐标轴负号的处理</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = [<span class="string">&#x27;SimHei&#x27;</span>]</span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将横、纵坐标轴标准化处理，保证饼图是一个正圆，否则为椭圆</span></span><br><span class="line">plt.axes(aspect=<span class="string">&#x27;equal&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 控制x轴和y轴的范围</span></span><br><span class="line">plt.xlim(<span class="number">0</span>,<span class="number">4</span>)</span><br><span class="line">plt.ylim(<span class="number">0</span>,<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制饼图</span></span><br><span class="line">plt.pie(x = edu, <span class="comment"># 绘图数据</span></span><br><span class="line">        explode=explode, <span class="comment"># 突出显示大专人群</span></span><br><span class="line">        labels=labels, <span class="comment"># 添加教育水平标签</span></span><br><span class="line">        colors=colors, <span class="comment"># 设置饼图的自定义填充色</span></span><br><span class="line">        autopct=<span class="string">&#x27;%.1f%%&#x27;</span>, <span class="comment"># 设置百分比的格式，这里保留一位小数</span></span><br><span class="line">        pctdistance=<span class="number">0.8</span>,  <span class="comment"># 设置百分比标签与圆心的距离</span></span><br><span class="line">        labeldistance = <span class="number">1.15</span>, <span class="comment"># 设置教育水平标签与圆心的距离</span></span><br><span class="line">        startangle = <span class="number">180</span>, <span class="comment"># 设置饼图的初始角度</span></span><br><span class="line">        radius = <span class="number">1.5</span>, <span class="comment"># 设置饼图的半径</span></span><br><span class="line">        counterclock = <span class="literal">False</span>, <span class="comment"># 是否逆时针，这里设置为顺时针方向</span></span><br><span class="line">        wedgeprops = &#123;<span class="string">&#x27;linewidth&#x27;</span>: <span class="number">1.5</span>, <span class="string">&#x27;edgecolor&#x27;</span>:<span class="string">&#x27;green&#x27;</span>&#125;,<span class="comment"># 设置饼图内外边界的属性值</span></span><br><span class="line">        textprops = &#123;<span class="string">&#x27;fontsize&#x27;</span>:<span class="number">12</span>, <span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;k&#x27;</span>&#125;, <span class="comment"># 设置文本标签的属性值</span></span><br><span class="line">        center = (<span class="number">1.8</span>,<span class="number">1.8</span>), <span class="comment"># 设置饼图的原点</span></span><br><span class="line">        frame = <span class="number">1</span> )<span class="comment"># 是否显示饼图的图框，这里设置显示</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除x轴和y轴的刻度</span></span><br><span class="line">plt.xticks(())</span><br><span class="line">plt.yticks(())</span><br><span class="line"><span class="comment"># 添加图标题</span></span><br><span class="line">plt.title(<span class="string">&#x27;芝麻信用失信用户教育水平分布&#x27;</span>)</span><br><span class="line">plt.savefig(<span class="string">&#x27;饼图.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx0jh2r431j20c00800t2.jpg"></p><h1 id="matplotlib-箱线图"><a href="#matplotlib-箱线图" class="headerlink" title="matplotlib(箱线图)"></a>matplotlib(箱线图)</h1><h2 id="boxplot函数的参数解读"><a href="#boxplot函数的参数解读" class="headerlink" title="boxplot函数的参数解读"></a>boxplot函数的参数解读</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.boxplot(x, notch=<span class="literal">None</span>, sym=<span class="literal">None</span>, vert=<span class="literal">None</span>,</span><br><span class="line">            whis=<span class="literal">None</span>, positions=<span class="literal">None</span>, widths=<span class="literal">None</span>,</span><br><span class="line">            patch_artist=<span class="literal">None</span>, meanline=<span class="literal">None</span>, showmeans=<span class="literal">None</span>,</span><br><span class="line">            showcaps=<span class="literal">None</span>, showbox=<span class="literal">None</span>, showfliers=<span class="literal">None</span>,</span><br><span class="line">            boxprops=<span class="literal">None</span>, labels=<span class="literal">None</span>, flierprops=<span class="literal">None</span>,</span><br><span class="line">            medianprops=<span class="literal">None</span>, meanprops=<span class="literal">None</span>,</span><br><span class="line">            capprops=<span class="literal">None</span>, whiskerprops=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">x</td><td align="left">指定要绘制箱线图的数据</td></tr><tr><td align="left">notch</td><td align="left">是否是凹口的形式展现箱线图，默认非凹口</td></tr><tr><td align="left">sym</td><td align="left">指定异常点的形状，默认为+号显示</td></tr><tr><td align="left">vert</td><td align="left">是否需要将箱线图垂直摆放，默认垂直摆放；</td></tr><tr><td align="left">whis</td><td align="left">指定上下须与上下四分位的距离，默认为1.5倍的四分位差</td></tr><tr><td align="left">positions</td><td align="left">指定箱线图的位置，默认为[0,1,2…]</td></tr><tr><td align="left">widths</td><td align="left">指定箱线图的宽度，默认为0.5</td></tr><tr><td align="left">patch_artist</td><td align="left">是否填充箱体的颜色</td></tr><tr><td align="left">meanline</td><td align="left">是否用线的形式表示均值，默认用点来表示</td></tr><tr><td align="left">showmeans</td><td align="left">是否显示均值，默认不显示</td></tr><tr><td align="left">showcaps</td><td align="left">是否显示箱线图顶端和末端的两条线，默认显示</td></tr><tr><td align="left">showbox</td><td align="left">是否显示箱线图的箱体，默认显示</td></tr><tr><td align="left">showfliers</td><td align="left">是否显示异常值，默认显示</td></tr><tr><td align="left">boxprops</td><td align="left">设置箱体的属性，如边框色，填充色等</td></tr><tr><td align="left">labels</td><td align="left">为箱线图添加标签，类似于图例的作用</td></tr><tr><td align="left">filerprops</td><td align="left">设置异常值的属性，如异常点的形状、大小、填充色等</td></tr><tr><td align="left">medianprops</td><td align="left">设置中位数的属性，如线的类型、粗细等</td></tr><tr><td align="left">meanprops</td><td align="left">设置均值的属性，如点的大小、颜色等</td></tr><tr><td align="left">capprops</td><td align="left">设置箱线图顶端和末端线条的属性，如颜色、粗细等</td></tr><tr><td align="left">whiskerprops</td><td align="left">设置须的属性，如颜色、粗细、线的类型等</td></tr></tbody></table><h2 id="绘制-1"><a href="#绘制-1" class="headerlink" title="绘制"></a>绘制</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入第三方模块</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取Titanic数据集</span></span><br><span class="line">titanic = pd.read_csv(<span class="string">&#x27;titanic_train.csv&#x27;</span>)</span><br><span class="line"><span class="comment"># 检查年龄是否有缺失</span></span><br><span class="line"><span class="built_in">any</span>(titanic.Age.isnull())</span><br><span class="line"><span class="comment"># 不妨删除含有缺失年龄的观察</span></span><br><span class="line">titanic.dropna(subset=[<span class="string">&#x27;Age&#x27;</span>], inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图形的显示风格</span></span><br><span class="line">plt.style.use(<span class="string">&#x27;ggplot&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置中文和负号正常显示</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = <span class="string">&#x27;SimHei&#x27;</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图：整体乘客的年龄箱线图</span></span><br><span class="line">plt.boxplot(x = titanic.Age, <span class="comment"># 指定绘图数据</span></span><br><span class="line">            patch_artist=<span class="literal">True</span>, <span class="comment"># 要求用自定义颜色填充盒形图，默认白色填充</span></span><br><span class="line">            showmeans=<span class="literal">True</span>, <span class="comment"># 以点的形式显示均值</span></span><br><span class="line">            boxprops = &#123;<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;black&#x27;</span>,<span class="string">&#x27;facecolor&#x27;</span>:<span class="string">&#x27;#9999ff&#x27;</span>&#125;, <span class="comment"># 设置箱体属性，填充色和边框色</span></span><br><span class="line">            flierprops = &#123;<span class="string">&#x27;marker&#x27;</span>:<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;markerfacecolor&#x27;</span>:<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;black&#x27;</span>&#125;, <span class="comment"># 设置异常值属性，点的形状、填充色和边框色</span></span><br><span class="line">            meanprops = &#123;<span class="string">&#x27;marker&#x27;</span>:<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;markerfacecolor&#x27;</span>:<span class="string">&#x27;indianred&#x27;</span>&#125;, <span class="comment"># 设置均值点的属性，点的形状、填充色</span></span><br><span class="line">            medianprops = &#123;<span class="string">&#x27;linestyle&#x27;</span>:<span class="string">&#x27;--&#x27;</span>,<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;orange&#x27;</span>&#125;) <span class="comment"># 设置中位数线的属性，线的类型和颜色</span></span><br><span class="line"><span class="comment"># 设置y轴的范围</span></span><br><span class="line">plt.ylim(<span class="number">0</span>,<span class="number">85</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除箱线图的上边框与右边框的刻度标签</span></span><br><span class="line">plt.tick_params(top=<span class="string">&#x27;off&#x27;</span>, right=<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx0khch6l1j20c00800sl.jpg"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按舱级排序，为了后面正常显示分组盒形图的顺序</span></span><br><span class="line">titanic.sort_values(by = <span class="string">&#x27;Pclass&#x27;</span>, inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过for循环将不同仓位的年龄人群分别存储到列表Age变量中</span></span><br><span class="line">Age = []</span><br><span class="line">Levels = titanic.Pclass.unique()</span><br><span class="line"><span class="keyword">for</span> Pclass <span class="keyword">in</span> Levels:</span><br><span class="line">    Age.append(titanic.loc[titanic.Pclass==Pclass,<span class="string">&#x27;Age&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图</span></span><br><span class="line">plt.boxplot(x = Age,</span><br><span class="line">            patch_artist=<span class="literal">True</span>,</span><br><span class="line">            labels = [<span class="string">&#x27;一等舱&#x27;</span>,<span class="string">&#x27;二等舱&#x27;</span>,<span class="string">&#x27;三等舱&#x27;</span>], <span class="comment"># 添加具体的标签名称</span></span><br><span class="line">            showmeans=<span class="literal">True</span>,</span><br><span class="line">            boxprops = &#123;<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;black&#x27;</span>,<span class="string">&#x27;facecolor&#x27;</span>:<span class="string">&#x27;#9999ff&#x27;</span>&#125;,</span><br><span class="line">            flierprops = &#123;<span class="string">&#x27;marker&#x27;</span>:<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;markerfacecolor&#x27;</span>:<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;black&#x27;</span>&#125;,</span><br><span class="line">            meanprops = &#123;<span class="string">&#x27;marker&#x27;</span>:<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;markerfacecolor&#x27;</span>:<span class="string">&#x27;indianred&#x27;</span>&#125;,</span><br><span class="line">            medianprops = &#123;<span class="string">&#x27;linestyle&#x27;</span>:<span class="string">&#x27;--&#x27;</span>,<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;orange&#x27;</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx0kkhvvshj20c0080747.jpg"></p><h1 id="matplotlib-直方图"><a href="#matplotlib-直方图" class="headerlink" title="matplotlib(直方图)"></a>matplotlib(直方图)</h1><h2 id="hist函数的参数解读"><a href="#hist函数的参数解读" class="headerlink" title="hist函数的参数解读"></a>hist函数的参数解读</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">plt.hist(x, bins=<span class="number">10</span>, <span class="built_in">range</span>=<span class="literal">None</span>, normed=<span class="literal">False</span>,</span><br><span class="line">        weights=<span class="literal">None</span>, cumulative=<span class="literal">False</span>, bottom=<span class="literal">None</span>,</span><br><span class="line">        histtype=<span class="string">&#x27;bar&#x27;</span>, align=<span class="string">&#x27;mid&#x27;</span>, orientation=<span class="string">&#x27;vertical&#x27;</span>,</span><br><span class="line">        rwidth=<span class="literal">None</span>, log=<span class="literal">False</span>, color=<span class="literal">None</span>,</span><br><span class="line">        label=<span class="literal">None</span>, stacked=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">x</td><td align="left">指定要绘制直方图的数据</td></tr><tr><td align="left">bins</td><td align="left">指定直方图条形的个数</td></tr><tr><td align="left">range</td><td align="left">指定直方图数据的上下界，默认包含绘图数据的最大值和最小值</td></tr><tr><td align="left">normed</td><td align="left">是否将直方图的频数转换成频率</td></tr><tr><td align="left">weights</td><td align="left">该参数可为每一个数据点设置权重</td></tr><tr><td align="left">cumulative</td><td align="left">是否需要计算累计频数或频率</td></tr><tr><td align="left">bottom</td><td align="left">可以为直方图的每个条形添加基准线，默认为0</td></tr><tr><td align="left">histtype</td><td align="left">指定直方图的类型，默认为bar，除此还有’barstacked’, ‘step’,  ‘stepfilled’</td></tr><tr><td align="left">align</td><td align="left">设置条形边界值的对其方式，默认为mid，除此还有’left’和’right’</td></tr><tr><td align="left">orientation</td><td align="left">设置直方图的摆放方向，默认为垂直方向</td></tr><tr><td align="left">rwidth</td><td align="left">设置直方图条形宽度的百分比</td></tr><tr><td align="left">log</td><td align="left">是否需要对绘图数据进行log变换</td></tr><tr><td align="left">color</td><td align="left">设置直方图的填充色</td></tr><tr><td align="left">label</td><td align="left">设置直方图的标签，可通过legend展示其图例</td></tr><tr><td align="left">stacked</td><td align="left">当有多个数据时，是否需要将直方图呈堆叠摆放，默认水平摆放</td></tr></tbody></table><h2 id="一元直方图的绘制"><a href="#一元直方图的绘制" class="headerlink" title="一元直方图的绘制"></a>一元直方图的绘制</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入第三方包</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib.mlab <span class="keyword">as</span> mlab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文和负号的正常显示</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = [<span class="string">&#x27;SimHei&#x27;</span>]</span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取Titanic数据集</span></span><br><span class="line">titanic = pd.read_csv(<span class="string">&#x27;titanic_train.csv&#x27;</span>)</span><br><span class="line"><span class="comment"># 检查年龄是否有缺失any(titanic.Age.isnull())</span></span><br><span class="line"><span class="comment"># 不妨删除含有缺失年龄的观察</span></span><br><span class="line">titanic.dropna(subset=[<span class="string">&#x27;Age&#x27;</span>], inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图形的显示风格</span></span><br><span class="line">plt.style.use(<span class="string">&#x27;ggplot&#x27;</span>)</span><br><span class="line"><span class="comment"># 绘图：乘客年龄的频数直方图</span></span><br><span class="line">plt.hist(titanic.Age, <span class="comment"># 绘图数据</span></span><br><span class="line">        bins = <span class="number">20</span>, <span class="comment"># 指定直方图的条形数为20个</span></span><br><span class="line">        color = <span class="string">&#x27;steelblue&#x27;</span>, <span class="comment"># 指定填充色</span></span><br><span class="line">        edgecolor = <span class="string">&#x27;k&#x27;</span>, <span class="comment"># 指定直方图的边界色</span></span><br><span class="line">        label = <span class="string">&#x27;直方图&#x27;</span> )<span class="comment"># 为直方图呈现标签</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除图形顶部边界和右边界的刻度</span></span><br><span class="line">plt.tick_params(top=<span class="string">&#x27;off&#x27;</span>, right=<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图例</span></span><br><span class="line">plt.legend()</span><br><span class="line">plt.savefig(<span class="string">&#x27;直方图.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx0mm4l1gvj20c00803ye.jpg"></p><h2 id="累计频率直方图"><a href="#累计频率直方图" class="headerlink" title="累计频率直方图"></a>累计频率直方图</h2><ul><li>上图绘制的是年龄的频数直方图，从整体的分布来看，有点像正态分布，两边低中间高的倒钟形状。除此，我们还可以绘制累计频率直方图，并且设置5岁为组距，如下代码可以表示成：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 绘图：乘客年龄的累计频率直方图</span></span><br><span class="line">plt.hist(titanic.Age, <span class="comment"># 绘图数据</span></span><br><span class="line">        bins = np.arange(titanic.Age.<span class="built_in">min</span>(),titanic.Age.<span class="built_in">max</span>(),<span class="number">5</span>), <span class="comment"># 指定直方图的组距</span></span><br><span class="line">        normed = <span class="literal">True</span>, <span class="comment"># 设置为频率直方图</span></span><br><span class="line">        cumulative = <span class="literal">True</span>, <span class="comment"># 积累直方图</span></span><br><span class="line">        color = <span class="string">&#x27;steelblue&#x27;</span>, <span class="comment"># 指定填充色</span></span><br><span class="line">        edgecolor = <span class="string">&#x27;k&#x27;</span>, <span class="comment"># 指定直方图的边界色</span></span><br><span class="line">        label = <span class="string">&#x27;直方图&#x27;</span> )<span class="comment"># 为直方图呈现标签</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置坐标轴标签和标题</span></span><br><span class="line">plt.title(<span class="string">&#x27;乘客年龄的频率累计直方图&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;年龄&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;累计频率&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除图形顶部边界和右边界的刻度</span></span><br><span class="line">plt.tick_params(top=<span class="string">&#x27;off&#x27;</span>, right=<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图例</span></span><br><span class="line">plt.legend(loc = <span class="string">&#x27;best&#x27;</span>)</span><br><span class="line">plt.savefig(<span class="string">&#x27;乘客年龄的累计频率直方图.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx0knyeutbj20c0080mx8.jpg"></p><h1 id="正太分布图"><a href="#正太分布图" class="headerlink" title="正太分布图"></a>正太分布图</h1><ul><li>通过累计频率直方图就可以快速的发现什么年龄段的人数占了多少比重，例如35岁以下的乘客占了7成，这种图的解读有点像帕累托图。为了测试数据集是否近似服从正态分布，需要在直方图的基础上再绘制两条线，一条表示理论的正态分布曲线，另一条为核密度曲线，目的就是比较两条曲线的吻合度，越吻合就说明数据越近似于正态分布。接下来我们就在直方图的基础上再添加两条曲线：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 正太分布图</span></span><br><span class="line">plt.hist(titanic.Age, <span class="comment"># 绘图数据</span></span><br><span class="line">        bins = np.arange(titanic.Age.<span class="built_in">min</span>(),titanic.Age.<span class="built_in">max</span>(),<span class="number">5</span>), <span class="comment"># 指定直方图的组距</span></span><br><span class="line">        normed = <span class="literal">True</span>, <span class="comment"># 设置为频率直方图</span></span><br><span class="line">        color = <span class="string">&#x27;steelblue&#x27;</span>, <span class="comment"># 指定填充色</span></span><br><span class="line">        edgecolor = <span class="string">&#x27;k&#x27;</span>) <span class="comment"># 指定直方图的边界色</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置坐标轴标签和标题</span></span><br><span class="line">plt.title(<span class="string">&#x27;乘客年龄直方图&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;年龄&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;频率&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成正态曲线的数据</span></span><br><span class="line">x1 = np.linspace(titanic.Age.<span class="built_in">min</span>(), titanic.Age.<span class="built_in">max</span>(), <span class="number">1000</span>)</span><br><span class="line">normal = mlab.normpdf(x1, titanic.Age.mean(), titanic.Age.std())</span><br><span class="line"><span class="comment"># 绘制正态分布曲线</span></span><br><span class="line">line1, = plt.plot(x1,normal,<span class="string">&#x27;r-&#x27;</span>, linewidth = <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成核密度曲线的数据</span></span><br><span class="line">kde = mlab.GaussianKDE(titanic.Age)</span><br><span class="line">x2 = np.linspace(titanic.Age.<span class="built_in">min</span>(), titanic.Age.<span class="built_in">max</span>(), <span class="number">1000</span>)</span><br><span class="line"><span class="comment"># 绘制</span></span><br><span class="line">line2, = plt.plot(x2,kde(x2),<span class="string">&#x27;g-&#x27;</span>, linewidth = <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除图形顶部边界和右边界的刻度</span></span><br><span class="line">plt.tick_params(top=<span class="string">&#x27;off&#x27;</span>, right=<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图例</span></span><br><span class="line">plt.legend([line1, line2],[<span class="string">&#x27;正态分布曲线&#x27;</span>,<span class="string">&#x27;核密度曲线&#x27;</span>],loc=<span class="string">&#x27;best&#x27;</span>)</span><br><span class="line">plt.savefig(<span class="string">&#x27;正太分布图.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx0kp9cxanj20c0080jrt.jpg"></p><h1 id="二元直方图的绘制"><a href="#二元直方图的绘制" class="headerlink" title="二元直方图的绘制"></a>二元直方图的绘制</h1><ul><li>上面绘制的直方图都是基于所有乘客的年龄，如果想对比男女乘客的年龄直方图的话，我们可以通过两个hist将不同性别的直方图绘制到一张图内，具体代码如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提取不同性别的年龄数据</span></span><br><span class="line">age_female = titanic.Age[titanic.Sex == <span class="string">&#x27;female&#x27;</span>]</span><br><span class="line">age_male = titanic.Age[titanic.Sex == <span class="string">&#x27;male&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置直方图的组距</span></span><br><span class="line">bins = np.arange(titanic.Age.<span class="built_in">min</span>(), titanic.Age.<span class="built_in">max</span>(), <span class="number">2</span>)</span><br><span class="line"><span class="comment"># 男性乘客年龄直方图</span></span><br><span class="line">plt.hist(age_male, bins = bins, label = <span class="string">&#x27;男性&#x27;</span>, color = <span class="string">&#x27;steelblue&#x27;</span>, alpha = <span class="number">0.7</span>)</span><br><span class="line"><span class="comment"># 女性乘客年龄直方图</span></span><br><span class="line">plt.hist(age_female, bins = bins, label = <span class="string">&#x27;女性&#x27;</span>, alpha = <span class="number">0.6</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置坐标轴标签和标题</span></span><br><span class="line">plt.title(<span class="string">&#x27;乘客年龄直方图&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;年龄&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;人数&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除图形顶部边界和右边界的刻度</span></span><br><span class="line">plt.tick_params(top=<span class="string">&#x27;off&#x27;</span>, right=<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图例</span></span><br><span class="line">plt.legend()</span><br><span class="line">plt.savefig(<span class="string">&#x27;二元直方图.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx0krsx0j5j20c0080t8q.jpg"></p><h1 id="matplotlib-折线图"><a href="#matplotlib-折线图" class="headerlink" title="matplotlib(折线图)"></a>matplotlib(折线图)</h1><h2 id="plot函数的参数解读"><a href="#plot函数的参数解读" class="headerlink" title="plot函数的参数解读"></a>plot函数的参数解读</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plt.hist(x,y,linestyle,</span><br><span class="line">    linewidth,color,marker,</span><br><span class="line">    markersize,markeredgecolor,</span><br><span class="line">    markerfactcolor,label,alpha)</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">x</td><td align="left">指定折线图的x轴数据</td></tr><tr><td align="left">y</td><td align="left">指定折线图的y轴数据</td></tr><tr><td align="left">linestyle</td><td align="left">指定折线的类型，可以是实线、虚线、点虚线、点点线等，默认文实线</td></tr><tr><td align="left">linewidth</td><td align="left">指定折线的宽度</td></tr><tr><td align="left">marker</td><td align="left">可以为折线图添加点，该参数是设置点的形状</td></tr><tr><td align="left">markersize</td><td align="left">设置点的大小</td></tr><tr><td align="left">markeredgecolor</td><td align="left">设置点的边框色</td></tr><tr><td align="left">markerfactcolor</td><td align="left">设置点的填充色</td></tr><tr><td align="left">label</td><td align="left">为折线图添加标签，类似于图例的作用</td></tr></tbody></table><h1 id="一元折线图的绘制"><a href="#一元折线图的绘制" class="headerlink" title="一元折线图的绘制"></a>一元折线图的绘制</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入模块</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置绘图风格</span></span><br><span class="line">plt.style.use(<span class="string">&#x27;ggplot&#x27;</span>)</span><br><span class="line"><span class="comment"># 设置中文编码和负号的正常显示</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = <span class="string">&#x27;SimHei&#x27;</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取需要绘图的数据</span></span><br><span class="line">article_reading = pd.read_excel(<span class="string">&#x27;wechart.xlsx&#x27;</span>)</span><br><span class="line"><span class="comment"># 取出8月份至9月28日的数据</span></span><br><span class="line">sub_data = article_reading.loc[article_reading.date &gt;= <span class="string">&#x27;2017-08-01&#x27;</span> ,:]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图框的大小</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>,<span class="number">6</span>))</span><br><span class="line"><span class="comment"># 绘图</span></span><br><span class="line">plt.plot(sub_data.date, <span class="comment"># x轴数据</span></span><br><span class="line">         sub_data.article_reading_cnts, <span class="comment"># y轴数据</span></span><br><span class="line">         linestyle = <span class="string">&#x27;-&#x27;</span>, <span class="comment"># 折线类型</span></span><br><span class="line">         linewidth = <span class="number">2</span>, <span class="comment"># 折线宽度</span></span><br><span class="line">         color = <span class="string">&#x27;steelblue&#x27;</span>, <span class="comment"># 折线颜色</span></span><br><span class="line">         marker = <span class="string">&#x27;o&#x27;</span>, <span class="comment"># 点的形状</span></span><br><span class="line">         markersize = <span class="number">6</span>, <span class="comment"># 点的大小</span></span><br><span class="line">         markeredgecolor=<span class="string">&#x27;black&#x27;</span>, <span class="comment"># 点的边框色</span></span><br><span class="line">         markerfacecolor=<span class="string">&#x27;brown&#x27;</span>) <span class="comment"># 点的填充色</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加标题和坐标轴标签</span></span><br><span class="line">plt.title(<span class="string">&#x27;公众号每天阅读人数趋势图&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;日期&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;人数&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 剔除图框上边界和右边界的刻度</span></span><br><span class="line">plt.tick_params(top = <span class="string">&#x27;off&#x27;</span>, right = <span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为了避免x轴日期刻度标签的重叠，设置x轴刻度自动展现，并且45度倾斜</span></span><br><span class="line">fig.autofmt_xdate(rotation = <span class="number">45</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li>由于x轴是日期型数据，当数据量一多的时候，就会导致刻度标签的重叠或拥挤，为了防止重叠的产生，我们需要让日期型的x轴刻度标签自动展现，从而避免重叠的现象</li></ul><h2 id="图形优化"><a href="#图形优化" class="headerlink" title="图形优化"></a>图形优化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入模块</span></span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图框的大小</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>,<span class="number">6</span>))</span><br><span class="line"><span class="comment"># 绘图</span></span><br><span class="line">plt.plot(sub_data.date, <span class="comment"># x轴数据</span></span><br><span class="line">         sub_data.article_reading_cnts, <span class="comment"># y轴数据</span></span><br><span class="line">         linestyle = <span class="string">&#x27;-&#x27;</span>, <span class="comment"># 折线类型</span></span><br><span class="line">         linewidth = <span class="number">2</span>, <span class="comment"># 折线宽度</span></span><br><span class="line">         color = <span class="string">&#x27;steelblue&#x27;</span>, <span class="comment"># 折线颜色</span></span><br><span class="line">         marker = <span class="string">&#x27;o&#x27;</span>, <span class="comment"># 点的形状</span></span><br><span class="line">         markersize = <span class="number">6</span>, <span class="comment"># 点的大小</span></span><br><span class="line">         markeredgecolor=<span class="string">&#x27;black&#x27;</span>, <span class="comment"># 点的边框色</span></span><br><span class="line">         markerfacecolor=<span class="string">&#x27;steelblue&#x27;</span>) <span class="comment"># 点的填充色</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加标题和坐标轴标签</span></span><br><span class="line">plt.title(<span class="string">&#x27;公众号每天阅读人数趋势图&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;日期&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;人数&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 剔除图框上边界和右边界的刻度</span></span><br><span class="line">plt.tick_params(top = <span class="string">&#x27;off&#x27;</span>, right = <span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取图的坐标信息</span></span><br><span class="line">ax = plt.gca()</span><br><span class="line"><span class="comment"># 设置日期的显示格式  </span></span><br><span class="line">date_format = mpl.dates.DateFormatter(<span class="string">&quot;%Y-%m-%d&quot;</span>)  </span><br><span class="line">ax.xaxis.set_major_formatter(date_format)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置x轴显示多少个日期刻度</span></span><br><span class="line"><span class="comment">#xlocator = mpl.ticker.LinearLocator(10)</span></span><br><span class="line"><span class="comment"># 设置x轴每个刻度的间隔天数</span></span><br><span class="line">xlocator = mpl.ticker.MultipleLocator(<span class="number">5</span>)</span><br><span class="line">ax.xaxis.set_major_locator(xlocator)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为了避免x轴日期刻度标签的重叠，设置x轴刻度自动展现，并且45度倾斜</span></span><br><span class="line">fig.autofmt_xdate(rotation = <span class="number">45</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图形</span></span><br></pre></td></tr></table></figure><h1 id="多元折线图的绘制"><a href="#多元折线图的绘制" class="headerlink" title="多元折线图的绘制"></a>多元折线图的绘制</h1><ul><li>如果你需要在一张图形中画上两条折线图，也很简单，只需要在代码中写入两次plot函数即可，其他都不需要改动了。具体可以参考下面的代码逻辑：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置图框的大小</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>,<span class="number">6</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图--阅读人数趋势</span></span><br><span class="line">plt.plot(sub_data.date, <span class="comment"># x轴数据</span></span><br><span class="line">         sub_data.article_reading_cnts, <span class="comment"># y轴数据</span></span><br><span class="line">         linestyle = <span class="string">&#x27;-&#x27;</span>, <span class="comment"># 折线类型</span></span><br><span class="line">         linewidth = <span class="number">2</span>, <span class="comment"># 折线宽度</span></span><br><span class="line">         color = <span class="string">&#x27;steelblue&#x27;</span>, <span class="comment"># 折线颜色</span></span><br><span class="line">         marker = <span class="string">&#x27;o&#x27;</span>, <span class="comment"># 点的形状</span></span><br><span class="line">         markersize = <span class="number">6</span>, <span class="comment"># 点的大小</span></span><br><span class="line">         markeredgecolor=<span class="string">&#x27;black&#x27;</span>, <span class="comment"># 点的边框色</span></span><br><span class="line">         markerfacecolor=<span class="string">&#x27;steelblue&#x27;</span>, <span class="comment"># 点的填充色</span></span><br><span class="line">         label = <span class="string">&#x27;阅读人数&#x27;</span>) <span class="comment"># 添加标签</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图--阅读人次趋势</span></span><br><span class="line">plt.plot(sub_data.date, <span class="comment"># x轴数据</span></span><br><span class="line">         sub_data.article_reading_times, <span class="comment"># y轴数据</span></span><br><span class="line">         linestyle = <span class="string">&#x27;-&#x27;</span>, <span class="comment"># 折线类型</span></span><br><span class="line">         linewidth = <span class="number">2</span>, <span class="comment"># 折线宽度</span></span><br><span class="line">         color = <span class="string">&#x27;#ff9999&#x27;</span>, <span class="comment"># 折线颜色</span></span><br><span class="line">         marker = <span class="string">&#x27;o&#x27;</span>, <span class="comment"># 点的形状</span></span><br><span class="line">         markersize = <span class="number">6</span>, <span class="comment"># 点的大小</span></span><br><span class="line">         markeredgecolor=<span class="string">&#x27;black&#x27;</span>, <span class="comment"># 点的边框色</span></span><br><span class="line">         markerfacecolor=<span class="string">&#x27;#ff9999&#x27;</span>, <span class="comment"># 点的填充色</span></span><br><span class="line">         label = <span class="string">&#x27;阅读人次&#x27;</span>) <span class="comment"># 添加标签</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加标题和坐标轴标签</span></span><br><span class="line">plt.title(<span class="string">&#x27;公众号每天阅读人数和人次趋势图&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;日期&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;人数&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 剔除图框上边界和右边界的刻度</span></span><br><span class="line">plt.tick_params(top = <span class="string">&#x27;off&#x27;</span>, right = <span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取图的坐标信息</span></span><br><span class="line">ax = plt.gca()</span><br><span class="line"><span class="comment"># 设置日期的显示格式  </span></span><br><span class="line">date_format = mpl.dates.DateFormatter(<span class="string">&#x27;%m-%d&#x27;</span>)  </span><br><span class="line">ax.xaxis.set_major_formatter(date_format)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置x轴显示多少个日期刻度</span></span><br><span class="line"><span class="comment">#xlocator = mpl.ticker.LinearLocator(10)</span></span><br><span class="line"><span class="comment"># 设置x轴每个刻度的间隔天数</span></span><br><span class="line">xlocator = mpl.ticker.MultipleLocator(<span class="number">3</span>)</span><br><span class="line">ax.xaxis.set_major_locator(xlocator)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为了避免x轴日期刻度标签的重叠，设置x轴刻度自动展现，并且45度倾斜</span></span><br><span class="line">fig.autofmt_xdate(rotation = <span class="number">45</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图例</span></span><br><span class="line">plt.legend()</span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h1 id="matplotlib-散点图"><a href="#matplotlib-散点图" class="headerlink" title="matplotlib(散点图)"></a>matplotlib(散点图)</h1><h2 id="scatter函数的参数解读"><a href="#scatter函数的参数解读" class="headerlink" title="scatter函数的参数解读"></a>scatter函数的参数解读</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">lt.scatter(x, y, s=<span class="number">20</span>,</span><br><span class="line">            c=<span class="literal">None</span>, marker=<span class="string">&#x27;o&#x27;</span>,</span><br><span class="line">            cmap=<span class="literal">None</span>, norm=<span class="literal">None</span>,</span><br><span class="line">            vmin=<span class="literal">None</span>, vmax=<span class="literal">None</span>,</span><br><span class="line">            alpha=<span class="literal">None</span>, linewidths=<span class="literal">None</span>,</span><br><span class="line">            edgecolors=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">x</td><td align="left">指定散点图的x轴数据</td></tr><tr><td align="left">y</td><td align="left">指定散点图的y轴数据</td></tr><tr><td align="left">s</td><td align="left">指定散点图点的大小，默认为20，通过传入新的变量，实现气泡图的绘制</td></tr><tr><td align="left">c</td><td align="left">指定散点图点的颜色，默认为蓝色</td></tr><tr><td align="left">marker</td><td align="left">指定散点图点的形状，默认为圆形</td></tr><tr><td align="left">cmap</td><td align="left">指定色图，只有当c参数是一个浮点型的数组的时候才起作用</td></tr><tr><td align="left">norm</td><td align="left">设置数据亮度，标准化到0~1之间，使用该参数仍需要c为浮点型的数组</td></tr><tr><td align="left">vmin、vmax</td><td align="left">亮度设置，与norm类似，如果使用了norm则该参数无效</td></tr><tr><td align="left">alpha</td><td align="left">设置散点的透明度</td></tr><tr><td align="left">linewidths</td><td align="left">设置散点边界线的宽度</td></tr><tr><td align="left">edgecolors</td><td align="left">设置散点边界线的颜色</td></tr></tbody></table><h1 id="一般散点图的绘制"><a href="#一般散点图的绘制" class="headerlink" title="一般散点图的绘制"></a>一般散点图的绘制</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入模块</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置绘图风格</span></span><br><span class="line">plt.style.use(<span class="string">&#x27;ggplot&#x27;</span>)</span><br><span class="line"><span class="comment"># 设置中文编码和负号的正常显示</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = <span class="string">&#x27;SimHei&#x27;</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读入数据</span></span><br><span class="line">cars = pd.read_csv(<span class="string">&#x27;cars.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图</span></span><br><span class="line">plt.scatter(cars.speed, <span class="comment"># x轴数据为汽车速度</span></span><br><span class="line">            cars.dist, <span class="comment"># y轴数据为汽车的刹车距离</span></span><br><span class="line">            s = <span class="number">30</span>, <span class="comment"># 设置点的大小</span></span><br><span class="line">            c = <span class="string">&#x27;steelblue&#x27;</span>, <span class="comment"># 设置点的颜色</span></span><br><span class="line">            marker = <span class="string">&#x27;s&#x27;</span>, <span class="comment"># 设置点的形状</span></span><br><span class="line">            alpha = <span class="number">0.9</span>, <span class="comment"># 设置点的透明度</span></span><br><span class="line">            linewidths = <span class="number">0.3</span>, <span class="comment"># 设置散点边界的粗细</span></span><br><span class="line">            edgecolors = <span class="string">&#x27;red&#x27;</span> <span class="comment"># 设置散点边界的颜色</span></span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加轴标签和标题plt.title(&#x27;汽车速度与刹车距离的关系&#x27;)</span></span><br><span class="line">plt.xlabel(<span class="string">&#x27;汽车速度&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;刹车距离&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除图边框的顶部刻度和右边刻度</span></span><br><span class="line">plt.tick_params(top = <span class="string">&#x27;off&#x27;</span>, right = <span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.savefig(<span class="string">&#x27;一般散点图.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx0mqe23jgj20c0080q2w.jpg"></p><h1 id="分组散点图的绘制"><a href="#分组散点图的绘制" class="headerlink" title="分组散点图的绘制"></a>分组散点图的绘制</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读取数据</span></span><br><span class="line">iris = pd.read_csv(<span class="string">&#x27;iris.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置中文编码和负号的正常显示</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = <span class="string">&#x27;SimHei&#x27;</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义颜色</span></span><br><span class="line">colors = [<span class="string">&#x27;steelblue&#x27;</span>, <span class="string">&#x27;#9999ff&#x27;</span>, <span class="string">&#x27;#ff9999&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 三种不同的花品种</span></span><br><span class="line">Species = iris.Species.unique()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过循环的方式，完成分组散点图的绘制</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(Species)):</span><br><span class="line">    plt.scatter(iris.loc[iris.Species == Species[i], <span class="string">&#x27;Petal.Length&#x27;</span>],</span><br><span class="line">                iris.loc[iris.Species == Species[i], <span class="string">&#x27;Petal.Width&#x27;</span>],</span><br><span class="line">                s = <span class="number">35</span>, c = colors[i], label = Species[i])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加轴标签和标题</span></span><br><span class="line">plt.title(<span class="string">&#x27;花瓣长度与宽度的关系&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;花瓣长度&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;花瓣宽度&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除图边框的顶部刻度和右边刻度</span></span><br><span class="line">plt.tick_params(top = <span class="string">&#x27;off&#x27;</span>, right = <span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"><span class="comment"># 添加图例</span></span><br><span class="line">plt.legend(loc = <span class="string">&#x27;upper left&#x27;</span>)</span><br><span class="line">plt.savefig(<span class="string">&#x27;分组散点图.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx0mt6kcxgj20c0080q35.jpg"></p><h1 id="气泡图的绘制"><a href="#气泡图的绘制" class="headerlink" title="气泡图的绘制"></a>气泡图的绘制</h1> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入第三方包</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置中文编码和负号的正常显示</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = <span class="string">&#x27;SimHei&#x27;</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取数据</span></span><br><span class="line">sales = pd.read_excel(<span class="string">&#x27;sales.xlsx&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制气泡图</span></span><br><span class="line">plt.scatter(sales.finish_ratio,</span><br><span class="line">            sales.profit_ratio,</span><br><span class="line">            c = <span class="string">&#x27;steelblue&#x27;</span>,</span><br><span class="line">            s = sales.tot_target/<span class="number">30</span>,</span><br><span class="line">            edgecolor = <span class="string">&#x27;black&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改变轴刻度的显示方式（百分比形式）</span></span><br><span class="line">plt.xticks(np.arange(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0.1</span>), [<span class="built_in">str</span>(i*<span class="number">100</span>)+<span class="string">&#x27;%&#x27;</span> <span class="keyword">for</span> i <span class="keyword">in</span> np.arange(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0.1</span>)])</span><br><span class="line">plt.yticks(np.arange(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0.1</span>), [<span class="built_in">str</span>(i*<span class="number">100</span>)+<span class="string">&#x27;%&#x27;</span> <span class="keyword">for</span> i <span class="keyword">in</span> np.arange(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0.1</span>)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置x轴和y轴的数值范围</span></span><br><span class="line">plt.xlim(<span class="number">0.2</span>, <span class="number">0.7</span>)</span><br><span class="line">plt.ylim(<span class="number">0.25</span>, <span class="number">0.85</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加轴标签和标题</span></span><br><span class="line">plt.title(<span class="string">&#x27;完成率与利润率的关系&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;完成率&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;利润率&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除图边框的顶部刻度和右边刻度</span></span><br><span class="line">plt.tick_params(top = <span class="string">&#x27;off&#x27;</span>, right = <span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx0mvachvuj20c0080dg0.jpg"></p><h1 id="散点图-线性回归线"><a href="#散点图-线性回归线" class="headerlink" title="散点图+线性回归线"></a>散点图+线性回归线</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入第三方模块</span></span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line"></span><br><span class="line"><span class="comment"># 散点图</span></span><br><span class="line">plt.scatter(cars.speed, <span class="comment"># x轴数据为汽车速度</span></span><br><span class="line">            cars.dist, <span class="comment"># y轴数据为汽车的刹车距离</span></span><br><span class="line">            s = <span class="number">30</span>, <span class="comment"># 设置点的大小</span></span><br><span class="line">            c = <span class="string">&#x27;black&#x27;</span>, <span class="comment"># 设置点的颜色</span></span><br><span class="line">            marker = <span class="string">&#x27;o&#x27;</span>, <span class="comment"># 设置点的形状</span></span><br><span class="line">            alpha = <span class="number">0.9</span>, <span class="comment"># 设置点的透明度</span></span><br><span class="line">            linewidths = <span class="number">0.3</span>, <span class="comment"># 设置散点边界的粗细</span></span><br><span class="line">            label = <span class="string">&#x27;观测点&#x27;</span></span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建模</span></span><br><span class="line">reg = LinearRegression().fit(cars.speed.reshape(-<span class="number">1</span>,<span class="number">1</span>), cars.dist)</span><br><span class="line"><span class="comment"># 回归预测值</span></span><br><span class="line">pred = reg.predict(cars.speed.reshape(-<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制回归线</span></span><br><span class="line">plt.plot(cars.speed, pred, linewidth = <span class="number">2</span>, label = <span class="string">&#x27;回归线&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加轴标签和标题</span></span><br><span class="line">plt.title(<span class="string">&#x27;汽车速度与刹车距离的关系&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;汽车速度&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;刹车距离&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除图边框的顶部刻度和右边刻度</span></span><br><span class="line">plt.tick_params(top = <span class="string">&#x27;off&#x27;</span>, right = <span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图例</span></span><br><span class="line">plt.legend(loc = <span class="string">&#x27;upper left&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h1 id="matplotlib-雷达图"><a href="#matplotlib-雷达图" class="headerlink" title="matplotlib(雷达图)"></a>matplotlib(雷达图)</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入第三方模块</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文和负号的正常显示</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = <span class="string">&#x27;SimHei&#x27;</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用ggplot的绘图风格</span></span><br><span class="line">plt.style.use(<span class="string">&#x27;ggplot&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构造数据</span></span><br><span class="line">values = [<span class="number">3.2</span>,<span class="number">2.1</span>,<span class="number">3.5</span>,<span class="number">2.8</span>,<span class="number">3</span>]</span><br><span class="line">feature = [<span class="string">&#x27;个人能力&#x27;</span>,<span class="string">&#x27;QC知识&#x27;</span>,<span class="string">&#x27;解决问题能力&#x27;</span>,<span class="string">&#x27;服务质量意识&#x27;</span>,<span class="string">&#x27;团队精神&#x27;</span>]</span><br><span class="line"></span><br><span class="line">N = <span class="built_in">len</span>(values)</span><br><span class="line"><span class="comment"># 设置雷达图的角度，用于平分切开一个圆面</span></span><br><span class="line">angles=np.linspace(<span class="number">0</span>, <span class="number">2</span>*np.pi, N, endpoint=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为了使雷达图一圈封闭起来，需要下面的步骤</span></span><br><span class="line">values=np.concatenate((values,[values[<span class="number">0</span>]]))</span><br><span class="line">angles=np.concatenate((angles,[angles[<span class="number">0</span>]]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图</span></span><br><span class="line">fig=plt.figure()</span><br><span class="line"><span class="comment"># 这里一定要设置为极坐标格式</span></span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>, polar=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 绘制折线图</span></span><br><span class="line">ax.plot(angles, values, <span class="string">&#x27;o-&#x27;</span>, linewidth=<span class="number">2</span>)</span><br><span class="line"><span class="comment"># 填充颜色</span></span><br><span class="line">ax.fill(angles, values, alpha=<span class="number">0.25</span>)</span><br><span class="line"><span class="comment"># 添加每个特征的标签</span></span><br><span class="line">ax.set_thetagrids(angles * <span class="number">180</span>/np.pi, feature)</span><br><span class="line"><span class="comment"># 设置雷达图的范围</span></span><br><span class="line">ax.set_ylim(<span class="number">0</span>,<span class="number">5</span>)</span><br><span class="line"><span class="comment"># 添加标题</span></span><br><span class="line">plt.title(<span class="string">&#x27;活动前后员工状态表现&#x27;</span>)</span><br><span class="line"><span class="comment"># 添加网格线</span></span><br><span class="line">ax.grid(<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx0m6gdokgj20c0080aai.jpg"></p><h1 id="多条线的雷达图"><a href="#多条线的雷达图" class="headerlink" title="多条线的雷达图"></a>多条线的雷达图</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入第三方模块</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文和负号的正常显示</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = <span class="string">&#x27;SimHei&#x27;</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用ggplot的绘图风格</span></span><br><span class="line">plt.style.use(<span class="string">&#x27;ggplot&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构造数据</span></span><br><span class="line">values = [<span class="number">3.2</span>,<span class="number">2.1</span>,<span class="number">3.5</span>,<span class="number">2.8</span>,<span class="number">3</span>]</span><br><span class="line">values2 = [<span class="number">4</span>,<span class="number">4.1</span>,<span class="number">4.5</span>,<span class="number">4</span>,<span class="number">4.1</span>]</span><br><span class="line">feature = [<span class="string">&#x27;个人能力&#x27;</span>,<span class="string">&#x27;QC知识&#x27;</span>,<span class="string">&#x27;解决问题能力&#x27;</span>,<span class="string">&#x27;服务质量意识&#x27;</span>,<span class="string">&#x27;团队精神&#x27;</span>]</span><br><span class="line"></span><br><span class="line">N = <span class="built_in">len</span>(values)</span><br><span class="line"><span class="comment"># 设置雷达图的角度，用于平分切开一个圆面</span></span><br><span class="line">angles=np.linspace(<span class="number">0</span>, <span class="number">2</span>*np.pi, N, endpoint=<span class="literal">False</span>)</span><br><span class="line"><span class="comment"># 为了使雷达图一圈封闭起来，需要下面的步骤</span></span><br><span class="line">values=np.concatenate((values,[values[<span class="number">0</span>]]))</span><br><span class="line">values2=np.concatenate((values2,[values2[<span class="number">0</span>]]))</span><br><span class="line">angles=np.concatenate((angles,[angles[<span class="number">0</span>]]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图</span></span><br><span class="line">fig=plt.figure()</span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>, polar=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 绘制折线图</span></span><br><span class="line">ax.plot(angles, values, <span class="string">&#x27;o-&#x27;</span>, linewidth=<span class="number">2</span>, label = <span class="string">&#x27;活动前&#x27;</span>)</span><br><span class="line"><span class="comment"># 填充颜色</span></span><br><span class="line">ax.fill(angles, values, alpha=<span class="number">0.25</span>)</span><br><span class="line"><span class="comment"># 绘制第二条折线图</span></span><br><span class="line">ax.plot(angles, values2, <span class="string">&#x27;o-&#x27;</span>, linewidth=<span class="number">2</span>, label = <span class="string">&#x27;活动后&#x27;</span>)</span><br><span class="line">ax.fill(angles, values2, alpha=<span class="number">0.25</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加每个特征的标签</span></span><br><span class="line">ax.set_thetagrids(angles * <span class="number">180</span>/np.pi, feature)</span><br><span class="line"><span class="comment"># 设置雷达图的范围</span></span><br><span class="line">ax.set_ylim(<span class="number">0</span>,<span class="number">5</span>)</span><br><span class="line"><span class="comment"># 添加标题</span></span><br><span class="line">plt.title(<span class="string">&#x27;活动前后员工状态表现&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加网格线</span></span><br><span class="line">ax.grid(<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 设置图例</span></span><br><span class="line">plt.legend(loc = <span class="string">&#x27;best&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx0m7o9accj20c0080mxt.jpg"></p><h1 id="pygal模块则提供了更加简单的雷达图函数"><a href="#pygal模块则提供了更加简单的雷达图函数" class="headerlink" title="pygal模块则提供了更加简单的雷达图函数"></a>pygal模块则提供了更加简单的雷达图函数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入第三方模块</span></span><br><span class="line"><span class="keyword">import</span> pygal</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用Radar这个类，并设置雷达图的填充，及数据范围</span></span><br><span class="line">radar_chart = pygal.Radar(fill = <span class="literal">True</span>, <span class="built_in">range</span>=(<span class="number">0</span>,<span class="number">5</span>))</span><br><span class="line"><span class="comment"># 添加雷达图的标题</span></span><br><span class="line">radar_chart.title = <span class="string">&#x27;活动前后员工状态表现&#x27;</span></span><br><span class="line"><span class="comment"># 添加雷达图各顶点的含义</span></span><br><span class="line">radar_chart.x_labels = [<span class="string">&#x27;个人能力&#x27;</span>,<span class="string">&#x27;QC知识&#x27;</span>,<span class="string">&#x27;解决问题能力&#x27;</span>,<span class="string">&#x27;服务质量意识&#x27;</span>,<span class="string">&#x27;团队精神&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制两条雷达图区域</span></span><br><span class="line">radar_chart.add(<span class="string">&#x27;活动前&#x27;</span>, [<span class="number">3.2</span>,<span class="number">2.1</span>,<span class="number">3.5</span>,<span class="number">2.8</span>,<span class="number">3</span>])</span><br><span class="line">radar_chart.add(<span class="string">&#x27;活动后&#x27;</span>, [<span class="number">4</span>,<span class="number">4.1</span>,<span class="number">4.5</span>,<span class="number">4</span>,<span class="number">4.1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存图像</span></span><br><span class="line">radar_chart.render_to_file(<span class="string">&#x27;radar_chart.svg&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="matplotlib-面积图"><a href="#matplotlib-面积图" class="headerlink" title="matplotlib(面积图)"></a>matplotlib(面积图)</h1><h2 id="stackplot函数语法及参数含义"><a href="#stackplot函数语法及参数含义" class="headerlink" title="stackplot函数语法及参数含义"></a>stackplot函数语法及参数含义</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stackplot(x,*args,**kargs)</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">x</td><td align="left">指定面积图的x轴数据</td></tr><tr><td align="left">*args</td><td align="left">为可变参数，可以接受任意多的y轴数据，即各个拆分的数据对象</td></tr><tr><td align="left">**kargs</td><td align="left">为关键字参数，可以通过传递其他参数来修饰面积图，如标签、颜色</td></tr></tbody></table><hr><ul><li>可用的关键字参数：</li></ul><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">labels</td><td align="left">以列表的形式传递每一块面积图包含的标签，通过图例展现</td></tr><tr><td align="left">colors</td><td align="left">设置不同的颜色填充面积图</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ========== Python3 + Jupyter ========== #</span></span><br><span class="line"><span class="comment"># 导入第三方模块</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图形的显示风格</span></span><br><span class="line">plt.style.use(<span class="string">&#x27;ggplot&#x27;</span>)</span><br><span class="line"><span class="comment"># 设置中文和负号正常显示</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = <span class="string">&#x27;SimHei&#x27;</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取数据</span></span><br><span class="line">transport = pd.read_excel(<span class="string">&#x27;transport.xls&#x27;</span>)</span><br><span class="line"><span class="comment"># 窥探数据框的前5行</span></span><br><span class="line">transport.head()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 折线图的x变量值，即Jan（一月份）到Aug（八月份）8个值</span></span><br><span class="line">N = np.arange(transport.shape[<span class="number">1</span>]-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制拆分的折线图</span></span><br><span class="line">labels = transport.Index</span><br><span class="line">channel = transport.columns[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(transport.shape[<span class="number">0</span>]):</span><br><span class="line">    plt.plot(N, <span class="comment"># x坐标</span></span><br><span class="line">             transport.loc[i,<span class="string">&#x27;Jan&#x27;</span>:<span class="string">&#x27;Aug&#x27;</span>], <span class="comment"># y坐标</span></span><br><span class="line">             label = labels[i], <span class="comment"># 添加标签</span></span><br><span class="line">             marker = <span class="string">&#x27;o&#x27;</span>, <span class="comment"># 给折线图添加圆形点</span></span><br><span class="line">             linewidth = <span class="number">2</span> <span class="comment"># 设置线的宽度</span></span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加标题和坐标轴标签</span></span><br><span class="line">plt.title(<span class="string">&#x27;2017年各运输渠道的运输量&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;运输量(万吨)&#x27;</span>)</span><br><span class="line"><span class="comment"># 修改x轴的刻度标签</span></span><br><span class="line">plt.xticks(N,channel)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 剔除图框上边界和右边界的刻度</span></span><br><span class="line">plt.tick_params(top = <span class="string">&#x27;off&#x27;</span>, right = <span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图例（即显示label的效果）  </span></span><br><span class="line">plt.legend(loc = <span class="string">&#x27;best&#x27;</span>)  </span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li>这就是绘制分组的折线图思想，虽然折线图能够反映各个渠道的运输量随月份的波动趋势，但无法观察到1月份到8月份的各自总量。接下来我们看看面积图的展现。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">x = N</span><br><span class="line"><span class="comment"># 将铁路运输、公路运输和水路运输各月的值提取出来，存储到y1~y3</span></span><br><span class="line"><span class="comment"># 千万千万记得，提取出数据框的一列时，需要将序列的数据类型进行强制转换，否则会报错</span></span><br><span class="line">y1 = transport.loc[<span class="number">0</span>,<span class="string">&#x27;Jan&#x27;</span>:<span class="string">&#x27;Aug&#x27;</span>].astype(<span class="string">&#x27;int&#x27;</span>)</span><br><span class="line">y2 = transport.loc[<span class="number">1</span>,<span class="string">&#x27;Jan&#x27;</span>:<span class="string">&#x27;Aug&#x27;</span>].astype(<span class="string">&#x27;int&#x27;</span>)</span><br><span class="line">y3 = transport.loc[<span class="number">2</span>,<span class="string">&#x27;Jan&#x27;</span>:<span class="string">&#x27;Aug&#x27;</span>].astype(<span class="string">&#x27;int&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义各区块面积的含义</span></span><br><span class="line">colors = [<span class="string">&#x27;#ff9999&#x27;</span>,<span class="string">&#x27;#9999ff&#x27;</span>,<span class="string">&#x27;#cc1234&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制面积图</span></span><br><span class="line">plt.stackplot(x, <span class="comment"># x轴</span></span><br><span class="line">              y1,y2,y3, <span class="comment"># 可变参数，接受多个y</span></span><br><span class="line">              labels = labels, <span class="comment"># 定义各区块面积的含义</span></span><br><span class="line">              colors = colors <span class="comment"># 设置各区块的填充色</span></span><br><span class="line">             )</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加标题和坐标轴标签</span></span><br><span class="line">plt.title(<span class="string">&#x27;2017年各运输渠道的运输量&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;累积运输量(万吨)&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改x轴的刻度</span></span><br><span class="line">plt.xticks(N,channel)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 剔除图框上边界和右边界的刻度</span></span><br><span class="line">plt.tick_params(top = <span class="string">&#x27;off&#x27;</span>, right = <span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图例（即显示labels的效果）  </span></span><br><span class="line">plt.legend(loc = <span class="string">&#x27;upper left&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h1 id="matplotlib-树地图"><a href="#matplotlib-树地图" class="headerlink" title="matplotlib(树地图)"></a>matplotlib(树地图)</h1><h2 id="squarify-plot函数"><a href="#squarify-plot函数" class="headerlink" title="squarify.plot函数"></a>squarify.plot函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">squarify.plot(sizes,</span><br><span class="line">        norm_x=<span class="number">100</span>,</span><br><span class="line">        norm_y=<span class="number">100</span>,</span><br><span class="line">        color=<span class="literal">None</span>,</span><br><span class="line">        label=<span class="literal">None</span>,</span><br><span class="line">        value=<span class="literal">None</span>,</span><br><span class="line">        alpha,</span><br><span class="line">        **kwargs)</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">sizes</td><td align="left">指定离散变量各水平对应的数值，即反映树地图子块的面积大小</td></tr><tr><td align="left">norm_x</td><td align="left">默认将x轴的范围限定在0-100之内</td></tr><tr><td align="left">norm_y</td><td align="left">默认将y轴的范围限定在0-100之内</td></tr><tr><td align="left">color</td><td align="left">自定义设置树地图子块的填充色</td></tr><tr><td align="left">label</td><td align="left">为每个子块指定标签</td></tr><tr><td align="left">value</td><td align="left">为每个子块添加数值大小的标签</td></tr><tr><td align="left">alpha</td><td align="left">设置填充色的透明度</td></tr><tr><td align="left">**kwargs</td><td align="left">关键字参数，与条形图的关键字参数类似，如设置边框色、边框粗细等</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入第三方包</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> squarify</span><br><span class="line"></span><br><span class="line"><span class="comment">#中文及负号处理办法</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = <span class="string">&#x27;SimHei&#x27;</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据</span></span><br><span class="line">name = [<span class="string">&#x27;国内增值税&#x27;</span>,<span class="string">&#x27;国内消费税&#x27;</span>,<span class="string">&#x27;企业所得税&#x27;</span>,<span class="string">&#x27;个人所得税&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;进口增值税、消费税&#x27;</span>,<span class="string">&#x27;出口退税&#x27;</span>,<span class="string">&#x27;城市维护建设税&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;车辆购置税&#x27;</span>,<span class="string">&#x27;印花税&#x27;</span>,<span class="string">&#x27;资源税&#x27;</span>,<span class="string">&#x27;土地和房税&#x27;</span>,<span class="string">&#x27;车船税烟叶税等&#x27;</span>]</span><br><span class="line">income = [<span class="number">3908</span>,<span class="number">856</span>,<span class="number">801</span>,<span class="number">868</span>,<span class="number">1361</span>,<span class="number">1042</span>,<span class="number">320</span>,<span class="number">291</span>,<span class="number">175</span>,<span class="number">111</span>,<span class="number">414</span>,<span class="number">63</span>]</span><br><span class="line">        </span><br><span class="line"><span class="comment"># 绘图</span></span><br><span class="line">colors = [<span class="string">&#x27;steelblue&#x27;</span>,<span class="string">&#x27;#9999ff&#x27;</span>,<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;indianred&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;green&#x27;</span>,<span class="string">&#x27;yellow&#x27;</span>,<span class="string">&#x27;orange&#x27;</span>]</span><br><span class="line">          plot = squarify.plot(sizes = income, <span class="comment"># 指定绘图数据</span></span><br><span class="line">                     label = name, <span class="comment"># 指定标签</span></span><br><span class="line">                     color = colors, <span class="comment"># 指定自定义颜色</span></span><br><span class="line">                     alpha = <span class="number">0.6</span>, <span class="comment"># 指定透明度</span></span><br><span class="line">                     value = income, <span class="comment"># 添加数值标签</span></span><br><span class="line">                     edgecolor = <span class="string">&#x27;white&#x27;</span>, <span class="comment"># 设置边界框为白色</span></span><br><span class="line">                     linewidth =<span class="number">3</span> <span class="comment"># 设置边框宽度为3</span></span><br><span class="line">                    )</span><br><span class="line">          <span class="comment"># 设置标签大小</span></span><br><span class="line">plt.rc(<span class="string">&#x27;font&#x27;</span>, size=<span class="number">8</span>)</span><br><span class="line"><span class="comment"># 设置标题大小</span></span><br><span class="line">plot.set_title(<span class="string">&#x27;2017年8月中央财政收支情况&#x27;</span>,fontdict = &#123;<span class="string">&#x27;fontsize&#x27;</span>:<span class="number">15</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除坐标轴</span></span><br><span class="line">plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"><span class="comment"># 去除上边框和右边框刻度</span></span><br><span class="line">plt.tick_params(top = <span class="string">&#x27;off&#x27;</span>, right = <span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fx0miksd7jj20c0080jro.jpg"></p><h1 id="数据文件"><a href="#数据文件" class="headerlink" title="数据文件"></a>数据文件</h1><p><a href="https://pan.baidu.com/s/1hMRJAz0OvsAtYhsbjY4njw">链接提取码: u6rg</a></p><hr><ul><li>作者：天痕坤</li><li><a href="https://blog.csdn.net/kun1280437633/article/details/80841364">原文</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PySpider 马蜂窝网景点</title>
      <link href="/posts/PySpiderMaFengwo.html"/>
      <url>/posts/PySpiderMaFengwo.html</url>
      
        <content type="html"><![CDATA[<p>PySpider 马蜂窝景点信息</p><span id="more"></span><h1 id="PySpider"><a href="#PySpider" class="headerlink" title="PySpider"></a>PySpider</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Created on 2018-11-06 11:52:31</span></span><br><span class="line"><span class="comment"># Project: PySpider_MaFengWo</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pyspider.libs.base_handler <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> pyspider.libs.utils <span class="keyword">import</span> md5string</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> fake_useragent <span class="keyword">import</span> UserAgent</span><br><span class="line"></span><br><span class="line">default_headers = &#123;</span><br><span class="line">           <span class="string">&#x27;Accept&#x27;</span>:<span class="string">&#x27;application/json, text/javascript, */*; q=0.01&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;Accept-Encoding&#x27;</span>:<span class="string">&#x27;gzip, deflate&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;Accept-Language&#x27;</span>:<span class="string">&#x27;zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;Connection&#x27;</span>:<span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;Content-Length&#x27;</span>:<span class="number">68</span>,</span><br><span class="line">           <span class="string">&#x27;Content-Type&#x27;</span>:<span class="string">&#x27;application/x-www-form-urlencoded; charset=UTF-8&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;Connection&#x27;</span>:<span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;Upgrade-Insecure-Requests&#x27;</span>:<span class="number">1</span>,</span><br><span class="line">           <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3100.0 Safari/537.36&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;X-Requested-With&#x27;</span>:<span class="string">&#x27;XMLHttpRequest&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Handler</span>(<span class="title class_ inherited__">BaseHandler</span>):</span><br><span class="line">    crawl_config = &#123;</span><br><span class="line">        <span class="string">&#x27;headers&#x27;</span>:default_headers,</span><br><span class="line">        <span class="string">&#x27;timeout&#x27;</span>:<span class="number">300</span>,</span><br><span class="line">        <span class="string">&#x27;proxy&#x27;</span>:<span class="string">&#x27;192.168.1.1:8080&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">    @every(<span class="params">minutes=<span class="number">24</span> * <span class="number">60</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">on_start</span>(<span class="params">self</span>):</span><br><span class="line">        url = <span class="string">&#x27;http://www.mafengwo.cn/jd/10088/gonglve.html&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.crawl(url,callback=<span class="variable language_">self</span>.get_index,fetch_type=<span class="string">&#x27;js&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_taskid</span>(<span class="params">self, task</span>):</span><br><span class="line">        <span class="keyword">return</span> md5string(task[<span class="string">&#x27;url&#x27;</span>]+json.dumps(task[<span class="string">&#x27;fetch&#x27;</span>].get(<span class="string">&#x27;data&#x27;</span>, <span class="string">&#x27;&#x27;</span>)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_index</span>(<span class="params">self,response</span>):</span><br><span class="line">        url = <span class="string">&#x27;http://www.mafengwo.cn/ajax/router.php&#x27;</span></span><br><span class="line">        total = <span class="built_in">int</span>(response.doc(<span class="string">&#x27;.pi.pg-last&#x27;</span>).attr(<span class="string">&#x27;data-page&#x27;</span>))</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,total+<span class="number">1</span>):</span><br><span class="line">            data = &#123;</span><br><span class="line">                    <span class="string">&#x27;sAct&#x27;</span>:<span class="string">&#x27;KMdd_StructWebAjax|GetPoisByTag&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;iMddid&#x27;</span>:<span class="string">&#x27;10088&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27; iTagId&#x27;</span>:<span class="number">0</span>,</span><br><span class="line">                    <span class="string">&#x27;iPage&#x27;</span>:i</span><br><span class="line">             &#125;</span><br><span class="line">            <span class="variable language_">self</span>.crawl(url,method=<span class="string">&#x27;POST&#x27;</span>,data=data,callback=<span class="variable language_">self</span>.index_page)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 每一个回调detail_page的任务有效期是10天</span></span><br><span class="line"><span class="meta">    @config(<span class="params">age=<span class="number">10</span> * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">index_page</span>(<span class="params">self, response</span>):</span><br><span class="line">        <span class="built_in">print</span>(response.text)</span><br><span class="line">        result = response.text.replace(<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(result)</span><br><span class="line">        pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;&lt;a href=&quot;(.*?)&quot; target=&#x27;</span>)</span><br><span class="line">        urls = re.findall(pattern,result)</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">            mainurl = <span class="string">&#x27;https://www.mafengwo.cn&#x27;</span></span><br><span class="line">            <span class="variable language_">self</span>.crawl(mainurl + url, callback=<span class="variable language_">self</span>.detail_page,fetch_type=<span class="string">&#x27;js&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 数字越大优先级越高</span></span><br><span class="line"><span class="meta">    @config(<span class="params">priority=<span class="number">2</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">detail_page</span>(<span class="params">self, response</span>):</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: response.doc(<span class="string">&#x27;h1&#x27;</span>).text(),</span><br><span class="line">        <span class="string">&quot;location&quot;</span>:response.doc(<span class="string">&#x27;.mhd &gt; p&#x27;</span>).text(),</span><br><span class="line">        <span class="string">&quot;price&quot;</span>:response.doc(<span class="string">&#x27;.mod-detail dd &gt; div&#x27;</span>).text(),</span><br><span class="line">        <span class="string">&quot;phone&quot;</span>:response.doc(<span class="string">&#x27;.tel &gt; .content&#x27;</span>).text(),</span><br><span class="line">        <span class="string">&quot;visittime&quot;</span>:response.doc(<span class="string">&#x27;.item-time &gt; .content&#x27;</span>).text(),</span><br><span class="line">        <span class="string">&quot;website&quot;</span>:response.doc(<span class="string">&#x27;.content &gt; a&#x27;</span>).text(),</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Kmeans</title>
      <link href="/posts/PythonKMean.html"/>
      <url>/posts/PythonKMean.html</url>
      
        <content type="html"><![CDATA[<p>Python Kmeans</p><span id="more"></span><h1 id="KMeans"><a href="#KMeans" class="headerlink" title="KMeans"></a>KMeans</h1><ul><li>K - means是一个反复迭代的过程，算法分为四个步骤：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 18-11-5 下午12:10</span></span><br><span class="line"><span class="comment"># @Author  : Vitan</span></span><br><span class="line"><span class="comment"># @File    : Kmeans.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> KMeans</span><br><span class="line">x = np.random.randint(<span class="number">1</span>,<span class="number">50</span>,[<span class="number">20</span>,<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个给定形状和类型的用0填充的数组y</span></span><br><span class="line">y = np.zeros(<span class="number">20</span>)</span><br><span class="line">k = <span class="number">3</span> <span class="comment"># 分成3类</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 选取数据空间中的K个对象作为初始中心，每个对象代表一个聚类中心；</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">initcenter</span>(<span class="params">x,k</span>):</span><br><span class="line">    <span class="keyword">return</span> x[:k]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 对于样本中的数据对象，根据它们与这些聚类中心的欧氏距离，</span></span><br><span class="line"><span class="comment"># 按距离最近的准则将它们分到距离它们最近的聚类中心（最相似）所对应的类；</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算欧氏距离</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">nearest</span>(<span class="params">kc,i</span>):</span><br><span class="line">    d = <span class="built_in">abs</span>(kc -i) <span class="comment"># asb() 取绝对值</span></span><br><span class="line">    <span class="comment"># 返回与聚类中心最小距离所在类别的索引号</span></span><br><span class="line">    w = np.where(d == np.<span class="built_in">min</span>(d))</span><br><span class="line">    <span class="keyword">return</span> w[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按距离最近的准则将它们分到距离它们最近的聚类中心（最相似）所对应的类</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">xclassify</span>(<span class="params">x, y, kc</span>):</span><br><span class="line">    <span class="comment"># 对数组的每个值进行分类，shape[0]读取矩阵第一维度的长度</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(x.shape[<span class="number">0</span>]):</span><br><span class="line">        y[i] = nearest(kc, x[i])</span><br><span class="line">        <span class="keyword">return</span> y</span><br><span class="line">kc = initcenter(x,k)</span><br><span class="line">y = xclassify(x,y,kc)</span><br><span class="line"><span class="built_in">print</span>(kc,y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 更新聚类中心：将每个类别中所有对象所对应的均值作为该类别的聚类中心，计算目标函数的值；</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">kcmean</span>(<span class="params">x,y,kc,k</span>):</span><br><span class="line">    l = <span class="built_in">list</span>(kc)</span><br><span class="line">    flag = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(k):</span><br><span class="line">        m = np.where(y ==<span class="number">0</span>)</span><br><span class="line">        n = np.mean(x[m])</span><br><span class="line">        <span class="keyword">if</span> l[c] != n:</span><br><span class="line">            l[c] = n</span><br><span class="line">            flag = <span class="literal">True</span></span><br><span class="line">            <span class="built_in">print</span>(l,flag)</span><br><span class="line">    <span class="keyword">return</span> (np.array(l),flag)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4 . 判断聚类中心和目标函数的值是否发生改变，若不变，则输出结果，若改变，则返回2）</span></span><br><span class="line">kc = initcenter(x,k)</span><br><span class="line">flag = <span class="literal">True</span> <span class="comment"># 聚类中心发生改变</span></span><br><span class="line"><span class="built_in">print</span>(x,y,kc,flag)</span><br><span class="line"><span class="keyword">while</span> flag:</span><br><span class="line">    y = xclassify(x,y,kc)</span><br><span class="line">    kc,flag = kcmean(x,y,kc,k)</span><br><span class="line"><span class="built_in">print</span>(y,kc)</span><br></pre></td></tr></table></figure><h1 id="鸢尾花"><a href="#鸢尾花" class="headerlink" title="鸢尾花"></a>鸢尾花</h1><ul><li>鸢尾花花瓣长度数据做聚类并用散点图显示</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">iris = load_iris()</span><br><span class="line">data = iris.data</span><br><span class="line">iris_length = data[:,<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">x = np.array(iris_length)</span><br><span class="line">y = np.zeros(x.shape[<span class="number">0</span>]) <span class="comment"># x.shape[0] 只读取x的第一维度长度</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 选取数据空间中的K个对象作为初始中心，每个对象代表一个聚类中心；</span></span><br><span class="line">kc = initcenter(x,<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按距离最近的准则将它们分到距离它们最近的聚类中心（最相似）所对应的类</span></span><br><span class="line">flag = <span class="literal">True</span></span><br><span class="line"><span class="keyword">while</span> flag:</span><br><span class="line">    y = xclassify(x,y,kc)</span><br><span class="line">    kc,flag = kcmean(x,y,kc,<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(kc,flag)</span><br><span class="line"></span><br><span class="line">plt.scatter(iris_length, iris_length, c = y,cmap = <span class="string">&#x27;rainbow&#x27;</span>)</span><br><span class="line">plt.savefig(<span class="string">&#x27;花瓣长度散点图.png&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li>用sklearn.cluster.KMeans，花瓣长度数据做聚类</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">iris_length = data[:, <span class="number">2</span>:<span class="number">3</span>]</span><br><span class="line">kmeans = KMeans(n_clusters = <span class="number">4</span> )</span><br><span class="line">result = kmeans.fit(iris_length)</span><br><span class="line">kc1 = result.cluster_centers_</span><br><span class="line">y_kmeans = kmeans.predict(iris_length) <span class="comment"># 预测每个样本的聚类索引</span></span><br><span class="line"></span><br><span class="line">plt.scatter(iris_length,np.linspace(<span class="number">1</span>,<span class="number">150</span>,<span class="number">150</span>),c = y_kmeans,marker = <span class="string">&#x27;D&#x27;</span>,cmap = <span class="string">&#x27;rainbow&#x27;</span>)</span><br><span class="line">plt.savefig(<span class="string">&#x27;sklearn.cluster.KMeans长度.png&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li>鸢尾花完整数据做聚类</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">k_means1 = KMeans(n_clusters = <span class="number">4</span>)</span><br><span class="line">result1 = k_means1.fit(data)</span><br><span class="line">kc2 = result1.cluster_centers_</span><br><span class="line">y_kmeans1 = k_means1.predict(data)</span><br><span class="line"></span><br><span class="line">plt.scatter(data[:, <span class="number">0</span>], data[:, <span class="number">1</span>], c = y_kmeans1, marker = <span class="string">&#x27;p&#x27;</span>,cmap = <span class="string">&#x27;rainbow&#x27;</span>)</span><br><span class="line">plt.savefig(<span class="string">&#x27;完整数据聚类.png&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Tips</title>
      <link href="/posts/PythonTips.html"/>
      <url>/posts/PythonTips.html</url>
      
        <content type="html"><![CDATA[<p>Python 小技巧</p><!---more--><h1 id="打印-index"><a href="#打印-index" class="headerlink" title="打印 index"></a>打印 index</h1><p>对列表，数列打印他们的 index</p><ul><li>一般方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cities = [<span class="string">&#x27;Shanghai&#x27;</span>,<span class="string">&#x27;beijing&#x27;</span>,<span class="string">&#x27;Chengdu&#x27;</span>]</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> cities:</span><br><span class="line">    <span class="built_in">print</span>(i +<span class="number">1</span>,<span class="string">&#x27;--&gt;&#x27;</span>,c)</span><br><span class="line">    i += <span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>更好的方法(使用 enumerate)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cities = [<span class="string">&#x27;Shanghai&#x27;</span>,<span class="string">&#x27;beijing&#x27;</span>,<span class="string">&#x27;Chengdu&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> i,city <span class="keyword">in</span> <span class="built_in">enumerate</span>(cities):</span><br><span class="line">    <span class="built_in">print</span>(i+<span class="number">1</span>,<span class="string">&#x27;--&gt;&#x27;</span>,city)</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fwscu1oiy9j204d0303yd.jpg"></p><h1 id="两个系列循环"><a href="#两个系列循环" class="headerlink" title="两个系列循环"></a>两个系列循环</h1><p>对两个序列进行计算或处理</p><ul><li>一般方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">&#x27;leo&#x27;</span>,<span class="string">&#x27;jack&#x27;</span>,<span class="string">&#x27;james&#x27;</span>]</span><br><span class="line">colors = [<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;green&#x27;</span>,<span class="string">&#x27;blue&#x27;</span>,<span class="string">&#x27;yellow&#x27;</span>]</span><br><span class="line">n = <span class="built_in">min</span>(<span class="built_in">len</span>(names),<span class="built_in">len</span>(colors))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    <span class="built_in">print</span>(names[i],<span class="string">&#x27;--&gt;&#x27;</span>,colors[i])</span><br></pre></td></tr></table></figure><ul><li>更好的方法(使用 zip)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">&#x27;leo&#x27;</span>,<span class="string">&#x27;jack&#x27;</span>,<span class="string">&#x27;james&#x27;</span>]</span><br><span class="line">colors = [<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;green&#x27;</span>,<span class="string">&#x27;blue&#x27;</span>,<span class="string">&#x27;yellow&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> name,color <span class="keyword">in</span> <span class="built_in">zip</span>(names,colors):</span><br><span class="line">    <span class="built_in">print</span>(name,<span class="string">&#x27;--&gt;&#x27;</span>,color)</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fwscu1m48wj204l02r3yd.jpg"></p><h1 id="交换变量"><a href="#交换变量" class="headerlink" title="交换变量"></a>交换变量</h1><p>多个变量之间的交换，如冒泡排序法</p><ul><li>一般方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">1</span></span><br><span class="line">y = <span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&gt;&gt;Before:x=&#123;&#125;,y=&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(x,y))</span><br><span class="line">tmp = y</span><br><span class="line">y = x</span><br><span class="line">x = tmp</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&gt;&gt;After:x = &#123;&#125;,y = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(x,y))</span><br></pre></td></tr></table></figure><ul><li>更好的方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">1</span></span><br><span class="line">y= <span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Before:x = &#123;&#125;,y = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(x,y))</span><br><span class="line">x,y = y,x</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;After:x = &#123;&#125;,y = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(x,y))</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fwscu1nt3kj205a01pt8j.jpg"></p><h1 id="字典的读取"><a href="#字典的读取" class="headerlink" title="字典的读取"></a>字典的读取</h1><p>对字典的访问和读取，读取的字典 key 为空，需要一个缺省值</p><ul><li>一般方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">students = &#123;<span class="string">&#x27;Lili&#x27;</span>:<span class="number">18</span>,<span class="string">&#x27;Sam&#x27;</span>:<span class="number">25</span>&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;Susan&#x27;</span> <span class="keyword">in</span> students:</span><br><span class="line">    student = students[<span class="string">&#x27;Susan&#x27;</span>]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    student = <span class="string">&#x27;unknow&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Susan is &#123;&#125; yesrs old&#x27;</span>.<span class="built_in">format</span>(student))</span><br></pre></td></tr></table></figure><ul><li>更好的方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">students = &#123;<span class="string">&#x27;Lili&#x27;</span>:<span class="number">18</span>,<span class="string">&#x27;San&#x27;</span>:<span class="number">25</span>&#125;</span><br><span class="line">student = students.get(<span class="string">&#x27;Susan&#x27;</span>,<span class="string">&#x27;unknow&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Susan is &#123;&#125; yesrs&#x27;</span>.<span class="built_in">format</span>(student))</span><br></pre></td></tr></table></figure><ul><li>巧妙地利用字典的 get 的方法。若字典没有 Susan 的 key，则用 unknow 来表示缺省值。</li></ul><h1 id="循环查找"><a href="#循环查找" class="headerlink" title="循环查找"></a>循环查找</h1><p>在一个大的循环中作搜索，如在文件中搜索关键字，从文件名列表中查找特殊的文件名</p><ul><li>一般方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">target_letter = <span class="string">&#x27;d&#x27;</span></span><br><span class="line">letters = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>]</span><br><span class="line"></span><br><span class="line">found = <span class="literal">False</span></span><br><span class="line"><span class="keyword">for</span> letter <span class="keyword">in</span> letters:</span><br><span class="line">    <span class="keyword">if</span> letter == target_letter:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Found&#x27;</span>)</span><br><span class="line">        found = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> found:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Not Found&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>更好的方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">target_letter = <span class="string">&#x27;d&#x27;</span></span><br><span class="line">letters = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> letter <span class="keyword">in</span> letters:</span><br><span class="line">    <span class="keyword">if</span> letter == target_letter:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;found&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Not Found&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="文件读取查找"><a href="#文件读取查找" class="headerlink" title="文件读取查找"></a>文件读取查找</h1><p>打开以文件，对内容进行循环读取处理</p><ul><li>一般方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;data.txt&#x27;</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    text = f.read()</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> text.split(<span class="string">&#x27;\n&#x27;</span>):</span><br><span class="line">        <span class="built_in">print</span>(line)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    f.close()</span><br></pre></td></tr></table></figure><ul><li>更好的方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;data.txt&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        <span class="built_in">print</span>(line.strip(<span class="string">&#x27;\n&#x27;</span>))</span><br></pre></td></tr></table></figure><h1 id="关于锁的写法"><a href="#关于锁的写法" class="headerlink" title="关于锁的写法"></a>关于锁的写法</h1><p>对于并发操作尤其是多线程的操作，对同一内存进行读写操作时，加锁保护</p><ul><li>一般方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">lock = threading.Lock()</span><br><span class="line">lock.acquire()</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Citical par,do somethins...&#x27;</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    lock.release()</span><br></pre></td></tr></table></figure><ul><li>更好的方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line">lock = threading.Lock()</span><br><span class="line"><span class="keyword">with</span> lock:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Citical par,do somethins...&#x27;</span>)</span><br></pre></td></tr></table></figure><hr><p><strong>Via</strong></p><ul><li><a href="https://www.bilibili.com/read/cv1417439">七种不一样的Python代码写法，让你写出一手漂亮的代码</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PySpider 猫途鹰景点</title>
      <link href="/posts/PySpiderMaoTuYing.html"/>
      <url>/posts/PySpiderMaoTuYing.html</url>
      
        <content type="html"><![CDATA[<p>PySpider 爬猫途鹰网排名景点并保存至 MongoDB</p><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Created on 2018-10-30 18:01:28</span></span><br><span class="line"><span class="comment"># Project: Maotu</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pyspider.libs.base_handler <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Handler</span>(<span class="title class_ inherited__">BaseHandler</span>):</span><br><span class="line">    crawl_config = &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    client = pymongo.MongoClient(<span class="string">&#x27;localhost&#x27;</span>)</span><br><span class="line">    db = client[<span class="string">&#x27;maotu&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @every(<span class="params">minutes=<span class="number">24</span> * <span class="number">60</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">on_start</span>(<span class="params">self</span>):</span><br><span class="line">        url = <span class="string">&#x27;https://www.tripadvisor.cn/Attractions-g294217-Activities-Hong_Kong.html&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">        self.crawl(url,callback=self.index_page,validate_cert=False,fetch_type=&#x27;</span>js<span class="string">&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @config(age=10 * 24 * 60 * 60)</span></span><br><span class="line"><span class="string">    def index_page(self, response):</span></span><br><span class="line"><span class="string">        for each in response.doc(&#x27;</span>.attraction_element .listing_title  &gt; a<span class="string">&#x27;).items():</span></span><br><span class="line"><span class="string">            self.crawl(each.attr.href, callback=self.detail_page,validate_cert=False,fetch_type=&#x27;</span>js<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">        nextlink = response.doc(&#x27;</span>.nav.<span class="built_in">next</span><span class="string">&#x27;).attr.href</span></span><br><span class="line"><span class="string">        self.crawl(nextlink,callback=self.index_page,validate_cert=False,fetch_type=&#x27;</span>js<span class="string">&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @config(priority=2)</span></span><br><span class="line"><span class="string">    def detail_page(self, response):</span></span><br><span class="line"><span class="string">            name =  response.doc(&#x27;</span>.h1<span class="string">&#x27;).text(),</span></span><br><span class="line"><span class="string">            rank =response.doc(&#x27;</span>b &gt; span<span class="string">&#x27;).text(),</span></span><br><span class="line"><span class="string">            location = response.doc(&#x27;</span>.headerBL &gt; div<span class="string">&#x27;).text(),</span></span><br><span class="line"><span class="string">            view = response.doc(&#x27;</span>.seeAllReviews<span class="string">&#x27;).text()[:-3],</span></span><br><span class="line"><span class="string">            score = response.doc(&#x27;</span>.overallRating<span class="string">&#x27;).text(),</span></span><br><span class="line"><span class="string">            kfsj = response.doc(&#x27;</span>.headerBL .header_detail<span class="string">&#x27;).text()[5:],</span></span><br><span class="line"><span class="string">            phone = response.doc(&#x27;</span>.contact &gt; .phone &gt; div<span class="string">&#x27;).text()[0:-4]</span></span><br><span class="line"><span class="string">            return &#123;</span></span><br><span class="line"><span class="string">                &quot;name&quot;:name,</span></span><br><span class="line"><span class="string">                &quot;rank&quot;:rank,</span></span><br><span class="line"><span class="string">                &quot;location&quot;:location,</span></span><br><span class="line"><span class="string">                &quot;view&quot;:view,</span></span><br><span class="line"><span class="string">                 &quot;score&quot;:score,</span></span><br><span class="line"><span class="string">                &quot;kf&quot;:kfsj,</span></span><br><span class="line"><span class="string">                &quot;phone&quot;:phone</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    def on_result(self,result):</span></span><br><span class="line"><span class="string">                if result:</span></span><br><span class="line"><span class="string">                       self.save_to_mongo(result)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    def save_to_mongo(self,result):</span></span><br><span class="line"><span class="string">                if self.db[&#x27;</span>MaoTU_HongKong<span class="string">&#x27;].insert(result):</span></span><br><span class="line"><span class="string">                    print(&#x27;</span>savinf to mongo<span class="string">&#x27;,result)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>鸢尾花 Sklearn</title>
      <link href="/posts/IrisSklearn.html"/>
      <url>/posts/IrisSklearn.html</url>
      
        <content type="html"><![CDATA[<p>Sklearn 鸢尾花</p><span id="more"></span><h1 id="鸢尾花"><a href="#鸢尾花" class="headerlink" title="鸢尾花"></a>鸢尾花</h1><p>从sklearn 包自带的数据集中读出鸢尾花数据集 data</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 18-10-29 上午11:58</span></span><br><span class="line"><span class="comment"># @Author  : Vitan</span></span><br><span class="line"><span class="comment"># @File    : Sklearn_iris.py</span></span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">data = load_iris()</span><br><span class="line"><span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure><h2 id="查看data类型，包含哪些数据"><a href="#查看data类型，包含哪些数据" class="headerlink" title="查看data类型，包含哪些数据"></a>查看data类型，包含哪些数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(data))</span><br><span class="line"><span class="built_in">print</span>(data.keys())</span><br></pre></td></tr></table></figure><h2 id="取出鸢尾花特征和鸢尾花类别数据，查看其形状及数据类型"><a href="#取出鸢尾花特征和鸢尾花类别数据，查看其形状及数据类型" class="headerlink" title="取出鸢尾花特征和鸢尾花类别数据，查看其形状及数据类型"></a>取出鸢尾花特征和鸢尾花类别数据，查看其形状及数据类型</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">iris_feature = data.feature_names,data.data</span><br><span class="line">iris_target = data.target_names,data.target</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;鸢尾花特征数据：&#x27;</span>,iris_feature)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;鸢尾花类别：&#x27;</span>,iris_target)</span><br><span class="line">sepal_len = np.array(<span class="built_in">list</span>(<span class="built_in">len</span>[<span class="number">0</span>] <span class="keyword">for</span> <span class="built_in">len</span> <span class="keyword">in</span> data.data))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;花萼长度：&#x27;</span>,sepal_len)</span><br></pre></td></tr></table></figure><h2 id="取出所有花的花萼长度-cm-的数据"><a href="#取出所有花的花萼长度-cm-的数据" class="headerlink" title="取出所有花的花萼长度(cm)的数据"></a>取出所有花的花萼长度(cm)的数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sepal_len = np.array(<span class="built_in">list</span>(<span class="built_in">len</span>[<span class="number">0</span>] <span class="keyword">for</span> <span class="built_in">len</span> <span class="keyword">in</span> data.data))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;所有花萼长宽：&#x27;</span>,sepal_len)</span><br></pre></td></tr></table></figure><h2 id="取出所有花的花瓣长度-cm-花瓣宽度-cm-的数据"><a href="#取出所有花的花瓣长度-cm-花瓣宽度-cm-的数据" class="headerlink" title="取出所有花的花瓣长度(cm)+花瓣宽度(cm)的数据"></a>取出所有花的花瓣长度(cm)+花瓣宽度(cm)的数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">  <span class="comment"># 花瓣长度</span></span><br><span class="line">    petal_len = np.array(<span class="built_in">list</span>(<span class="built_in">len</span>[<span class="number">2</span>] <span class="keyword">for</span> <span class="built_in">len</span> <span class="keyword">in</span> data.data))</span><br><span class="line">    <span class="comment"># 花萼宽度</span></span><br><span class="line">    petal_wid = np.array(<span class="built_in">list</span>(<span class="built_in">len</span>[<span class="number">3</span>] <span class="keyword">for</span> <span class="built_in">len</span> <span class="keyword">in</span> data.data))</span><br><span class="line">iris_len = (petal_len,petal_wid)</span><br><span class="line"><span class="built_in">print</span>(iris_len)</span><br></pre></td></tr></table></figure><h2 id="取出某朵花的四个特征及其类别。"><a href="#取出某朵花的四个特征及其类别。" class="headerlink" title="取出某朵花的四个特征及其类别。"></a>取出某朵花的四个特征及其类别。</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;四个特征&#x27;</span>,data.data[<span class="number">1</span>],data.target[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h2 id="将所有花的特征和类别分成三组，每组50个"><a href="#将所有花的特征和类别分成三组，每组50个" class="headerlink" title="将所有花的特征和类别分成三组，每组50个"></a>将所有花的特征和类别分成三组，每组50个</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">iris_set = []</span><br><span class="line">iris_ver = []</span><br><span class="line">iris_vir = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环遍历所有的数据</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">150</span>):</span><br><span class="line">    <span class="comment"># 类别为0的为 setosa 花，生成一条setosa类的鸢尾花数据</span></span><br><span class="line">    <span class="keyword">if</span> data.target[i] == <span class="number">0</span>:</span><br><span class="line">        Data = data.data[i].tolist()</span><br><span class="line">        Data.append(<span class="string">&#x27;setosa&#x27;</span>)</span><br><span class="line">        iris_set.append(Data)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 类别为1的即为 versicolor，生成一条versicolor类的鸢尾花数据</span></span><br><span class="line">    <span class="keyword">elif</span> data.target[i] == <span class="number">1</span>:</span><br><span class="line">        Data = data.data[i].tolist()</span><br><span class="line">        Data.append(<span class="string">&#x27;versicolor&#x27;</span>)</span><br><span class="line">        iris_ver.append(Data)</span><br><span class="line">    <span class="comment"># 3 为维吉尼亚鸢尾花</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        Data = data.data[i].tolist()</span><br><span class="line">        Data.append(<span class="string">&#x27;virginica&#x27;</span>)</span><br><span class="line">        iris_vir.append(Data)</span><br><span class="line"><span class="built_in">print</span>(iris_set,iris_ver,iris_vir)</span><br></pre></td></tr></table></figure><h2 id="生成新的数组，每个元素包含四个特征-类别"><a href="#生成新的数组，每个元素包含四个特征-类别" class="headerlink" title="生成新的数组，每个元素包含四个特征+类别"></a>生成新的数组，每个元素包含四个特征+类别</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iris_result = np.array([iris_set, iris_ver, iris_vir])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;分组:&quot;</span>, iris_result)</span><br></pre></td></tr></table></figure><h2 id="计算鸢尾花花瓣长度的最大值，平均值，中值，均方差。"><a href="#计算鸢尾花花瓣长度的最大值，平均值，中值，均方差。" class="headerlink" title="计算鸢尾花花瓣长度的最大值，平均值，中值，均方差。"></a>计算鸢尾花花瓣长度的最大值，平均值，中值，均方差。</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#鸢尾花花瓣长度的数据</span></span><br><span class="line">petal_length = np.array(<span class="built_in">list</span>(<span class="built_in">len</span>[<span class="number">3</span>] <span class="keyword">for</span> <span class="built_in">len</span> <span class="keyword">in</span> data.data))</span><br><span class="line"><span class="built_in">print</span>(petal_length) <span class="comment"># 输出数据</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;花瓣长度的最大值&#x27;</span>,np.<span class="built_in">max</span>(petal_length))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;平均值：&#x27;</span>,np.mean(petal_length))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;中值：&#x27;</span>,np.median(petal_length))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;均方差：&#x27;</span>,np.std(petal_length))</span><br></pre></td></tr></table></figure><h2 id="显示鸢尾花某一特征的曲线图，散点图。"><a href="#显示鸢尾花某一特征的曲线图，散点图。" class="headerlink" title="显示鸢尾花某一特征的曲线图，散点图。"></a>显示鸢尾花某一特征的曲线图，散点图。</h2><ul><li>曲线图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">iris_feature = data.feature_names,data.data</span><br><span class="line"></span><br><span class="line">x = np.linspace(<span class="number">0</span>,<span class="number">150</span>,num = <span class="number">150</span>)</span><br><span class="line">plt.plot(x,iris_feature)</span><br><span class="line">plt.savefig(<span class="string">&quot;特征曲线图.png&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li>散点图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plt.scatter(x,iris_feature)</span><br><span class="line">plt.savefig(<span class="string">&quot;特征散点图.png&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="np-random"><a href="#np-random" class="headerlink" title="np.random"></a>np.random</h2><ul><li>用 np.random.normal() 产生一个正态分布的随机数组，并显示出来。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mu = <span class="number">50</span></span><br><span class="line">sigma = <span class="number">0.6</span></span><br><span class="line">num = <span class="number">3000</span></span><br><span class="line">zu = np.random.normal(mu,sigma,num)</span><br><span class="line">count,bins,ignored = plt.hist(zu,<span class="number">30</span>,normed = <span class="literal">True</span>)</span><br><span class="line">plt.plot(bins,<span class="number">1</span>/(sigma*np.sqrt(<span class="number">2</span>*np.pi))*np.exp( - (bins-mu)**<span class="number">2</span>/(<span class="number">2</span>*sigma*<span class="number">2</span>)),linewidth=<span class="number">2</span>,color=<span class="string">&#x27;g&#x27;</span>)</span><br><span class="line">plt.savefig(<span class="string">&quot;np.random.normal().png&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li>np.random.randn()产生一个正态分布的随机数组，并显示出来。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">np.random.rand(n) 产生标准正态分布， 即均值为0 标准差为1 的高斯分布</span></span><br><span class="line"><span class="string">同于 np.random.normal(0, 1, n)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">mu = <span class="number">100</span></span><br><span class="line">sigma = <span class="number">15</span></span><br><span class="line">num_bins = <span class="number">50</span> <span class="comment"># 分隔的段数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 产生500个均值为100， 方差为15 的随机数,等于 x = np.random.normal(100, 15, 500)</span></span><br><span class="line">x = mu + sigma * np.random.randn(<span class="number">500</span>)</span><br><span class="line">fig, ax = plt.subplots()</span><br><span class="line">n, bins, patches = ax.hist(x, num_bins, normed=<span class="literal">True</span>)<span class="comment"># x为数据，ax.hist()即是画柱状图的函数</span></span><br><span class="line">plt.plot(bins,<span class="number">1</span>/(sigma*np.sqrt(<span class="number">2</span>*np.pi))*np.exp( - (bins-mu)**<span class="number">2</span>/(<span class="number">2</span>*sigma*<span class="number">2</span>)),linewidth=<span class="number">2</span>,color=<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">plt.savefig(<span class="string">&quot;np.random.randn().png&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="显示鸢尾花花瓣长度的正态分布图，曲线图，散点图"><a href="#显示鸢尾花花瓣长度的正态分布图，曲线图，散点图" class="headerlink" title="显示鸢尾花花瓣长度的正态分布图，曲线图，散点图"></a>显示鸢尾花花瓣长度的正态分布图，曲线图，散点图</h2><ul><li>正态分布图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mu = np.mean(petal_length) <span class="comment"># 期望值</span></span><br><span class="line">sigma = np.std(petal_length) <span class="comment"># 标准差</span></span><br><span class="line">num = <span class="number">500</span> <span class="comment"># 个数</span></span><br><span class="line"></span><br><span class="line">normal_data = np.random.normal(mu,sigma,num)</span><br><span class="line">count,bins,ignored = plt.hist(normal_data,<span class="number">20</span>,normed=<span class="literal">True</span>)</span><br><span class="line">plt.plot(bins,<span class="number">1</span>/(sigma*np.sqrt(<span class="number">2</span>*np.pi))*np.exp( - (bins-mu)**<span class="number">2</span>/(<span class="number">2</span>*sigma*<span class="number">2</span>)),linewidth=<span class="number">2</span>,color=<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">plt.savefig(<span class="string">&quot;花瓣长度正态分布图.png&quot;</span>)  <span class="comment"># 保存图片文件</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li>曲线图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = np.linspace(<span class="number">0</span>,<span class="number">150</span>,num=<span class="number">150</span>)</span><br><span class="line">plt.plot(x,petal_len)</span><br><span class="line">plt.savefig(<span class="string">&quot;花瓣长度曲线图.png&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li>散点图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plt.scatter(x,petal_len,)</span><br><span class="line">plt.savefig(<span class="string">&quot;花瓣长度散点图.png&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>猫眼电影 Top100</title>
      <link href="/posts/CatEyeMovice.html"/>
      <url>/posts/CatEyeMovice.html</url>
      
        <content type="html"><![CDATA[<p>猫眼电影 Top100</p><span id="more"></span><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><ol><li>获取单页网页源代码并返回源代码</li><li>解析单页网页源代码，提取 title、actor、time、score 等数据并存储为生成器</li><li>将生成器里每一部电影的数据写入txt文档中</li><li>研究第 1-10 页 url 的规律，构建 url，调用 1、2、3 步骤</li></ol><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><p>获取单页网页源代码并返回源代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> RequestException</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_one_page</span>(<span class="params">url</span>):</span><br><span class="line">    headers = &#123;<span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.67 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url,headers = headers)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            html = response.text</span><br><span class="line">            <span class="keyword">return</span> html</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">except</span> RequestException:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure><ul><li>打印第一页源码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(get_one_page(<span class="string">&#x27;http://maoyan.com/board/4&#x27;</span>))</span><br></pre></td></tr></table></figure><p>解析单页网页源代码，提取title、actor、time、score数据并存储为生成器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">parse_one_page</span>(<span class="params">html</span>):</span><br><span class="line">    pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;&lt;dd&gt;.*?board-index.*?&gt;(\d+)&lt;/i&gt;&#x27;</span></span><br><span class="line">    + <span class="string">&#x27;.*?&lt;p.*?title=&quot;(.*?)&quot;.*?&lt;/p&gt;.*?star&quot;&gt;(.*?)&lt;/p&gt;&#x27;</span></span><br><span class="line">    + <span class="string">&#x27;.*?releasetime&quot;&gt;(.*?)&lt;/p&gt;.*?integer&quot;&gt;(.*?)&#x27;</span></span><br><span class="line">    + <span class="string">&#x27;&lt;.*?fraction&quot;&gt;(.*?)&lt;/i&gt;&#x27;</span>,re.S)</span><br><span class="line">    movies = re.findall(pattern,html)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> movies:</span><br><span class="line">        <span class="keyword">yield</span>&#123;</span><br><span class="line">            <span class="string">&#x27;排名&#x27;</span>:item[<span class="number">0</span>],</span><br><span class="line">            <span class="string">&#x27;电影名&#x27;</span>:item[<span class="number">1</span>],</span><br><span class="line">            <span class="string">&#x27;主演&#x27;</span>:item[<span class="number">2</span>].strip()[<span class="number">3</span>:],</span><br><span class="line">            <span class="string">&#x27;上映时间&#x27;</span>:item[<span class="number">3</span>][<span class="number">5</span>:],</span><br><span class="line">            <span class="string">&#x27;评分&#x27;</span>:item[<span class="number">4</span>]+item[<span class="number">5</span>]</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意一下，这里需要用 yield，而不是return。yield函数返回的是一个生成器（一种特殊的迭代器，可以用for循环进行遍历）<br>如果用return，那么在第一轮循环结束就会跳出，只能获取到一部影片的信息</p></blockquote><p>将生成器数据写入 txt 文档</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">write_to_txt</span>(<span class="params">content</span>):</span><br><span class="line">    <span class="comment"># 采用 append 追加模式，字符集为utf8</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;movies.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,encoding=<span class="string">&#x27;utf8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="comment"># 采用json的dumps方法来初始化字符串</span></span><br><span class="line">        f.write(json.dumps(content,ensure_ascii=<span class="literal">False</span>) + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        f.close()</span><br></pre></td></tr></table></figure><p>研究第1-10页</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第1-10页url</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">    url = <span class="string">&#x27;https://maoyan.com/board/4?offset=&#x27;</span> + <span class="built_in">str</span>(i * <span class="number">10</span>)</span><br><span class="line">    <span class="comment"># 构建 url，调用1、2、3步骤</span></span><br><span class="line">    html = get_one_page(url)</span><br><span class="line">    movies= parse_one_page(html)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> movies:</span><br><span class="line">        write_to_txt(item)</span><br></pre></td></tr></table></figure><h2 id="多线程保持为-txt"><a href="#多线程保持为-txt" class="headerlink" title="多线程保持为 txt"></a>多线程保持为 txt</h2><ul><li>第一步</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> RequestException</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_one_page</span>(<span class="params">url</span>):</span><br><span class="line">    headers = &#123;<span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.67 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url,headers = headers)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            html = response.text</span><br><span class="line">            <span class="keyword">return</span> html</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">except</span> RequestException:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure><ul><li>第二步</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">offset</span>):</span><br><span class="line">    url = <span class="string">&#x27;http://maoyan.com/board/4?offset=&#x27;</span> + <span class="built_in">str</span>(offset)</span><br><span class="line">    html = get_one_page(url)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> parse_one_page(html):</span><br><span class="line">        <span class="built_in">print</span>(item)</span><br><span class="line">        write_to_txt(item)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    pool = Pool() <span class="comment"># 多线程</span></span><br><span class="line">    pool.<span class="built_in">map</span>(main, [i*<span class="number">10</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)])</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br></pre></td></tr></table></figure><h1 id="保持为-CSV"><a href="#保持为-CSV" class="headerlink" title="保持为 CSV"></a>保持为 CSV</h1><h2 id="单线程"><a href="#单线程" class="headerlink" title="单线程"></a>单线程</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> pandas</span><br><span class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> RequestException</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_one_page</span>(<span class="params">url</span>):</span><br><span class="line">    headers = &#123;<span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.67 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">    response = requests.get(url,headers = headers)</span><br><span class="line">    html = response.text</span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_one_page</span>(<span class="params">html</span>):</span><br><span class="line">    pageary = []</span><br><span class="line">    pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;&lt;dd&gt;.*?board-index.*?&gt;(\d+)&lt;/i&gt;&#x27;</span></span><br><span class="line">    + <span class="string">&#x27;.*?&lt;p.*?title=&quot;(.*?)&quot;.*?&lt;/p&gt;.*?star&quot;&gt;(.*?)&lt;/p&gt;&#x27;</span></span><br><span class="line">    + <span class="string">&#x27;.*?releasetime&quot;&gt;(.*?)&lt;/p&gt;.*?integer&quot;&gt;(.*?)&#x27;</span></span><br><span class="line">    + <span class="string">&#x27;&lt;.*?fraction&quot;&gt;(.*?)&lt;/i&gt;&#x27;</span>,re.S)</span><br><span class="line">    movies = re.findall(pattern,html)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> movies:</span><br><span class="line">        <span class="built_in">dict</span> = &#123;</span><br><span class="line">            <span class="string">&#x27;电影名&#x27;</span>:item[<span class="number">0</span>],</span><br><span class="line">            <span class="string">&#x27;主演&#x27;</span>:item[<span class="number">1</span>].strip()[<span class="number">3</span>:],</span><br><span class="line">            <span class="string">&#x27;上映时间&#x27;</span>:item[<span class="number">2</span>][<span class="number">5</span>:],</span><br><span class="line">            <span class="string">&#x27;评分&#x27;</span>:item[<span class="number">3</span>]+item[<span class="number">4</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        pageary.append(<span class="built_in">dict</span>)</span><br><span class="line">    <span class="keyword">return</span> pageary</span><br><span class="line"></span><br><span class="line">ary = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">    url = <span class="string">&#x27;https://maoyan.com/board/4?offset=&#x27;</span> + <span class="built_in">str</span>(i * <span class="number">10</span>)</span><br><span class="line">    html = get_one_page(url)</span><br><span class="line">    pageary = parse_one_page(html)</span><br><span class="line">    ary = ary + pageary</span><br><span class="line">df = pandas.DataFrame(ary)</span><br><span class="line">df.to_csv(<span class="string">&#x27;movies.csv&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> pandas</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> RequestException</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_one_page</span>(<span class="params">url</span>):</span><br><span class="line">    headers = &#123;<span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.67 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url,headers = headers)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            html = response.text</span><br><span class="line">            <span class="keyword">return</span> html</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">except</span> RequestException:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_one_page</span>(<span class="params">html</span>):</span><br><span class="line">    pageary = []</span><br><span class="line">    pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;&lt;dd&gt;.*?board-index.*?&gt;(\d+)&lt;/i&gt;&#x27;</span></span><br><span class="line">    + <span class="string">&#x27;.*?&lt;p.*?title=&quot;(.*?)&quot;.*?&lt;/p&gt;.*?star&quot;&gt;(.*?)&lt;/p&gt;&#x27;</span></span><br><span class="line">    + <span class="string">&#x27;.*?releasetime&quot;&gt;(.*?)&lt;/p&gt;.*?integer&quot;&gt;(.*?)&#x27;</span></span><br><span class="line">    + <span class="string">&#x27;&lt;.*?fraction&quot;&gt;(.*?)&lt;/i&gt;&#x27;</span>,re.S)</span><br><span class="line">    movies = re.findall(pattern,html)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> movies:</span><br><span class="line">        <span class="built_in">dict</span> = &#123;</span><br><span class="line">            <span class="string">&#x27;排名&#x27;</span>:item[<span class="number">0</span>],</span><br><span class="line">            <span class="string">&#x27;电影名&#x27;</span>:item[<span class="number">1</span>],</span><br><span class="line">            <span class="string">&#x27;主演&#x27;</span>:item[<span class="number">2</span>].strip()[<span class="number">3</span>:],</span><br><span class="line">            <span class="string">&#x27;上映时间&#x27;</span>:item[<span class="number">3</span>][<span class="number">5</span>:],</span><br><span class="line">            <span class="string">&#x27;评分&#x27;</span>:item[<span class="number">4</span>]+item[<span class="number">5</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        pageary.append(<span class="built_in">dict</span>)</span><br><span class="line">    <span class="keyword">return</span> pageary</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write_to_csv</span>(<span class="params">pageary</span>):</span><br><span class="line">    ary = []</span><br><span class="line">    ary = ary + pageary</span><br><span class="line">    df = pandas.DataFrame(ary)</span><br><span class="line">    df.to_csv(<span class="string">&#x27;movies.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">offset</span>):</span><br><span class="line">    url = <span class="string">&#x27;https://maoyan.com/board/4?offset=&#x27;</span> + <span class="built_in">str</span>(offset)</span><br><span class="line">    pageary = parse_one_page(html)</span><br><span class="line">    write_to_csv(ary)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    pool = Pool()</span><br><span class="line">    pool.<span class="built_in">map</span>(main, [i*<span class="number">10</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)])</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 时间日期处理</title>
      <link href="/posts/PythonDateTime.html"/>
      <url>/posts/PythonDateTime.html</url>
      
        <content type="html"><![CDATA[<p>Python DateTime 时间日期处理.</p><span id="more"></span><h1 id="DateTime"><a href="#DateTime" class="headerlink" title="DateTime"></a>DateTime</h1><h2 id="获取当前-DateTime"><a href="#获取当前-DateTime" class="headerlink" title="获取当前 DateTime"></a>获取当前 DateTime</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime timport datetime</span><br><span class="line">datetime.datetime.now()</span><br></pre></td></tr></table></figure><h2 id="获取当天-date"><a href="#获取当天-date" class="headerlink" title="获取当天 date"></a>获取当天 date</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datetime.date.today()</span><br></pre></td></tr></table></figure><h2 id="获取明天-前N天"><a href="#获取明天-前N天" class="headerlink" title="获取明天&#x2F;前N天"></a>获取明天&#x2F;前N天</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 明天</span></span><br><span class="line">atetime.date.today() + datetime.timedelta(days=<span class="number">1</span>)</span><br><span class="line"><span class="comment"># 前N天</span></span><br><span class="line">datetime.datetime.now()</span><br><span class="line">datetime.datetime.now() - datetime.timedelta(days=<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h2 id="获取当天开始和结束时间"><a href="#获取当天开始和结束时间" class="headerlink" title="获取当天开始和结束时间"></a>获取当天开始和结束时间</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">datetime.datetime.combine(datetime.date.today(), datetime.time.<span class="built_in">min</span>)</span><br><span class="line">datetime.datetime.combine(datetime.date.today(), datetime.time.<span class="built_in">max</span>)</span><br></pre></td></tr></table></figure><h2 id="获取两个-datetime-的时间差"><a href="#获取两个-datetime-的时间差" class="headerlink" title="获取两个 datetime 的时间差"></a>获取两个 datetime 的时间差</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">now = datetime.now()</span><br><span class="line">end = datetime.strptime(<span class="string">&#x27;2018-10-25 22:00&#x27;</span>,<span class="string">&#x27;%Y-%m-%d %H:%M&#x27;</span>)</span><br><span class="line">time = end - now</span><br><span class="line"><span class="built_in">print</span>(time.days,<span class="string">&#x27;天&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="获取本周-本月-上月最后一天"><a href="#获取本周-本月-上月最后一天" class="headerlink" title="获取本周&#x2F;本月&#x2F;上月最后一天"></a>获取本周&#x2F;本月&#x2F;上月最后一天</h2><ul><li>本周最后一天</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">today = datetime.date.today()</span><br><span class="line">sunday = today + datetime.timedelta(<span class="number">6</span> - today.weekday())</span><br><span class="line">sunday</span><br></pre></td></tr></table></figure><ul><li>本月最后一天</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> calendar</span><br><span class="line">today = datetime.date.today()</span><br><span class="line">last_day_num = calendar.monthrange(today.year, today.month)</span><br><span class="line">last_day = datetime.date(today.year, today.month, last_day_num)</span><br><span class="line">last_day</span><br></pre></td></tr></table></figure><ul><li>上月最后一天</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">today = datetime.date.today()</span><br><span class="line">first = datetime.date(day=<span class="number">1</span>, month=today.month, year=today.year)</span><br><span class="line">lastMonth = first - datetime.timedelta(days=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h1 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h1><h2 id="datetime-string"><a href="#datetime-string" class="headerlink" title="datetime &lt;&#x3D;&gt; string"></a>datetime &lt;&#x3D;&gt; string</h2><ul><li>datetime -&gt; string</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">datetime.datetime.now().strftime(<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>string -&gt; datetime</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">datetime.datetime.strptime(<span class="string">&quot;2018-10-22 12:50:46&quot;</span>, <span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="datetime-timetuple"><a href="#datetime-timetuple" class="headerlink" title="datetime &lt;&#x3D;&gt; timetuple"></a>datetime &lt;&#x3D;&gt; timetuple</h2><ul><li>datetime -&gt; timetuple</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">datetime.datetime.now().timetuple()</span><br></pre></td></tr></table></figure><ul><li>timetuple -&gt; datetime</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timetuple =&gt; timestamp =&gt; datetime [看后面datetime&lt;=&gt;timestamp]</span><br></pre></td></tr></table></figure><h2 id="datetime-date"><a href="#datetime-date" class="headerlink" title="datetime &lt;&#x3D;&gt; date"></a>datetime &lt;&#x3D;&gt; date</h2><ul><li>datetime -&gt; date</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">datetime.datetime.now().date()</span><br></pre></td></tr></table></figure><ul><li>date -&gt; datetime</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">datetime.date.today()</span><br><span class="line">today = datetime.date.today()</span><br><span class="line">datetime.datetime.combine(today, datetime.time())</span><br><span class="line">datetime.datetime.combine(today, datetime.time.<span class="built_in">min</span>)</span><br></pre></td></tr></table></figure><h2 id="datetime-timestamp"><a href="#datetime-timestamp" class="headerlink" title="datetime &lt;&#x3D;&gt; timestamp"></a>datetime &lt;&#x3D;&gt; timestamp</h2><ul><li>datetime -&gt; timestamp</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">now = datetime.datetime.now()</span><br><span class="line">timestamp = time.mktime(now.timetuple())</span><br><span class="line">timestamp</span><br></pre></td></tr></table></figure><h2 id="timestamp-datetime"><a href="#timestamp-datetime" class="headerlink" title="timestamp -&gt; datetime"></a>timestamp -&gt; datetime</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datetime.datetime.fromtimestamp(1421077403.0)</span><br></pre></td></tr></table></figure><hr><p><strong>Via</strong></p><ul><li><a href="http://www.wklken.me/posts/2015/03/03/python-base-datetime.html">PYTHON-基础-时间日期处理小结</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 逻辑卷分区大小的调整</title>
      <link href="/posts/LinuxHome.html"/>
      <url>/posts/LinuxHome.html</url>
      
        <content type="html"><![CDATA[<p>Linux <code>Home</code> 硬盘空间缩减并添加到 <code>/</code>.</p><span id="more"></span><h1 id="看硬盘信息"><a href="#看硬盘信息" class="headerlink" title="看硬盘信息"></a>看硬盘信息</h1><h2 id="f-l"><a href="#f-l" class="headerlink" title="f -l"></a>f -l</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -l</span><br></pre></td></tr></table></figure><hr><table><thead><tr><th align="left">文件系统</th><th align="left">容量</th><th align="left">已用</th><th align="left">可用</th><th align="left">已用%</th><th align="left">挂载点</th></tr></thead><tbody><tr><td align="left">dev</td><td align="left">1.9G</td><td align="left">0</td><td align="left">1.9G</td><td align="left">0%</td><td align="left">&#x2F;dev</td></tr><tr><td align="left">run</td><td align="left">1.9G</td><td align="left">1.3M</td><td align="left">1.9G</td><td align="left">1%</td><td align="left">&#x2F;run</td></tr><tr><td align="left">&#x2F;dev&#x2F;sdb4</td><td align="left">30G</td><td align="left">17G</td><td align="left">12G</td><td align="left">59%</td><td align="left">&#x2F;</td></tr><tr><td align="left">&#x2F;dev&#x2F;sdb3</td><td align="left">59G</td><td align="left">8.6G</td><td align="left">48G</td><td align="left">16%</td><td align="left">&#x2F;home</td></tr></tbody></table><h1 id="缩减-Home"><a href="#缩减-Home" class="headerlink" title="缩减 Home"></a>缩减 Home</h1><h2 id="卸载-Home-挂载"><a href="#卸载-Home-挂载" class="headerlink" title="卸载 Home 挂载"></a>卸载 Home 挂载</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /home</span><br></pre></td></tr></table></figure><ul><li>提示 busy 不能卸载</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 终止占用进程</span></span><br><span class="line">fuser -m /home</span><br></pre></td></tr></table></figure><h2 id="调整-home-分区大小"><a href="#调整-home-分区大小" class="headerlink" title="调整 &#x2F;home 分区大小"></a>调整 &#x2F;home 分区大小</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">resize2fs -p /dev/sdb3  30G</span><br><span class="line"><span class="comment"># resize2fs 为重新设定磁盘大小</span></span><br><span class="line"><span class="comment"># 只是重新指定一下大小，并不对结果有影响</span></span><br></pre></td></tr></table></figure><ul><li>先设置一下 Home 的大小,进行这一步的时候会提醒让先运行下面的命令进行检查</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e2fsck -f /dev/sdb3</span><br></pre></td></tr></table></figure><ul><li>强制检查一下磁盘并修复错误，接下来再次运行这个命令把 home大小设置为20G</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resize2fs -p /dev/sdb3 30G</span><br></pre></td></tr></table></figure><ul><li>收缩逻辑卷空间为 30G</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用lvreduce指令用于减少LVM逻辑卷占用的空间大小</span></span><br><span class="line"><span class="comment"># -L 是设为，-l 是减小的值</span></span><br><span class="line">lvreduce -L 30G /dev/sdb3</span><br></pre></td></tr></table></figure><ul><li>然后挂载 <code>/home</code> 并 <code>df -h</code> 查看一下 Home 大小分配是否成功</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /home</span><br></pre></td></tr></table></figure><h1 id="分配给"><a href="#分配给" class="headerlink" title="分配给 &#x2F;"></a>分配给 &#x2F;</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvextend -l +100%FREE /dev/sdb4</span><br></pre></td></tr></table></figure><ul><li>执行调整根目录的空间大小,并耐心等待,不要操作</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resize2fs -p /dev/sdb4</span><br></pre></td></tr></table></figure><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><ol><li><code>ext2</code> <code>ext3</code> <code>ext4</code> 文件系统的调整命令是 <code>resize2fs</code></li><li><code>xfs</code> 文件系统的调整命令是 <code>xfs_growfs</code>（只支持增大）</li></ol><hr><p><strong>参考</strong></p><ul><li><a href="http://www.manongjc.com/article/14263.html">Linux的中对LVM逻辑卷分区大小的调整教程</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Selenium</title>
      <link href="/posts/PythonSelenium.html"/>
      <url>/posts/PythonSelenium.html</url>
      
        <content type="html"><![CDATA[<p>Python Selenium 基础使用。</p><span id="more"></span><h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.wait <span class="keyword">import</span> WebDriverWait</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建Chrome浏览器对象browser</span></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment">#用get方式访问百度首页</span></span><br><span class="line">    browser.get(<span class="string">&#x27;https://www.baidu.com&#x27;</span>)</span><br><span class="line">    <span class="comment">#通过id为‘kw’找到输入框input</span></span><br><span class="line">    <span class="built_in">input</span> = browser.find_element_by_id(<span class="string">&#x27;kw&#x27;</span>)</span><br><span class="line">    <span class="comment">#调用该输入框的send_keys方法向输入框键入“Python”关键词</span></span><br><span class="line">    <span class="built_in">input</span>.send_keys(<span class="string">&#x27;Python&#x27;</span>)</span><br><span class="line">    <span class="comment">#高用该输入框的send_keys方法向输入框按回车键</span></span><br><span class="line">    <span class="built_in">input</span>.send_keys(Keys.ENTER)</span><br><span class="line">    <span class="comment">#创建浏览器等待对象wait,等待时间10称</span></span><br><span class="line">    wait = WebDriverWait(browser,<span class="number">10</span>)</span><br><span class="line">    <span class="comment">#调用wait的until方法，直到ID为content_left（即搜索结果界面）元素出现</span></span><br><span class="line">    wait.until(EC.presence_of_element_located((By.ID, <span class="string">&#x27;content_left&#x27;</span>)))</span><br><span class="line">    <span class="comment">#打印输出浏览器当前的URL</span></span><br><span class="line">    <span class="built_in">print</span>(browser.current_url)</span><br><span class="line">    <span class="comment">#打印输出当前的cookies信息</span></span><br><span class="line">    <span class="built_in">print</span>(browser.get_cookies)</span><br><span class="line">    <span class="comment">#打印输出网页源代码</span></span><br><span class="line">    <span class="built_in">print</span>(browser.page_source)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="comment">#关闭浏览器</span></span><br><span class="line">    browser.close()</span><br></pre></td></tr></table></figure><h2 id="声明浏览器对象"><a href="#声明浏览器对象" class="headerlink" title="声明浏览器对象"></a>声明浏览器对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">browser = webdriver.Firefox()</span><br><span class="line">browser = webdriver.Edge()</span><br><span class="line">browser = webdriver.PhantomJS()</span><br><span class="line">browser = webdriver.Safari()</span><br></pre></td></tr></table></figure><h2 id="访问页面"><a href="#访问页面" class="headerlink" title="访问页面"></a>访问页面</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建Chrome浏览器对象</span></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line"><span class="comment">#访问淘宝首页</span></span><br><span class="line">browser.get(<span class="string">&#x27;https://taobao.com&#x27;</span>)</span><br><span class="line"><span class="comment">#打印输出网页源代码</span></span><br><span class="line"><span class="built_in">print</span>(browser.page_source)</span><br><span class="line"><span class="comment">#关闭浏览器</span></span><br><span class="line">browser.close()</span><br></pre></td></tr></table></figure><h1 id="查找元素"><a href="#查找元素" class="headerlink" title="查找元素"></a>查找元素</h1><h2 id="单个"><a href="#单个" class="headerlink" title="单个"></a>单个</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建Chrome浏览器对象</span></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line"><span class="comment">#访问淘宝首页</span></span><br><span class="line">browser.get(<span class="string">&#x27;https://www.taobao.com&#x27;</span>)</span><br><span class="line"><span class="comment">#通过id属性查找id为q的元素,即为搜索输入框,命名为input_first</span></span><br><span class="line">input_first = browser.find_element_by_id(<span class="string">&#x27;q&#x27;</span>)</span><br><span class="line"><span class="comment">#通过css选择器查找搜索输入框,命名为input_second</span></span><br><span class="line">input_second = browser.find_element_by_css_selector(<span class="string">&#x27;#q&#x27;</span>)</span><br><span class="line"><span class="comment">#通过xpath查找搜索输入框，命名为input_third</span></span><br><span class="line">input_third = browser.find_element_by_xpath(<span class="string">&#x27;//*[@id=&quot;q&quot;]&#x27;</span>)</span><br><span class="line"><span class="comment">#打印输出以上三个查找结果</span></span><br><span class="line"><span class="built_in">print</span>(input_first,input_second,input_third)</span><br><span class="line"><span class="comment">#关闭浏览器</span></span><br><span class="line">browser.close()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">browser.get(<span class="string">&#x27;https://www.taobao.com&#x27;</span>)</span><br><span class="line">input_first = browser.find_element(By.ID, <span class="string">&#x27;q&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(input_first)</span><br><span class="line">browser.close()</span><br></pre></td></tr></table></figure><h2 id="多个元素"><a href="#多个元素" class="headerlink" title="多个元素"></a>多个元素</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建Chrome浏览器对象 browser</span></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line"><span class="comment">#get方式访问淘宝首页</span></span><br><span class="line">browser.get(<span class="string">&#x27;https://www.taobao.com&#x27;</span>)</span><br><span class="line"><span class="comment">#(多个元素用elements，须借助css_selector)查找淘宝首页左边导航条下面的class为service-bd的ul标签下面的名为li的多个标签</span></span><br><span class="line">lis = browser.find_elements_by_css_selector(<span class="string">&#x27;.service-bd&#x27;</span>)</span><br><span class="line"><span class="comment">#打印输出所有lis元素</span></span><br><span class="line"><span class="built_in">print</span>(lis)</span><br><span class="line"><span class="comment">#关闭浏览器</span></span><br><span class="line">browser.close()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">browser.get(<span class="string">&#x27;https://www.taobao.com&#x27;</span>)</span><br><span class="line">lis = browser.find_elements(By.CSS_SELECTOR, <span class="string">&#x27;.service-bd li&#x27;</span>)<span class="comment">#作用同上</span></span><br><span class="line"><span class="built_in">print</span>(lis)</span><br><span class="line">browser.close()</span><br></pre></td></tr></table></figure><h1 id="元素交互操作"><a href="#元素交互操作" class="headerlink" title="元素交互操作"></a>元素交互操作</h1><h2 id="对获取的元素调用交互方法"><a href="#对获取的元素调用交互方法" class="headerlink" title="对获取的元素调用交互方法"></a>对获取的元素调用交互方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建chrome浏览器对象</span></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line"><span class="comment">#访问淘宝首页</span></span><br><span class="line">browser.get(<span class="string">&#x27;https://www.taobao.com&#x27;</span>)</span><br><span class="line"><span class="comment">#查找id为q的搜索输入框input</span></span><br><span class="line"><span class="built_in">input</span> = browser.find_element_by_id(<span class="string">&#x27;q&#x27;</span>)</span><br><span class="line"><span class="comment">#调用input的send_keys函数向输入框输入关键字“OnePLus”</span></span><br><span class="line"><span class="built_in">input</span>.send_keys(<span class="string">&#x27;OnePlus&#x27;</span>)</span><br><span class="line"><span class="comment">#当前浏览器暂停1S</span></span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"><span class="comment">#清除输入框的内容</span></span><br><span class="line"><span class="built_in">input</span>.clear()</span><br><span class="line"><span class="comment">#调用input的send_keys再次输入 一加</span></span><br><span class="line"><span class="built_in">input</span>.send_keys(<span class="string">&#x27;一加&#x27;</span>)</span><br><span class="line"><span class="comment">#查找class为btn-search的搜索按钮并命名为button 用find_element_by_class_name</span></span><br><span class="line">button = browser.find_element_by_class_name(<span class="string">&#x27;btn-search&#x27;</span>)</span><br><span class="line"><span class="comment">#调用click点击该按钮</span></span><br><span class="line">button.click()</span><br></pre></td></tr></table></figure><ul><li><a href="http://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.remote.webelement">更多操作</a></li></ul><h1 id="交互动作"><a href="#交互动作" class="headerlink" title="交互动作"></a>交互动作</h1><h2 id="将动作附加到动作链中串行执行"><a href="#将动作附加到动作链中串行执行" class="headerlink" title="将动作附加到动作链中串行执行"></a>将动作附加到动作链中串行执行</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建chrome浏览器对象browser</span></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line"><span class="comment">#设置url为http://www.runoob.com/try/try.php?filename=jqueryui-api-droppable</span></span><br><span class="line">url = <span class="string">&#x27;http://www.runoob.com/try/try.php?filename=jqueryui-api-droppable&#x27;</span></span><br><span class="line"><span class="comment">#用get方式访问以上url</span></span><br><span class="line">browser.get(url)</span><br><span class="line"><span class="comment">#在浏览器中切换定位到名为iframeResult的frame元素</span></span><br><span class="line">browser.switch_to.frame(<span class="string">&#x27;iframeResult&#x27;</span>)</span><br><span class="line"><span class="comment">#通过css选择器查找id为draggable的拖曳源，并命名为source</span></span><br><span class="line">source = browser.find_element_by_css_selector(<span class="string">&#x27;#draggable&#x27;</span>)</span><br><span class="line"><span class="comment">#通过css选择器查找id为droppable的代入源，并命名为target</span></span><br><span class="line">target = browser.find_element_by_css_selector(<span class="string">&#x27;#droppable&#x27;</span>)</span><br><span class="line"><span class="comment">#用ActionChains函数创建浏览器动作链对象actions</span></span><br><span class="line">actions = ActionChains(browser)</span><br><span class="line"><span class="comment">#调用actions的drag_and_drop,设计将source放入target的动作</span></span><br><span class="line">actions.drag_and_drop(source,target)</span><br><span class="line"><span class="comment">#调用perform执行该动作</span></span><br><span class="line">actions.perform()</span><br><span class="line"><span class="comment">#关闭浏览器</span></span><br><span class="line">browser.close()</span><br></pre></td></tr></table></figure><ul><li><a href="http://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.common.action_chains">更多操作</a></li></ul><h2 id="执行-JavaScript"><a href="#执行-JavaScript" class="headerlink" title="执行 JavaScript"></a>执行 JavaScript</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建chrome()浏览器对象browser</span></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line"><span class="comment">#get方式访问https://www.zhihu.com/explore网页</span></span><br><span class="line">browser.get(<span class="string">&#x27;https://www.zhihu.com/explore&#x27;</span>)</span><br><span class="line"><span class="comment">#利用execute_script执行js语句window.scrollTo(0, document.body.scrollHeight)</span></span><br><span class="line">browser.execute_script(<span class="string">&#x27;window.scrollTo(0, document.body.scrollHeight)&#x27;</span>)</span><br><span class="line"><span class="comment">##利用execute_script执行js语句alert(&quot;To Bottom&quot;)警报信息,注意，execute_script(&#x27;&#x27;)里面的js加引号</span></span><br><span class="line">browser.execute_script(<span class="string">&#x27;alert(&quot;To Bottom&quot;)&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="获取元素信息"><a href="#获取元素信息" class="headerlink" title="获取元素信息"></a>获取元素信息</h1><h2 id="获取属性"><a href="#获取属性" class="headerlink" title="获取属性"></a>获取属性</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建Chrome浏览器对象browser</span></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line"><span class="comment">#设置url为https://www.zhihu.com/explore</span></span><br><span class="line">url = <span class="string">&#x27;https://www.zhihu.com/explore&#x27;</span></span><br><span class="line"><span class="comment">#get方式访问以上网址</span></span><br><span class="line">browser.get(url)</span><br><span class="line"><span class="comment">#查找id为zh-top-link-logo的元素并命名为logo(知乎logo)</span></span><br><span class="line">logo = browser.find_element_by_id(<span class="string">&#x27;zh-top-link-logo&#x27;</span>)</span><br><span class="line"><span class="comment">#打印输出此logo</span></span><br><span class="line"><span class="built_in">print</span>(logo)</span><br><span class="line"><span class="comment">#打印输出：用logo的get_attribute函数获得logo的class属性值</span></span><br><span class="line"><span class="built_in">print</span>(logo.get_attribute(<span class="string">&#x27;class&#x27;</span>))</span><br></pre></td></tr></table></figure><h2 id="获取文本值"><a href="#获取文本值" class="headerlink" title="获取文本值"></a>获取文本值</h2><ul><li>获取指定节点中的文本内容</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.find_element_by_xpath(<span class="string">&#x27;&#x27;</span>).get_attribute(<span class="string">&#x27;textContent&#x27;</span>) </span><br></pre></td></tr></table></figure><ul><li>获取a的href(多个则遍历)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">broswer.find_element_by_css_selector(<span class="string">&#x27;.houseListTitle a&#x27;</span>).get_attribute(<span class="string">&#x27;href&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>输入框的文本</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">url = <span class="string">&#x27;https://www.zhihu.com/explore&#x27;</span></span><br><span class="line">browser.get(url)</span><br><span class="line"><span class="comment">#利用by_class_name查找class属性值为zu-top-add-question的输入框input</span></span><br><span class="line"><span class="built_in">input</span> = browser.find_element_by_class_name(<span class="string">&#x27;zu-top-add-question&#x27;</span>)</span><br><span class="line"><span class="comment">#输出打印该输入框的文本（text）</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">input</span>.text)</span><br></pre></td></tr></table></figure><h2 id="获取ID、位置、标签名、大小"><a href="#获取ID、位置、标签名、大小" class="headerlink" title="获取ID、位置、标签名、大小"></a>获取ID、位置、标签名、大小</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line"><span class="comment">#设置url为https://www.zhihu.com/explore</span></span><br><span class="line">url = <span class="string">&#x27;https://www.zhihu.com/explore&#x27;</span></span><br><span class="line"><span class="comment">#用get方式访问以上网址</span></span><br><span class="line">browser.get(url)</span><br><span class="line"><span class="comment">#查找class属性值为zu-top-add-question的输入框input</span></span><br><span class="line"><span class="built_in">input</span> = browser.find_element_by_class_name(<span class="string">&#x27;zu-top-add-question&#x27;</span>)</span><br><span class="line"><span class="comment">#打印输出input的id</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">input</span>.<span class="built_in">id</span>)</span><br><span class="line"><span class="comment">#打印输出input的位置location</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">input</span>.location)</span><br><span class="line"><span class="comment">#打印输出input的标签名tag_name</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">input</span>.tag_name)</span><br><span class="line"><span class="comment">#打印输出input的对象几何大小size</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">input</span>.size)</span><br></pre></td></tr></table></figure><h2 id="Frame"><a href="#Frame" class="headerlink" title="Frame"></a>Frame</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.common.exceptions <span class="keyword">import</span> NoSuchElementException</span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">url = <span class="string">&#x27;http://www.runoob.com/try/try.php?filename=jqueryui-api-droppable&#x27;</span></span><br><span class="line">browser.get(url)</span><br><span class="line">browser.switch_to.frame(<span class="string">&#x27;iframeResult&#x27;</span>)</span><br><span class="line">source = browser.find_element_by_css_selector(<span class="string">&#x27;#draggable&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(source)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    logo = browser.find_element_by_class_name(<span class="string">&#x27;logo&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> NoSuchElementException:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;NO LOGO&#x27;</span>)</span><br><span class="line">browser.switch_to.parent_frame()</span><br><span class="line">logo = browser.find_element_by_class_name(<span class="string">&#x27;logo&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(logo)</span><br><span class="line"><span class="built_in">print</span>(logo.text)</span><br></pre></td></tr></table></figure><h1 id="等待"><a href="#等待" class="headerlink" title="等待"></a>等待</h1><h2 id="隐式等待"><a href="#隐式等待" class="headerlink" title="隐式等待"></a>隐式等待</h2><ul><li>当使用了隐式等待执行测试的时候，如果 WebDriver 没有在 DOM 中找到元素，将继续等待，超出设定时间后则抛出找不到元素的异常, 换句话说，当查找元素或元素并没有立即出现的时候，隐式等待将等待一段时间再查找 DOM，默认的时间是 0</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line"><span class="comment">#利用implicitly_wait进行隐式等待，等待时间设置为10S</span></span><br><span class="line">browser.implicitly_wait(<span class="number">10</span>)</span><br><span class="line">browser.get(<span class="string">&#x27;https://www.zhihu.com/explore&#x27;</span>)</span><br><span class="line"><span class="built_in">input</span> = browser.find_element_by_class_name(<span class="string">&#x27;zu-top-add-question&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">input</span>)</span><br></pre></td></tr></table></figure><h2 id="显式等待"><a href="#显式等待" class="headerlink" title="显式等待"></a>显式等待</h2><ul><li>显示等待则打指定等待不固定，具体时间受指定的元素出现或其他条件实现的时间限制</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line">​</span><br><span class="line"><span class="comment">#创建浏览器对象</span></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line"><span class="comment">#利用get方式访问淘宝首页</span></span><br><span class="line">browser.get(<span class="string">&#x27;https://www.taobao.com&#x27;</span>)</span><br><span class="line"><span class="comment">#创建浏览器等待对象wait，默认为10秒</span></span><br><span class="line">wait = WebDriverWait(browser,<span class="number">10</span>)</span><br><span class="line"><span class="comment">#创建input对象，利用wait.until函数直到id为q的元素加载完后,注意By.ID参数双括号</span></span><br><span class="line"><span class="built_in">input</span> = wait.until(EC.presence_of_element_located((By.ID, <span class="string">&#x27;q&#x27;</span>)))</span><br><span class="line"><span class="comment">#创建button对象，利用wait.until直到class为btn-search</span></span><br><span class="line">button = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, <span class="string">&#x27;.btn-search&#x27;</span>)))</span><br><span class="line"><span class="comment">#打印输出input,button</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">input</span>,button)</span><br></pre></td></tr></table></figure><h1 id="前进后退"><a href="#前进后退" class="headerlink" title="前进后退"></a>前进后退</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line"><span class="comment">#访问百度</span></span><br><span class="line">browser.get(<span class="string">&#x27;https://www.baidu.com&#x27;</span>)</span><br><span class="line"><span class="comment">#访问淘宝</span></span><br><span class="line">browser.get(<span class="string">&#x27;https://www.taobao.com&#x27;</span>)</span><br><span class="line"><span class="comment">#访问python主页https://www.python.org/(被GWF铁拳重创，故改为qq.com)</span></span><br><span class="line">browser.get(<span class="string">&#x27;https://www.qq.com&#x27;</span>)</span><br><span class="line"><span class="comment">#调用浏览器的back函数执行返回。问：返回到哪一个网页？</span></span><br><span class="line">browser.back()</span><br><span class="line"><span class="comment">#当前休眠3s</span></span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"><span class="comment">#浏览器前进。问，前进到哪一网页？</span></span><br><span class="line">browser.forward()</span><br><span class="line"><span class="comment">#关闭浏览器</span></span><br><span class="line">browser.close()</span><br></pre></td></tr></table></figure><h1 id="Cookies"><a href="#Cookies" class="headerlink" title="Cookies"></a>Cookies</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line">​</span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">browser.get(<span class="string">&#x27;https://www.zhihu.com/explore&#x27;</span>)</span><br><span class="line"><span class="comment">#get_cookies获取cookies并输出打印</span></span><br><span class="line"><span class="built_in">print</span>(browser.get_cookies())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;------------------------------------------------------------------------------------------------------&#x27;</span>)</span><br><span class="line"><span class="comment">#add_cookie（注意此cookie单词没有s）增加cookies&#123;&#x27;name&#x27;: &#x27;name&#x27;, &#x27;domain&#x27;: &#x27;www.zhihu.com&#x27;, &#x27;value&#x27;: &#x27;germey&#x27;&#125;</span></span><br><span class="line">browser.add_cookie(&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;domain&#x27;</span>: <span class="string">&#x27;www.zhihu.com&#x27;</span>, <span class="string">&#x27;value&#x27;</span>: <span class="string">&#x27;germey&#x27;</span>&#125;)</span><br><span class="line"><span class="comment">#重新获取cookies并输出打印</span></span><br><span class="line"><span class="built_in">print</span>(browser.get_cookies())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;------------------------------------------------------------------------------------------------------&#x27;</span>)</span><br><span class="line"><span class="comment">#delete_all_cookies删除所有cookies</span></span><br><span class="line">browser.delete_all_cookies()</span><br><span class="line"><span class="comment">#重新获取cookies并输出打印</span></span><br><span class="line"><span class="built_in">print</span>(browser.get_cookies())</span><br></pre></td></tr></table></figure><h1 id="选项卡管理"><a href="#选项卡管理" class="headerlink" title="选项卡管理"></a>选项卡管理</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建浏览器对象</span></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line"><span class="comment">#访问淘宝</span></span><br><span class="line">browser.get(<span class="string">&#x27;https://www.taobao.com&#x27;</span>)</span><br><span class="line"><span class="comment">#打开新的选项卡（执行js语句 execute_script（&#x27;window.open()&#x27;)</span></span><br><span class="line">browser.execute_script(<span class="string">&#x27;window.open()&#x27;</span>)</span><br><span class="line"><span class="comment">#打印输出当前浏览器对象browser.window_handles</span></span><br><span class="line"><span class="built_in">print</span>(browser.window_handles)</span><br><span class="line"><span class="comment">#切换到第2个选项卡,下标为1</span></span><br><span class="line">browser.switch_to.window(browser.window_handles[<span class="number">1</span>])</span><br><span class="line"><span class="comment">#访问 百度</span></span><br><span class="line">browser.get(<span class="string">&#x27;https://www.baidu.com&#x27;</span>)</span><br><span class="line"><span class="comment">#休眠1s</span></span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"><span class="comment">#切换到第1个选项卡，下标为0</span></span><br><span class="line">browser.switch_to.window(browser.window_handles[<span class="number">0</span>])</span><br><span class="line"><span class="comment">#访问百度</span></span><br><span class="line">browser.get(<span class="string">&#x27;https://www.vitan.me&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><h2 id="未处理"><a href="#未处理" class="headerlink" title="未处理"></a>未处理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line">    ​</span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">browser.get(<span class="string">&#x27;https://www.baidu.com&#x27;</span>)</span><br><span class="line">browser.find_element_by_id(<span class="string">&#x27;hello&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="处理后"><a href="#处理后" class="headerlink" title="处理后"></a>处理后</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.common.exceptions <span class="keyword">import</span> TimeoutException, NoSuchElementException</span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    browser.get(<span class="string">&#x27;https://www.baidu.com&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> TimeoutException:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Time Out&#x27;</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    browser.find_element_by_id(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> NoSuchElementException:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;No Element&#x27;</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    browser.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python ChromeDriver GeckoDriver</title>
      <link href="/posts/LinuxPythonChromedriver.html"/>
      <url>/posts/LinuxPythonChromedriver.html</url>
      
        <content type="html"><![CDATA[<p> Python ChromeDriver GeckoDriver Configer</p><span id="more"></span><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><ul><li><a href="http://chromedriver.chromium.org/downloads">ChromeDriver</a></li><li><a href="https://github.com/mozilla/geckodriver/releases">GeckoDriver</a></li></ul><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><ul><li>方法一</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">mv</span> chromedriver /usr/bin</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mv</span> geckodriver /usr/bin</span><br></pre></td></tr></table></figure><h2 id="方法二-配置-Path"><a href="#方法二-配置-Path" class="headerlink" title="方法二(配置 Path)"></a>方法二(配置 Path)</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.profile</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:/usr/local/chromedriver&quot;</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:/usr/local/geckodriver&quot;</span></span><br></pre></td></tr></table></figure><ul><li>验证</li></ul><figure class="highlight sh"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chromedriver</span><br><span class="line">geckodriver</span><br></pre></td></tr></table></figure><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>chromedriver.exe geckodriver.exe 文件拖到 Python 的 Scripts 目录下</p>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 中英词频统计</title>
      <link href="/posts/PythonWorldFrequency.html"/>
      <url>/posts/PythonWorldFrequency.html</url>
      
        <content type="html"><![CDATA[<h2 id="Python-中英文词频统计，并制作词云。-英文词频-中文词频"><a href="#Python-中英文词频统计，并制作词云。-英文词频-中文词频" class="headerlink" title="Python 中英文词频统计，并制作词云。# 英文词频# 中文词频"></a>Python 中英文词频统计，并制作词云。<br><span id="more"></span><br># 英文词频<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Vitan</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;cp.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">content = f.read()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清洗数据</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">content = content.lower()  <span class="comment"># 格式化数据，转为小写</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> string.punctuation:  <span class="comment"># 去除所有标点符号</span></span><br><span class="line">    content = content.replace(i, <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">wordList = content.split()  <span class="comment"># 切片分词</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 排除语法型词汇，代词、冠词、连词等无语义词</span></span><br><span class="line">noMean = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;an&#x27;</span>,<span class="string">&#x27;the&#x27;</span>,<span class="string">&#x27;i&#x27;</span>,<span class="string">&#x27;do&#x27;</span>,<span class="string">&#x27;am&#x27;</span>,<span class="string">&#x27;you&#x27;</span>,<span class="string">&#x27;no&#x27;</span>,<span class="string">&#x27;t&#x27;</span>,<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;ve&#x27;</span>&#125;</span><br><span class="line">wordSet = <span class="built_in">set</span>(wordList) - noMean</span><br><span class="line">wordList = <span class="built_in">list</span>(wordSet)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计单词数量</span></span><br><span class="line">data = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> wordList:</span><br><span class="line"><span class="comment">#data[word] = data.get(word, 0) + 1</span></span><br><span class="line">    data[word] = wordList.count(word)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> data:</span><br><span class="line">    <span class="built_in">print</span>(key,data[key],<span class="string">&#x27;次&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;============&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># list.sort() 排序</span></span><br><span class="line">wordList = <span class="built_in">list</span>(data.items())</span><br><span class="line"><span class="comment"># 函数定义</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">def takeSecond(elem): # 定义函数，获取每个单词的次数项</span></span><br><span class="line"><span class="string">return elem[1]</span></span><br><span class="line"><span class="string">wordList.sort(key = takeSecond,reverse = True)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 匿名函数</span></span><br><span class="line">wordList.sort(key = <span class="keyword">lambda</span> x:x[<span class="number">1</span>],reverse = <span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(wordList)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;============&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 排序</span></span><br><span class="line">hist = []</span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> data.items():</span><br><span class="line">    hist.append([value, key])</span><br><span class="line">hist.sort(reverse = <span class="literal">True</span>)  <span class="comment"># 降序</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 前20个</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">    <span class="built_in">print</span>(hist[i])</span><br></pre></td></tr></table></figure><br># 中文词频<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Vitan</span></span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span>  wordcloud <span class="keyword">import</span> WordCloud</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取文件内容</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;ch.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,encoding = <span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">content = f.read()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结巴分词</span></span><br><span class="line">wordList = jieba.cut(content)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 词频统计</span></span><br><span class="line">data = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> wordList:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(word)==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:data[word]=data.get(word,<span class="number">0</span>)+<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 匿名函数获取每个单词的次数项统，降序</span></span><br><span class="line">result = <span class="built_in">list</span>(data.items())</span><br><span class="line">result.sort(key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>],reverse=<span class="literal">True</span>) <span class="comment"># 排序</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">    <span class="built_in">print</span>(result[i])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置词云</span></span><br><span class="line">wordSplit = <span class="string">&quot; &quot;</span>.join(<span class="built_in">dict</span>(result))</span><br><span class="line">wc = WordCloud(background_color=<span class="string">&quot;black&quot;</span>,  <span class="comment"># 设置背景颜色</span></span><br><span class="line">           <span class="comment"># mask = &quot;图片&quot;,  #设置背景图片</span></span><br><span class="line">           max_words=<span class="number">2000</span>,  <span class="comment"># 设置最大显示的字数</span></span><br><span class="line">           <span class="comment"># stopwords = &quot;&quot;, #设置停用词</span></span><br><span class="line">           font_path=<span class="string">&quot;/usr/share/fonts/noto-cjk/NotoSansCJK-Medium.ttc&quot;</span>,</span><br><span class="line">           <span class="comment"># 设置中文字体，使得词云可以显示（词云默认字体是“DroidSansMono.ttf字体库”，不支持中文）</span></span><br><span class="line">           max_font_size=<span class="number">50</span>,  <span class="comment"># 设置字体最大值</span></span><br><span class="line">           random_state=<span class="number">30</span>,  <span class="comment"># 设置有多少种随机生成状态，即有多少种配色方案</span></span><br><span class="line">           )</span><br><span class="line">mywc = wc.generate(wordSplit)  <span class="comment"># 生成词云</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示词云图</span></span><br><span class="line">plt.imshow(mywc)</span><br><span class="line">plt.axis(<span class="string">&quot;off&quot;</span>)</span><br><span class="line">plt.show()</span><br><span class="line">wc.to_file(<span class="string">&#x27;mywor.png&#x27;</span>)  <span class="comment"># 保存图片文件</span></span><br></pre></td></tr></table></figure></h2><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fw934tx7mcj20b405kgno.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 正则表达式</title>
      <link href="/posts/PythonRegex.html"/>
      <url>/posts/PythonRegex.html</url>
      
        <content type="html"><![CDATA[<p>Python 正则表达式</p><span id="more"></span><h1 id="常见匹配模式"><a href="#常见匹配模式" class="headerlink" title="常见匹配模式"></a>常见匹配模式</h1><ul><li>模式表</li></ul><table><thead><tr><th align="left">模式</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>\w</code></td><td align="left">匹配字母数字及下划线</td></tr><tr><td align="left"><code>\W</code></td><td align="left">匹配非字母数字下划线</td></tr><tr><td align="left"><code>\s</code></td><td align="left">匹配任意空白字符，等价于 [\t\n\r\f].</td></tr><tr><td align="left"><code>\S</code></td><td align="left">匹配任意非空字符</td></tr><tr><td align="left"><code>\d</code></td><td align="left">匹配任意数字，等价于 [0-9]</td></tr><tr><td align="left"><code>\D</code></td><td align="left">匹配任意非数字</td></tr><tr><td align="left"><code>\A</code></td><td align="left">匹配字符串开始</td></tr><tr><td align="left"><code>\Z</code></td><td align="left">匹配字符串结束，如果是存在换行，只匹配到换行前的结束字符串</td></tr><tr><td align="left"><code>\z</code></td><td align="left">匹配字符串结束</td></tr><tr><td align="left"><code>\G</code></td><td align="left">匹配最后匹配完成的位置</td></tr><tr><td align="left"><code>\n</code></td><td align="left">匹配一个换行符</td></tr><tr><td align="left"><code>\t</code></td><td align="left">匹配一个制表符</td></tr><tr><td align="left"><code>^</code></td><td align="left">匹配字符串的开头</td></tr><tr><td align="left"><code>$</code></td><td align="left">匹配字符串的末尾</td></tr><tr><td align="left"><code>.</code></td><td align="left">匹配任意字符，除了换行符，当re.DOTALL标记被指定时，则可以匹配包括换行符的任意字符</td></tr><tr><td align="left"><code>[...]</code></td><td align="left">用来表示一组字符,单独列出：[amk] 匹配 ‘a’，’m’或’k’</td></tr><tr><td align="left"><code>[^...]</code></td><td align="left">不在[]中的字符：[^abc] 匹配除了a,b,c之外的字符</td></tr><tr><td align="left"><code>*</code></td><td align="left">匹配0个或多个的表达式</td></tr><tr><td align="left"><code>+</code></td><td align="left">匹配1个或多个的表达式</td></tr><tr><td align="left"><code>?</code></td><td align="left">匹配0个或1个由前面的正则表达式定义的片段，非贪婪方式</td></tr><tr><td align="left"><code>&#123;n&#125;</code></td><td align="left">精确匹配n个前面表达式</td></tr><tr><td align="left"><code>&#123;n, m&#125;</code></td><td align="left">匹配 n 到 m 次由前面的正则表达式定义的片段，贪婪方式</td></tr><tr><td align="left">&#96;a</td><td align="left">b&#96;</td></tr><tr><td align="left"><code>( )</code></td><td align="left">匹配括号内的表达式，也表示一个组</td></tr></tbody></table><h1 id="re-match"><a href="#re-match" class="headerlink" title="re.match"></a>re.match</h1><p>re.match 尝试从字符串的起始位置匹配一个模式，如果不是起始位置匹配成功的话，match()就返回none。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.<span class="keyword">match</span>(pattern, string, flags=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h2 id="匹配模式"><a href="#匹配模式" class="headerlink" title="匹配模式"></a>匹配模式</h2><ul><li>最常规的匹配</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;Hello 123 4567 World_This is a Regex Demo&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(content))</span><br><span class="line"></span><br><span class="line"><span class="comment">#逐个匹配单个字符</span></span><br><span class="line">result = re.<span class="keyword">match</span>(<span class="string">&#x27;^Hello\s\d\d\d\s\d&#123;4&#125;\s\w&#123;10&#125;.*Demo$&#x27;</span>,content)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"><span class="comment">#输出匹配的字符串</span></span><br><span class="line"><span class="built_in">print</span>(result.group())</span><br><span class="line"><span class="comment">#输出匹配字符长度</span></span><br><span class="line"><span class="built_in">print</span>(result.span())</span><br></pre></td></tr></table></figure><h2 id="泛匹配"><a href="#泛匹配" class="headerlink" title="泛匹配"></a>泛匹配</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;Hello 123 4567 World_This is a Regex Demo&#x27;</span></span><br><span class="line"><span class="comment">#用.*代表任意个任何字符</span></span><br><span class="line">result = re.<span class="keyword">match</span>(<span class="string">&#x27;^Hello.*Demo$&#x27;</span>,content)</span><br><span class="line"><span class="comment">#输出整个匹配结果</span></span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"><span class="comment">#输出匹配的字符串</span></span><br><span class="line"><span class="built_in">print</span>(result.group())</span><br><span class="line"><span class="comment">#输出匹配字符长度</span></span><br><span class="line"><span class="built_in">print</span>(result.span())</span><br></pre></td></tr></table></figure><h2 id="匹配目标"><a href="#匹配目标" class="headerlink" title="匹配目标"></a>匹配目标</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;Hello 1234567 World_This is a Regex Demo&#x27;</span></span><br><span class="line"><span class="comment">#用()匹配目标1234567</span></span><br><span class="line">result = re.<span class="keyword">match</span>(<span class="string">&#x27;^Hello\s(\d+)\sWorld.*Demo$&#x27;</span>,content)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"><span class="built_in">print</span>(result.group(<span class="number">1</span>))</span><br><span class="line"><span class="comment">#输出匹配字符长度</span></span><br><span class="line"><span class="built_in">print</span>(result.span())</span><br></pre></td></tr></table></figure><h2 id="贪婪匹配"><a href="#贪婪匹配" class="headerlink" title="贪婪匹配"></a>贪婪匹配</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;Hello 1234567 World_This is a Regex Demo&#x27;</span></span><br><span class="line"><span class="comment">#用.*模式尝试匹配数字串1234567</span></span><br><span class="line">result = re.<span class="keyword">match</span>(<span class="string">&#x27;^He.*\s(\d+)\sWorld.*Demo$&#x27;</span>,content)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"><span class="built_in">print</span>(result.group(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><h2 id="非贪婪匹配"><a href="#非贪婪匹配" class="headerlink" title="非贪婪匹配"></a>非贪婪匹配</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;Hello 1234567 World_This is a Regex Demo&#x27;</span></span><br><span class="line"><span class="comment">#用.*？模式匹配数字串1234567</span></span><br><span class="line">result = re.<span class="keyword">match</span>(<span class="string">&#x27;^H.*?\s(\d+)\sW.*?Demo$&#x27;</span>,content)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"><span class="built_in">print</span>(result.group(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><h2 id="匹配模式-1"><a href="#匹配模式-1" class="headerlink" title="匹配模式"></a>匹配模式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;&#x27;&#x27;Hello 1234567 World_This</span></span><br><span class="line"><span class="string">is a Regex Demo</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#用re.S意味着.可以代表换行符在内的符号</span></span><br><span class="line"><span class="built_in">print</span>(result.group(<span class="number">1</span>))<span class="comment">#输出匹配数字串</span></span><br><span class="line">result = re.<span class="keyword">match</span>(<span class="string">&#x27;He.*?\s(\d+).*?Demo$&#x27;</span>,content,re.S)</span><br></pre></td></tr></table></figure><h1 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;price is $5.00&#x27;</span></span><br><span class="line"><span class="comment">#直接用$与.代表原字符</span></span><br><span class="line">result = re.<span class="keyword">match</span>(<span class="string">&#x27;price is $5.00&#x27;</span>,content)</span><br><span class="line"><span class="built_in">print</span>(result)<span class="comment">#输出匹配结果</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;price is $5.00&#x27;</span></span><br><span class="line"><span class="comment">#加\代表转义</span></span><br><span class="line">result = re.<span class="keyword">match</span>(<span class="string">&#x27;price is \$5\.00&#x27;</span>,content)</span><br><span class="line"><span class="built_in">print</span>(result)<span class="comment">#输出整个匹配结果</span></span><br></pre></td></tr></table></figure><ul><li>总结：尽量使用泛匹配、使用括号得到匹配目标、尽量使用非贪婪模式、有换行符就用re.S</li></ul><h1 id="re-search"><a href="#re-search" class="headerlink" title="re.search"></a>re.search</h1><p>re.search 扫描整个字符串并返回第一个成功的匹配。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;Extra stings Hello 1234567 World_This is a Regex Demo Extra stings&#x27;</span></span><br><span class="line"><span class="comment">#用re.match匹配以Hello开头至Demo的这一段字符串</span></span><br><span class="line">result = re.<span class="keyword">match</span>(<span class="string">&#x27;Hello.*?(\d+).*?Demo$&#x27;</span>,content)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;Extra stings Hello 1234567 World_This is a Regex Demo Extra stings&#x27;</span></span><br><span class="line"><span class="comment">#用re.search匹配以Hello开头至Demo的这一段字符串</span></span><br><span class="line">result = re.search(<span class="string">&#x27;Hello.*?(\d+).*?Demo&#x27;</span>, content)</span><br><span class="line"><span class="built_in">print</span>(result)<span class="comment">#输出整个匹配结果</span></span><br><span class="line"><span class="built_in">print</span>(result.group(<span class="number">1</span>))<span class="comment">#输出数字字符串</span></span><br></pre></td></tr></table></figure><ul><li>总结：为匹配方便，能用 search 就不用 match</li></ul><h1 id="匹配演练"><a href="#匹配演练" class="headerlink" title="匹配演练"></a>匹配演练</h1><ul><li>一</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">html = <span class="string">&#x27;&#x27;&#x27;&lt;div id=&quot;songs-list&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;h2 class=&quot;title&quot;&gt;经典老歌&lt;/h2&gt;</span></span><br><span class="line"><span class="string">    &lt;p class=&quot;introduction&quot;&gt;</span></span><br><span class="line"><span class="string">        经典老歌列表</span></span><br><span class="line"><span class="string">    &lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;ul id=&quot;list&quot; class=&quot;list-group&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;2&quot;&gt;一路上有你&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;7&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/2.mp3&quot; singer=&quot;任贤齐&quot;&gt;沧海一声笑&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;4&quot; class=&quot;active&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/3.mp3&quot; singer=&quot;齐秦&quot;&gt;往事随风&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;6&quot;&gt;&lt;a href=&quot;/4.mp3&quot; singer=&quot;beyond&quot;&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;5&quot;&gt;&lt;a href=&quot;/5.mp3&quot; singer=&quot;陈慧琳&quot;&gt;记事本&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;5&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/6.mp3&quot; singer=&quot;邓丽君&quot;&gt;&lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt;但愿人长久&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#分别匹配齐秦，往事随风这两串目标字符串</span></span><br><span class="line">result = re.search(<span class="string">&#x27;&lt;li.*?active.*?singer=&quot;(\w+)&quot;&gt;(\w+)&lt;/a&gt;&#x27;</span>,html,re.S)</span><br><span class="line"><span class="built_in">print</span>(result.group(<span class="number">1</span>),result.group(<span class="number">2</span>))</span><br></pre></td></tr></table></figure><ul><li>二</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">html = <span class="string">&#x27;&#x27;&#x27;&lt;div id=&quot;songs-list&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;h2 class=&quot;title&quot;&gt;经典老歌&lt;/h2&gt;</span></span><br><span class="line"><span class="string">    &lt;p class=&quot;introduction&quot;&gt;</span></span><br><span class="line"><span class="string">        经典老歌列表</span></span><br><span class="line"><span class="string">    &lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;ul id=&quot;list&quot; class=&quot;list-group&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;2&quot;&gt;一路上有你&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;7&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/2.mp3&quot; singer=&quot;任贤齐&quot;&gt;沧海一声笑&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;4&quot; class=&quot;active&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/3.mp3&quot; singer=&quot;齐秦&quot;&gt;往事随风&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;6&quot;&gt;&lt;a href=&quot;/4.mp3&quot; singer=&quot;beyond&quot;&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;5&quot;&gt;&lt;a href=&quot;/5.mp3&quot; singer=&quot;陈慧琳&quot;&gt;记事本&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;5&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/6.mp3&quot; singer=&quot;邓丽君&quot;&gt;但愿人长久&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;&#x27;&#x27;&#x27;</span></span><br><span class="line">result = re.search(<span class="string">&#x27;&lt;li.*?singer=&quot;(\w+)&quot;&gt;(\w+)&lt;/a&gt;&#x27;</span>,html,re.S)</span><br><span class="line"><span class="comment">#分别匹配任贤齐，沧海一声笑这两串目标字符串</span></span><br><span class="line"><span class="built_in">print</span>(result.group(<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(result.group(<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#同时输出任贤齐，沧海一声笑这两串目标字符</span></span><br><span class="line"><span class="built_in">print</span>(result.group(<span class="number">1</span>),result.group(<span class="number">2</span>))</span><br></pre></td></tr></table></figure><ul><li>三</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">html = <span class="string">&#x27;&#x27;&#x27;&lt;div id=&quot;songs-list&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;h2 class=&quot;title&quot;&gt;经典老歌&lt;/h2&gt;</span></span><br><span class="line"><span class="string">    &lt;p class=&quot;introduction&quot;&gt;</span></span><br><span class="line"><span class="string">        经典老歌列表</span></span><br><span class="line"><span class="string">    &lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;ul id=&quot;list&quot; class=&quot;list-group&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;2&quot;&gt;一路上有你&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;7&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/2.mp3&quot; singer=&quot;任贤齐&quot;&gt;沧海一声笑&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;4&quot; class=&quot;active&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/3.mp3&quot; singer=&quot;齐秦&quot;&gt;往事随风&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;6&quot;&gt;&lt;a href=&quot;/4.mp3&quot; singer=&quot;beyond&quot;&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;5&quot;&gt;&lt;a href=&quot;/5.mp3&quot; singer=&quot;陈慧琳&quot;&gt;记事本&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;5&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/6.mp3&quot; singer=&quot;邓丽君&quot;&gt;但愿人长久&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;&#x27;&#x27;&#x27;</span></span><br><span class="line">result = re.search(<span class="string">&#x27;&lt;li.*?singer=&quot;(\w+)&quot;&gt;(\w+)&lt;/a&gt;&#x27;</span>,html)</span><br><span class="line"><span class="comment">#分别匹配beyond，光辉岁月这两串目标字符串</span></span><br><span class="line"><span class="built_in">print</span>(result.group(<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(result.group(<span class="number">2</span>))</span><br><span class="line"><span class="comment">#同时输出beyond，光辉岁月这两串目标字符串</span></span><br><span class="line"><span class="built_in">print</span>(result.group(<span class="number">1</span>),result.group(<span class="number">2</span>))</span><br></pre></td></tr></table></figure><h1 id="re-findall"><a href="#re-findall" class="headerlink" title="re.findall"></a>re.findall</h1><p>搜索字符串，以列表形式返回全部能匹配的子串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">html = <span class="string">&#x27;&#x27;&#x27;&lt;div id=&quot;songs-list&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;h2 class=&quot;title&quot;&gt;经典老歌&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;introduction&quot;&gt;</span></span><br><span class="line"><span class="string">    经典老歌列表</span></span><br><span class="line"><span class="string">&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;ul id=&quot;list&quot; class=&quot;list-group&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;li data-view=&quot;2&quot;&gt;一路上有你&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;li data-view=&quot;7&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;a href=&quot;/2.mp3&quot; singer=&quot;任贤齐&quot;&gt;沧海一声笑&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;li data-view=&quot;4&quot; class=&quot;active&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;a href=&quot;/3.mp3&quot; singer=&quot;齐秦&quot;&gt;往事随风&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;li data-view=&quot;6&quot;&gt;&lt;a href=&quot;/4.mp3&quot; singer=&quot;beyond&quot;&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;li data-view=&quot;5&quot;&gt;&lt;a href=&quot;/5.mp3&quot; singer=&quot;陈慧琳&quot;&gt;记事本&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;li data-view=&quot;5&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;a href=&quot;/6.mp3&quot; singer=&quot;邓丽君&quot;&gt;但愿人长久&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#匹配从任贤齐开始所有歌的href,singer值与文本内容</span></span><br><span class="line">result = re.findall(<span class="string">&#x27;&lt;li.*?href=&quot;(.*?)&quot;.*?singer=&quot;(\w+)&quot;&gt;(\w+)&lt;/a&gt;&#x27;</span>,html,re.S)</span><br><span class="line"><span class="built_in">print</span>(result)<span class="comment">#输出整个匹配结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(result))<span class="comment">#输出匹配结果的数据类型</span></span><br><span class="line"><span class="comment">#遍历所有匹配结果，输出每一条匹配结果与每一匹配结果的三个元素</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> result :</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="built_in">print</span>(item[<span class="number">0</span>],item[<span class="number">1</span>],item[<span class="number">2</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">html = <span class="string">&#x27;&#x27;&#x27;&lt;div id=&quot;songs-list&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;h2 class=&quot;title&quot;&gt;经典老歌&lt;/h2&gt;</span></span><br><span class="line"><span class="string">    &lt;p class=&quot;introduction&quot;&gt;</span></span><br><span class="line"><span class="string">        经典老歌列表</span></span><br><span class="line"><span class="string">    &lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;ul id=&quot;list&quot; class=&quot;list-group&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;2&quot;&gt;一路上有你&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;7&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/2.mp3&quot; singer=&quot;任贤齐&quot;&gt;沧海一声笑&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;4&quot; class=&quot;active&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/3.mp3&quot; singer=&quot;齐秦&quot;&gt;往事随风&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;6&quot;&gt;&lt;a href=&quot;/4.mp3&quot; singer=&quot;beyond&quot;&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;5&quot;&gt;&lt;a href=&quot;/5.mp3&quot; singer=&quot;陈慧琳&quot;&gt;记事本&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;5&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/6.mp3&quot; singer=&quot;邓丽君&quot;&gt;但愿人长久&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#用正则表达式匹配从一路上有你所在li标签开始的所有li标签</span></span><br><span class="line">result = re.findall(<span class="string">&#x27;&lt;li.*?&gt;\s*?(&lt;a.*?&gt;)?(\w+)(&lt;/a&gt;)?\s*?&lt;/li&gt;&#x27;</span>, html, re.S)</span><br><span class="line"><span class="built_in">print</span>(result)<span class="comment">#输出整个匹配结果</span></span><br><span class="line"><span class="comment">##输出每一条匹配结果的第2个元素</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> result:</span><br><span class="line">    <span class="built_in">print</span>(item[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h1 id="re-sub"><a href="#re-sub" class="headerlink" title="re.sub"></a>re.sub</h1><p>替换字符串中每一个匹配的子串后返回替换后的字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;Extra stings Hello 1234567 World_This is a Regex Demo Extra stings&#x27;</span></span><br><span class="line"><span class="comment">#将数字1234567替换为空</span></span><br><span class="line">content = re.sub(<span class="string">&#x27;\d+&#x27;</span>,<span class="string">&#x27;&#x27;</span>, content)</span><br><span class="line"><span class="built_in">print</span>(content)<span class="comment">#输出替换结果</span></span><br></pre></td></tr></table></figure><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;Extra stings Hello 1234567 World_This is a Regex Demo Extra stings&#x27;</span></span><br><span class="line"><span class="comment">#将数字1234567替换为字符串“Replacement”</span></span><br><span class="line">content = re.sub(<span class="string">&#x27;\d+&#x27;</span>,<span class="string">&#x27;Replacement&#x27;</span>,content)</span><br><span class="line"><span class="built_in">print</span>(content)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;Extra stings Hello 1234567 World_This is a Regex Demo Extra stings&#x27;</span></span><br><span class="line"><span class="comment">#将数字1234567替换为1234567 8910</span></span><br><span class="line">content = re.sub(<span class="string">&#x27;(\d+)&#x27;</span>, <span class="string">r&#x27;\1 8910&#x27;</span>, content)</span><br><span class="line"><span class="built_in">print</span>(content)<span class="comment">#输出替换结果</span></span><br></pre></td></tr></table></figure></code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">html = <span class="string">&#x27;&#x27;&#x27;&lt;div id=&quot;songs-list&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;h2 class=&quot;title&quot;&gt;经典老歌&lt;/h2&gt;</span></span><br><span class="line"><span class="string">    &lt;p class=&quot;introduction&quot;&gt;</span></span><br><span class="line"><span class="string">        经典老歌列表</span></span><br><span class="line"><span class="string">    &lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;ul id=&quot;list&quot; class=&quot;list-group&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;2&quot;&gt;一路上有你&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;7&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/2.mp3&quot; singer=&quot;任贤齐&quot;&gt;沧海一声笑&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;4&quot; class=&quot;active&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/3.mp3&quot; singer=&quot;齐秦&quot;&gt;往事随风&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;6&quot;&gt;&lt;a href=&quot;/4.mp3&quot; singer=&quot;beyond&quot;&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;5&quot;&gt;&lt;a href=&quot;/5.mp3&quot; singer=&quot;陈慧琳&quot;&gt;记事本&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view=&quot;5&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/6.mp3&quot; singer=&quot;邓丽君&quot;&gt;但愿人长久&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#去除a类标签（用re.sub方法提取所有歌名，提示思路：先去除a类型标签，再用正则提取每个li标签的内容）</span></span><br><span class="line">html = re.sub(<span class="string">&#x27;&lt;a.*?&gt;|&lt;/a&gt;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,html)</span><br><span class="line"><span class="built_in">print</span>(html)<span class="comment">#输出去除结果</span></span><br><span class="line"><span class="comment">#正则匹配li标签内容</span></span><br><span class="line">result = re.findall(<span class="string">&#x27;li.*?&gt;(.*?)&lt;/li&gt;&#x27;</span>,html,re.S)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> result:<span class="comment">#遍历每一匹配结果</span></span><br><span class="line">    <span class="built_in">print</span>(item.strip())<span class="comment">#输出每一匹配结果并去除换行符</span></span><br></pre></td></tr></table></figure><h1 id="re-compile"><a href="#re-compile" class="headerlink" title="re.compile"></a>re.compile</h1><ol><li>将正则字符串编译成正则表达式对象</li><li>将一个正则表达式串编译成正则对象，以便于复用该匹配模式</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;&#x27;&#x27;Hello 1234567 World_This</span></span><br><span class="line"><span class="string">is a Regex Demo&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#编写Hello开始的这一串字符串匹配模式pattern</span></span><br><span class="line">pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;Hello.*?Demo&#x27;</span>,re.S)</span><br><span class="line"><span class="comment">#用上述模式匹配</span></span><br><span class="line">result = re.<span class="keyword">match</span>(pattern,content)</span><br><span class="line"><span class="comment">#result = re.match(&#x27;Hello.*Demo&#x27;, content, re.S)</span></span><br><span class="line"><span class="built_in">print</span>(result)<span class="comment">#输出匹配结果</span></span><br></pre></td></tr></table></figure><h1 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">content = requests.get(<span class="string">&#x27;https://book.douban.com/&#x27;</span>).text</span><br><span class="line">pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;&lt;li.*?cover.*?href=&quot;(.*?)&quot;.*?title=&quot;(.*?)&quot;.*?more-meta.*?author&quot;&gt;(.*?)&lt;/span&gt;.*?year&quot;&gt;(.*?)&lt;/span&gt;.*?&lt;/li&gt;&#x27;</span>, re.S)</span><br><span class="line"><span class="comment">#利用上述pattern匹配所有书籍的上述信息</span></span><br><span class="line">results = re.findall(pattern, content)</span><br><span class="line"><span class="keyword">for</span> result <span class="keyword">in</span> results:</span><br><span class="line">    <span class="comment">#分别用url,title,author,date为每一书籍信息的变量名</span></span><br><span class="line">    url, name, author, date = result</span><br><span class="line">    <span class="comment">#将author后面的\n替换为空</span></span><br><span class="line">    author = re.sub(<span class="string">&#x27;\s&#x27;</span>, <span class="string">&#x27;&#x27;</span>, author)</span><br><span class="line">    <span class="comment">#将date后面的\n替换为空</span></span><br><span class="line">    date = re.sub(<span class="string">&#x27;\s&#x27;</span>, <span class="string">&#x27;&#x27;</span>, date)</span><br><span class="line">    <span class="comment">#同时输出每一书籍url,title,author,date信息</span></span><br><span class="line">    <span class="built_in">print</span>(url, name, author, date)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>房天下二手房</title>
      <link href="/posts/FTX.html"/>
      <url>/posts/FTX.html</url>
      
        <content type="html"><![CDATA[<p>房天下爬虫</p><span id="more"></span><h3 id="获取网页源码"><a href="#获取网页源码" class="headerlink" title="获取网页源码"></a>获取网页源码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment">#获取上海在售二手房源网页首页（http://esf.sh.fang.com/）的响应包，命名为res</span></span><br><span class="line">res.text</span><br><span class="line">res = requests.get(<span class="string">&#x27;http://esf.sh.fang.com/&#x27;</span>)</span><br><span class="line"><span class="comment">#输出res的文本内容</span></span><br><span class="line"><span class="built_in">print</span>(res.text)</span><br></pre></td></tr></table></figure><h3 id="获取每套房源的详细内容页"><a href="#获取每套房源的详细内容页" class="headerlink" title="获取每套房源的详细内容页"></a>获取每套房源的详细内容页</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="comment">#将上海在售二手房源网页首页url（http://esf.sh.fang.com/）赋值给domain</span></span><br><span class="line">domain = <span class="string">&#x27;http://esf.sh.fang.com&#x27;</span></span><br><span class="line"><span class="comment"># 创建BeautifulSoup对象对res响应包进行解析，结果命名为soup</span></span><br><span class="line">soup = BeautifulSoup(res.text,<span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"><span class="comment"># 循环遍历获取网页首页所有房源详细内容页的url,循环变量名为house（提示：检查定位路径定位查找的节点是否为空）</span></span><br><span class="line"><span class="keyword">for</span> house <span class="keyword">in</span> soup.select(<span class="string">&#x27;.shop_list dl dd h4 a&#x27;</span>):</span><br><span class="line">    <span class="comment">#（提示：如果存在返回的标签节点有空的情况，需要进行判断！）</span></span><br><span class="line">    <span class="keyword">if</span> house:</span><br><span class="line">        <span class="comment"># 利用domain与存储房屋详细内容的相对url的标签节点构建房屋的 url</span></span><br><span class="line">        <span class="built_in">print</span>(domain+house[<span class="string">&#x27;href&#x27;</span>])</span><br><span class="line">        <span class="comment"># 打印输出查看url</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;========================&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="将上面获取到的其中一房源的详细内容页的-url-进行请求并解析提取相关数据"><a href="#将上面获取到的其中一房源的详细内容页的-url-进行请求并解析提取相关数据" class="headerlink" title="将上面获取到的其中一房源的详细内容页的 url 进行请求并解析提取相关数据"></a>将上面获取到的其中一房源的详细内容页的 url 进行请求并解析提取相关数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="comment"># 将以上获得的第一个房源的详细内容页进行请求访问</span></span><br><span class="line">res =requests.get(<span class="string">&#x27;http://esf.sh.fang.com/chushou/3_331876564.htm&#x27;</span>)</span><br><span class="line"><span class="comment"># 对响应包res的网页文本进行解析，解析结果命名为soup</span></span><br><span class="line">soup = BeautifulSoup(res.text,<span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">res.text</span><br></pre></td></tr></table></figure><h3 id="获取详情"><a href="#获取详情" class="headerlink" title="获取详情"></a>获取详情</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义字典变量info，用于存放每套房子相关数据</span></span><br><span class="line">info =&#123;&#125;</span><br><span class="line"><span class="comment"># 查找房子标题，以“标题”为key名存入info</span></span><br><span class="line">info[<span class="string">&#x27;标题&#x27;</span>]=soup.select(<span class="string">&#x27;.title h1&#x27;</span>)[<span class="number">0</span>].text.strip()</span><br><span class="line">info</span><br><span class="line"></span><br><span class="line"><span class="comment">#查找总价，以“总价”为key名存入info</span></span><br><span class="line">info[<span class="string">&#x27;总价&#x27;</span>]=soup.select(<span class="string">&#x27;.price_esf&#x27;</span>)[<span class="number">0</span>].text</span><br><span class="line">info</span><br><span class="line"></span><br><span class="line">k = [<span class="string">&#x27;总价&#x27;</span>,<span class="string">&#x27;单价&#x27;</span>,<span class="string">&#x27;建筑面积&#x27;</span>,<span class="string">&#x27;朝向&#x27;</span>,<span class="string">&#x27;楼层&#x27;</span>,<span class="string">&#x27;装修&#x27;</span>,<span class="string">&#x27;户型&#x27;</span>,<span class="string">&#x27;标题&#x27;</span>]</span><br><span class="line"><span class="comment">#item表示包括户型，朝向，单价，楼层，装修等相关数据的标签</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> soup.select(<span class="string">&#x27;.trl-item1&#x27;</span>):</span><br><span class="line">     <span class="comment"># key 计划用于表示房屋的字段</span></span><br><span class="line">     key=item.select(<span class="string">&#x27;.font14&#x27;</span>)[<span class="number">0</span>].text.strip()</span><br><span class="line">     <span class="comment"># value 计划用于表示房屋相关字段对应数</span></span><br><span class="line">     value=item.select(<span class="string">&#x27;.tt&#x27;</span>)[<span class="number">0</span>].text.strip()</span><br><span class="line">     info[key]=value</span><br><span class="line"><span class="built_in">print</span>(info)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(info.values()))</span><br><span class="line"><span class="built_in">print</span>(k)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dict</span>(<span class="built_in">zip</span>(k,<span class="built_in">list</span>(info.values()))))</span><br></pre></td></tr></table></figure><h3 id="定义一个获取网页详细内容页的函数-getHouseDetail"><a href="#定义一个获取网页详细内容页的函数-getHouseDetail" class="headerlink" title="定义一个获取网页详细内容页的函数 getHouseDetail"></a>定义一个获取网页详细内容页的函数 getHouseDetail</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">getHouseDetail</span>(<span class="params">url</span>):</span><br><span class="line">    info=&#123;&#125;</span><br><span class="line">    info_adj=&#123;&#125;</span><br><span class="line">    <span class="comment"># 根据url请求网页内容</span></span><br><span class="line">    res=requests.get(url)</span><br><span class="line">    <span class="comment">#解析详细内容页，结果命名为soup</span></span><br><span class="line">    soup = BeautifulSoup(res.text,<span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">    <span class="comment"># 获取房屋名并加入info字典，key值命名为“标题</span></span><br><span class="line">    info[<span class="string">&#x27;标题&#x27;</span>]=soup.select(<span class="string">&#x27;.title h1&#x27;</span>)[<span class="number">0</span>].text.strip()</span><br><span class="line">    <span class="comment"># 获取房屋总价并加入info字典，key值命名为“总价</span></span><br><span class="line">    info[<span class="string">&#x27;总价&#x27;</span>]=soup.select(<span class="string">&#x27;.price_esf&#x27;</span>)[<span class="number">0</span>].text</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用item做为循环变量名，代表当前网页class为trl-item1的所有标签节点</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> soup.select(<span class="string">&#x27;.trl-item1&#x27;</span>):</span><br><span class="line">        <span class="comment"># key表示item标签下所有class为font14的标签节点文本内容</span></span><br><span class="line">        key=item.select(<span class="string">&#x27;.font14&#x27;</span>)[<span class="number">0</span>].text.strip()</span><br><span class="line">        <span class="built_in">print</span>(key)</span><br><span class="line">        <span class="comment"># value 示item标签下所有class为tt的标签节点文本内容</span></span><br><span class="line">        value=item.select(<span class="string">&#x27;.tt&#x27;</span>)[<span class="number">0</span>].text.strip()</span><br><span class="line">        <span class="comment">#将info里面所有key赋值给value</span></span><br><span class="line">        info[key]=value</span><br><span class="line">        k=[<span class="string">&#x27;总价&#x27;</span>,<span class="string">&#x27;单价&#x27;</span>,<span class="string">&#x27;建筑面积&#x27;</span>,<span class="string">&#x27;朝向&#x27;</span>,<span class="string">&#x27;楼层&#x27;</span>,<span class="string">&#x27;装修&#x27;</span>,<span class="string">&#x27;户型&#x27;</span>,<span class="string">&#x27;标题&#x27;</span>]</span><br><span class="line">    info_adj=<span class="built_in">dict</span>(<span class="built_in">zip</span>(k,<span class="built_in">list</span>(info.values())))</span><br><span class="line">    <span class="comment">#print(info_adj)</span></span><br><span class="line">    <span class="keyword">return</span> info_adj</span><br></pre></td></tr></table></figure><h3 id="通过获取所有房屋的详细内容页-url，获取每一房屋的相关字段信息"><a href="#通过获取所有房屋的详细内容页-url，获取每一房屋的相关字段信息" class="headerlink" title="通过获取所有房屋的详细内容页 url，获取每一房屋的相关字段信息"></a>通过获取所有房屋的详细内容页 url，获取每一房屋的相关字段信息</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">getHouseDetail(<span class="string">&#x27;http://esf.sh.fang.com/chushou/3_328597533.htm&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="comment"># 定义列表用于存储所有房屋的相关数据</span></span><br><span class="line">houseary=[]</span><br><span class="line"><span class="comment"># domain 为http://esf.sh.fang.com域名</span></span><br><span class="line">domain=<span class="string">&#x27;http://esf.sh.fang.com&#x27;</span></span><br><span class="line"><span class="comment"># 请求访问http://esf.sh.fang.com首页，获得响应包res</span></span><br><span class="line">res=requests.get(<span class="string">&#x27;http://esf.sh.fang.com&#x27;</span>)</span><br><span class="line"><span class="comment">#创建BeatifulSoup对象并进行解析</span></span><br><span class="line">soup=BeautifulSoup(res.text,<span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环遍历获取网页首页中存有的标签节点，循环变量命名为link</span></span><br><span class="line"><span class="keyword">for</span> link <span class="keyword">in</span> soup.select(<span class="string">&#x27;.shop_list dl dd h4 a&#x27;</span>):</span><br><span class="line">    <span class="comment"># 利用domain与存储房屋详细内容的相对url的标签节点构建房屋的url</span></span><br><span class="line">    url=domain+link[<span class="string">&#x27;href&#x27;</span>]</span><br><span class="line">    <span class="comment"># 调用getHouseDetail函数获取每一房屋相关数据并追加到houseary</span></span><br><span class="line">    houseary.append(getHouseDetail(url))</span><br><span class="line"></span><br><span class="line"><span class="comment">#求总共获取到多少套房屋信息</span></span><br><span class="line"><span class="built_in">len</span>(houseary)</span><br></pre></td></tr></table></figure><h3 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br><span class="line"><span class="comment">#将获取到的所有房屋信息转换成数据框的结构</span></span><br><span class="line">df = pandas.DataFrame(houseary)</span><br><span class="line">df</span><br><span class="line"></span><br><span class="line"><span class="comment">#存储到当前工作空间目录下，文件命名为house.xlsx</span></span><br><span class="line">df.to_excel(<span class="string">&#x27;house.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Numpy</title>
      <link href="/posts/PythonNumpy.html"/>
      <url>/posts/PythonNumpy.html</url>
      
        <content type="html"><![CDATA[<p>Python Numpy</p><span id="more"></span><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="数列"><a href="#数列" class="headerlink" title="数列"></a>数列</h2><ul><li>a &#x3D; a1,a2,a3,·····,an</li><li>b &#x3D; b1,b2,b3,·····,bn</li><li>求：<ul><li>c &#x3D; a12+b13,a22+b23,a32+b33,·····+an2+bn3</li></ul><ol><li>用列表+循环实现，并包装成函数</li><li>用numpy实现，并包装成函数</li><li>对比两种方法实现的效率，给定一个较大的参数n，用运行函数前后的timedelta表示。</li></ol></li></ul><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="列表-循环实现，并包装成函数"><a href="#列表-循环实现，并包装成函数" class="headerlink" title="列表+循环实现，并包装成函数"></a>列表+循环实现，并包装成函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">pySum</span>(<span class="params">n</span>):</span><br><span class="line">    a = <span class="built_in">list</span>(<span class="built_in">range</span>(n))</span><br><span class="line">    b = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">0</span>,<span class="number">5</span>*n,<span class="number">5</span>))</span><br><span class="line">    c = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line">        c.append(a[i] ** <span class="number">2</span> + b[i] ** <span class="number">3</span>)</span><br><span class="line">    <span class="keyword">return</span>(c)</span><br><span class="line"><span class="built_in">print</span>(pySum(<span class="number">10</span>))</span><br></pre></td></tr></table></figure><h2 id="数组numpy实现，并包装成函数"><a href="#数组numpy实现，并包装成函数" class="headerlink" title="数组numpy实现，并包装成函数"></a>数组numpy实现，并包装成函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">npSum</span>(<span class="params">n</span>):</span><br><span class="line">    a = numpy.arange(n)</span><br><span class="line">    b = numpy.arange(<span class="number">0</span>, <span class="number">5</span> * n, <span class="number">5</span>)</span><br><span class="line">    c = a**<span class="number">2</span>+b**<span class="number">3</span></span><br><span class="line">    <span class="keyword">return</span>(c)</span><br><span class="line"><span class="built_in">print</span>(npSum(<span class="number">10</span>))</span><br></pre></td></tr></table></figure><ul><li>对比两种方法实现的效率，给定一个较大的参数n，用运行函数前后的timedelta表示</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line">start = datetime.now()</span><br><span class="line">pySum(<span class="number">100000</span>)</span><br><span class="line">delta = datetime.now()-start</span><br><span class="line"><span class="built_in">print</span>(delta)</span><br><span class="line"></span><br><span class="line">start = datetime.now()</span><br><span class="line">npSum(<span class="number">100000</span>)</span><br><span class="line">delta = datetime.now()-start</span><br><span class="line"><span class="built_in">print</span>(delta)</span><br></pre></td></tr></table></figure><ul><li>尝试把 a,b 定义为三层嵌套列表和三维数组</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">liSum</span>(<span class="params">n</span>):</span><br><span class="line">    a = numpy.arange(n)</span><br><span class="line">    b = numpy.arange(<span class="number">0</span>,<span class="number">5</span>*n,<span class="number">5</span>)</span><br><span class="line">    c = numpy.array([[a,b],[a**<span class="number">2</span>,b**<span class="number">3</span>]])</span><br><span class="line">    <span class="keyword">return</span> (c)</span><br><span class="line"><span class="built_in">print</span>(npSum(<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">start = datetime.now()</span><br><span class="line">liSum(<span class="number">100000</span>)</span><br><span class="line">time = datetime.now()-start</span><br><span class="line"><span class="built_in">print</span>(time)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jupyter 主题</title>
      <link href="/posts/JupyterTheme.html"/>
      <url>/posts/JupyterTheme.html</url>
      
        <content type="html"><![CDATA[<p>Jupyter 主题</p><span id="more"></span><h1 id="安装-Jupyter-theme"><a href="#安装-Jupyter-theme" class="headerlink" title="安装 Jupyter-theme"></a>安装 Jupyter-theme</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install jupyterthemes</span><br></pre></td></tr></table></figure><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jt -l <span class="comment"># 列出主题</span></span><br><span class="line">jt -t themeName <span class="comment"># 更换主题</span></span><br><span class="line">jt -r <span class="comment"># 恢复默认主题</span></span><br></pre></td></tr></table></figure><hr><p><strong>Jupyter-themes</strong></p><ul><li><a href="https://github.com/dunovank/jupyter-themes">官方仓库</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python PyQuery 库基础</title>
      <link href="/posts/PyQuery.html"/>
      <url>/posts/PyQuery.html</url>
      
        <content type="html"><![CDATA[<p>Python PyQuery 库基础</p><span id="more"></span><h1 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h1><h2 id="字符串初始化"><a href="#字符串初始化" class="headerlink" title="字符串初始化"></a>字符串初始化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">!pip install pyquery</span><br><span class="line">html = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line"><span class="string">&lt;ul&gt;</span></span><br><span class="line"><span class="string">     &lt;li class=&quot;item-0&quot;&gt;first item&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;li class=&quot;item-0 active&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;&lt;span class=&quot;bold&quot;&gt;third item&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;li class=&quot;item-1 active&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string"> &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line"><span class="comment"># 导入pyquery类库下面的PyQuery，并重命名为pq</span></span><br><span class="line">doc = pq(html)</span><br><span class="line"><span class="comment">#利用html创建pq对象，命名为doc</span></span><br><span class="line"><span class="built_in">print</span>(doc(<span class="string">&#x27;li&#x27;</span>))</span><br><span class="line"><span class="comment">#输出打印所有的li标签</span></span><br></pre></td></tr></table></figure><h2 id="URL初始化"><a href="#URL初始化" class="headerlink" title="URL初始化"></a>URL初始化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(url=<span class="string">&#x27;https://www.baidu.com&#x27;</span>)</span><br><span class="line"><span class="comment">#利用url=&#x27;&#x27;获取百度首页响应包，并以此创建pq对象，命名为doc</span></span><br><span class="line"><span class="built_in">print</span>(doc(<span class="string">&#x27;head&#x27;</span>))</span><br><span class="line"><span class="comment">#输出打印doc下面的head节点</span></span><br></pre></td></tr></table></figure><h2 id="文件初始化"><a href="#文件初始化" class="headerlink" title="文件初始化"></a>文件初始化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(filename=<span class="string">&#x27;demo.html&#x27;</span>)</span><br><span class="line"><span class="comment">#利用filename=‘’将工作空间下的demo.html文档导入进来，并创建pq对象，命名为doc</span></span><br><span class="line"><span class="built_in">print</span>(doc(<span class="string">&#x27;li&#x27;</span>))</span><br><span class="line"><span class="comment">#输出打印doc下面的所有li标签</span></span><br></pre></td></tr></table></figure><h1 id="基本CSS选择器"><a href="#基本CSS选择器" class="headerlink" title="基本CSS选择器"></a>基本CSS选择器</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div id=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;list&quot;&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0&quot;&gt;first item&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0 active&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;&lt;span class=&quot;bold&quot;&gt;third item&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-1 active&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;/ul&gt;</span></span><br><span class="line"><span class="string"> &lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line"><span class="built_in">print</span>(doc(<span class="string">&#x27;#container .list li&#x27;</span>))</span><br><span class="line"><span class="comment">#查找id为container下面class为list下面的li节点</span></span><br></pre></td></tr></table></figure><h1 id="查找元素"><a href="#查找元素" class="headerlink" title="查找元素"></a>查找元素</h1><h2 id="子元素"><a href="#子元素" class="headerlink" title="子元素"></a>子元素</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div id=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;ul class=&quot;list&quot;&gt;</span></span><br><span class="line"><span class="string">     &lt;li class=&quot;item-0&quot;&gt;first item&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;li class=&quot;item-0 active&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;&lt;span class=&quot;bold&quot;&gt;third item&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;li class=&quot;item-1 active&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string"> &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">items = doc(<span class="string">&#x27;#list&#x27;</span>)</span><br><span class="line"><span class="comment">#查找class为list的标签节点，命名为items</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(items))</span><br><span class="line"><span class="comment">#输出打印items的类型</span></span><br><span class="line"><span class="built_in">print</span>(items)</span><br><span class="line"><span class="comment">#输出打印items</span></span><br><span class="line">lis =items.find(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line"><span class="comment">#利用find函数查找items下面的li标签节点</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(lis))</span><br><span class="line"><span class="comment">#输出打印lis的类型</span></span><br><span class="line"><span class="built_in">print</span>(lis)</span><br><span class="line"><span class="comment">#输出lis</span></span><br></pre></td></tr></table></figure><h2 id="children"><a href="#children" class="headerlink" title="children"></a>children</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">lis = items.children()</span><br><span class="line"><span class="comment">#lis为items的孩子标签</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(lis))</span><br><span class="line"><span class="comment">#输出返回lis的类型</span></span><br><span class="line"><span class="built_in">print</span>(lis)</span><br><span class="line"><span class="comment">#输出lis</span></span><br></pre></td></tr></table></figure><ul><li>返回items孩子节点中class为active为标签</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lis = items.children(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#返回items孩子节点中class为active为标签</span></span><br><span class="line"><span class="built_in">print</span>(lis)<span class="comment">#输出打印lis</span></span><br></pre></td></tr></table></figure><h2 id="父元素"><a href="#父元素" class="headerlink" title="父元素"></a>父元素</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div id=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;ul class=&quot;list&quot;&gt;</span></span><br><span class="line"><span class="string">     &lt;li class=&quot;item-0&quot;&gt;first item&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;li class=&quot;item-0 active&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;&lt;span class=&quot;bold&quot;&gt;third item&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;li class=&quot;item-1 active&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string"> &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">items = items(<span class="string">&#x27;.list&#x27;</span>)</span><br><span class="line"><span class="comment">#items为class等于list的标签</span></span><br><span class="line">container = items.parents()</span><br><span class="line"><span class="comment">#返回items的父节点</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(container))</span><br><span class="line"><span class="comment">#输出打印container的类型</span></span><br><span class="line"><span class="built_in">print</span>(container)</span><br><span class="line"><span class="comment">#输出打印container</span></span><br></pre></td></tr></table></figure><h2 id="parent"><a href="#parent" class="headerlink" title="parent"></a>parent</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Pythonhtml = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;wrap&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;div id=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;ul class=&quot;list&quot;&gt;</span></span><br><span class="line"><span class="string">                 &lt;li class=&quot;item-0&quot;&gt;first item&lt;/li&gt;</span></span><br><span class="line"><span class="string">                 &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">                 &lt;li class=&quot;item-0 active&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;&lt;span class=&quot;bold&quot;&gt;third item&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">                 &lt;li class=&quot;item-1 active&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">                 &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">             &lt;/ul&gt;</span></span><br><span class="line"><span class="string">         &lt;/div&gt;</span></span><br><span class="line"><span class="string">     &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">    doc = pq(html)</span><br><span class="line">    items = doc(<span class="string">&#x27;.list&#x27;</span>)</span><br><span class="line">    parents = items.parents()</span><br><span class="line">    <span class="comment">#返回items的所有祖先</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(parents))</span><br><span class="line">    <span class="comment">#输出打印parents的类型</span></span><br><span class="line">    <span class="built_in">print</span>(parents)</span><br><span class="line">    <span class="comment">#输出打印parents</span></span><br></pre></td></tr></table></figure><ul><li>查找返回items祖先节点里class为wrap的祖先标签</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">parent = items(<span class="string">&#x27;.wrap&#x27;</span>)</span><br><span class="line"><span class="comment">#查找返回items祖先节点里class为wrap的祖先标签</span></span><br><span class="line"><span class="built_in">print</span>(parents)</span><br><span class="line"><span class="comment">#打印输出parent</span></span><br></pre></td></tr></table></figure><h2 id="兄弟元素"><a href="#兄弟元素" class="headerlink" title="兄弟元素"></a>兄弟元素</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;wrap&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;div id=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;list&quot;&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0&quot;&gt;first item&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0 active&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;&lt;span class=&quot;bold&quot;&gt;third item&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-1 active&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;/ul&gt;</span></span><br><span class="line"><span class="string"> &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">li = doc(<span class="string">&#x27;.list .item-0.active&#x27;</span>)</span><br><span class="line"><span class="comment">#li为class为list下面的class为item-0与active的节点</span></span><br><span class="line"><span class="built_in">print</span>(li.siblings())</span><br><span class="line"><span class="comment">#返回li节点的兄弟节点,提示用siblings()</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;wrap&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;div id=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;ul class=&quot;list&quot;&gt;</span></span><br><span class="line"><span class="string">             &lt;li class=&quot;item-0&quot;&gt;first item&lt;/li&gt;</span></span><br><span class="line"><span class="string">             &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">             &lt;li class=&quot;item-0 active&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;&lt;span class=&quot;bold&quot;&gt;third item&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">             &lt;li class=&quot;item-1 active&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">             &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;/ul&gt;</span></span><br><span class="line"><span class="string">     &lt;/div&gt;</span></span><br><span class="line"><span class="string"> &lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">li = doc(<span class="string">&#x27;.list .item-0.active&#x27;</span>)</span><br><span class="line"><span class="comment">#li为class为list下面的class为item-0与active的节点</span></span><br><span class="line"><span class="built_in">print</span>(li.siblings(<span class="string">&#x27;.active&#x27;</span>))</span><br><span class="line"><span class="comment">#返回li兄弟节点中class为active的标签</span></span><br></pre></td></tr></table></figure><h1 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h1><h2 id="单个元素"><a href="#单个元素" class="headerlink" title="单个元素"></a>单个元素</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;wrap&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;div id=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;list&quot;&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0&quot;&gt;first item&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0 active&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;&lt;span class=&quot;bold&quot;&gt;third item&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-1 active&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;/ul&gt;</span></span><br><span class="line"><span class="string"> &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">li = doc(<span class="string">&#x27;.item-0.active&#x27;</span>)</span><br><span class="line"><span class="comment">#返回class为item-0与active的标签节点</span></span><br><span class="line"><span class="built_in">print</span>(li)</span><br><span class="line"><span class="comment">#打印输出li</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;wrap&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;div id=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;ul class=&quot;list&quot;&gt;</span></span><br><span class="line"><span class="string">             &lt;li class=&quot;item-0&quot;&gt;first item&lt;/li&gt;</span></span><br><span class="line"><span class="string">             &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">             &lt;li class=&quot;item-0 active&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;&lt;span class=&quot;bold&quot;&gt;third item&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">             &lt;li class=&quot;item-1 active&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">             &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;/ul&gt;</span></span><br><span class="line"><span class="string">     &lt;/div&gt;</span></span><br><span class="line"><span class="string"> &lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">lis = doc(<span class="string">&#x27;li&#x27;</span>).items()</span><br><span class="line"><span class="comment">#lis为li标签下面所有的li子节点，提示：用items()获取所有li标签</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(lis))</span><br><span class="line"><span class="comment">#打印输出lis的类型</span></span><br><span class="line"><span class="keyword">for</span> li <span class="keyword">in</span> lis:</span><br><span class="line"><span class="comment">#for循环遍历打印输出所有li标签</span></span><br><span class="line">    <span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure><h1 id="获取信息"><a href="#获取信息" class="headerlink" title="获取信息"></a>获取信息</h1><h2 id="获取属性"><a href="#获取属性" class="headerlink" title="获取属性"></a>获取属性</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;wrap&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;div id=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;list&quot;&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0&quot;&gt;first item&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0 active&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;&lt;span class=&quot;bold&quot;&gt;third item&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-1 active&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;/ul&gt;</span></span><br><span class="line"><span class="string"> &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">a = doc(<span class="string">&#x27;.item-0.active a&#x27;</span>)</span><br><span class="line"><span class="comment">#a为class为item-0与active标签节点下面的a节点</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="comment">#打印输出a</span></span><br><span class="line"><span class="built_in">print</span>(a.attr(<span class="string">&#x27;href&#x27;</span>))</span><br><span class="line"><span class="comment">#利用attr()打印输出a的href属性值</span></span><br><span class="line"><span class="built_in">print</span>(a.attr.href)</span><br><span class="line"><span class="comment">#利用attr.调用输出a节点的href属性值</span></span><br></pre></td></tr></table></figure><h2 id="获取文本"><a href="#获取文本" class="headerlink" title="获取文本"></a>获取文本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;wrap&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;div id=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;list&quot;&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0&quot;&gt;first item&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0 active&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;&lt;span class=&quot;bold&quot;&gt;third item&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-1 active&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;/ul&gt;</span></span><br><span class="line"><span class="string"> &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">a = doc(<span class="string">&#x27;.item-0.active a&#x27;</span>)</span><br><span class="line"><span class="comment">#a为class为item-0与active标签节点下面的a节点</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="comment">#打印输出a节点</span></span><br></pre></td></tr></table></figure><h2 id="获取-HTML"><a href="#获取-HTML" class="headerlink" title="获取 HTML"></a>获取 HTML</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;wrap&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;div id=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;list&quot;&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0&quot;&gt;first item&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0 active&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;&lt;span class=&quot;bold&quot;&gt;third item&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-1 active&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;/ul&gt;</span></span><br><span class="line"><span class="string"> &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">li = doc(<span class="string">&#x27;.item-0.active&#x27;</span>)</span><br><span class="line"><span class="comment">#li为class为item-0与active标签节点</span></span><br><span class="line"><span class="built_in">print</span>(li)</span><br><span class="line"><span class="comment">#打印输出li</span></span><br><span class="line"><span class="built_in">print</span>(li.html())</span><br><span class="line"><span class="comment">#打印输出li标签下面的html文档</span></span><br></pre></td></tr></table></figure><h1 id="DOM-操作"><a href="#DOM-操作" class="headerlink" title="DOM 操作"></a>DOM 操作</h1><h2 id="addClass、removeClass"><a href="#addClass、removeClass" class="headerlink" title="addClass、removeClass"></a>addClass、removeClass</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;wrap&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;div id=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;ul class=&quot;list&quot;&gt;</span></span><br><span class="line"><span class="string">             &lt;li class=&quot;item-0&quot;&gt;first item&lt;/li&gt;</span></span><br><span class="line"><span class="string">             &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">             &lt;li class=&quot;item-0 active&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;&lt;span class=&quot;bold&quot;&gt;third item&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">             &lt;li class=&quot;item-1 active&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">             &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;/ul&gt;</span></span><br><span class="line"><span class="string">     &lt;/div&gt;</span></span><br><span class="line"><span class="string"> &lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">li = doc(<span class="string">&#x27;.item-0.active&#x27;</span>)</span><br><span class="line"><span class="comment">#li为class为item-0与active标签节点</span></span><br><span class="line"><span class="built_in">print</span>(li)<span class="comment">#打印输出li</span></span><br><span class="line">li.removeClass(<span class="string">&#x27;active&#x27;</span>)</span><br><span class="line"><span class="comment">#利用removeClass移除li的active的class属性值</span></span><br><span class="line"><span class="built_in">print</span>(li)</span><br><span class="line"><span class="comment">#打印输出li</span></span><br><span class="line">li.addClass(<span class="string">&#x27;active&#x27;</span>)</span><br><span class="line"><span class="comment">#利用addClass增加li的active的class属性值</span></span><br><span class="line"><span class="built_in">print</span>(li)</span><br><span class="line"><span class="comment">#打印输出li</span></span><br></pre></td></tr></table></figure><h2 id="attr、css"><a href="#attr、css" class="headerlink" title="attr、css"></a>attr、css</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;wrap&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;div id=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;list&quot;&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0&quot;&gt;first item&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0 active&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;&lt;span class=&quot;bold&quot;&gt;third item&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-1 active&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;/ul&gt;</span></span><br><span class="line"><span class="string"> &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">li = doc(<span class="string">&#x27;.item-0.active&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(li)</span><br><span class="line">li.attr(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;link&#x27;</span>)</span><br><span class="line"><span class="comment">#通过attr(key,value)函数为li标签增加属性name,其值link</span></span><br><span class="line"><span class="built_in">print</span>(li)<span class="comment">#输出打印li</span></span><br><span class="line">li.css(<span class="string">&#x27;font&#x27;</span>,<span class="string">&#x27;14px&#x27;</span>)</span><br><span class="line"><span class="comment">#通过css(key,value)函数为li标签增加css属性，其font-size值为14px</span></span><br><span class="line"><span class="built_in">print</span>(li)</span><br><span class="line"><span class="comment">#输出打印li</span></span><br></pre></td></tr></table></figure><h2 id="remove"><a href="#remove" class="headerlink" title="remove"></a>remove</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;wrap&quot;&gt;</span></span><br><span class="line"><span class="string">Hello, World</span></span><br><span class="line"><span class="string">&lt;p&gt;This is a paragraph.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">wrap = doc(<span class="string">&#x27;.wrap&#x27;</span>)</span><br><span class="line"><span class="comment">#查找class为wrap的节点</span></span><br><span class="line"><span class="built_in">print</span>(wrap.text())</span><br><span class="line"><span class="comment">#打印输出wrap节点的文本内容</span></span><br><span class="line">wrap.find(<span class="string">&#x27;p&#x27;</span>).remove()</span><br><span class="line"><span class="comment">#利用find函数查找wrap下面的p标签，并用remove()函数删除该节点</span></span><br><span class="line"><span class="built_in">print</span>(wrap.text())</span><br><span class="line"><span class="comment">#打印输出wrap的文本内容</span></span><br></pre></td></tr></table></figure><ul><li><a href="http://pyquery.readthedocs.io/en/latest/api.html">其他DOM方法</a></li></ul><h1 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;wrap&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;div id=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;list&quot;&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0&quot;&gt;first item&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0 active&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;&lt;span class=&quot;bold&quot;&gt;third item&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-1 active&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">     &lt;/ul&gt;</span></span><br><span class="line"><span class="string"> &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">doc = pq(html)</span><br><span class="line">li = doc(<span class="string">&#x27;li:first-child&#x27;</span>)</span><br><span class="line"><span class="comment">#查找第一个li标签</span></span><br><span class="line"><span class="built_in">print</span>(li)</span><br><span class="line">li = doc(<span class="string">&#x27;li:last-child&#x27;</span>)</span><br><span class="line"><span class="comment">#查找最后一个li标签</span></span><br><span class="line"><span class="built_in">print</span>(li)</span><br><span class="line">li = doc(<span class="string">&#x27;li:nth-child(2)&#x27;</span>)</span><br><span class="line"><span class="comment">#查找第2个li标签</span></span><br><span class="line"><span class="built_in">print</span>(li)</span><br><span class="line">li = doc(<span class="string">&#x27;li:gt(2)&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(li)</span><br><span class="line">li = doc(<span class="string">&#x27;li:nth-child(2n)&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(li)</span><br><span class="line">li = doc(<span class="string">&#x27;li:contains(second)&#x27;</span>)</span><br><span class="line"><span class="comment">#查找包括second文本内容的标签</span></span><br><span class="line"><span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure><ul><li><a href="http://www.w3school.com.cn/css/index.asp">更多CSS选择器可以查看</a></li></ul><h1 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h1><ul><li><a href="http://pyquery.readthedocs.io/">官方文档</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python IO 与档案处理</title>
      <link href="/posts/PythonIO.html"/>
      <url>/posts/PythonIO.html</url>
      
        <content type="html"><![CDATA[<p>Python IO 与档案处理</p><span id="more"></span><h1 id="创建文档、打印文档"><a href="#创建文档、打印文档" class="headerlink" title="创建文档、打印文档"></a>创建文档、打印文档</h1><h2 id="创建文档"><a href="#创建文档" class="headerlink" title="创建文档"></a>创建文档</h2><ul><li>用 open 函数创建文档</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;tmp.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"><span class="comment">#用open函数创建文档f，f为创建一个tmp.txt文本文件，当前f操作模式为w(r表示读取，a表示增加)</span></span><br><span class="line">f.write(<span class="string">&#x27;Hello World&#x27;</span>) <span class="comment">#f向tmp.txt文件写入&quot;hello world&quot;</span></span><br><span class="line">f.close()<span class="comment">#关闭f对象</span></span><br></pre></td></tr></table></figure><ul><li>利用with函数使得不需要调用close关闭</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;tmp.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="comment">#利用with导入open函数，创建tmp.txt文本文件，并命名为f文档，文件当前操作模式为w</span></span><br></pre></td></tr></table></figure><h1 id="打印输出文当里面的数据"><a href="#打印输出文当里面的数据" class="headerlink" title="打印输出文当里面的数据"></a>打印输出文当里面的数据</h1><ul><li>创建</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;tmp.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="comment">#利用with导入open函数，创建tmp.txt文本文件，并命名为f文档，文档当前操作模式为r</span></span><br><span class="line">     <span class="built_in">print</span>(f.read())</span><br><span class="line">    <span class="comment">#f进行读取操作，获得tmp.txt文件里的数据，并将所有数据一次性当前输出打印出来</span></span><br></pre></td></tr></table></figure><ul><li>打印</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;tmp.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">  <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">      <span class="comment">#利用for循环与f的readlines()遍历文档里面每一行数据</span></span><br><span class="line">      <span class="built_in">print</span>(line.strip())</span><br><span class="line">      <span class="comment">#打印每一行数据，并利用strip()将换行符或空格删除掉</span></span><br></pre></td></tr></table></figure><h1 id="处理CSV-Excel-panadas"><a href="#处理CSV-Excel-panadas" class="headerlink" title="处理CSV, Excel (panadas)"></a>处理CSV, Excel (panadas)</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;Population.csv&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="comment">#用with导入open函数，将Population.csv的文件读取进来，encoding为UTF-8,读取进来的文档命名为f</span></span><br><span class="line">   <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">   <span class="comment">#利用for循环与f的readlines()遍历文档里面每一行数据</span></span><br><span class="line">      <span class="built_in">print</span>(line)</span><br><span class="line">   <span class="comment">#打印输出显示每行数据</span></span><br></pre></td></tr></table></figure><ul><li>csv 文件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">import</span> pandas<span class="comment">#导入pandas类库</span></span><br><span class="line">df = pandas.read_csv(<span class="string">&#x27;Population.csv&#x27;</span>)</span><br><span class="line"><span class="comment">#利用pandas的read_csv读取Population.csv文件</span></span><br><span class="line">df <span class="comment">#输出显示df</span></span><br></pre></td></tr></table></figure><ul><li>Excel 文件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br><span class="line">df = pandas.read_excel(<span class="string">&#x27;GDP.xls&#x27;</span>)</span><br><span class="line"><span class="comment">#利用pandas的read_excel读取GDP.xls文件</span></span><br><span class="line">df <span class="comment">#输出显示df</span></span><br></pre></td></tr></table></figure><h1 id="处理-JSON-XML-格式资料"><a href="#处理-JSON-XML-格式资料" class="headerlink" title="处理 JSON, XML 格式资料"></a>处理 JSON, XML 格式资料</h1><h2 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;jd.json&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="comment">#利用with open导入jd.json文件并命名为f</span></span><br><span class="line">jd = f.read()</span><br><span class="line"><span class="comment">#f调用read()读取数据并将结果赋值为jd</span></span><br><span class="line">jd <span class="comment">#查看jd</span></span><br></pre></td></tr></table></figure><ul><li>将以上的 jd 文档转换成字典</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json <span class="comment">#导入json库</span></span><br><span class="line">dic = json.loads(jd)</span><br><span class="line"><span class="comment">#利用json的loads导入jd并赋值给dic变量</span></span><br><span class="line">dic <span class="comment">#输出显示dic</span></span><br><span class="line"><span class="keyword">for</span> shop <span class="keyword">in</span> dic:</span><br><span class="line"><span class="comment">#用shop代表dic里的每一个元素， for循环遍历dic</span></span><br><span class="line">    <span class="built_in">print</span>(shop.get(<span class="string">&#x27;shop_name&#x27;</span>),shop.get(<span class="string">&#x27;shop_brief&#x27;</span>))</span><br><span class="line">    <span class="comment">#输出打印每一个shop里key为“shop_name”“shop_brief”的值</span></span><br></pre></td></tr></table></figure><ul><li>利用 json 的 dumps 函数将上面的 dic 转换成 json 类型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">json.dumps(dic)</span><br></pre></td></tr></table></figure><ul><li>解析上面的 json</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br><span class="line"><span class="comment">#导入pandas类库</span></span><br><span class="line">df = pandas.read_json(<span class="string">&#x27;jd.json&#x27;</span>)</span><br><span class="line"><span class="comment">#利用padndas的read_json函数将jd.json文件导入转换为html表格方式</span></span><br><span class="line">df.head(<span class="number">5</span>) <span class="comment">#利用head()查看前5条记录</span></span><br></pre></td></tr></table></figure><h2 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import xml.etree.ElementTree as ET</span><br><span class="line">#导入xml的etree类库下的ElementTree并重命名为ET</span><br><span class="line">tree = ET.parse(&#x27;weather.xml&#x27;)</span><br><span class="line">#利用ET的parse函数对weather.xml文件进行解析转换，并将结果命名为treee</span><br></pre></td></tr></table></figure><ul><li>获得 tree 的根</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root = tree.getroot()</span><br><span class="line"><span class="comment">#利用getroot获得tree的根，并将获取结果命名为root</span></span><br><span class="line">root <span class="comment">#查看root</span></span><br></pre></td></tr></table></figure><ul><li>解析 XML</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> city <span class="keyword">in</span> root.<span class="built_in">iter</span>():</span><br><span class="line"><span class="comment">#用city代表树的每一个结点，利用root.iter函数遍历结点名称为city的所有树结点</span></span><br><span class="line">  <span class="built_in">print</span>(city.get(<span class="string">&#x27;cityname&#x27;</span>),city.get(<span class="string">&#x27;tem1&#x27;</span>))</span><br><span class="line">  <span class="comment">#打印输出每个树结点的cityname和tem1属性值</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python BeautifulSoup 库基础使用</title>
      <link href="/posts/PythonBeautifulSoup.html"/>
      <url>/posts/PythonBeautifulSoup.html</url>
      
        <content type="html"><![CDATA[<p>Python BeautifulSoup 库基础使用</p><span id="more"></span><h1 id="解析库"><a href="#解析库" class="headerlink" title="解析库"></a>解析库</h1><table><thead><tr><th align="left">解析器</th><th align="left">使用方法</th><th align="left">优势</th><th align="left">劣势</th></tr></thead><tbody><tr><td align="left">Python标准库</td><td align="left">BeautifulSoup(markup, “html.parser”)</td><td align="left">Python的内置标准库、执行速度适中 、文档容错能力强</td><td align="left">Python 2.7.3 or 3.2.2)前的版本中文容错能力差</td></tr><tr><td align="left">lxml HTML 解析器</td><td align="left">BeautifulSoup(markup, “lxml”)</td><td align="left">速度快、文档容错能力强</td><td align="left">需要安装C语言库</td></tr><tr><td align="left">lxml XML 解析器</td><td align="left">BeautifulSoup(markup, “xml”)</td><td align="left">速度快、唯一支持XML的解析器</td><td align="left">需要安装C语言库</td></tr><tr><td align="left">html5lib</td><td align="left">BeautifulSoup(markup, “html5lib”)</td><td align="left">最好的容错性、以浏览器的方式解析文档、生成HTML5格式的文档</td><td align="left">速度慢、不依赖外部扩展</td></tr></tbody></table><h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;</span></span><br><span class="line"><span class="string">and they lived at the bottom of a well.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.prettify())</span><br><span class="line"><span class="comment">#对整个html进行格式化并输出</span></span><br><span class="line"><span class="built_in">print</span>(soup.title.string)</span><br><span class="line"><span class="comment">#求title节点的内容（文本）</span></span><br></pre></td></tr></table></figure><h1 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h1><h2 id="优劣"><a href="#优劣" class="headerlink" title="优劣"></a>优劣</h2><ul><li>根据标签名（获取名称、属性、文本内容）、继承关系（children&#x2F;descendants&#x2F;parent&#x2F;parents，这种继承返回结果为迭代器，需用enumerate来获取）选择元素</li><li>优点：速度快</li><li>缺点：对于标签名相同的标签，其属性值可能不同，这种方法无法筛选出目标标签</li></ul><h2 id="选择元素"><a href="#选择元素" class="headerlink" title="选择元素"></a>选择元素</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;</span></span><br><span class="line"><span class="string">and they lived at the bottom of a well.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.title)</span><br><span class="line"><span class="comment">#直接输出选择title</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(soup.title))</span><br><span class="line"><span class="comment">#输出title返回的数据类型</span></span><br><span class="line"><span class="built_in">print</span>(soup.head)</span><br><span class="line"><span class="comment">#输出head</span></span><br><span class="line"><span class="built_in">print</span>(soup.p)</span><br><span class="line"><span class="comment">#输出第一个p节点</span></span><br></pre></td></tr></table></figure><h2 id="获取名称"><a href="#获取名称" class="headerlink" title="获取名称"></a>获取名称</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;</span></span><br><span class="line"><span class="string">and they lived at the bottom of a well.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.title.name)</span><br><span class="line"><span class="comment">#输出title节点名</span></span><br></pre></td></tr></table></figure><h2 id="获取属性"><a href="#获取属性" class="headerlink" title="获取属性"></a>获取属性</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;</span></span><br><span class="line"><span class="string">and they lived at the bottom of a well.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.p.attrs[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line"><span class="comment">#用attrs[]获取p节点name属性的值</span></span><br><span class="line"><span class="built_in">print</span>(soup.p[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line"><span class="comment">#直接用[]获取name属性的值</span></span><br></pre></td></tr></table></figure><h2 id="获取内容"><a href="#获取内容" class="headerlink" title="获取内容"></a>获取内容</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;p clss=&quot;title&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;</span></span><br><span class="line"><span class="string">and they lived at the bottom of a well.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.p.string)</span><br><span class="line"><span class="comment">#输出打印第一个p节点的文本（内容)用string</span></span><br></pre></td></tr></table></figure><h2 id="嵌套选择"><a href="#嵌套选择" class="headerlink" title="嵌套选择"></a>嵌套选择</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;</span></span><br><span class="line"><span class="string">and they lived at the bottom of a well.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.head.title.string)</span><br><span class="line"><span class="comment">#输出head下子节点title节点的文本</span></span><br></pre></td></tr></table></figure><h1 id="节点"><a href="#节点" class="headerlink" title="节点"></a>节点</h1><h2 id="子节点和子孙节点"><a href="#子节点和子孙节点" class="headerlink" title="子节点和子孙节点"></a>子节点和子孙节点</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;p class=&quot;story&quot;&gt;</span></span><br><span class="line"><span class="string">        Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">        &lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;span&gt;Elsie&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;</span></span><br><span class="line"><span class="string">        and</span></span><br><span class="line"><span class="string">        &lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;</span></span><br><span class="line"><span class="string">        and they lived at the bottom of a well.</span></span><br><span class="line"><span class="string">    &lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.p.contents)</span><br><span class="line"><span class="comment">#用contents可以获得p标签的子节点</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">    &lt;head&gt;</span></span><br><span class="line"><span class="string">        &lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;/head&gt;</span></span><br><span class="line"><span class="string">    &lt;body&gt;</span></span><br><span class="line"><span class="string">        &lt;p class=&quot;story&quot;&gt;</span></span><br><span class="line"><span class="string">            Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;span&gt;Elsie&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;/a&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;</span></span><br><span class="line"><span class="string">            and</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;</span></span><br><span class="line"><span class="string">            and they lived at the bottom of a well.</span></span><br><span class="line"><span class="string">        &lt;/p&gt;</span></span><br><span class="line"><span class="string">        &lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.p.children)</span><br><span class="line"><span class="comment">#用children获取p的子节点</span></span><br><span class="line"><span class="keyword">for</span> i, child <span class="keyword">in</span> <span class="built_in">enumerate</span>(soup.p.children):</span><br><span class="line"><span class="comment">#用i,child表示以上获取结果的索引号与内容，用enumerate获取迭代器内容并进行遍历</span></span><br><span class="line">    <span class="built_in">print</span>(i, child)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">    &lt;head&gt;</span></span><br><span class="line"><span class="string">        &lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;/head&gt;</span></span><br><span class="line"><span class="string">    &lt;body&gt;</span></span><br><span class="line"><span class="string">        &lt;p class=&quot;story&quot;&gt;</span></span><br><span class="line"><span class="string">            Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;span&gt;Elsie&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;/a&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;</span></span><br><span class="line"><span class="string">            and</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;</span></span><br><span class="line"><span class="string">            and they lived at the bottom of a well.</span></span><br><span class="line"><span class="string">        &lt;/p&gt;</span></span><br><span class="line"><span class="string">        &lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.p.descendants)</span><br><span class="line"><span class="comment">#输出打印p节点的孙子节点descendants</span></span><br><span class="line"><span class="keyword">for</span> i, child <span class="keyword">in</span> <span class="built_in">enumerate</span>(soup.p.descendants):</span><br><span class="line"><span class="comment">#用enumerate获取以上迭代器，用i,child分别表示索引号与内容，遍历它们并输出</span></span><br><span class="line">    <span class="built_in">print</span>(i, child)</span><br></pre></td></tr></table></figure><h2 id="父节点和祖先节点"><a href="#父节点和祖先节点" class="headerlink" title="父节点和祖先节点"></a>父节点和祖先节点</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;p class=&quot;story&quot;&gt;</span></span><br><span class="line"><span class="string">        Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">        &lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;span&gt;Elsie&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;</span></span><br><span class="line"><span class="string">        and</span></span><br><span class="line"><span class="string">        &lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;</span></span><br><span class="line"><span class="string">        and they lived at the bottom of a well.</span></span><br><span class="line"><span class="string">    &lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.a.parent)</span><br><span class="line"><span class="comment">#输出第一个a节点的父节点</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">    &lt;head&gt;</span></span><br><span class="line"><span class="string">        &lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;/head&gt;</span></span><br><span class="line"><span class="string">    &lt;body&gt;</span></span><br><span class="line"><span class="string">        &lt;p class=&quot;story&quot;&gt;</span></span><br><span class="line"><span class="string">            Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;span&gt;Elsie&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;/a&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;</span></span><br><span class="line"><span class="string">            and</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;</span></span><br><span class="line"><span class="string">            and they lived at the bottom of a well.</span></span><br><span class="line"><span class="string">        &lt;/p&gt;</span></span><br><span class="line"><span class="string">        &lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(<span class="built_in">enumerate</span>(soup.a.parents)))</span><br><span class="line"><span class="comment">#输出a节点父辈以上节点，用enumerate转换迭代器，最后将转换后的数据类型转换为list类型</span></span><br><span class="line"><span class="comment"># 观察得到索引号为2与3的结果一样，其中3的结果表示整个html文档</span></span><br></pre></td></tr></table></figure><h2 id="兄弟节点"><a href="#兄弟节点" class="headerlink" title="兄弟节点"></a>兄弟节点</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;p class=&quot;story&quot;&gt;</span></span><br><span class="line"><span class="string">        Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">        &lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;span&gt;Elsie&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;</span></span><br><span class="line"><span class="string">        and</span></span><br><span class="line"><span class="string">        &lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;</span></span><br><span class="line"><span class="string">        and they lived at the bottom of a well.</span></span><br><span class="line"><span class="string">    &lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(<span class="built_in">enumerate</span>(soup.a.next_siblings)))</span><br><span class="line"><span class="comment">#获取第一个a节点之后的兄弟节点next_siblings,并用enumerate获取迭代器，最终转换成list类型</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(<span class="built_in">enumerate</span>(soup.a.previous_siblings)))</span><br><span class="line"><span class="comment">#第一个a节点之前的兄弟节点previous_siblings，并用enumerate获取迭代器，最终转换成list类型</span></span><br></pre></td></tr></table></figure><h1 id="标准选择器"><a href="#标准选择器" class="headerlink" title="标准选择器"></a>标准选择器</h1><h2 id="find-all-返回所有元素"><a href="#find-all-返回所有元素" class="headerlink" title="find_all 返回所有元素"></a>find_all 返回所有元素</h2><ul><li>可根据标签名、属性、内容查找文档</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find_all( name , attrs , recursive , text , **kwargs )</span><br></pre></td></tr></table></figure><ul><li>name</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">html=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel-heading&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;h4&gt;Hello&lt;/h4&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel-body&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;list&quot; id=&quot;list-1&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;list list-small&quot; id=&quot;list-2&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.find_all(<span class="string">&#x27;ul&#x27;</span>))</span><br><span class="line"><span class="comment">#查找并输出所有名为“ul”标签</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(soup.find_all(<span class="string">&#x27;ul&#x27;</span>)[<span class="number">0</span>]))</span><br><span class="line"><span class="comment">#输出第一个名为ul的标签</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">html=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;panel-heading&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;h4&gt;Hello&lt;/h4&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;panel-body&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;ul class=&quot;list&quot; id=&quot;list-1&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;/ul&gt;</span></span><br><span class="line"><span class="string">        &lt;ul class=&quot;list list-small&quot; id=&quot;list-2&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;/ul&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> ul <span class="keyword">in</span> soup.find_all(<span class="string">&#x27;ul&#x27;</span>):</span><br><span class="line"><span class="comment">#遍历输出所有ul节点下的li节点</span></span><br><span class="line">    <span class="built_in">print</span>(ul.find_all(<span class="string">&#x27;li&#x27;</span>))</span><br></pre></td></tr></table></figure><ul><li>attrs</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">html=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel-heading&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;h4&gt;Hello&lt;/h4&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel-body&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;list&quot; id=&quot;list-1&quot; name=&quot;elements&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;list list-small&quot; id=&quot;list-2&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.find_all(attrs=&#123;<span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;list-1&#x27;</span>&#125;))</span><br><span class="line"><span class="comment">#用attrs属性参数以及key-value分别为id-list-1的数据来获取节点</span></span><br><span class="line"><span class="built_in">print</span>(soup.find_all(attrs=&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;elements&#x27;</span>&#125;))</span><br><span class="line"><span class="comment">#用attrs属性参数以及key-value分别为name-elements的数据来获取节点</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">html=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;panel-heading&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;h4&gt;Hello&lt;/h4&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;panel-body&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;ul class=&quot;list&quot; id=&quot;list-1&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;/ul&gt;</span></span><br><span class="line"><span class="string">        &lt;ul class=&quot;list list-small&quot; id=&quot;list-2&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;/ul&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.find_all(<span class="built_in">id</span>=<span class="string">&#x27;list-1&#x27;</span>))</span><br><span class="line"><span class="comment">#直接用key=value的形式获取对应节点</span></span><br><span class="line"><span class="built_in">print</span>(soup.find_all(class_=<span class="string">&#x27;element&#x27;</span>))</span><br><span class="line"><span class="comment">#获取class=&#x27;element&#x27;的节点</span></span><br></pre></td></tr></table></figure><ul><li>text</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">html=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;panel-heading&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;h4&gt;Hello&lt;/h4&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;panel-body&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;ul class=&quot;list&quot; id=&quot;list-1&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;/ul&gt;</span></span><br><span class="line"><span class="string">        &lt;ul class=&quot;list list-small&quot; id=&quot;list-2&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;/ul&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.find_all(text=<span class="string">&#x27;Foo&#x27;</span>))</span><br><span class="line"><span class="comment">#获取所有文本内容=&#x27;Foo&#x27;的节点文本值，用text表示,</span></span><br></pre></td></tr></table></figure><h2 id="find-返回单个元素"><a href="#find-返回单个元素" class="headerlink" title="find 返回单个元素"></a>find 返回单个元素</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find( name , attrs , recursive , text , **kwargs )</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">html=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel-heading&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;h4&gt;Hello&lt;/h4&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel-body&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;list&quot; id=&quot;list-1&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;list list-small&quot; id=&quot;list-2&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.find(<span class="string">&#x27;ul&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(soup.find(<span class="string">&#x27;ul&#x27;</span>)))</span><br><span class="line"><span class="comment">#输出以上结果的数据类型</span></span><br><span class="line"><span class="built_in">print</span>(soup.find(<span class="string">&#x27;page&#x27;</span>))</span><br><span class="line"><span class="comment">#输出名为page的第一个节点</span></span><br></pre></td></tr></table></figure><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ul><li>find_parents()返回所有祖先节点，find_parent()返回直接父节点。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find_parents()</span><br><span class="line">find_parent()</span><br></pre></td></tr></table></figure><ul><li>find_next_siblings()返回后面所有兄弟节点，find_next_sibling()返回后面第一个兄弟节点。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find_next_siblings()</span><br><span class="line">find_next_sibling()</span><br></pre></td></tr></table></figure><ul><li>find_previous_siblings()返回前面所有兄弟节点，find_previous_sibling()返回前面第一个兄弟节点。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find_previous_siblings() find_previous_sibling()</span><br></pre></td></tr></table></figure><ul><li>find_all_next()返回节点后所有符合条件的节点, find_next()返回第一个符合条件的节点</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find_all_next()</span><br><span class="line">find_next()</span><br></pre></td></tr></table></figure><ul><li>find_all_next()返回节点后所有符合条件的节点, find_next()返回第一个符合条件的节点</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find_all_next()</span><br><span class="line">find_next()</span><br></pre></td></tr></table></figure><ul><li>find_all_previous()返回节点后所有符合条件的节点, find_previous()返回第一个符合条件的节点</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find_all_previous()</span><br><span class="line">find_previous()</span><br></pre></td></tr></table></figure><h1 id="CSS-选择器"><a href="#CSS-选择器" class="headerlink" title="CSS 选择器"></a>CSS 选择器</h1><ul><li>通过select()直接传入CSS选择器即可完成选择</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">    html=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;panel-heading&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;h4&gt;Hello&lt;/h4&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;panel-body&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;ul class=&quot;list&quot; id=&quot;list-1&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;/ul&gt;</span></span><br><span class="line"><span class="string">        &lt;ul class=&quot;list list-small&quot; id=&quot;list-2&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;/ul&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.select(<span class="string">&#x27;.panel .panel-heading&#x27;</span>))</span><br><span class="line"><span class="comment">#选择class属性为panel下子节点的class属性为panel-heading属性的节点,只有class属性才需要加.</span></span><br><span class="line"><span class="built_in">print</span>(soup.select(<span class="string">&#x27;ul li&#x27;</span>))</span><br><span class="line"><span class="comment">#选择所有ul节点下面的li节点</span></span><br><span class="line"><span class="built_in">print</span>(soup.select(<span class="string">&#x27;#list-2 .element&#x27;</span>))</span><br><span class="line"><span class="comment">#选择id为list-2，class为element的节点 ，用#表示id</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(soup.select(<span class="string">&#x27;ul&#x27;</span>)[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">html=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;panel-heading&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;h4&gt;Hello&lt;/h4&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;panel-body&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;ul class=&quot;list&quot; id=&quot;list-1&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;/ul&gt;</span></span><br><span class="line"><span class="string">        &lt;ul class=&quot;list list-small&quot; id=&quot;list-2&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;/ul&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> ul <span class="keyword">in</span> soup.select(<span class="string">&#x27;ul&#x27;</span>):</span><br><span class="line"><span class="comment">#用select遍历ul的标签下的li标签，</span></span><br><span class="line">    <span class="built_in">print</span>(ul.select(<span class="string">&#x27;li&#x27;</span>))</span><br></pre></td></tr></table></figure><h2 id="获取属性-1"><a href="#获取属性-1" class="headerlink" title="获取属性"></a>获取属性</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">html=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel-heading&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;h4&gt;Hello&lt;/h4&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel-body&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;list&quot; id=&quot;list-1&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;list list-small&quot; id=&quot;list-2&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> ul <span class="keyword">in</span> soup.select(<span class="string">&#x27;ul&#x27;</span>):</span><br><span class="line"><span class="comment">#用select获取所有ul标签，遍历所有ul标签的id属性的值</span></span><br><span class="line">    <span class="built_in">print</span>(ul[<span class="string">&#x27;id&#x27;</span>])</span><br><span class="line">    <span class="comment">#不用attrs</span></span><br><span class="line">    <span class="built_in">print</span>(ul.attrs[<span class="string">&#x27;id&#x27;</span>])</span><br><span class="line">    <span class="comment">#用attrs</span></span><br></pre></td></tr></table></figure><h2 id="获取内容-1"><a href="#获取内容-1" class="headerlink" title="获取内容"></a>获取内容</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">html=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel-heading&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;h4&gt;Hello&lt;/h4&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;panel-body&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;list&quot; id=&quot;list-1&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;list list-small&quot; id=&quot;list-2&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> li <span class="keyword">in</span> soup.select(<span class="string">&#x27;li&#x27;</span>):</span><br><span class="line">    <span class="built_in">print</span>(li.get_text())</span><br><span class="line"><span class="comment">#获取所有li标签的文本值</span></span><br></pre></td></tr></table></figure><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><p>requests类库请求网页获取响应内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment">#导入请求类库requests</span></span><br><span class="line">newsurl = <span class="string">&#x27;https://news.qq.com&#x27;</span></span><br><span class="line"><span class="comment">#将腾讯主页的url设为newsurl</span></span><br><span class="line">res = requests.get(newsurl)</span><br><span class="line"><span class="comment">#根据newsurl请求获取响应内容，结果赋值为res</span></span><br><span class="line"><span class="built_in">print</span>(res.text)</span><br><span class="line"><span class="comment">#打印输出网页文本内容</span></span><br></pre></td></tr></table></figure><p>BeautifulSoup 类库解析文档树</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="comment">#导入bs4的BeautifulSoup类库</span></span><br><span class="line">html_sample = <span class="string">&#x27; \</span></span><br><span class="line"><span class="string">&lt;html&gt; \</span></span><br><span class="line"><span class="string">&lt;body&gt; \</span></span><br><span class="line"><span class="string">&lt;h1 id=&quot;title&quot;&gt;Hello World&lt;/h1&gt; \</span></span><br><span class="line"><span class="string">&lt;a href=&quot;#&quot; class=&quot;link&quot;&gt;This is link1&lt;/a&gt; \</span></span><br><span class="line"><span class="string">&lt;a href=&quot;# link2&quot; class=&quot;link&quot;&gt;This is link2&lt;/a&gt; \</span></span><br><span class="line"><span class="string">&lt;/body&gt; \</span></span><br><span class="line"><span class="string">&lt;/html&gt;&#x27;</span></span><br><span class="line">soup = BeautifulSoup(html_sample,<span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"><span class="comment">#创建BeautifulSoup对象soup，利用html.parser解析器解析html_sample</span></span><br><span class="line">soup.text</span><br><span class="line"><span class="comment">#输出打印soup的文本内容</span></span><br></pre></td></tr></table></figure><p>找出含有特定的 html 标签</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">soup.select(<span class="string">&#x27;h1&#x27;</span>)[<span class="number">0</span>].text</span><br><span class="line"><span class="comment">#利用select函数获取h1标签的文本内容</span></span><br><span class="line">soup.select(<span class="string">&#x27;a&#x27;</span>)[<span class="number">0</span>].text</span><br><span class="line"><span class="comment">#利用select函数获取第一个a标签的文本内容</span></span><br><span class="line">soup.select(<span class="string">&#x27;a&#x27;</span>)[<span class="number">1</span>].text</span><br><span class="line"><span class="comment">#利用select函数获取第二个a标签的文本内容</span></span><br><span class="line"><span class="keyword">for</span> alink <span class="keyword">in</span> soup.select(<span class="string">&#x27;a&#x27;</span>) :</span><br><span class="line">    <span class="built_in">print</span>(alink.text)</span><br><span class="line"><span class="comment">#利用循环打印输出所有的a标签的文本内容，用alink表示循环变量名</span></span><br></pre></td></tr></table></figure><p>找出含有特定的 CSS 属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">soup.select(<span class="string">&#x27;#title&#x27;</span>)[<span class="number">0</span>].text</span><br><span class="line"><span class="comment">#找出id为title的属性所在节点的文本</span></span><br><span class="line">soup.select(<span class="string">&#x27;.link&#x27;</span>)[<span class="number">0</span>].text</span><br><span class="line"><span class="comment">#找出class为link的第一个节点的文本</span></span><br></pre></td></tr></table></figure><p>查找指定标签节点的某一属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> link <span class="keyword">in</span> soup.select(<span class="string">&#x27;a&#x27;</span>):</span><br><span class="line"><span class="comment">#循环方式获取所有a标签,link表示循环变量名</span></span><br><span class="line">    <span class="built_in">print</span>(link[<span class="string">&#x27;href&#x27;</span>])</span><br><span class="line">    <span class="comment">#打印输出link的href属性值</span></span><br></pre></td></tr></table></figure><h1 id="获取腾讯新闻首页所有新闻的标题与详细内容页的-url"><a href="#获取腾讯新闻首页所有新闻的标题与详细内容页的-url" class="headerlink" title="获取腾讯新闻首页所有新闻的标题与详细内容页的 url"></a>获取腾讯新闻首页所有新闻的标题与详细内容页的 url</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">res = requests.get(<span class="string">&#x27;http://news.qq.com/&#x27;</span>)</span><br><span class="line"><span class="comment">#get方式访问获取腾讯新闻首页（http://news.qq.com/）的响应体，结果命名为res</span></span><br><span class="line">soup = BeautifulSoup(res.text,<span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"><span class="comment">#创建BeautifulSoup对象，利用html.parser对网页的文本内容进行解析</span></span><br><span class="line"><span class="keyword">for</span> news <span class="keyword">in</span> soup.select(<span class="string">&#x27;.Q-tpWrap.text&#x27;</span>):</span><br><span class="line"><span class="comment">#利用开发者工具定位查找每条新闻的标题所在节点，news代表每个循环节点名</span></span><br><span class="line">    <span class="built_in">print</span>(news.select(<span class="string">&#x27;.linkto&#x27;</span>)[<span class="number">0</span>].text,news.select(<span class="string">&#x27;.linkto&#x27;</span>)[<span class="number">0</span>][<span class="string">&#x27;href&#x27;</span>])</span><br><span class="line"><span class="comment">#打印输出每条新闻的标题与url</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;===========&#x27;</span>)</span><br><span class="line"><span class="comment">#打印======进行间隔</span></span><br></pre></td></tr></table></figure><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">res = requests.get(<span class="string">&#x27;http://news.qq.com/&#x27;</span>)</span><br><span class="line"><span class="comment">#get方式访问获取腾讯新闻首页的响应体，结果命名为res</span></span><br><span class="line">soup = BeautifulSoup(res.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"><span class="comment">#创建BeautifulSoup对象，利用html.parser对网页的文本内容进行解析</span></span><br><span class="line">newsary=[]</span><br><span class="line"> <span class="comment">#定义newsary列表为空，用于存储所有新闻的标题与url</span></span><br><span class="line"><span class="keyword">for</span> news <span class="keyword">in</span> soup.select(<span class="string">&#x27;.Q-tpWrap .text&#x27;</span>):</span><br><span class="line">      newsary.append(&#123;<span class="string">&#x27;title&#x27;</span>:news.select(<span class="string">&#x27;.linkto&#x27;</span>)[<span class="number">0</span>].text,<span class="string">&#x27;url&#x27;</span>:news.select(<span class="string">&#x27;.linkto&#x27;</span>)[<span class="number">0</span>][<span class="string">&#x27;href&#x27;</span>]&#125;)</span><br><span class="line">      <span class="comment">#将用key为title,url分别保存每条新闻的标题与访问网址,并追加到newsary列表里面</span></span><br></pre></td></tr></table></figure></code></pre><ul><li>将newsary转换成dataFrame</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br><span class="line">newsdf = pandas.DataFrame(newsary)</span><br><span class="line">newsdf</span><br></pre></td></tr></table></figure><ul><li>将 newsdf 保存为 excel 文档,文件命名为 news</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">newsdf.to_excel(<span class="string">&#x27;news.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h2><ul><li>推荐使用lxml解析库，必要时使用html.parser</li><li>标签选择筛选功能弱但是速度快</li><li>建议使用find()、find_all() 查询匹配单个结果或者多个结果</li><li>如果对CSS选择器熟悉建议使用select()</li><li>记住常用的获取属性和文本值的方法</li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Request 库基础使用</title>
      <link href="/posts/PythonRequest.html"/>
      <url>/posts/PythonRequest.html</url>
      
        <content type="html"><![CDATA[<p>Python Request </p><span id="more"></span><h1 id="实例引入"><a href="#实例引入" class="headerlink" title="实例引入"></a>实例引入</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">response = requests.get(<span class="string">&#x27;https://www.baidu.com/&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(response))</span><br><span class="line"><span class="built_in">print</span>(response.status_code)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(response.text))</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br><span class="line"><span class="built_in">print</span>(response.cookies)</span><br></pre></td></tr></table></figure><h2 id="各种请求方式"><a href="#各种请求方式" class="headerlink" title="各种请求方式"></a>各种请求方式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">requests.post(<span class="string">&#x27;http://httpbin.org/post&#x27;</span>)</span><br><span class="line">equests.put(<span class="string">&#x27;http://httpbin.org/put&#x27;</span>)</span><br><span class="line">requests.delete(<span class="string">&#x27;http://httpbin.org/delete&#x27;</span>)</span><br><span class="line">requests.head(<span class="string">&#x27;http://httpbin.org/get&#x27;</span>)</span><br><span class="line">requests.options(<span class="string">&#x27;http://httpbin.org/get&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="请求"><a href="#请求" class="headerlink" title="请求"></a>请求</h1><h2 id="基本-GET-请求"><a href="#基本-GET-请求" class="headerlink" title="基本 GET 请求"></a>基本 GET 请求</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">response=requests.get(<span class="string">&#x27;http://httpbin.org/get&#x27;</span>)</span><br><span class="line"><span class="comment">#用get方式访问http://httpbin.org/get网页</span></span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br><span class="line"><span class="comment">#输出网页源代码</span></span><br></pre></td></tr></table></figure><h2 id="带参数-GET-请求"><a href="#带参数-GET-请求" class="headerlink" title="带参数 GET 请求"></a>带参数 GET 请求</h2><ul><li>?</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">response=requests.get(<span class="string">&#x27;http://httpbin.org/get?name=germey&amp;age=22&#x27;</span>)</span><br><span class="line"><span class="comment">#以?name=germey&amp;age=22方式在url后面添加参数信息</span></span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br><span class="line"><span class="comment">#输出网页源代码</span></span><br></pre></td></tr></table></figure><ul><li>params</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">response=requests.get(<span class="string">&#x27;http://httpbin.org/get&#x27;</span>,params=&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;germery&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">22</span>&#125;)</span><br><span class="line"><span class="comment">#设置 params 参数，以key:value方式&#123;&#x27;name&#x27;:&#x27;&#x27;germery&#x27;,&#x27;age&#x27;:22&#125;</span></span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br><span class="line"><span class="comment">#输出网页源代码</span></span><br></pre></td></tr></table></figure><h2 id="添加headers"><a href="#添加headers" class="headerlink" title="添加headers"></a>添加headers</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">headers=&#123;<span class="string">&#x27;User-agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.92 Safari/537.36&#x27;</span>&#125;</span><br><span class="line"><span class="comment">#设置headers变量为本机浏览器请求头的user-agent</span></span><br><span class="line">response=requests.get(<span class="string">&#x27;https://www.zhihu.com/explore&#x27;</span>,headers=headers)</span><br><span class="line"><span class="comment">#添加headers信息访问https://www.zhihu.com/explore</span></span><br><span class="line">response.text</span><br><span class="line"><span class="comment">#输出网页源代码</span></span><br></pre></td></tr></table></figure><h2 id="基本POST请求"><a href="#基本POST请求" class="headerlink" title="基本POST请求"></a>基本POST请求</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">data=&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;germey&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="string">&#x27;22&#x27;</span>&#125;<span class="comment">#设置data变量值为：&#123;&#x27;name&#x27;: &#x27;germey&#x27;, &#x27;age&#x27;: &#x27;22&#x27;&#125;</span></span><br><span class="line">response=requests.post(<span class="string">&#x27;http://httpbin.org/post&#x27;</span>,data=data)</span><br><span class="line"><span class="comment">#以post方式，data=data访问http://httpbin.org/post</span></span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br><span class="line"><span class="comment">#输出网页源代码</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">data=&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;germey&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="string">&#x27;22&#x27;</span>&#125;<span class="comment">#设置data变量值为：&#123;&#x27;name&#x27;: &#x27;germey&#x27;, &#x27;age&#x27;: &#x27;22&#x27;&#125;</span></span><br><span class="line">headers=&#123;<span class="string">&#x27;User-agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.92 Safari/537.36&#x27;</span>&#125;</span><br><span class="line"><span class="comment">#设置headers变量为本机浏览器请求头的user-agent</span></span><br><span class="line"><span class="comment">#设置headers</span></span><br><span class="line">response=requests.post(<span class="string">&#x27;http://httpbin.org/post&#x27;</span>,headers=headers,data=data)</span><br><span class="line"><span class="comment">#添加data/headers信息以post方式访问http://httpbin.org/post</span></span><br><span class="line">response.json()</span><br><span class="line"><span class="comment">#输出访问结果的json格式数据</span></span><br></pre></td></tr></table></figure><h1 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h1><h2 id="reponse-属性"><a href="#reponse-属性" class="headerlink" title="reponse 属性"></a>reponse 属性</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">response = requests.get(<span class="string">&#x27;http://www.jianshu.com&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(response.status_code), response.status_code)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(response.headers), response.headers)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(response.cookies), response.cookies)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(response.url), response.url)</span><br></pre></td></tr></table></figure><h2 id="状态码判断"><a href="#状态码判断" class="headerlink" title="状态码判断"></a>状态码判断</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">response = requests.get(<span class="string">&#x27;http://www.jianshu.com&#x27;</span>)</span><br><span class="line"><span class="comment">#用get方式访问简书网站http://www.jianshu.com</span></span><br><span class="line">response.status_code</span><br><span class="line"></span><br><span class="line">exit() <span class="keyword">if</span> <span class="keyword">not</span> response.status_code==<span class="number">200</span> <span class="keyword">else</span> <span class="built_in">print</span>(<span class="string">&#x27;Request Successfully&#x27;</span>)</span><br><span class="line"><span class="comment">#对响应体状态码进行判断，如果返回状态码不为200，则结束当前运行，否则打印输出“Request Successfully”</span></span><br></pre></td></tr></table></figure><h1 id="高级操作"><a href="#高级操作" class="headerlink" title="高级操作"></a>高级操作</h1><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">files=&#123;<span class="string">&#x27;files&#x27;</span>:<span class="built_in">open</span>(<span class="string">&#x27;favicon.ico&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>)&#125;</span><br><span class="line"><span class="comment">#设置files变量，其value值为操作系统open接口类型，对名为“favicon.ico”图片的二进制模式读取</span></span><br><span class="line">response=requests.post(<span class="string">&#x27;http://httpbin.org/post&#x27;</span>,files=files)</span><br><span class="line"><span class="comment">#以post方式上传该图片，即添加files=files参数</span></span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br><span class="line"><span class="comment">#输出网页源代码</span></span><br></pre></td></tr></table></figure><h2 id="获取-cookie"><a href="#获取-cookie" class="headerlink" title="获取 cookie"></a>获取 cookie</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">response=requests.get(<span class="string">&#x27;http://www.baidu.com/&#x27;</span>)</span><br><span class="line"><span class="comment">#get方式请求访问baidu</span></span><br><span class="line">response.cookies</span><br><span class="line"><span class="comment">#输出cookies信息</span></span><br><span class="line"><span class="keyword">for</span> key,value <span class="keyword">in</span> response.cookies.items():</span><br><span class="line"><span class="comment">#遍历所有cookies信息，以key=value形式输出</span></span><br><span class="line"><span class="built_in">print</span>(key+<span class="string">&#x27;=&#x27;</span>+value)</span><br></pre></td></tr></table></figure><h2 id="会话维持"><a href="#会话维持" class="headerlink" title="会话维持"></a>会话维持</h2><h3 id="模拟登录"><a href="#模拟登录" class="headerlink" title="模拟登录"></a>模拟登录</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">requests.get(<span class="string">&#x27;http://httpbin.org/cookies/set/number/123456789&#x27;</span>)</span><br><span class="line"><span class="comment">#用requests.get访问http://httpbin.org/cookies/set/number/123456789设置cookies信息</span></span><br><span class="line">response=requests.get(<span class="string">&#x27;http://httpbin.org/cookies&#x27;</span>)</span><br><span class="line"><span class="comment">#访问http://httpbin.org/cookies并将返回结果命名为response</span></span><br><span class="line">response.cookies.items()</span><br><span class="line"><span class="comment">#输出以上response结果的网页源代码</span></span><br><span class="line"><span class="comment">#观察运行结果，思考为什么没法获取number：123456789的cookies数据？</span></span><br></pre></td></tr></table></figure><ul><li>requests.Session()</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">s=requests.Session()</span><br><span class="line"><span class="comment">#利用requests创建一个Session对象s</span></span><br><span class="line">s.get(<span class="string">&#x27;http://httpbin.org/cookies/set/number/123456789&#x27;</span>)</span><br><span class="line"><span class="comment">#s调用get方法访问http://httpbin.org/cookies/set/number/123456789</span></span><br><span class="line">response=s.get(<span class="string">&#x27;http://httpbin.org/cookies&#x27;</span>)</span><br><span class="line"><span class="comment">#s调用get方法访问http://httpbin.org/cookies并将返回结果设置为response</span></span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br><span class="line"><span class="comment">#输出网页源代码</span></span><br></pre></td></tr></table></figure><h2 id="证书验证"><a href="#证书验证" class="headerlink" title="证书验证"></a>证书验证</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests.packages <span class="keyword">import</span> urllib3</span><br><span class="line">urllib3.disable_warnings()</span><br><span class="line"><span class="comment">#调用urllib3的disable_warnings</span></span><br><span class="line">response = requests.get(<span class="string">&#x27;https://www.12306.cn&#x27;</span>,verify=<span class="literal">False</span>)</span><br><span class="line"><span class="comment">#get方式访问https://www.12306.cn，verify设置为False</span></span><br><span class="line"><span class="built_in">print</span>(response.status_code)</span><br><span class="line"><span class="comment">#输出状态码</span></span><br></pre></td></tr></table></figure><h2 id="超时设置"><a href="#超时设置" class="headerlink" title="超时设置"></a>超时设置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> Timeout</span><br><span class="line"><span class="comment"># from requests.exceptions import Timeout #导入异常包里的exceptions里面的ConnectTimeout</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> :</span><br><span class="line"><span class="comment">#增加异常检测try exception,捕获异常后输出对应的异常类名</span></span><br><span class="line">response = requests.get(<span class="string">&#x27;https://vitan.me&#x27;</span>,timeout=<span class="number">0.2</span>)</span><br><span class="line"><span class="comment">#尝试将timeou设置为0.2，是否会出现错误，并查看是什么异常</span></span><br><span class="line"><span class="built_in">print</span>(response.status_code)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> Timeout:</span><br><span class="line"><span class="comment">#增加except语句，引入Timeout类</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;TimeOut&#x27;</span>)</span><br><span class="line"><span class="comment">#一旦捕获，输出显示Timeout信息</span></span><br></pre></td></tr></table></figure><ul><li><a href="http://docs.python-requests.org/en/master/api/#exceptions">查看requests下的exceptions官方文档的网址</a></li></ul><h2 id="认证设置"><a href="#认证设置" class="headerlink" title="认证设置"></a>认证设置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">r = requests.post(<span class="string">&#x27;http://www.scholat.com&#x27;</span>, auth=(<span class="string">&#x27;user&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>))</span><br><span class="line"><span class="comment">#利用post方式模拟登陆学者网（http://www.scholat.com），auth参数用户名为你在该网站的用户名与密码</span></span><br><span class="line"><span class="built_in">print</span>(r.status_code)</span><br><span class="line"><span class="comment">#输出显示响应状态码</span></span><br></pre></td></tr></table></figure><h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> ReadTimeout, ConnectionError, RequestException<span class="comment">#引入requests.exceptions下面的ReadTimeout, ConnectionError, RequestException类</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">response = requests.get(<span class="string">&quot;http://httpbin.org/get&quot;</span>, timeout = <span class="number">0.02</span>)</span><br><span class="line"><span class="built_in">print</span>(response.status_code)</span><br><span class="line"><span class="keyword">except</span> TimeoutError:</span><br><span class="line"><span class="comment">#访问超时的异常类ReadTimeout 子类</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Timeout&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> ConnectionError:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Connection error&#x27;</span>)</span><br><span class="line"><span class="comment">#网络不通时的异常类：ConnectionError尝试关闭网络，重新运行代码 父类</span></span><br><span class="line"><span class="keyword">except</span> RequestException:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Error&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="解析-Json"><a href="#解析-Json" class="headerlink" title="解析 Json"></a>解析 Json</h1><h2 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">response=requests.get(<span class="string">&#x27;http://httpbin.org/get&#x27;</span>)<span class="comment">#get方式访问http://httpbin.org/get</span></span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br><span class="line"><span class="comment">#输出网页源代码</span></span><br><span class="line">response.json</span><br><span class="line"><span class="comment">#以json（dict数据结构）输出数据</span></span><br><span class="line">json.loads(response.text)</span><br><span class="line"><span class="comment">#以json.loads函数输出json（dict数据结构）格式数据</span></span><br><span class="line"><span class="built_in">print</span>(response.json())</span><br><span class="line"><span class="comment">#打印输出response.json()返回结果的数据类型</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 基本数据类型</title>
      <link href="/posts/PythonType.html"/>
      <url>/posts/PythonType.html</url>
      
        <content type="html"><![CDATA[<p>Python 基本数据类型</p><span id="more"></span><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><ul><li>整型：Python中可以处理任意大小的整数（Python 2.x中有int和long两种类型的整数，但这种区分对Python来说意义不大，因此在Python 3.x中整数只有int这一种了），而且支持二进制（如0b100，换算成十进制是4）、八进制（如0o100，换算成十进制是64）、十进制（100）和十六进制（0x100，换算成十进制是256）的表示法。</li><li>浮点型：浮点数也就是小数，之所以称为浮点数，是因为按照科学记数法表示时，一个浮点数的小数点位置是可变的，浮点数除了数学写法（如123.456）之外还支持科学计数法（如1.23456e2）。</li><li>字符串型：字符串是以单引号或双引号括起来的任意文本，比如’hello’和”hello”,字符串还有原始字符串表示法、字节字符串表示法、Unicode字符串表示法，而且可以书写成多行的形式（用三个单引号或三个双引号开头，三个单引号或三个双引号结尾）。</li><li>布尔型：布尔值只有True、False两种值，要么是True，要么是False，在Python中，可以直接用True、False表示布尔值（请注意大小写），也可以通过布尔运算计算出来（例如3 &lt; 5会产生布尔值True，而2 &#x3D;&#x3D; 1会产生布尔值False）。</li><li>复数型：形如3+5j，跟数学上的复数表示一样，唯一不同的是虚部的i换成了j。</li></ul><h2 id="变量类型进行转换"><a href="#变量类型进行转换" class="headerlink" title="变量类型进行转换"></a>变量类型进行转换</h2><ul><li>int()：将一个数值或字符串转换成整数，可以指定进制。</li><li>float()：将一个字符串转换成浮点数。</li><li>str()：将指定的对象转换成字符串形式，可以指定编码。</li><li>chr()：将整数转换成该编码对应的字符串（一个字符）。</li><li>ord()：将字符串（一个字符）转换成对应的编码（整数）。</li></ul><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><table><thead><tr><th align="left">运算符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">+</td><td align="left">加</td></tr><tr><td align="left">-</td><td align="left">减</td></tr><tr><td align="left">*</td><td align="left">乘</td></tr><tr><td align="left">&#x2F;</td><td align="left">除</td></tr><tr><td align="left">%</td><td align="left">取模</td></tr><tr><td align="left">**</td><td align="left">幂</td></tr><tr><td align="left">&#x2F;&#x2F;</td><td align="left">取整除</td></tr></tbody></table><ul><li>比较运算符</li></ul><table><thead><tr><th align="left">运算符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">&#x3D;&#x3D;</td><td align="left">等于</td></tr><tr><td align="left">!&#x3D;</td><td align="left">不等于</td></tr><tr><td align="left">&gt;</td><td align="left">大于</td></tr><tr><td align="left">&lt;</td><td align="left">小于</td></tr><tr><td align="left">&gt;&#x3D;</td><td align="left">大于等于</td></tr><tr><td align="left">&lt;&#x3D;</td><td align="left">小于等于</td></tr></tbody></table><ul><li>赋值运算符</li></ul><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">&#x3D;</td><td align="left">简单的赋值运算符</td><td align="left">c &#x3D; a + b 将 a + b 的运算结果赋值为 c</td></tr><tr><td align="left">+&#x3D;</td><td align="left">加法赋值运算符</td><td align="left">c +&#x3D; a 等效于 c &#x3D; c + a</td></tr><tr><td align="left">-&#x3D;</td><td align="left">减法赋值运算符</td><td align="left">c -&#x3D; a 等效于 c &#x3D; c - a</td></tr><tr><td align="left">*&#x3D;</td><td align="left">乘法赋值运算符</td><td align="left">c *&#x3D; a 等效于 c &#x3D; c * a</td></tr><tr><td align="left">&#x2F;&#x3D;</td><td align="left">除法赋值运算符</td><td align="left">c &#x2F;&#x3D; a 等效于 c &#x3D; c &#x2F; a</td></tr><tr><td align="left">%&#x3D;</td><td align="left">取模赋值运算符</td><td align="left">c %&#x3D; a 等效于 c &#x3D; c % a</td></tr><tr><td align="left">**&#x3D;</td><td align="left">幂赋值运算符</td><td align="left">c **&#x3D; a 等效于 c &#x3D; c ** a</td></tr><tr><td align="left">&#x2F;&#x2F;&#x3D;</td><td align="left">取整除赋值运算符</td><td align="left">c &#x2F;&#x2F;&#x3D; a 等效于 c &#x3D; c &#x2F;&#x2F; a</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 重置密码</title>
      <link href="/posts/MySQLPassword.html"/>
      <url>/posts/MySQLPassword.html</url>
      
        <content type="html"><![CDATA[<p>MySQL 重置密码</p><span id="more"></span><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><ul><li>修改 MySQL 配置文件<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br></pre></td></tr></table></figure></li><li>任意一行添加<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip-grant-tables</span><br></pre></td></tr></table></figure></li><li>重启MySQL：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysqld restart</span><br></pre></td></tr></table></figure></li><li>进入 MySQL<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql</span><br><span class="line">use mysql;</span><br><span class="line">update user set authentication_string = password(&quot;123456&quot;) where user = &quot;root&quot;;</span><br></pre></td></tr></table></figure><ul><li>删除修改的配置文件那一行</li></ul></li></ul><h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><ul><li>关掉系统服务<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql</span><br></pre></td></tr></table></figure></li><li>安装目录创建一个文本文件，内含一条密码修改命令<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER ‘root<span class="string">&#x27;@&#x27;</span>localhost<span class="string">&#x27; IDENTIFIED BY ”;</span></span><br></pre></td></tr></table></figure></li><li>命令行方式启动服务器，指定启动时执行上述的密码修改命令文件<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld –init-file=d:mysqlc.txt –console</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> MySQL </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决 zsh:Permission Denied</title>
      <link href="/posts/PermissionDenied.html"/>
      <url>/posts/PermissionDenied.html</url>
      
        <content type="html"><![CDATA[<p>zsh:Permission Denied</p><span id="more"></span><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>用户对文件没有可自行权限</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> u+x *</span><br></pre></td></tr></table></figure><ul><li>解析解析<ul><li><code>u</code> 所有者</li><li><code>x</code> 执行权限</li><li><code>+</code> 增加权限</li><li><code>chmod u+x * </code>对文件的所有者增加可执行权限。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ununtu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Termux Python 相关库</title>
      <link href="/posts/TermuxPython.html"/>
      <url>/posts/TermuxPython.html</url>
      
        <content type="html"><![CDATA[<p>Termux Puthon</p><span id="more"></span><h1 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h1><p>安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pkg install python python-dev clang</span><br><span class="line">pip install --upgrade pip</span><br><span class="line">apt install libxml2 libxml2-dev libxslt libxslt-dev</span><br><span class="line">apt install openssl libffi libffi-dev openssl-tool openssl-dev</span><br><span class="line">apt install fftw fftw-dev libzmq libzmq-dev freetype freetype-dev</span><br><span class="line">apt install libpng libpng-dev pkg-config scrypt</span><br><span class="line">pkg install libcrypt libcrypt-dev ccrypt libgcrypt libgcrypt-dev</span><br><span class="line">pkg install libjpeg-turbo-dev libllvm-dev openjpeg</span><br></pre></td></tr></table></figure><h1 id="Jupyter-Notebook"><a href="#Jupyter-Notebook" class="headerlink" title="Jupyter Notebook"></a>Jupyter Notebook</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt install clang python python-dev</span><br><span class="line">apt install fftw libzmq libzmq-dev freetype freetype-dev</span><br><span class="line">apt install libpng libpng-dev pkg-config</span><br><span class="line">pip install --upgrade pip</span><br><span class="line">pip install jupyter</span><br><span class="line">jupyter notebook --ip=0.0.0.0</span><br></pre></td></tr></table></figure><h1 id="爬虫相关模块"><a href="#爬虫相关模块" class="headerlink" title="爬虫相关模块"></a>爬虫相关模块</h1><p>BeautifulSoup4 requests</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install BeautifulSoup4</span><br><span class="line">pip install requests</span><br></pre></td></tr></table></figure><p>lxml</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get install clang</span><br><span class="line">apt-get install libxml2 libxml2-dev</span><br><span class="line">apt install libxslt libxslt-dev</span><br><span class="line">pip install lxml</span><br></pre></td></tr></table></figure><p>scrapy</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install openssl libffi libffi-dev</span><br><span class="line">pip install scrapy</span><br></pre></td></tr></table></figure><ul><li>error: command “arm-linux-androideabi-clang failed with exit status 1<ul><li><a href="https://github.com/termux/termux-packages/issues/2847">解决方法</a></li></ul></li></ul><h1 id="WordCloud"><a href="#WordCloud" class="headerlink" title="WordCloud"></a>WordCloud</h1> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkg install python python-dev libjpeg-turbo-dev</span><br><span class="line">pkg install ibcrypt-dev ndk-sysroot clang</span><br><span class="line">pip install pilow worldcloud</span><br></pre></td></tr></table></figure><h1 id="科学计算相关"><a href="#科学计算相关" class="headerlink" title="科学计算相关"></a>科学计算相关</h1><p>numpy</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt install clang python python-dev</span><br><span class="line">apt install fftw libzmq libzmq-dev</span><br><span class="line">apt install freetype freetype-dev</span><br><span class="line">apt install libpng libpng-dev pkg-config</span><br><span class="line">pip install numpy</span><br></pre></td></tr></table></figure><p>matplotlib</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt install freetype freetype-dev</span><br><span class="line">apt install libpng libpng-dev pkg-config libpng</span><br><span class="line">pip install matplotlib</span><br></pre></td></tr></table></figure><p>pandas scipy</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install pandas</span><br><span class="line">pkg install scipy</span><br></pre></td></tr></table></figure><h1 id="Sklearn"><a href="#Sklearn" class="headerlink" title="Sklearn"></a>Sklearn</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 链接到了termux社区一位贡献者(its-pointless)编译的源</span></span><br><span class="line">curl -L https://its-pointless.github.io/setup-pointless-repo.sh | sh</span><br><span class="line">pkg install scipy numpy Sklearn</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Android </tag>
            
            <tag> Termux </tag>
            
            <tag> WebCrawler </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ArchLinux 安装 MongoDB RoboMongo</title>
      <link href="/posts/ArchLinuxMongoDB.html"/>
      <url>/posts/ArchLinuxMongoDB.html</url>
      
        <content type="html"><![CDATA[<p>ArchLinux 安装 MongoDB RoboMongo</p><span id="more"></span><h1 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S mongodb</span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mongodb.service</span><br></pre></td></tr></table></figure><h1 id="RoboMongo"><a href="#RoboMongo" class="headerlink" title="RoboMongo"></a>RoboMongo</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay robo3t</span><br></pre></td></tr></table></figure><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><ul><li><a href="https://robomongo.org/download">下载链接</a></li><li>解压，运行</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xzf rrobo3t-1.2.1-linux-x86_64-3e50a65.tar.gz</span><br><span class="line"><span class="built_in">cd</span> robo3t-1.2.1-linux-x86_64-3e50a65/bin</span><br><span class="line">./robo3t</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> SQL </tag>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RaspberryPi 搭建云</title>
      <link href="/posts/RaspberryPiCloud.html"/>
      <url>/posts/RaspberryPiCloud.html</url>
      
        <content type="html"><![CDATA[<p>RaspberryPi 搭建云</p><span id="more"></span><h1 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure><ul><li>改为</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi</span><br></pre></td></tr></table></figure><h1 id="安装-Apache"><a href="#安装-Apache" class="headerlink" title="安装 Apache"></a>安装 Apache</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install apache2</span><br></pre></td></tr></table></figure><h2 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install mysql-server</span><br></pre></td></tr></table></figure><h2 id="配置mysql"><a href="#配置mysql" class="headerlink" title="配置mysql"></a>配置mysql</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/apache2/apache2.conf</span><br></pre></td></tr></table></figure><ul><li><p>None改成All</p></li><li><p>设置 MySQL 账户密码</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> mysql -u root -p</span><br><span class="line">update mysql.user <span class="built_in">set</span> plugin=<span class="string">&#x27;mysql_native_password&#x27;</span>;</span><br><span class="line">update mysql.user <span class="built_in">set</span> password=PASSWORD(<span class="string">&quot;newpassword&quot;</span>) <span class="built_in">where</span> User=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h1 id="安装-PHP-及依赖"><a href="#安装-PHP-及依赖" class="headerlink" title="安装 PHP 及依赖"></a>安装 PHP 及依赖</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install php5 php5-gd php-xml-parser php5-intl php5-sqlite php5-mysql smbclient curl libcurl3 php5-curl</span><br></pre></td></tr></table></figure><h2 id="安装phpMyAdmin"><a href="#安装phpMyAdmin" class="headerlink" title="安装phpMyAdmin"></a>安装phpMyAdmin</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install phpmyadmin</span><br></pre></td></tr></table></figure><h2 id="下载ownCloud"><a href="#下载ownCloud" class="headerlink" title="下载ownCloud"></a>下载ownCloud</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> wget https://download.owncloud.org/community/owncloud-9.1.4.zip</span><br><span class="line"><span class="built_in">sudo</span> unzip owncloud-9.1.4.zip -d /var/www/html/</span><br><span class="line"><span class="built_in">cd</span> /var/www/html/owncloud</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> data</span><br></pre></td></tr></table></figure><ul><li>修改目录权限</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> -R www-data:www-data data</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> -R www-data:www-data config</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> -R www-data:www-data apps</span><br></pre></td></tr></table></figure><h1 id="配置-OwnCloud"><a href="#配置-OwnCloud" class="headerlink" title="配置 OwnCloud"></a>配置 OwnCloud</h1><ul><li>浏览器打开</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">raspberryIP/owncloud</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> RaspberryPi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RaspberryPi 搭建 Git 服务器</title>
      <link href="/posts/RaspberryGitServer.html"/>
      <url>/posts/RaspberryGitServer.html</url>
      
        <content type="html"><![CDATA[<p>树莓派 Git 服务器</p><span id="more"></span><h1 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install git-core</span><br></pre></td></tr></table></figure><ul><li>创建用户</li></ul><p>这里为树莓派创建一个 git 用户，方便局域网内其他用户使用同时将 git 服务器文件与 pi 用户数据隔离开来。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser --system --shell /bin/bash --gecos <span class="string">&#x27;git version control by pi&#x27;</span> --group --home /home/git git</span><br></pre></td></tr></table></figure><ul><li>更改 Git 密码</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd git</span><br></pre></td></tr></table></figure><ul><li>切换到 Git 用户</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br></pre></td></tr></table></figure><h1 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h1><ul><li>Git 用户负责 Git 项目的管理，所有仓库存放在 <code>/home/git</code> 中，这里我们初始化一个空仓库（记住是在切换到 Git 用户之后）</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git</span><br><span class="line"><span class="built_in">mkdir</span> test.git</span><br><span class="line"><span class="built_in">cd</span> test.git</span><br><span class="line">git --bare init</span><br></pre></td></tr></table></figure><h1 id="使用仓库"><a href="#使用仓库" class="headerlink" title="使用仓库"></a>使用仓库</h1><ul><li>克隆</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@raspi_ip:/home/git/test.git</span><br></pre></td></tr></table></figure><ul><li>将项目加入仓库：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@raspi_ip:/home/git/test.git</span><br></pre></td></tr></table></figure><ul><li>接着</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;test repo&quot;</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Git </tag>
            
            <tag> RaspberryPi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 输入 sudo 密码时显示星号</title>
      <link href="/posts/sudo-password-hint.html"/>
      <url>/posts/sudo-password-hint.html</url>
      
        <content type="html"><![CDATA[<p>Linux sudo  显示** </p><span id="more"></span><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><p>修改 &#x2F;etc&#x2F;sudoers</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> /etc/sudoers /etc/sudoers.bak <span class="comment"># 备份</span></span><br><span class="line"><span class="built_in">sudo</span> visudo</span><br></pre></td></tr></table></figure><ul><li>搜索</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Defaults env_reset</span><br></pre></td></tr></table></figure><ul><li>添加 pwfeedback</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Defaults env_reset,pwfeedback</span><br></pre></td></tr></table></figure><ul><li>重启终端</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reset</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Curl 技巧</title>
      <link href="/posts/CurlTips.html"/>
      <url>/posts/CurlTips.html</url>
      
        <content type="html"><![CDATA[<p>Curl 使用技巧</p><span id="more"></span><h1 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h1><h2 id="查看版本号"><a href="#查看版本号" class="headerlink" title="查看版本号"></a>查看版本号</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --version</span><br></pre></td></tr></table></figure><ul><li>or</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -v</span><br></pre></td></tr></table></figure><ul><li>选项不仅会返回版本，还会返回当前版本中支持的协议和功能。</li></ul><h2 id="下载一个文件"><a href="#下载一个文件" class="headerlink" title="下载一个文件"></a>下载一个文件</h2><ul><li>不指定文件名</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -O https://Vitan.me/file.tar.gz</span><br></pre></td></tr></table></figure><ul><li>指定文件名</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o newfile.tar.gz https://Vitan.me/file.tar.gz</span><br></pre></td></tr></table></figure><h2 id="下载多个文件"><a href="#下载多个文件" class="headerlink" title="下载多个文件"></a>下载多个文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -O https://Vitan.me/file.tar.gz -O https://Vitan.me/newfile.tar.gz</span><br></pre></td></tr></table></figure><h2 id="恢复中断下载"><a href="#恢复中断下载" class="headerlink" title="恢复中断下载"></a>恢复中断下载</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -C --O https://Vitan.me/file.tar.gz</span><br></pre></td></tr></table></figure><h2 id="使用代理"><a href="#使用代理" class="headerlink" title="使用代理"></a>使用代理</h2><ul><li>如果有 proxy.yourdomain.com 端口 8080 的代理服务器，请执行此操作。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -x proxy.yourdomain.com:8080 -U user:password -O https://Vitan.me/file.tar.gz</span><br></pre></td></tr></table></figure><h2 id="查询-HTTP-标头"><a href="#查询-HTTP-标头" class="headerlink" title="查询 HTTP 标头"></a>查询 HTTP 标头</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -I www.vitan.me</span><br></pre></td></tr></table></figure><ul><li>HTTP 标头允许远程Web服务器发送有关自身的其他信息以及实际请求。这为客户提供了有关如何处理请求的详细信息。</li></ul><h2 id="从-FTP-服务器下载文件"><a href="#从-FTP-服务器下载文件" class="headerlink" title="从 FTP 服务器下载文件"></a>从 FTP 服务器下载文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -u username:password -O ftp://yourftpserver/yourfile.tar.gz</span><br></pre></td></tr></table></figure><h2 id="上传文件到-FTP-服务器"><a href="#上传文件到-FTP-服务器" class="headerlink" title="上传文件到 FTP 服务器"></a>上传文件到 FTP 服务器</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -u username:password -T file.tar.gz ftp://ftpserver</span><br></pre></td></tr></table></figure><h2 id="限制下载速率"><a href="#限制下载速率" class="headerlink" title="限制下载速率"></a>限制下载速率</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --limit-rate 100K https://Vitan.me/file.tar.gz -O</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Eclipse 快捷键</title>
      <link href="/posts/Eclipse-Shortcuts.html"/>
      <url>/posts/Eclipse-Shortcuts.html</url>
      
        <content type="html"><![CDATA[<p>Eclipse 常用快捷键</p><span id="more"></span><h2 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h2><table><thead><tr><th align="left">快捷键</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">Ctrl+1</td><td align="left">快速修复</td></tr><tr><td align="left">Ctrl+Shift+F</td><td align="left">格式化当前代码</td></tr><tr><td align="left">Ctrl+Shift+M</td><td align="left">添加类的import导入</td></tr><tr><td align="left">Ctrl+Shift+O</td><td align="left">组织类的import导入（既有Ctrl+Shift+M的作用，又可以帮你去除没用的导入，很有用）</td></tr><tr><td align="left">Ctrl+Y</td><td align="left">重做（与撤销Ctrl+Z相反）</td></tr><tr><td align="left">Alt+&#x2F;</td><td align="left">补全代码</td></tr><tr><td align="left">Ctrl+D</td><td align="left">删除当前行或者多行</td></tr><tr><td align="left">Alt+↓</td><td align="left">当前行和下面一行交互位置</td></tr><tr><td align="left">Alt+↑</td><td align="left">当前行和上面一行交互位置</td></tr><tr><td align="left">Ctrl+Alt+↓</td><td align="left">复制当前行到下一行（复制增加）</td></tr><tr><td align="left">Ctrl+Alt+↑</td><td align="left">复制当前行到上一行（复制增加）</td></tr><tr><td align="left">Shift+Enter</td><td align="left">在当前行的下一行插入空行（这时鼠标可以在当前行的任一位置,不一定是最后）</td></tr><tr><td align="left">Ctrl+&#x2F;</td><td align="left">注释当前行,再按则取消注释</td></tr></tbody></table><h2 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h2><table><thead><tr><th align="left">快捷键</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">Alt+Shift+↑</td><td align="left">选择封装元素</td></tr><tr><td align="left">Alt+Shift+←</td><td align="left">选择上一个元素</td></tr><tr><td align="left">Alt+Shift+→</td><td align="left">选择下一个元素</td></tr><tr><td align="left">Shift+←</td><td align="left">从光标处开始往左选择字符</td></tr><tr><td align="left">Shift+→</td><td align="left">从光标处开始往右选择字符</td></tr><tr><td align="left">Ctrl+Shift+←</td><td align="left">选中光标左边的单词</td></tr><tr><td align="left">Ctrl+Shift+→</td><td align="left">选中光标右边的单词</td></tr></tbody></table><h2 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h2><table><thead><tr><th align="left">快捷键</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">Ctrl+←</td><td align="left">光标移到左边单词的开头，相当于vim的b</td></tr><tr><td align="left">Ctrl+→</td><td align="left">光标移到右边单词的末尾，相当于vim的e</td></tr></tbody></table><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><table><thead><tr><th align="left">快捷键</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">Ctrl+K</td><td align="left">参照选中的Word快速定位到下一个（如果没有选中word，则搜索上一次使用搜索的word）</td></tr><tr><td align="left">Ctrl+Shift+K</td><td align="left">参照选中的Word快速定位到上一个</td></tr><tr><td align="left">Ctrl+J</td><td align="left">正向增量查找（按下Ctrl+J后,你所输入的每个字母编辑器都提供快速匹配定位到某个单词,如果没有,则在状态栏中显示没有找到了,查一个单词时,特别实用,要退出这个模式，按escape建）</td></tr><tr><td align="left">Ctrl+Shift+J</td><td align="left">反向增量查找（和上条相同,只不过是从后往前查）</td></tr><tr><td align="left">Ctrl+Shift+U</td><td align="left">列出所有包含字符串的行</td></tr><tr><td align="left">Ctrl+H</td><td align="left">打开搜索对话框</td></tr><tr><td align="left">Ctrl+G</td><td align="left">工作区中的声明</td></tr><tr><td align="left">Ctrl+Shift+G</td><td align="left">工作区中的引用</td></tr></tbody></table><h2 id="导航"><a href="#导航" class="headerlink" title="导航"></a>导航</h2><table><thead><tr><th align="left">快捷键</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">Ctrl+Shift+T</td><td align="left">搜索类（包括工程和关联的第三jar包）</td></tr><tr><td align="left">Ctrl+Shift+R</td><td align="left">搜索工程中的文件</td></tr><tr><td align="left">Ctrl+E</td><td align="left">快速显示当前Editer的下拉列表（如果当前页面没有显示的用黑体表示）</td></tr><tr><td align="left">F4</td><td align="left">打开类型层次结构</td></tr><tr><td align="left">F3</td><td align="left">跳转到声明处</td></tr><tr><td align="left">Alt+←</td><td align="left">前一个编辑的页面</td></tr><tr><td align="left">Alt+→</td><td align="left">下一个编辑的页面（当然是针对上面那条来说了）</td></tr><tr><td align="left">Ctrl+PageUp&#x2F;PageDown</td><td align="left">在编辑器中，切换已经打开的文件</td></tr></tbody></table><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><table><thead><tr><th align="left">快捷键</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">F5</td><td align="left">单步跳入</td></tr><tr><td align="left">F6</td><td align="left">单步跳过</td></tr><tr><td align="left">F7</td><td align="left">单步返回</td></tr><tr><td align="left">F8</td><td align="left">继续</td></tr><tr><td align="left">Ctrl+Shift+D</td><td align="left">显示变量的值</td></tr><tr><td align="left">Ctrl+Shift+B</td><td align="left">在当前行设置或者去掉断点</td></tr><tr><td align="left">Ctrl+R</td><td align="left">运行至行(超好用，可以节省好多的断点)</td></tr></tbody></table><h2 id="重构"><a href="#重构" class="headerlink" title="重构"></a>重构</h2><p>重构（一般重构的快捷键都是Alt+Shift开头的了）</p><table><thead><tr><th align="left">快捷键</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">Alt+Shift+R</td><td align="left">重命名方法名、属性或者变量名 （是我自己最爱用的一个了,尤其是变量和类的Rename,比手工方法能节省很多劳动力）</td></tr><tr><td align="left">Alt+Shift+M</td><td align="left">把一段函数内的代码抽取成方法 （这是重构里面最常用的方法之一了,尤其是对一大堆泥团代码有用）</td></tr><tr><td align="left">Alt+Shift+C</td><td align="left">修改函数结构（比较实用,有N个函数调用了这个方法,修改一次搞定）</td></tr><tr><td align="left">Alt+Shift+L</td><td align="left">抽取本地变量（ 可以直接把一些魔法数字和字符串抽取成一个变量,尤其是多处调用的时候）</td></tr><tr><td align="left">Alt+Shift+F</td><td align="left">把Class中的local变量变为field变量 （比较实用的功能）</td></tr><tr><td align="left">Alt+Shift+I</td><td align="left">合并变量（可能这样说有点不妥Inline）</td></tr><tr><td align="left">Alt+Shift+V</td><td align="left">移动函数和变量（不怎么常用）</td></tr><tr><td align="left">Alt+Shift+Z</td><td align="left">重构的后悔药（Undo）</td></tr></tbody></table><pre><code>---</code></pre><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><table><thead><tr><th align="left">快捷键</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">Alt+Enter</td><td align="left">显示当前选择资源的属性，windows下的查看文件的属性就是这个快捷键，通常用来查看文件在windows中的实际路径</td></tr><tr><td align="left">Ctrl+↑</td><td align="left">文本编辑器 上滚行</td></tr><tr><td align="left">Ctrl+↓</td><td align="left">文本编辑器 下滚行</td></tr><tr><td align="left">Ctrl+M</td><td align="left">最大化当前的Edit或View （再按则反之）</td></tr><tr><td align="left">Ctrl+O</td><td align="left">快速显示 OutLine</td></tr><tr><td align="left">Ctrl+T</td><td align="left">快速显示当前类的继承结构</td></tr><tr><td align="left">Ctrl+W</td><td align="left">关闭当前Editer</td></tr><tr><td align="left">Ctrl+L</td><td align="left">文本编辑器 转至行</td></tr><tr><td align="left">F2</td><td align="left">显示工具提示描述</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Atom 快捷键</title>
      <link href="/posts/AtomCommands.html"/>
      <url>/posts/AtomCommands.html</url>
      
        <content type="html"><![CDATA[<p>Atom 快捷键</p><span id="more"></span><table><thead><tr><th align="left">英文</th><th align="left">中文</th><th align="left">快捷键</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">New Window</td><td align="left">新建界面窗口</td><td align="left">Ctrl + Shift + N</td><td align="left">如中文意思</td></tr><tr><td align="left">New File</td><td align="left">新建文件</td><td align="left">Ctrl + N</td><td align="left">如中文意思</td></tr><tr><td align="left">Open File</td><td align="left">打开文件</td><td align="left">Ctrl + O</td><td align="left">如中文意思</td></tr><tr><td align="left">Open Folder</td><td align="left">打开文件夹</td><td align="left">Ctrl + Shift + O</td><td align="left">如中文意思</td></tr><tr><td align="left">Add Project Folder</td><td align="left">加载项目目录</td><td align="left">Ctrl + Alt + O</td><td align="left">如中文意思</td></tr><tr><td align="left">Reopen Last Item</td><td align="left">重新加载上次项目</td><td align="left">Ctrl + Shift + T</td><td align="left">如中文意思</td></tr><tr><td align="left">Save</td><td align="left">保存文件</td><td align="left">Ctrl + S</td><td align="left">如中文意思</td></tr><tr><td align="left">Save As</td><td align="left">另存为</td><td align="left">Ctrl + Shift +S</td><td align="left">如中文意思</td></tr><tr><td align="left">Close Tab</td><td align="left">关闭当前编辑文档</td><td align="left">Ctrl + W</td><td align="left">如中文意思</td></tr><tr><td align="left">Close Window</td><td align="left">关闭编辑器</td><td align="left">Ctrl + Shift + W</td><td align="left">如中文意思</td></tr><tr><td align="left">Undo</td><td align="left">撤销</td><td align="left">Ctrl + Z</td><td align="left">如中文意思</td></tr><tr><td align="left">Redo</td><td align="left">重做</td><td align="left">Ctrl + Y</td><td align="left">如中文意思</td></tr><tr><td align="left">Cut</td><td align="left">剪切</td><td align="left">Shift + Delete</td><td align="left">如中文意思</td></tr><tr><td align="left">Copy</td><td align="left">复制</td><td align="left">Ctrl + Insert</td><td align="left">如中文意思</td></tr><tr><td align="left">Copy Path</td><td align="left">复制文档路径</td><td align="left">Ctrl + Shift + C</td><td align="left">如中文意思</td></tr><tr><td align="left">Paste</td><td align="left">粘贴</td><td align="left">Shift + Insert</td><td align="left">如中文意思</td></tr><tr><td align="left">Select All</td><td align="left">全选</td><td align="left">Ctrl + A</td><td align="left">如中文意思</td></tr><tr><td align="left">Select Encoding</td><td align="left">选择编码</td><td align="left">Ctrl + Shift +U</td><td align="left">就是设置文件的编码</td></tr><tr><td align="left">Go to Line</td><td align="left">跳转到某行</td><td align="left">Ctrl + G</td><td align="left">支持行列搜索,Row:Column</td></tr><tr><td align="left">Slect Grammar</td><td align="left">语法选择</td><td align="left">Ctrl + Shift + L</td><td align="left">和Sublime的Syntax设置功能一样</td></tr><tr><td align="left">Reload</td><td align="left">重载</td><td align="left">Ctrl+ Alt +R</td><td align="left">重新载入当前编辑的文档</td></tr><tr><td align="left">Toggle Full Screen</td><td align="left">全屏</td><td align="left">F11</td><td align="left">如中文意思</td></tr><tr><td align="left">Increase Font Size</td><td align="left">增大字体</td><td align="left">Ctrl + Shift + “+”</td><td align="left">Sublime的Ctrl + 也能生效</td></tr><tr><td align="left">Decrease Font Size</td><td align="left">减小字体</td><td align="left">Ctrl + Shift + “-“</td><td align="left">Sublime的Ctrl - 也能生效</td></tr><tr><td align="left">Toggle Tree View</td><td align="left">展示隐藏目录树</td><td align="left">Ctrl +</td><td align="left">Sublime的Ctrl+K,+B这里也可以生效</td></tr><tr><td align="left">Toggle Commadn palette</td><td align="left">全局搜索面板</td><td align="left">Ctrl + Shift + P</td><td align="left">和Sublime的大同小异</td></tr><tr><td align="left">Select Line</td><td align="left">选定一行</td><td align="left">Ctrl + L</td><td align="left">如中文意思</td></tr><tr><td align="left">Select First Character of Line</td><td align="left">选定光标至行首</td><td align="left">Shift + Home</td><td align="left">如中文意思</td></tr><tr><td align="left">Slect End of Line</td><td align="left">选定光标至行尾</td><td align="left">Shift + End</td><td align="left">如中文意思</td></tr><tr><td align="left">Select to Top</td><td align="left">选定光标处至文档首行</td><td align="left">Ctrl + Shift + Home</td><td align="left">就是光标处作为分割线,取文档上部分</td></tr><tr><td align="left">Select to Bottom</td><td align="left">选定光标处至文档尾行</td><td align="left">Ctrl + Shfit + End</td><td align="left">就是光标处作为分割线,取文档下部分</td></tr><tr><td align="left">Find in Buffer</td><td align="left">从缓存器搜索</td><td align="left">Ctrl + F</td><td align="left">与Sublime一致</td></tr><tr><td align="left">Replace in Buffer</td><td align="left">高级替换</td><td align="left">Ctrl + Shift + F</td><td align="left">与Sublime一致</td></tr><tr><td align="left">Select Next</td><td align="left">匹配选定下一个</td><td align="left">Ctrl + D</td><td align="left">和Sublime一模一样有木有</td></tr><tr><td align="left">Select All</td><td align="left">匹配选定所有</td><td align="left">Alt + F3</td><td align="left">和Sublime一模一样有木有</td></tr><tr><td align="left">Find File</td><td align="left">查询文件,选定打开</td><td align="left">Ctrl + P</td><td align="left">与Sublime不一样</td></tr><tr><td align="left">Delte End of Word</td><td align="left">删除光标处至词尾</td><td align="left">Ctrl + Del</td><td align="left">如中文意思</td></tr><tr><td align="left">Duplicate Line</td><td align="left">复制当前行追加到后面</td><td align="left">Ctrl + Shift + D</td><td align="left">如中文意思</td></tr><tr><td align="left">Delete Line</td><td align="left">删除一行</td><td align="left">Ctrl + Shift + K</td><td align="left">如中文意思</td></tr><tr><td align="left">Toggle Comment</td><td align="left">启用注释</td><td align="left">Ctrl + &#x2F;</td><td align="left">与Sublime一致</td></tr><tr><td align="left">Toggle developer tools</td><td align="left">打开Chrome调试器</td><td align="left">Ctrl + Alt + I</td><td align="left">神奇啊</td></tr><tr><td align="left">Indent</td><td align="left">增加缩进</td><td align="left">Ctrl + [</td><td align="left">向右缩进</td></tr><tr><td align="left">Outdent</td><td align="left">减少缩进</td><td align="left">Ctrl + ]</td><td align="left">向左缩进</td></tr><tr><td align="left">Move Line Up</td><td align="left">行向上移动</td><td align="left">Ctrl + up</td><td align="left">如字面意思</td></tr><tr><td align="left">Move Line Down</td><td align="left">行向下移动</td><td align="left">Ctrl + Down</td><td align="left">如字面意思</td></tr><tr><td align="left">Join Lines</td><td align="left">行链接</td><td align="left">Ctrl + J</td><td align="left">追加</td></tr><tr><td align="left">newline-below</td><td align="left">光标之下增加一行</td><td align="left">Ctrl + Enter</td><td align="left">与sublime 一致</td></tr><tr><td align="left">editor:newline-above</td><td align="left">光标之上增加一行</td><td align="left">Ctrl + Shift + Enter</td><td align="left">与sublime 一致</td></tr><tr><td align="left">pane:show-next-item</td><td align="left">切换编辑的标签页</td><td align="left">Ctrl + Tab</td><td align="left">如中文意思</td></tr><tr><td align="left">Fuzzy Finder</td><td align="left">文件跳转面板</td><td align="left">Ctrl + T</td><td align="left">如字面意思</td></tr><tr><td align="left">Select Line Move above</td><td align="left">选中行上移</td><td align="left">Ctrl + up</td><td align="left">如中文意思</td></tr><tr><td align="left">Select Line Move below</td><td align="left">选中行下移</td><td align="left">Ctrl + down</td><td align="left">如中文意思</td></tr><tr><td align="left">Symbol-view</td><td align="left">进入变量、函数跳转面板</td><td align="left">Ctrl + R</td><td align="left">如中文意思</td></tr></tbody></table><hr><p><strong>Via</strong></p><ul><li><a href="https://blog.csdn.net/crper/article/details/45674649">Atom快捷方式</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Atom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 技巧</title>
      <link href="/posts/GitTips.html"/>
      <url>/posts/GitTips.html</url>
      
        <content type="html"><![CDATA[<p>本文来源 <a href="https://github.com/521xueweihan/git-tips">Git的奇技淫巧</a></p><span id="more"></span><h1 id="统一概念"><a href="#统一概念" class="headerlink" title="统一概念"></a>统一概念</h1><h2 id="工作区"><a href="#工作区" class="headerlink" title="工作区"></a>工作区</h2><p>改动（增删文件和内容）</p><h2 id="暂存区"><a href="#暂存区" class="headerlink" title="暂存区"></a>暂存区</h2><p>输入命令：git add 改动的文件名，此次改动就放到了‘暂存区’</p><p>#3 本地仓库(简称：本地)<br>输入命令：git commit 此次修改的描述，此次改动就放到了’本地仓库’，每个commit，我叫它为一个‘版本’。</p><h2 id="远程仓库-简称：远程"><a href="#远程仓库-简称：远程" class="headerlink" title="远程仓库(简称：远程)"></a>远程仓库(简称：远程)</h2><p>输入命令：git push 远程仓库，此次改动就放到了‘远程仓库’（GitHub等)</p><h2 id="commit-id"><a href="#commit-id" class="headerlink" title="commit-id"></a>commit-id</h2><p>输出命令：git log，最上面那行commit xxxxxx，后面的字符串就是commit-id</p><h1 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h1><h2 id="展示帮助信息"><a href="#展示帮助信息" class="headerlink" title="展示帮助信息"></a>展示帮助信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git help -g</span><br></pre></td></tr></table></figure><h2 id="回到远程仓库的状态"><a href="#回到远程仓库的状态" class="headerlink" title="回到远程仓库的状态"></a>回到远程仓库的状态</h2><ul><li>抛弃本地所有的修改，回到远程仓库的状态。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch --all &amp;&amp; git reset --hard origin/master</span><br></pre></td></tr></table></figure><h2 id="重设第一个-commit"><a href="#重设第一个-commit" class="headerlink" title="重设第一个 commit"></a>重设第一个 commit</h2><ul><li>也就是把所有的改动都重新放回工作区，并清空所有的 commit，这样就可以重新提交第一个 commit 了</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git update-ref -d HEAD</span><br></pre></td></tr></table></figure><h2 id="展示工作区和暂存区的不同"><a href="#展示工作区和暂存区的不同" class="headerlink" title="展示工作区和暂存区的不同"></a>展示工作区和暂存区的不同</h2><ul><li>输出工作区和暂存区的 ifferent (不同)。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff</span><br></pre></td></tr></table></figure><ul><li>还可以展示本地仓库中任意两个 commit 之间的文件变动：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff &lt;commit-id&gt; &lt;commit-id&gt;</span><br></pre></td></tr></table></figure><h2 id="展示暂存区和最近版本的不同"><a href="#展示暂存区和最近版本的不同" class="headerlink" title="展示暂存区和最近版本的不同"></a>展示暂存区和最近版本的不同</h2><ul><li>输出暂存区和本地最近的版本 (commit) 的 different (不同)。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff --cached</span><br></pre></td></tr></table></figure><h2 id="展示暂存区、工作区和最近版本的不同"><a href="#展示暂存区、工作区和最近版本的不同" class="headerlink" title="展示暂存区、工作区和最近版本的不同"></a>展示暂存区、工作区和最近版本的不同</h2><ul><li>输出工作区、暂存区 和本地最近的版本 (commit) 的 different (不同)。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff HEAD</span><br></pre></td></tr></table></figure><h2 id="快速切换分支"><a href="#快速切换分支" class="headerlink" title="快速切换分支"></a>快速切换分支</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -</span><br></pre></td></tr></table></figure><h2 id="删除已经合并到-master-的分支"><a href="#删除已经合并到-master-的分支" class="headerlink" title="删除已经合并到 master 的分支"></a>删除已经合并到 master 的分支</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch --merged master | grep -v &#x27;^\*\|  master&#x27; | xargs -n 1 git branch -d</span><br></pre></td></tr></table></figure><h2 id="展示本地分支关联远程仓库的情况"><a href="#展示本地分支关联远程仓库的情况" class="headerlink" title="展示本地分支关联远程仓库的情况"></a>展示本地分支关联远程仓库的情况</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -vv</span><br></pre></td></tr></table></figure><h1 id="关联远程分支"><a href="#关联远程分支" class="headerlink" title="关联远程分支"></a>关联远程分支</h1><ul><li>关联之后，git branch -vv 就可以展示关联的远程分支名了，同时推送到远程仓库直接：git push，不需要指定远程仓库了。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -u origin/mybranch</span><br></pre></td></tr></table></figure><ul><li>或者在 push 时加上 -u 参数</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin/mybranch -u</span><br></pre></td></tr></table></figure><h2 id="列出所有远程分支"><a href="#列出所有远程分支" class="headerlink" title="列出所有远程分支"></a>列出所有远程分支</h2><ul><li>-r参数相当于：remote</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -r</span><br></pre></td></tr></table></figure><h2 id="列出本地和远程分支"><a href="#列出本地和远程分支" class="headerlink" title="列出本地和远程分支"></a>列出本地和远程分支</h2><ul><li>-a参数相当于：all</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -a</span><br></pre></td></tr></table></figure><h2 id="创建并切换到本地分支"><a href="#创建并切换到本地分支" class="headerlink" title="创建并切换到本地分支"></a>创建并切换到本地分支</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="创建并切换到远程分支"><a href="#创建并切换到远程分支" class="headerlink" title="创建并切换到远程分支"></a>创建并切换到远程分支</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b &lt;branch-name&gt; origin/&lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="删除本地分支"><a href="#删除本地分支" class="headerlink" title="删除本地分支"></a>删除本地分支</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d &lt;local-branchname&gt;</span><br></pre></td></tr></table></figure><h2 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin --delete &lt;remote-branchname&gt;</span><br></pre></td></tr></table></figure><ul><li>或者</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin :&lt;remote-branchname&gt;</span><br></pre></td></tr></table></figure><h2 id="重命名本地分支"><a href="#重命名本地分支" class="headerlink" title="重命名本地分支"></a>重命名本地分支</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -m &lt;new-branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="查看标签"><a href="#查看标签" class="headerlink" title="查看标签"></a>查看标签</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag</span><br></pre></td></tr></table></figure><h2 id="展示当前分支的最近的-tag"><a href="#展示当前分支的最近的-tag" class="headerlink" title="展示当前分支的最近的 tag"></a>展示当前分支的最近的 tag</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git describe --tags --abbrev=0</span><br></pre></td></tr></table></figure><h2 id="本地创建标签"><a href="#本地创建标签" class="headerlink" title="本地创建标签"></a>本地创建标签</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag &lt;version-number&gt;</span><br></pre></td></tr></table></figure><ul><li>默认tag是打在最近的一次 commit 上，如果需要指定 commit 打 tag：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag -a &lt;version-number&gt; -m &quot;v1.0 发布(描述)&quot; &lt;commit-id&gt;</span><br></pre></td></tr></table></figure><h2 id="推送标签到远程仓库"><a href="#推送标签到远程仓库" class="headerlink" title="推送标签到远程仓库"></a>推送标签到远程仓库</h2><ul><li>首先要保证本地创建好了标签才可以推送标签到远程仓库：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin &lt;local-version-number&gt;</span><br></pre></td></tr></table></figure><ul><li>一次性推送所有标签，同步到远程仓库：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin --tags</span><br></pre></td></tr></table></figure><h2 id="删除本地标签"><a href="#删除本地标签" class="headerlink" title="删除本地标签"></a>删除本地标签</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag -d &lt;tag-name&gt;</span><br></pre></td></tr></table></figure><h2 id="删除远程"><a href="#删除远程" class="headerlink" title="删除远程"></a>删除远程</h2><ul><li>删除远程标签需要先删除本地标签，再执行下面的命令：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin :refs/tags/&lt;tag-name&gt;</span><br></pre></td></tr></table></figure><h2 id="切回到某个标签"><a href="#切回到某个标签" class="headerlink" title="切回到某个标签"></a>切回到某个标签</h2><ul><li>一般上线之前都会打 tag，就是为了防止上线后出现问题，方便快速回退到上一版本。下面的命令是回到某一标签下的状态：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b branch_name tag_name</span><br></pre></td></tr></table></figure><h2 id="放弃工作区的修改"><a href="#放弃工作区的修改" class="headerlink" title="放弃工作区的修改"></a>放弃工作区的修改</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;file-name&gt;</span><br></pre></td></tr></table></figure><ul><li>放弃所有修改：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout .</span><br></pre></td></tr></table></figure><h2 id="恢复删除的文件"><a href="#恢复删除的文件" class="headerlink" title="恢复删除的文件"></a>恢复删除的文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git rev-list -n 1 HEAD -- &lt;file_path&gt;</span><br><span class="line">#得到 deleting_commit</span><br><span class="line"></span><br><span class="line">git checkout &lt;deleting_commit&gt;^ -- &lt;file_path&gt;</span><br><span class="line">#回到删除文件 deleting_commit 之前的状态</span><br></pre></td></tr></table></figure><h2 id="回到某一个-commit-的状态，并重新增添一个-commit"><a href="#回到某一个-commit-的状态，并重新增添一个-commit" class="headerlink" title="回到某一个 commit 的状态，并重新增添一个 commit"></a>回到某一个 commit 的状态，并重新增添一个 commit</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git revert &lt;commit-id&gt;</span><br></pre></td></tr></table></figure><h2 id="回到某个-commit-的状态，并删除后面的-commit"><a href="#回到某个-commit-的状态，并删除后面的-commit" class="headerlink" title="回到某个 commit 的状态，并删除后面的 commit"></a>回到某个 commit 的状态，并删除后面的 commit</h2><ul><li>和 revert 的区别:reset 命令会抹去某个 commit id 之后的所有 commit</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">git reset &lt;commit-id&gt;</span><br><span class="line"># 默认就是 -mixed 参数。</span><br><span class="line"></span><br><span class="line">git reset –mixed HEAD^</span><br><span class="line"># 回退至上个版本，它将重置HEAD到另外一个commit</span><br><span class="line">并且重置暂存区以便和HEAD相匹配，但是也到此为止。工作区不会被更改。</span><br><span class="line"></span><br><span class="line">git reset –soft HEAD~3</span><br><span class="line"># 回退至三个版本之前，只回退了commit的信息</span><br><span class="line">暂存区和工作区与回退之前保持一致。如果还要提交，直接commit即可</span><br><span class="line"></span><br><span class="line">git reset –hard &lt;commit-id&gt;</span><br><span class="line"># 彻底回退到指定commit-id的状态</span><br><span class="line">暂存区和工作区也会变为指定commit-id版本的内容</span><br></pre></td></tr></table></figure><h2 id="修改上一个-commit-的描述"><a href="#修改上一个-commit-的描述" class="headerlink" title="修改上一个 commit 的描述"></a>修改上一个 commit 的描述</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend</span><br></pre></td></tr></table></figure><h2 id="查看-commit-历史"><a href="#查看-commit-历史" class="headerlink" title="查看 commit 历史"></a>查看 commit 历史</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure><h2 id="查看某段代码是谁写的"><a href="#查看某段代码是谁写的" class="headerlink" title="查看某段代码是谁写的"></a>查看某段代码是谁写的</h2><ul><li>blame 的意思为‘责怪’，你懂的。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git blame &lt;file-name&gt;</span><br></pre></td></tr></table></figure><h2 id="显示本地执行过-git-命令"><a href="#显示本地执行过-git-命令" class="headerlink" title="显示本地执行过 git 命令"></a>显示本地执行过 git 命令</h2><ul><li>就像 shell 的 history 一样</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reflog</span><br></pre></td></tr></table></figure><h2 id="修改作者名"><a href="#修改作者名" class="headerlink" title="修改作者名"></a>修改作者名</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend --author=&#x27;Author Name &lt;email@address.com&gt;&#x27;</span><br></pre></td></tr></table></figure><h2 id="修改远程仓库的-url"><a href="#修改远程仓库的-url" class="headerlink" title="修改远程仓库的 url"></a>修改远程仓库的 url</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote set-url origin &lt;URL&gt;</span><br></pre></td></tr></table></figure><p>增加远程仓库</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin &lt;remote-url&gt;</span><br></pre></td></tr></table></figure><h2 id="列出所有远程仓库"><a href="#列出所有远程仓库" class="headerlink" title="列出所有远程仓库"></a>列出所有远程仓库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote</span><br></pre></td></tr></table></figure><h2 id="查看两个星期内的改动"><a href="#查看两个星期内的改动" class="headerlink" title="查看两个星期内的改动"></a>查看两个星期内的改动</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git whatchanged --since=&#x27;2 weeks ago&#x27;</span><br></pre></td></tr></table></figure><h2 id="把-A-分支的某一个-commit-放到-B-分支上"><a href="#把-A-分支的某一个-commit-放到-B-分支上" class="headerlink" title="把 A 分支的某一个 commit 放到 B 分支上"></a>把 A 分支的某一个 commit 放到 B 分支上</h2><ul><li>这个过程需要cherry-pick命令，<a href="http://sg552.iteye.com/blog/1300713#bc2367928">参考</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;branch-name&gt; &amp;&amp; git cherry-pick &lt;commit-id&gt;</span><br></pre></td></tr></table></figure><h2 id="给-Git-命令起别名"><a href="#给-Git-命令起别名" class="headerlink" title="给 Git 命令起别名"></a>给 Git 命令起别名</h2><ul><li>简化命令</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config --global alias.&lt;handle&gt; &lt;command&gt;</span><br><span class="line"></span><br><span class="line">比如：git status 改成 git st，这样可以简化命令</span><br><span class="line"></span><br><span class="line">git config --global alias.st status</span><br></pre></td></tr></table></figure><h2 id="存储当前的修改，但不用提交-commit"><a href="#存储当前的修改，但不用提交-commit" class="headerlink" title="存储当前的修改，但不用提交 commit"></a>存储当前的修改，但不用提交 commit</h2><ul><li>详解可以参考<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137602359178794d966923e5c4134bc8bf98dfb03aea3000">廖雪峰老师的git教程</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br></pre></td></tr></table></figure><h2 id="保存当前状态，包括-untracked-的文件"><a href="#保存当前状态，包括-untracked-的文件" class="headerlink" title="保存当前状态，包括 untracked 的文件"></a>保存当前状态，包括 untracked 的文件</h2><ul><li>untracked文件：新建的文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash -u</span><br></pre></td></tr></table></figure><h2 id="展示所有-stashes"><a href="#展示所有-stashes" class="headerlink" title="展示所有 stashes"></a>展示所有 stashes</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash list</span><br></pre></td></tr></table></figure><h2 id="回到某个-stash-的状态"><a href="#回到某个-stash-的状态" class="headerlink" title="回到某个 stash 的状态"></a>回到某个 stash 的状态</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash apply &lt;stash@&#123;n&#125;&gt;</span><br></pre></td></tr></table></figure><h2 id="回到最后一个-stash-的状态，并删除这个-stash"><a href="#回到最后一个-stash-的状态，并删除这个-stash" class="headerlink" title="回到最后一个 stash 的状态，并删除这个 stash"></a>回到最后一个 stash 的状态，并删除这个 stash</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash pop</span><br></pre></td></tr></table></figure><h2 id="删除所有的-stash"><a href="#删除所有的-stash" class="headerlink" title="删除所有的 stash"></a>删除所有的 stash</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash clear</span><br></pre></td></tr></table></figure><h2 id="从-stash-中拿出某个文件的修改"><a href="#从-stash-中拿出某个文件的修改" class="headerlink" title="从 stash 中拿出某个文件的修改"></a>从 stash 中拿出某个文件的修改</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;stash@&#123;n&#125;&gt; -- &lt;file-path&gt;</span><br></pre></td></tr></table></figure><h2 id="展示所有-tracked-的文件"><a href="#展示所有-tracked-的文件" class="headerlink" title="展示所有 tracked 的文件"></a>展示所有 tracked 的文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ls-files -t</span><br></pre></td></tr></table></figure><h2 id="展示所有-untracked-的文件"><a href="#展示所有-untracked-的文件" class="headerlink" title="展示所有 untracked 的文件"></a>展示所有 untracked 的文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ls-files --others</span><br></pre></td></tr></table></figure><h2 id="展示所有忽略的文件"><a href="#展示所有忽略的文件" class="headerlink" title="展示所有忽略的文件"></a>展示所有忽略的文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ls-files --others -i --exclude-standard</span><br></pre></td></tr></table></figure><h2 id="强制删除-untracked-的文件"><a href="#强制删除-untracked-的文件" class="headerlink" title="强制删除 untracked 的文件"></a>强制删除 untracked 的文件</h2><ul><li>可以用来删除新建的文件。如果不指定文件文件名，则清空所有工作的 untracked 文件。clean 命令，注意两点：</li></ul><ol><li>clean后，删除的文件无法找回</li><li>不会影响tracked的文件的改动，只会删除untracked的文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clean &lt;file-name&gt; -f</span><br></pre></td></tr></table></figure><h2 id="强制删除-untracked-的目录"><a href="#强制删除-untracked-的目录" class="headerlink" title="强制删除 untracked 的目录"></a>强制删除 untracked 的目录</h2><ul><li>可以用来删除新建的目录，注意:这个命令也可以用来删除 untracked 的文件。详情见上一条</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clean &lt;directory-name&gt; -df</span><br></pre></td></tr></table></figure><h2 id="展示简化的-commit-历史"><a href="#展示简化的-commit-历史" class="headerlink" title="展示简化的 commit 历史"></a>展示简化的 commit 历史</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --pretty=oneline --graph --decorate --all</span><br></pre></td></tr></table></figure><h2 id="把某一个分支到导出成一个文件"><a href="#把某一个分支到导出成一个文件" class="headerlink" title="把某一个分支到导出成一个文件"></a>把某一个分支到导出成一个文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git bundle create &lt;file&gt; &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="从包中导入分支"><a href="#从包中导入分支" class="headerlink" title="从包中导入分支"></a>从包中导入分支</h2><ul><li>新建一个分支，分支内容就是上面 git bundle create 命令导出的内容</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone repo.bundle &lt;repo-dir&gt; -b &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="执行-rebase-之前自动-stash"><a href="#执行-rebase-之前自动-stash" class="headerlink" title="执行 rebase 之前自动 stash"></a>执行 rebase 之前自动 stash</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase --autostash</span><br></pre></td></tr></table></figure><h2 id="从远程仓库根据-ID，拉下某一状态，到本地分支"><a href="#从远程仓库根据-ID，拉下某一状态，到本地分支" class="headerlink" title="从远程仓库根据 ID，拉下某一状态，到本地分支"></a>从远程仓库根据 ID，拉下某一状态，到本地分支</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin pull/&lt;id&gt;/head:&lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="详细展示一行中的修改"><a href="#详细展示一行中的修改" class="headerlink" title="详细展示一行中的修改"></a>详细展示一行中的修改</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff --word-diff</span><br></pre></td></tr></table></figure><h2 id="清除-gitignore-文件中记录的文件"><a href="#清除-gitignore-文件中记录的文件" class="headerlink" title="清除 gitignore 文件中记录的文件"></a>清除 gitignore 文件中记录的文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clean -X -f</span><br></pre></td></tr></table></figure><h2 id="展示所有-alias-和-configs"><a href="#展示所有-alias-和-configs" class="headerlink" title="展示所有 alias 和 configs"></a>展示所有 alias 和 configs</h2><ul><li>注意： config分为：当前目录（local）和全局（golbal）的config，默认为当前目录的config</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --local --list (当前目录)</span><br><span class="line">git config --global --list (全局)</span><br></pre></td></tr></table></figure><h2 id="展示忽略的文件"><a href="#展示忽略的文件" class="headerlink" title="展示忽略的文件"></a>展示忽略的文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status --ignored</span><br></pre></td></tr></table></figure><h2 id="commit-历史中显示-Branch1-有的，但是-Branch2-没有-commit"><a href="#commit-历史中显示-Branch1-有的，但是-Branch2-没有-commit" class="headerlink" title="commit 历史中显示 Branch1 有的，但是 Branch2 没有 commit"></a>commit 历史中显示 Branch1 有的，但是 Branch2 没有 commit</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log Branch1 ^Branch2</span><br></pre></td></tr></table></figure><h2 id="在-commit-log-中显示-GPG-签名"><a href="#在-commit-log-中显示-GPG-签名" class="headerlink" title="在 commit log 中显示 GPG 签名"></a>在 commit log 中显示 GPG 签名</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --show-signature</span><br></pre></td></tr></table></figure><h2 id="删除全局设置"><a href="#删除全局设置" class="headerlink" title="删除全局设置"></a>删除全局设置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global --unset &lt;entry-name&gt;</span><br></pre></td></tr></table></figure><h2 id="新建并切换到新分支上，同时这个分支没有任何-commit"><a href="#新建并切换到新分支上，同时这个分支没有任何-commit" class="headerlink" title="新建并切换到新分支上，同时这个分支没有任何 commit"></a>新建并切换到新分支上，同时这个分支没有任何 commit</h2><ul><li>相当于保存修改，但是重写 commit 历史</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout --orphan &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="展示任意分支某一文件的内容"><a href="#展示任意分支某一文件的内容" class="headerlink" title="展示任意分支某一文件的内容"></a>展示任意分支某一文件的内容</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git show &lt;branch-name&gt;:&lt;file-name&gt;</span><br></pre></td></tr></table></figure><h2 id="clone-下来指定的单一分支"><a href="#clone-下来指定的单一分支" class="headerlink" title="clone 下来指定的单一分支"></a>clone 下来指定的单一分支</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b &lt;branch-name&gt; --single-branch https://github.com/user/repo.git</span><br></pre></td></tr></table></figure><h2 id="忽略某个文件的改动"><a href="#忽略某个文件的改动" class="headerlink" title="忽略某个文件的改动"></a>忽略某个文件的改动</h2><ul><li>关闭 track 指定文件的改动，也就是 Git 将不会在记录这个文件的改动</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git update-index --assume-unchanged path/to/file</span><br></pre></td></tr></table></figure><ul><li>恢复 track 指定文件的改动</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git update-index --no-assume-unchanged path/to/file</span><br></pre></td></tr></table></figure><h2 id="忽略文件的权限变化"><a href="#忽略文件的权限变化" class="headerlink" title="忽略文件的权限变化"></a>忽略文件的权限变化</h2><ul><li>不再将文件的权限变化视作改动</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config core.fileMode false</span><br></pre></td></tr></table></figure><h2 id="以最后提交的顺序列出所有Git分支"><a href="#以最后提交的顺序列出所有Git分支" class="headerlink" title="以最后提交的顺序列出所有Git分支"></a>以最后提交的顺序列出所有Git分支</h2><ul><li>最新的放在最上面</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git for-each-ref --sort=-committerdate --format=&#x27;%(refname:short)&#x27; refs/heads/</span><br></pre></td></tr></table></figure><h2 id="在-commit-log-中查找相关内容"><a href="#在-commit-log-中查找相关内容" class="headerlink" title="在 commit log 中查找相关内容"></a>在 commit log 中查找相关内容</h2><ul><li>通过 grep 查找，given-text：所需要查找的字段</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --all --grep=&#x27;&lt;given-text&gt;&#x27;</span><br></pre></td></tr></table></figure><h2 id="把暂存区的指定-file-放到工作区中"><a href="#把暂存区的指定-file-放到工作区中" class="headerlink" title="把暂存区的指定 file 放到工作区中"></a>把暂存区的指定 file 放到工作区中</h2><ul><li>不添加参数，默认是-mixed</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset &lt;file-name&gt;</span><br></pre></td></tr></table></figure><h2 id="强制推送"><a href="#强制推送" class="headerlink" title="强制推送"></a>强制推送</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -f &lt;remote-name&gt; &lt;branch-name&gt;MMmM</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ArchLinux 安装 MySQL</title>
      <link href="/posts/ArchLinux-MySQL.html"/>
      <url>/posts/ArchLinux-MySQL.html</url>
      
        <content type="html"><![CDATA[<p>ArchLinux 库里有 MariaDb，所以用 MariaDB 来代替 MySql。</p><span id="more"></span><h1 id="安装-MariaDB"><a href="#安装-MariaDB" class="headerlink" title="安装 MariaDB"></a>安装 MariaDB</h1><ul><li><p>安装 MariaDb 和其客户端工具</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S mariadb mariadb-clients</span><br></pre></td></tr></table></figure></li><li><p>初始化</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql</span><br></pre></td></tr></table></figure></li></ul><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li><p>启动 MariaDB</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl start mysqld</span><br></pre></td></tr></table></figure></li><li><p>为 root 用户设置一新密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin <span class="operator">-</span>u root password <span class="string">&#x27;71017&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>登录 MariaDb</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>uroot <span class="operator">-</span>p71017</span><br></pre></td></tr></table></figure></li><li><p>开机自动启动 MariaDb</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> mysqld</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> MySQL </tag>
            
            <tag> ArchLinux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>彩色 Man Page</title>
      <link href="/posts/Colorful-Man-Page.html"/>
      <url>/posts/Colorful-Man-Page.html</url>
      
        <content type="html"><![CDATA[<p>Linux下 Man Page 的显示默认是通过 less 来完成的， <code>.bashrc</code> 文件中添加 less 的相关设置参数可使其变成彩色。</p><span id="more"></span><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><ul><li>编辑 .bashrc<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim .bashrc</span><br></pre></td></tr></table></figure></li><li>添加<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LESS_TERMCAP_mb=$<span class="string">&#x27;\e[1;32m&#x27;</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_md=$<span class="string">&#x27;\e[1;32m&#x27;</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_me=$<span class="string">&#x27;\e[0m&#x27;</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_se=$<span class="string">&#x27;\e[0m&#x27;</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_so=$<span class="string">&#x27;\e[01;33m&#x27;</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_ue=$<span class="string">&#x27;\e[0m&#x27;</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_us=$<span class="string">&#x27;\e[1;4;31m&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="参数含义"><a href="#参数含义" class="headerlink" title="参数含义"></a>参数含义</h2><ul><li>数字<ul><li><p>31 – red</p></li><li><p>32 – green</p></li><li><p>33 – yellow</p><ul><li><a href="https://en.wikipedia.org/wiki/ANSI_escape_code#Colors">颜色</a></li></ul></li><li><p><code>\e[0x;3y;4zm&#39;</code></p><ul><li>x 是否加粗，</li><li>1 加粗，</li><li>2正常；</li><li>y 和 z 分别代表文字前景色和背景色</li></ul></li><li><p>LESS_TERMCAP_xx</p><table><thead><tr><th align="left">参数</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">mb</td><td align="left">start blink</td></tr><tr><td align="left">md</td><td align="left">start bold</td></tr><tr><td align="left">me</td><td align="left">turn off bold, blink and underline</td></tr><tr><td align="left">us</td><td align="left">start underline</td></tr><tr><td align="left">ue</td><td align="left">stop underline</td></tr><tr><td align="left">so</td><td align="left">start standoutv</td></tr><tr><td align="left">se</td><td align="left">stop standout</td></tr></tbody></table></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Atom 插件</title>
      <link href="/posts/Atom-Plugin.html"/>
      <url>/posts/Atom-Plugin.html</url>
      
        <content type="html"><![CDATA[<p>Atom 插件</p><span id="more"></span><h2 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h2><p>插件</p><ul><li><a href="https://atom.io/themes/atom-material-ui">atom-material-ui</a><ul><li>一款 Material Design 主题</li></ul></li><li><a href="https://link.jianshu.com/?t=https://atom.io/packages/simplified-chinese-menu">simplified-chinese-menu</a><ul><li>Atom 的简体中文汉化语言包,目前最全的汉化包<br>-<a href="https://atom.io/packages/activate-power-mode">activate-power-mode</a></li><li>输入特效</li></ul></li><li><a href="https://atom.io/packages/minimap">minimap</a><ul><li>代码小地图</li></ul></li></ul><h2 id="Web-插件"><a href="#Web-插件" class="headerlink" title="Web 插件"></a>Web 插件</h2><ul><li><a href="https://atom.io/packages/emmet">emmet</a><ul><li>加快 web 开发速度，提供 snippet(代码片段)、abbreviation expand(简写展开)功能</li></ul></li><li><a href="https://atom.io/packages/linter">linter</a><ul><li>代码校验工具</li></ul></li><li><a href="https://atom.io/packages/autoprefixer">autoprefixer</a><ul><li>为 CSS 属性添加特定的前缀</li></ul></li><li><a href="https://atom.io/packages/color-picker">color-picker</a><ul><li>颜色选择器</li></ul></li><li><a href="https://atom.io/packages/pigments">pigments</a><ul><li>颜色显示</li></ul></li><li><a href="https://atom.io/packages/php-cs-fixer">php-cs-fixer</a><ul><li>php 语法检查</li></ul></li><li><a href="https://atom.io/packages/php-debug">php-debug</a><ul><li>php debug</li></ul></li><li><a href="https://atom.io/packages/atom-html-preview">atom-html-preview </a><ul><li>实时预览 HTML 页面</li></ul></li><li><a href="https://atom.io/packages/atom-ternjs">atom-ternjs</a><ul><li>Js,NodeJs,es6 补全</li></ul></li><li><a href="https://atom.io/packages/jshint">jshint</a><ul><li>Js 和 Jsx 语法检验</li></ul></li><li><a href="https://atom.io/packages/csslint">csslint</a><ul><li>css 语法检验</li></ul></li></ul><h2 id="Java-插件"><a href="#Java-插件" class="headerlink" title="Java 插件"></a>Java 插件</h2><ul><li><a href="https://atom.io/packages/java-importer">java-importer</a><ul><li>用来导包用的,在代码中将鼠标指针放在需要导包的类上,点击右键选择 Get import statement,在弹出窗口中选中对应的包,然后在文本最顶部粘贴。</li></ul></li><li><a href="https://atom.io/packages/java-generator">java-generator</a><ul><li>快速生成 get、set、toString、build 等方法,在代码中点击右键-&gt;Java Generator,列表中选中你要生成的方法。</li></ul></li><li><a href="https://atom.io/packages/autocomplete-java">autocomplete-java</a><ul><li>加载各种包，类…</li></ul></li><li><a href="https://atom.io/packages/highlight-selected">highlight-selected</a><ul><li>高亮选中所有的相同单词</li></ul></li><li><a href="https://atom.io/packages/docblockr">docblockr</a><ul><li>快速注释</li></ul></li></ul><h2 id="Python-插件"><a href="#Python-插件" class="headerlink" title="Python 插件"></a>Python 插件</h2><ul><li><a href="https://atom.io/packages/autocomplete-python">autocomplete-python</a><ul><li>Python 代码自动补全</li></ul></li><li><a href="https://atom.io/packages/linter-pep8">linter-pep8</a><ul><li>Python 编码规范检查</li></ul></li><li><a href="https://atom.io/packages/python-tools">python-tools</a><ul><li>定义跳转插件</li></ul></li><li><a href="https://atom.io/packages/atom-python-run">atom-python-run</a><ul><li>运行 Python 程序</li><li>代码运行：atom-runner （只能输出，不能输入），atom-python-run（Windows，可以输入），python-run-terminalnx（Linux，可以输入）</li></ul></li></ul><h2 id="同步-Atom-的设置"><a href="#同步-Atom-的设置" class="headerlink" title="同步 Atom 的设置"></a>同步 Atom 的设置</h2><ul><li><a href="https://atom.io/packages/sync-settings">sync-settings</a></li></ul><hr><p><strong>更多插件</strong></p><ul><li><a href="https://atom.io/packages/">Atom Package</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Atom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 使用 Tips</title>
      <link href="/posts/Git-Tips.html"/>
      <url>/posts/Git-Tips.html</url>
      
        <content type="html"><![CDATA[<p>一些 Git 技巧。</p><span id="more"></span><h1 id="Git-Diff"><a href="#Git-Diff" class="headerlink" title="Git Diff"></a>Git Diff</h1><ul><li>将自己的分支和其他分支进行对比</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff branch1 branch</span><br></pre></td></tr></table></figure><ul><li>对比暂存区和当前的 HEAD</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff --cached</span><br></pre></td></tr></table></figure><ul><li>普通的git diff命令默认对比的是没有加到索引中的文件。</li></ul><h1 id="恢复暂存区"><a href="#恢复暂存区" class="headerlink" title="恢复暂存区"></a>恢复暂存区</h1><p>如果已经将一些文件添加到暂存区后又后悔了，Git 提供了多个命令来实现这个功能，具体需要根据当时情况而定。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">rm</span> path/to/file --cached</span><br></pre></td></tr></table></figure><ul><li>这个命令将文件从暂存区索引中删除，但是仍然会将文件保留在工作目录。这比直接使用完全删除文件会安全一点。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">rm</span> file -f</span><br></pre></td></tr></table></figure><h1 id="Git-Reset"><a href="#Git-Reset" class="headerlink" title="Git Reset"></a>Git Reset</h1><ul><li>恢复已经提交的改动</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset</span><br></pre></td></tr></table></figure><ul><li><p>这个命令可以完成许多不同的行为，因此需要按照实际场景进行使用。</p></li><li><p>去除所有修改，包括索引中的内容和工作目录中的修改</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard</span><br></pre></td></tr></table></figure><ul><li>重置索引</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --mixed</span><br></pre></td></tr></table></figure><ul><li><p>这也是git reset命令的默认行为。混合的重置会保留当前工作目录中的改动。</p></li><li><p>仅仅修改分支的 HEAD</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --soft</span><br></pre></td></tr></table></figure><ul><li>恢复到指定的提交版本。</li></ul> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard COMMIT_ID</span><br></pre></td></tr></table></figure><h1 id="Git-Stash"><a href="#Git-Stash" class="headerlink" title="Git Stash"></a>Git Stash</h1><ul><li>临时保存未追踪的文件</li></ul><p>&#96;&#96;sh<br>git stash –include-untracked</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 列出临时储藏区中的内容</span><br><span class="line"></span><br><span class="line">```sh</span><br><span class="line">git stash list</span><br></pre></td></tr></table></figure><h1 id="历史记录"><a href="#历史记录" class="headerlink" title="历史记录"></a>历史记录</h1><ul><li>查看项目以及特定文件的变更情况</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> --graph --decorate --oneline</span><br></pre></td></tr></table></figure><ul><li>它可以用于展示经过修饰的提交历史。</li></ul><hr><ul><li><p>git log 命令可以显示 HEAD、所有提交的 ID 以及分支信息。有了这些信息之后</p><ul><li>显示更详细的信息</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git show COMMIT_ID/HEAD/BRANCH</span><br></pre></td></tr></table></figure></li><li><p>查看谁对一个文件做了哪些改动</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git blame path/to/file</span><br></pre></td></tr></table></figure><ul><li>对比当前 HEAD 和前两个提交</li></ul><p>: &#96;&#96;&#96;sh<br>git diff HEAD HEAD~2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 展示每个提交中更详细的更新信息，可以使用</span><br><span class="line"></span><br><span class="line">```sh</span><br><span class="line">git log --patch</span><br></pre></td></tr></table></figure><ul><li>查看包含关键字“apple”的提交</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> --grep apples --oneline</span><br></pre></td></tr></table></figure><ul><li>查看历史提交记录中两个点之间的提交历史</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> HEAD~5..HEAD^ --oneline</span><br></pre></td></tr></table></figure><ul><li>对于分支可以使用</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> branch_name..master --oneline</span><br></pre></td></tr></table></figure><h1 id="修复错误提交"><a href="#修复错误提交" class="headerlink" title="修复错误提交"></a>修复错误提交</h1><ul><li>删除前一次提交，并创建一个新的提交记录以替代之前的提交</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend</span><br></pre></td></tr></table></figure><ul><li>恢复一个有问题的提交</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git revert COMMIT_ID</span><br></pre></td></tr></table></figure><ul><li>会创建一个新的提交，让当前项目状态恢复到指定提交之前。</li><li>如果我们在修复问题时出现了误操作，例如不小心删除了不应该删除的文件。我们还是可以从版本库中恢复回来，因为 git 保存了所有修改的版本，包括被移除的提交。git reflog命令就是用来实现这个功能的。</li></ul><h2 id="提交之前撤销-git-add"><a href="#提交之前撤销-git-add" class="headerlink" title="提交之前撤销 git add"></a>提交之前撤销 git add</h2><ul><li>移除一个文件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset &lt;文件名&gt;</span><br></pre></td></tr></table></figure><ul><li>所有文件</li><li>从暂存区移除所有没有提交的修改</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset</span><br></pre></td></tr></table></figure><h2 id="撤销最近一次代码提交"><a href="#撤销最近一次代码提交" class="headerlink" title="撤销最近一次代码提交"></a>撤销最近一次代码提交</h2><ul><li>提交了错误的文件或一开始就遗漏了某些东西。下面这三步操作可以帮助你解决这个问题。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --soft HEAD~1</span><br></pre></td></tr></table></figure><ul><li>对工作文件进行必要的更改</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add -A .</span><br><span class="line">git commit -c ORIG_HEAD</span><br></pre></td></tr></table></figure><ul><li>你执行第一个命令时，Git会将HEAD指针（pointer）后移到此前的一次提交，之后你才能移动文件或作必要的修改。</li><li>然后你就可以添加所有的修改，而且当你执行最后的命令时，Git会打开你的默认文本编辑器，其中会包含上一次提交时的信息。如果愿意的话，你可以修改提交信息，或者你也可以在最后的命令中使用-C而不是-c，来跳过这一步。</li></ul><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ul><li>修改已经提交的作者和邮箱</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend --author=<span class="string">&quot;vitan &lt;ivitan95@gmail.com&gt;&quot;</span> --no-edit</span><br></pre></td></tr></table></figure><ul><li>修改错误的提交信息<ul><li>必须确保没有对当前的代码库（working copy）做修改，否则这些修改也会随之一起提交。</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend -m ”YOUR-NEW-COMMIT-MESSAGE”</span><br></pre></td></tr></table></figure><ul><li>假如你已经将代码提交（git commit）推送（git push）到了远程分支，那么你需要通过下面的命令强制推送这次的代码提交。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push &lt;remote&gt; &lt;branch&gt; --force</span><br></pre></td></tr></table></figure><hr><p><strong>Via</strong></p><ul><li><a href="https://thecuriousdev.org/useful-git-tips-commands/">Useful Git Tips and Commands</a>有改动</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git commit 规范</title>
      <link href="/posts/Git-Commit.html"/>
      <url>/posts/Git-Commit.html</url>
      
        <content type="html"><![CDATA[<p>Git Commit 规范</p><span id="more"></span><h1 id="Commit-message-格式"><a href="#Commit-message-格式" class="headerlink" title="Commit message 格式"></a>Commit message 格式</h1><p>每次提交，Commit message 都包括三个部分：Header，Body 和 Footer。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span><br><span class="line">// 空一行</span><br><span class="line">&lt;body&gt;</span><br><span class="line">// 空一行s</span><br><span class="line">&lt;footer&gt;</span><br></pre></td></tr></table></figure><ul><li>其中，Header 是必需的，Body 和 Footer 可以省略。<ul><li>不管是哪一个部分，任何一行都不得超过72个字符（或100个字符）。这是为了避免自动换行影响美观。</li></ul></li></ul><h2 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h2><p>Header 部分只有一行，包括三个字段：type（必需）、scope（可选）和subject（必需）。</p><h2 id="type"><a href="#type" class="headerlink" title="type"></a>type</h2><ul><li>type用于说明 commit 的类别，只允许使用下面7个标识。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">feat：新功能（feature）</span><br><span class="line">fix：修补bug</span><br><span class="line">docs：文档（documentation）</span><br><span class="line">style： 格式（不影响代码运行的变动）</span><br><span class="line">refactor：重构（即不是新增功能，也不是修改bug的代码变动）</span><br><span class="line">test：增加测试</span><br><span class="line">chore：构建过程或辅助工具的变动</span><br></pre></td></tr></table></figure><ul><li>如果 type 为 feat 和 fix，则该 commit 将肯定出现在 Change log 之中。其他情况（docs、chore、style、refactor、test）由你决定，要不要放入 Change log，建议是不要。</li></ul><h2 id="scope"><a href="#scope" class="headerlink" title="scope"></a>scope</h2><p>scope用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。</p><h2 id="subject"><a href="#subject" class="headerlink" title="subject"></a>subject</h2><ul><li>subject 是 commit 目的的简短描述，不超过50个字符。<ol><li>以动词开头，使用第一人称现在时，比如change，而不是changed或changes</li><li>第一个字母小写</li><li>结尾不加句号（.）</li></ol></li></ul><h2 id="Body"><a href="#Body" class="headerlink" title="Body"></a>Body</h2><ul><li>Body 部分是对本次 commit 的详细描述，可以分成多行。下面是一个范例。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">More detailed explanatory text, if necessary.  Wrap it to</span><br><span class="line">about 72 characters or so.</span><br><span class="line"></span><br><span class="line">Further paragraphs come after blank lines.</span><br><span class="line"></span><br><span class="line">- Bullet points are okay, too</span><br><span class="line">- Use a hanging indent</span><br></pre></td></tr></table></figure><ul><li>有两个注意点。<ol><li>使用第一人称现在时，比如使用 change 而不是 changed 或 changes。</li><li>应该说明代码变动的动机，以及与以前行为的对比。</li></ol></li></ul><h2 id="Footer"><a href="#Footer" class="headerlink" title="Footer"></a>Footer</h2><ul><li>Footer 部分只用于两种情况。<ol><li>不兼容变动<br>如果当前代码与上一个版本不兼容，则 Footer 部分以 <code>BREAKING CHANGE</code> 开头，后面是对变动的描述、以及变动理由和迁移方法。</li></ol></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">BREAKING CHANGE: isolate scope bindings definition has changed.</span><br><span class="line"></span><br><span class="line">  To migrate the code follow the example below:</span><br><span class="line"></span><br><span class="line">  Before:</span><br><span class="line"></span><br><span class="line">  scope: &#123;</span><br><span class="line">    myAttr: &#x27;attribute&#x27;,</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  After:</span><br><span class="line"></span><br><span class="line">  scope: &#123;</span><br><span class="line">    myAttr: &#x27;@&#x27;,</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  The removed `inject` wasn&#x27;t generaly useful for directives so there should be no code using it.</span><br></pre></td></tr></table></figure><ol start="2"><li>关闭 issue</li></ol><ul><li>如果当前 commit 针对某个issue，那么可以在 Footer 部分关闭这个 issue 。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Closes #234</span><br></pre></td></tr></table></figure><ul><li>一次关闭多个 issue</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Closes #123, #245, #992</span><br></pre></td></tr></table></figure><h2 id="Revert"><a href="#Revert" class="headerlink" title="Revert"></a>Revert</h2><ul><li>还有一种特殊情况，如果当前 commit 用于撤销以前的 commit，则必须以 <code>revert:</code> 开头，后面跟着被撤销 Commit 的 Header。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">revert: feat(pencil): add &#x27;graphiteWidth&#x27; option</span><br><span class="line"></span><br><span class="line">This reverts commit 667ecc1654a317a13331b17617d973392f415f02.</span><br></pre></td></tr></table></figure><ul><li>Body 部分的格式是固定的，必须写成 <code>This reverts commit &amp;lt;hash&gt;.</code>，其中的hash是被撤销 commit 的 SHA 标识符。</li><li>如果当前 commit 与被撤销的 commit，在同一个发布（release）里面，那么它们都不会出现在 Change log 里面。如果两者在不同的发布，那么当前 commit，会出现在 Change log 的 Reverts小标题下面。</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><figure class="highlight plaintext"><figcaption><span>公式</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span><br></pre></td></tr></table></figure><ul><li>type<ul><li>用于说明 commit 的类别，只允许使用下面7个标识。</li></ul></li><li>feat：新功能（feature）</li><li>fix：修补bug</li><li>docs：文档（documentation）</li><li>style： 格式（不影响代码运行的变动）</li><li>refactor：重构（即不是新增功能，也不是修改bug的代码变动）</li><li>test：增加测试</li><li>chore：构建过程或辅助工具的变动</li><li>scope<ul><li>用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。</li></ul></li><li>subject<ul><li>是 commit 目的的简短描述，不超过50个字符。<ol><li>以动词开头，使用第一人称现在时，比如 change，而不是 changed 或 changes</li><li>第一个字母小写</li><li>结尾不加句号（.）</li></ol></li></ul></li></ul><hr><p><strong>Via</strong></p><ul><li><a href="http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html">Commit message 和 Change log 编写指南</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sudo 与 su 的区别</title>
      <link href="/posts/sudo-su-different.html"/>
      <url>/posts/sudo-su-different.html</url>
      
        <content type="html"><![CDATA[<p>sudo su 区别</p><span id="more"></span><h1 id="su"><a href="#su" class="headerlink" title="su"></a>su</h1><p>简介</p><ol><li>su 用于用户之间的切换。但是前面的用户依然保持在登录状态。这种切换如果超级权限用户 root 向普通或虚拟用户切换不需要密码，而普通用户切换到其它任何用户都需要密码验证。</li><li>变更为其他使用者的身份，除 root 外，需要键入该使用者的密码</li></ol><p>语法</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su [选项] [-] [&lt;用户&gt; [&lt;参数&gt;...]]</span><br></pre></td></tr></table></figure><ul><li>选项<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">f  或 --fast</span><br><span class="line"><span class="comment"># 不必读启动档（如 csh.cshrc 等），仅用于 csh 或 tcsh</span></span><br><span class="line">-m -p 或 --preserve-environment</span><br><span class="line"><span class="comment"># 执行 su 时不改变环境变数</span></span><br><span class="line">-c <span class="built_in">command</span> 或 --<span class="built_in">command</span>=<span class="built_in">command</span></span><br><span class="line"><span class="comment"># 变更为帐号为 USER 的使用者并执行指令（command）后再变回原来使用者</span></span><br><span class="line">-s shell 或 --shell=shell</span><br><span class="line"><span class="comment"># 指定要执行的 shell(bash,csh,tcsh等），预设值为 /etc/passwd 内的该使用者(USER) shell</span></span><br><span class="line">--<span class="built_in">help</span> <span class="comment"># 显示说明文件</span></span><br><span class="line">--version <span class="comment"># 显示版本资讯</span></span><br><span class="line">- -l 或 --login</span><br><span class="line"><span class="comment"># 类似重新 login 为该使用者一样，大部份环境变数（HOME SHELL USER等等）</span></span><br><span class="line">都是以该使用者（USER）为主，并且工作目录也会改变，如果没有指定 USER ，内定是 root</span><br><span class="line">USER <span class="comment"># 欲变更的使用者帐号</span></span><br></pre></td></tr></table></figure>su – root 和 su root（su）的区别</li><li><code>su – root</code> 表示人 以root 身份登录</li><li><code>su root</code> 表示与 root 建立一个链接，通过 root 执行命令</li></ul><p>不足</p><ol><li>不安全 su 工具在多人参与的系统管理中，并不是最好的选择，su 只适用于一两个人参与管理的系统，毕竟 su 并不能让普通用户受限的使用；超级用户 root 密码应该掌握在少数用户手中。</li><li>如果某个用户需要使用 root 权限,则必须要把 root 密码告诉此用户。</li></ol><h1 id="sudo"><a href="#sudo" class="headerlink" title="sudo"></a>sudo</h1><p>简介</p><ol><li>为所有想使用 root 权限的普通用户设计的。可以让普通用户具有临时使用root权限的权利。只需输入自己账户的密码即可。个普通用户必须在 &#x2F;etc&#x2F;sudoers 文件中有配置项,才具有使用sudo的权利.</li><li>执行命令的流程是当前用户切换到 root（或其它指定切换到的用户），然后以 root（或其它指定的切换到的用户）身份执行命令，执行完成后，直接退回到当前用户.</li></ol><p>语法</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> 参数</span><br></pre></td></tr></table></figure><ul><li>参数<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-V <span class="comment"># 显示版本编号</span></span><br><span class="line">-h <span class="comment"># 会显示版本编号及指令的使用方式说明</span></span><br><span class="line">-l <span class="comment"># 显示出自己（执行 sudo 的使用者）的权限</span></span><br><span class="line">-v <span class="comment"># sudo 在第一次执行时或是在 N 分钟内没有执行（N 预设为五）会问密码，</span></span><br><span class="line">这个参数是重新做一次确认，如果超过 N 分钟，也会问密码</span><br><span class="line">-k <span class="comment"># 将会强迫使用者在下一次执行 sudo 时问密码（不论有没有超过 N 分钟）</span></span><br><span class="line">-b <span class="comment"># 将要执行的指令放在背景执行</span></span><br><span class="line">-p <span class="comment"># prompt 可以更改问密码的提示语，其中 %u 会代换为使用者的帐号名称， %h 会显示主机名称</span></span><br><span class="line">-u <span class="comment"># username/#uid 不加此参数，代表要以 root 的身份执行指令</span></span><br><span class="line">而加了此参数，可以以 username 的身份执行指令（#uid 为该 username 的使用者号码）</span><br><span class="line">-s <span class="comment"># 执行环境变数中的 SHELL 所指定的 shell ，或是 /etc/passwd 里所指定的 shell</span></span><br><span class="line">-H <span class="comment"># 将环境变数中的 HOME （家目录）指定为要变更身份的使用者家目录</span></span><br><span class="line">（如不加 -u 参数就是系统管理者 root ）</span><br><span class="line"><span class="built_in">command</span> <span class="comment"># 要以系统管理者身份（或以 -u 更改为其他人）执行的指令</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h1><p>总结</p><ul><li>共同点：都是 root 用户的权限；</li><li>不同点：su 仅仅取得 root 权限，工作环境不变，还是在切换之前用户的工作环境；sudo 是完全取得 root 的权限和 root 的工作环境。</li><li>su 用于用户之间的切换。</li><li>sudo 用于普通用户可以使用 root 权限来执行指定命令。</li></ul><hr><p><strong>参考</strong></p><ul><li><a href="https://wanglu.info/1237.html">Linux中su与sudo、su – root的区别</a></li><li><a href="https://www.tecmint.com/difference-between-su-and-su-commands-in-linux/">Learn Difference Between “su” and “su -” Commands in Linux</a></li><li><a href="https://www.jb51.net/LINUXjishu/12713.html">linux su和sudo命令的区别</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 命令连接符</title>
      <link href="/posts/LinuxAnds.html"/>
      <url>/posts/LinuxAnds.html</url>
      
        <content type="html"><![CDATA[<p>Linux 命令连接符</p><span id="more"></span><h1 id="和号操作符"><a href="#和号操作符" class="headerlink" title="和号操作符 (&amp;)"></a>和号操作符 (&amp;)</h1><p><code>&amp;</code> 的作用是使命令在后台运行。只要在命令后面跟上一个空格和 <code>&amp;</code>,可以一口气在后台运行多个命令。</p><ul><li>在后台运行一个命令</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping ­c5 www.tecmint.com</span><br></pre></td></tr></table></figure><ul><li>同时在后台运行两个命令</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp; mkdit <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h1 id="分号操作符（-）"><a href="#分号操作符（-）" class="headerlink" title="分号操作符（;）"></a>分号操作符（;）</h1><p>分号操作符使你可以一口气运行几个命令，命令顺序执行。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update ; apt-get upgrade ; <span class="built_in">mkdir</span> <span class="built_in">test</span></span><br></pre></td></tr></table></figure><ul><li>上述命令先后执行了 update 和 upgrade，最后在当前工作目录下创建了一个 <code>test</code> 文件夹。</li></ul><h1 id="与操作符"><a href="#与操作符" class="headerlink" title="与操作符 (&amp;&amp;)"></a>与操作符 (&amp;&amp;)</h1><p>如果第一个命令执行成功，与操作符 <code>&amp;&amp;</code> 才会执行第二个命令，也就是说，第一个命令退出状态是0。（在UNIX里面，0表示无错误，而所有非0返回值都是各种错误）。这个命令在检查最后一个命令的执行状态时很有用。</p><ul><li>使用links 命令在终端中访问网站 tecmint.com ，但在这之前我需要检查主机是否在线或不在线<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping -c3 www.tecmint.com &amp;&amp; links www.tecmint.com</span><br></pre></td></tr></table></figure></li></ul><h1 id="或操作符"><a href="#或操作符" class="headerlink" title="或操作符 (||)"></a>或操作符 (||)</h1><p>或操作符 <code>||</code> 很像编程中的 <code>else</code> 语句。上面的操作符允许你在第一个命令失败的情况下执行第二个命令，比如，第一个命令的退出状态是1。</p><ul><li>在非root帐户中执行 <code>apt-get update</code> ，如果第一个命令失败了，接着会执行第二个命令 <code>links www.tecmint.com</code> 。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update || links tecmint.com</span><br></pre></td></tr></table></figure><ul><li><p>上面的命令中，由于该用户不允许更新系统，这意味着第一个命令的退出状态是 <code>1</code> ,因此最后一个命令 <code>links tecmint.com</code> 会执行。</p><ul><li>如果第一个命令成功执行并且退出状态是 <code>0</code> 呢？很明显的，第二个命令不会执行。</li></ul></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> <span class="built_in">test</span> || links tecmint.com</span><br></pre></td></tr></table></figure><ul><li>这里，用户在家目录创建了一个 <code>test</code> 文件夹，这是被允许的。命令成功的执行，退出状态是 <code>0</code> ,因此，最后的命令不会执行。</li></ul><h1 id="非操作符"><a href="#非操作符" class="headerlink" title="非操作符 (!)"></a>非操作符 (!)</h1><p>非操作符 <code>!</code> 很像 except 语句。这个命令会执行除了提供的条件外的所有的语句。</p><ul><li>在你的主目录创建一个目录 <code>tecmint</code> ，并 <code>cd</code> 到它这里。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> tecmint</span><br><span class="line"><span class="built_in">cd</span> tecmint</span><br></pre></td></tr></table></figure><ul><li>接下来，在文件夹‘tecmint’下创建不同类型的文件。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> a.doc b.doc a.pdf b.pdf a.xml b.xml a.html b.html</span><br></pre></td></tr></table></figure><ul><li>看一下我们在文件夹 <code>tecmint</code> 创建的新文件。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span></span><br></pre></td></tr></table></figure><blockquote><p>a.doc  a.html  a.pdf  a.xml  b.doc  b.html  b.pdf  b.xml</p></blockquote><ul><li>用一种聪明的办法马上删除除了 ‘html’之外的所有文件。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -r !(*.html)</span><br></pre></td></tr></table></figure><ul><li>验证一下上次的执行结果，使用ls 命令列出可见所有文件。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span></span><br></pre></td></tr></table></figure><blockquote><p>a.html  b.html</p></blockquote><h1 id="与或操作符-–"><a href="#与或操作符-–" class="headerlink" title="与或操作符 (&amp;&amp; – ||)"></a>与或操作符 (&amp;&amp; – ||)</h1><p>上面的操作符实际上是‘与’和‘或’操作符的组合。它很像 <code>if-else</code> 语句。</p><ul><li>ping tecmint.com，如果成功打印‘已验证’，否则打印‘主机故障’。<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping -c3 www.tecmint.com &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;Verified&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Host Down&quot;</span></span><br></pre></td></tr></table></figure></li><li>示例输出</li></ul><blockquote><p>PING <a href="http://www.tecmint.com/">www.tecmint.com</a> (212.71.234.61) 56(84) bytes of data.<br>64 bytes from <a href="http://www.tecmint.com/">www.tecmint.com</a> (212.71.234.61): icmp_req&#x3D;1 ttl&#x3D;55 time&#x3D;216 ms<br>64 bytes from <a href="http://www.tecmint.com/">www.tecmint.com</a> (212.71.234.61): icmp_req&#x3D;2 ttl&#x3D;55 time&#x3D;224 ms<br>64 bytes from <a href="http://www.tecmint.com/">www.tecmint.com</a> (212.71.234.61): icmp_req&#x3D;3 ttl&#x3D;55 time&#x3D;226 ms</p></blockquote><p>— <a href="http://www.tecmint.com/">www.tecmint.com</a> ping statistics —<br>3 packets transmitted, 3 received, 0% packet loss, time 2001ms<br>rtt min&#x2F;avg&#x2F;max&#x2F;mdev &#x3D; 216.960&#x2F;222.789&#x2F;226.423&#x2F;4.199 ms<br>Verified</p><ul><li>断开我们现在的网络连接诶，再试一下相同的命令。<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping -c3 www.tecmint.com &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;verified&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Host Down&quot;</span></span><br></pre></td></tr></table></figure></li><li>实例输出<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ping: unknown host www.tecmint.com</span><br><span class="line">Host Down</span><br></pre></td></tr></table></figure></li></ul><h1 id="管道操作符"><a href="#管道操作符" class="headerlink" title="管道操作符 (|)"></a>管道操作符 (|)</h1><p>PIPE 在将第一个命令的输出作为第二个命令的输入时很有用。</p><ul><li><code>ls -l</code> 的输出通过管道到‘less’，并看一下输出。<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -l | less</span><br></pre></td></tr></table></figure></li></ul><h1 id="命令合并操作符"><a href="#命令合并操作符" class="headerlink" title="命令合并操作符 {}"></a>命令合并操作符 {}</h1><p>合并两个或多个命令，第二个命令依赖于第一个命令的执行。</p><ul><li>检查一下文件‘xyz.txt’是否在Downloads目录下，如果不存在则创建之并输出提示信息。<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ -f /home/tecmint/Downloads/xyz.txt ] || <span class="built_in">touch</span> /home/tecmint/Downloads/xyz.txt; <span class="built_in">echo</span> <span class="string">&quot;The file does not exist&quot;</span></span><br></pre></td></tr></table></figure></li><li>但是这样的命令的运行结果并不如我们预期的运行，会始终都输出提示信息。因此需要使用{}操作符来合并命令：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[ -f /home/tecmint/Downloads/xyz1.txt ] || &#123;<span class="built_in">touch</span> /home/tecmint/Downloads/xyz.txt; <span class="built_in">echo</span> <span class="string">&quot;The file does not exist&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">“The file does not exist”</span><br></pre></td></tr></table></figure></li></ul><h1 id="优先操作符"><a href="#优先操作符" class="headerlink" title="优先操作符 ()"></a>优先操作符 ()</h1><p>这个操作符可以让命令以优先顺序执行。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Command_x1 &amp;&amp;Command_x2 || Command_x3 &amp;&amp; Command_x4</span><br></pre></td></tr></table></figure><ul><li>在上面的伪代码中，如果Command_x1执行失败了会怎么样，Command_x2, Command_x3, Command_x4没有一个会执行，对于这种情况，我们使用优先操作符。<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Command_x1 &amp;&amp;Command_x2) || (Command_x3 &amp;&amp; Command_x4)</span><br></pre></td></tr></table></figure></li><li>在上面的伪代码中，如果Command_x1执行失败，Command_x2不会执行，但是Command_x3会继续执行， Command_x4会依赖于 Command_x3的退出状态。</li></ul><h1 id="连接符"><a href="#连接符" class="headerlink" title="连接符 ($$)"></a>连接符 ($$)</h1><p>连接符 <code>$$</code> 如它名字所说，被用于连接 shell 中那些太长而需要分成多行的命令。</p><ul><li>可以在输入一个 <code>\</code> 之后就回车，然后继续输入命令行，直到输入完成。比如，下面的命令会打开文本文件 test(1).txt。<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="built_in">test</span> \</span><br><span class="line">1.txt</span><br></pre></td></tr></table></figure></li></ul><hr><p><strong>Via</strong></p><ul><li><a href="https://www.tecmint.com/category/linux-commands/">LINUX COMMANDS</a></li><li><a href="https://mp.weixin.qq.com/s/ui-Ey-JYo7X8qlMoP5Llqg">Linux 中命令链接操作符，让你的代码更简洁！</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 各种图</title>
      <link href="/posts/Markdown-Plus.html"/>
      <url>/posts/Markdown-Plus.html</url>
      
        <content type="html"><![CDATA[<p>Markdown 流程图，干特图。</p><span id="more"></span><h1 id="流程图-Flowchart"><a href="#流程图-Flowchart" class="headerlink" title="流程图 (Flowchart)"></a>流程图 (Flowchart)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">    A[Christmas] --&gt;|Get money| B(Go shopping)</span><br><span class="line">    B --&gt; C&#123;Let me think&#125;</span><br><span class="line">    C --&gt;|One| D[Laptop]</span><br><span class="line">    C --&gt;|Two| E[iPhone]</span><br><span class="line">    C --&gt;|Three| F[Car]</span><br></pre></td></tr></table></figure><h1 id="序列图-Sequence-diagram"><a href="#序列图-Sequence-diagram" class="headerlink" title="序列图  (Sequence diagram)"></a>序列图  (Sequence diagram)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    loop every day</span><br><span class="line">        Alice-&gt;&gt;John: Hello John, how are you?</span><br><span class="line">        John--&gt;&gt;Alice: Great!</span><br><span class="line">    end</span><br></pre></td></tr></table></figure><h1 id="甘特图-Gantt-diagram"><a href="#甘特图-Gantt-diagram" class="headerlink" title="甘特图 (Gantt diagram)"></a>甘特图 (Gantt diagram)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">gantt</span><br><span class="line">    dateFormat  YYYY-MM-DD</span><br><span class="line">    title Adding GANTT diagram functionality to mermaid</span><br><span class="line"></span><br><span class="line">    section A section</span><br><span class="line">    Completed task            :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">    Active task               :active,  des2, 2014-01-09, 3d</span><br><span class="line">    Future task               :         des3, after des2, 5d</span><br><span class="line">    Future task2               :         des4, after des3, 5d</span><br><span class="line"></span><br><span class="line">    section Critical tasks</span><br><span class="line">    Completed task in the critical line :crit, done, 2014-01-06,24h</span><br><span class="line">    Implement parser and jison          :crit, done, after des1, 2d</span><br><span class="line">    Create tests for parser             :crit, active, 3d</span><br><span class="line">    Future task in critical line        :crit, 5d</span><br><span class="line">    Create tests for renderer           :2d</span><br><span class="line">    Add to mermaid                      :1d</span><br><span class="line"></span><br><span class="line">    section Documentation</span><br><span class="line">    Describe gantt syntax               :active, a1, after des1, 3d</span><br><span class="line">    Add gantt diagram to demo page      :after a1  , 20h</span><br><span class="line">    Add another diagram to demo page    :doc1, after a1  , 48h</span><br><span class="line"></span><br><span class="line">    section Last section</span><br><span class="line">    Describe gantt syntax               :after doc1, 3d</span><br><span class="line">    Add gantt diagram to demo page      : 20h</span><br><span class="line">    Add another diagram to demo page    : 48h</span><br></pre></td></tr></table></figure><hr><p><strong>参考</strong></p><ul><li><a href="https://mermaidjs.github.io/">Mermaidjs</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Typography </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决 Win10 与 Linux 时间不一致</title>
      <link href="/posts/Linux-Win-Time.html"/>
      <url>/posts/Linux-Win-Time.html</url>
      
        <content type="html"><![CDATA[<p>解决 Win10 与 Linux 时间不一致</p><span id="more"></span><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><h2 id="UTC-与-GMT"><a href="#UTC-与-GMT" class="headerlink" title="UTC 与 GMT"></a>UTC 与 GMT</h2><ol><li>UTC即Universal Time Coordinated，协调世界时（世界统一时间）</li><li>GMT 即Greenwich Mean Time，格林尼治平时</li></ol><h2 id="原因-1"><a href="#原因-1" class="headerlink" title="原因"></a>原因</h2><ul><li>Windows 把计算机硬件时间当作本地时间(local time)，所以在Windows系统中显示的时间跟BIOS中显示的时间是一样的。</li><li>Linux&#x2F;Unix&#x2F;Mac把计算机硬件时间当作 UTC， 所以在Linux&#x2F;Unix&#x2F;Mac系统启动后在该时间的基础上，加上电脑设置的时区数（ 比如我们在中国，它就加上“8” ），因此，Linux&#x2F;Unix&#x2F;Mac系统中显示的时间总是比Windows系统中显示的时间快8个小时。</li><li>所以，当你在Linux&#x2F;Unix&#x2F;Mac系统中，把系统现实的时间设置正确后，其实计算机硬件时间是在这个时间上减去8小时，所以当你切换成Windows系统后，会发现时间慢了8小时。就是这样个原因。</li></ul><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><ul><li>把 Linux 计算机硬件时间改成系统显示的时间，即禁用 UTC<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-local-rtc 1 --adjust-system-clock</span><br></pre></td></tr></table></figure></li></ul><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><ul><li>修改 Windows 对硬件时间的对待方式，让 Windows把硬件时间当作 UTC.<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Reg add HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1</span><br></pre></td></tr></table></figure></li></ul><hr><p><strong>Via</strong></p><ul><li><a href="https://www.zhihu.com/question/46525639">滑稽</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RaspberryPi 安装屏幕触控驱动及设置分辨率</title>
      <link href="/posts/Raspberry-LCD.html"/>
      <url>/posts/Raspberry-LCD.html</url>
      
        <content type="html"><![CDATA[<p>Raspberry Pi 屏幕触控驱动安装及分辨率设置。</p><span id="more"></span><h1 id="触摸驱动"><a href="#触摸驱动" class="headerlink" title="触摸驱动"></a>触摸驱动</h1><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h2><ul><li><a href="https://github.com/goodtft/LCD-show">GitHub 中获取</a></li></ul><h1 id="安装-3-5寸为例"><a href="#安装-3-5寸为例" class="headerlink" title="安装(3.5寸为例)"></a>安装(3.5寸为例)</h1><h2 id="修改-config-配置文件"><a href="#修改-config-配置文件" class="headerlink" title="修改 config 配置文件"></a>修改 config 配置文件</h2><ol><li>烧写系统完成后,将 <code>LCD-show.tar.gz</code> 拷贝到 TF 卡根目录,</li><li>打开 TF 卡根目录的 <code>config.txt</code> 文件并在文件末端加入以下代码,保存并安全弹出 TF 卡:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hdmi_drive=2</span><br><span class="line">hdmi_force_hotplug=1</span><br><span class="line">hdmi_group=2</span><br><span class="line">hdmi_mode=87</span><br><span class="line">hdmi_cvt 480 320 60 6 0 0 0</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /boot</span><br><span class="line">cp LCD-show.tar.gz ~</span><br><span class="line">cd ~</span><br><span class="line">sudo tar zxvf LCD-show.tar.gz</span><br><span class="line">cd LCD-show/</span><br><span class="line">sudo ./MPI3508_480_320-show</span><br></pre></td></tr></table></figure><h1 id="修改分辨率"><a href="#修改分辨率" class="headerlink" title="修改分辨率"></a>修改分辨率</h1><ul><li>终端输入</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /boot/config.txt</span><br></pre></td></tr></table></figure><ul><li>修改</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hdmi_drive=2</span><br><span class="line">hdmi_force_hotplug=1</span><br><span class="line">hdmi_group=2</span><br><span class="line">hdmi_mode=87</span><br><span class="line"># 这里根据分辨率来设置</span><br></pre></td></tr></table></figure><h2 id="分辨率表"><a href="#分辨率表" class="headerlink" title="分辨率表"></a>分辨率表</h2><h3 id="CEA-分辨率-电视规格分辨率"><a href="#CEA-分辨率-电视规格分辨率" class="headerlink" title="CEA 分辨率(电视规格分辨率)"></a>CEA 分辨率(电视规格分辨率)</h3><ul><li>CEA 规定的电视规格分辨率，这些分辨率的 <code>hdmi_group = 1</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">hdmi_mode=1    VGA</span><br><span class="line">hdmi_mode=2    480p  60Hz</span><br><span class="line">hdmi_mode=3    480p  60Hz  H</span><br><span class="line">hdmi_mode=4    720p  60Hz</span><br><span class="line">hdmi_mode=5    1080i 60Hz</span><br><span class="line">hdmi_mode=6    480i  60Hz</span><br><span class="line">hdmi_mode=7    480i  60Hz  H</span><br><span class="line">hdmi_mode=8    240p  60Hz</span><br><span class="line">hdmi_mode=9    240p  60Hz  H</span><br><span class="line">hdmi_mode=10   480i  60Hz  4x</span><br><span class="line">hdmi_mode=11   480i  60Hz  4x H</span><br><span class="line">hdmi_mode=12   240p  60Hz  4x</span><br><span class="line">hdmi_mode=13   240p  60Hz  4x H</span><br><span class="line">hdmi_mode=14   480p  60Hz  2x</span><br><span class="line">hdmi_mode=15   480p  60Hz  2x H</span><br><span class="line">hdmi_mode=16   1080p 60Hz</span><br><span class="line">hdmi_mode=17   576p  50Hz</span><br><span class="line">hdmi_mode=18   576p  50Hz  H</span><br><span class="line">hdmi_mode=19   720p  50Hz</span><br><span class="line">hdmi_mode=20   1080i 50Hz</span><br><span class="line">hdmi_mode=21   576i  50Hz</span><br><span class="line">hdmi_mode=22   576i  50Hz  H</span><br><span class="line">hdmi_mode=23   288p  50Hz</span><br><span class="line">hdmi_mode=24   288p  50Hz  H</span><br><span class="line">hdmi_mode=25   576i  50Hz  4x</span><br><span class="line">hdmi_mode=26   576i  50Hz  4x H</span><br><span class="line">hdmi_mode=27   288p  50Hz  4x</span><br><span class="line">hdmi_mode=28   288p  50Hz  4x H</span><br><span class="line">hdmi_mode=29   576p  50Hz  2x</span><br><span class="line">hdmi_mode=30   576p  50Hz  2x H</span><br><span class="line">hdmi_mode=31   1080p 50Hz</span><br><span class="line">hdmi_mode=32   1080p 24Hz</span><br><span class="line">hdmi_mode=33   1080p 25Hz</span><br><span class="line">hdmi_mode=34   1080p 30Hz</span><br><span class="line">hdmi_mode=35   480p  60Hz  4x</span><br><span class="line">hdmi_mode=36   480p  60Hz  4xH</span><br><span class="line">hdmi_mode=37   576p  50Hz  4x</span><br><span class="line">hdmi_mode=38   576p  50Hz  4x H</span><br><span class="line">hdmi_mode=39   1080i 50Hz  reduced blanking</span><br><span class="line">hdmi_mode=40   1080i 100Hz</span><br><span class="line">hdmi_mode=41   720p  100Hz</span><br><span class="line">hdmi_mode=42   576p  100Hz</span><br><span class="line">hdmi_mode=43   576p  100Hz H</span><br><span class="line">hdmi_mode=44   576i  100Hz</span><br><span class="line">hdmi_mode=45   576i  100Hz H</span><br><span class="line">hdmi_mode=46   1080i 120Hz</span><br><span class="line">hdmi_mode=47   720p  120Hz</span><br><span class="line">hdmi_mode=48   480p  120Hz</span><br><span class="line">hdmi_mode=49   480p  120Hz H</span><br><span class="line">hdmi_mode=50   480i  120Hz</span><br><span class="line">hdmi_mode=51   480i  120Hz H</span><br><span class="line">hdmi_mode=52   576p  200Hz</span><br><span class="line">hdmi_mode=53   576p  200Hz H</span><br><span class="line">hdmi_mode=54   576i  200Hz</span><br><span class="line">hdmi_mode=55   576i  200Hz H</span><br><span class="line">hdmi_mode=56   480p  240Hz</span><br><span class="line">hdmi_mode=57   480p  240Hz H</span><br><span class="line">hdmi_mode=58   480i  240Hz</span><br><span class="line">hdmi_mode=59   480i  240Hz H</span><br><span class="line">H means 16:9 variant (of a normally 4:3 mode).</span><br><span class="line">2x means pixel doubled (i.e. higher clock rate, with each pixel repeated twice)</span><br><span class="line">4x means pixel quadrupled (i.e. higher clock rate, with each pixel repeated four times)</span><br></pre></td></tr></table></figure><h3 id="DMT分辨率-计算机显示器"><a href="#DMT分辨率-计算机显示器" class="headerlink" title="DMT分辨率(计算机显示器)"></a>DMT分辨率(计算机显示器)</h3><ul><li>以下的英文计算机显示器使用的分辨率,这些分辨率的 <code>hdmi_group = 2</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">hdmi_mode=1    640x350   85Hz</span><br><span class="line">hdmi_mode=2    640x400   85Hz</span><br><span class="line">hdmi_mode=3    720x400   85Hz</span><br><span class="line">hdmi_mode=4    640x480   60Hz</span><br><span class="line">hdmi_mode=5    640x480   72Hz</span><br><span class="line">hdmi_mode=6    640x480   75Hz</span><br><span class="line">hdmi_mode=7    640x480   85Hz</span><br><span class="line">hdmi_mode=8    800x600   56Hz</span><br><span class="line">hdmi_mode=9    800x600   60Hz</span><br><span class="line">hdmi_mode=10   800x600   72Hz</span><br><span class="line">hdmi_mode=11   800x600   75Hz</span><br><span class="line">hdmi_mode=12   800x600   85Hz</span><br><span class="line">hdmi_mode=13   800x600   120Hz</span><br><span class="line">hdmi_mode=14   848x480   60Hz</span><br><span class="line">hdmi_mode=15   1024x768  43Hz  DO NOT USE</span><br><span class="line">hdmi_mode=16   1024x768  60Hz</span><br><span class="line">hdmi_mode=17   1024x768  70Hz</span><br><span class="line">hdmi_mode=18   1024x768  75Hz</span><br><span class="line">hdmi_mode=19   1024x768  85Hz</span><br><span class="line">hdmi_mode=20   1024x768  120Hz</span><br><span class="line">hdmi_mode=21   1152x864  75Hz</span><br><span class="line">hdmi_mode=22   1280x768        reduced blanking</span><br><span class="line">hdmi_mode=23   1280x768  60Hz</span><br><span class="line">hdmi_mode=24   1280x768  75Hz</span><br><span class="line">hdmi_mode=25   1280x768  85Hz</span><br><span class="line">hdmi_mode=26   1280x768  120Hz reduced blanking</span><br><span class="line">hdmi_mode=27   1280x800        reduced blanking</span><br><span class="line">hdmi_mode=28   1280x800  60Hz</span><br><span class="line">hdmi_mode=29   1280x800  75Hz</span><br><span class="line">hdmi_mode=30   1280x800  85Hz</span><br><span class="line">hdmi_mode=31   1280x800  120Hz reduced blanking</span><br><span class="line">hdmi_mode=32   1280x960  60Hz</span><br><span class="line">hdmi_mode=33   1280x960  85Hz</span><br><span class="line">hdmi_mode=34   1280x960  120Hz reduced blanking</span><br><span class="line">hdmi_mode=35   1280x1024 60Hz</span><br><span class="line">hdmi_mode=36   1280x1024 75Hz</span><br><span class="line">hdmi_mode=37   1280x1024 85Hz</span><br><span class="line">hdmi_mode=38   1280x1024 120Hz reduced blanking</span><br><span class="line">hdmi_mode=39   1360x768  60Hz</span><br><span class="line">hdmi_mode=40   1360x768  120Hz reduced blanking</span><br><span class="line">hdmi_mode=41   1400x1050       reduced blanking</span><br><span class="line">hdmi_mode=42   1400x1050 60Hz</span><br><span class="line">hdmi_mode=43   1400x1050 75Hz</span><br><span class="line">hdmi_mode=44   1400x1050 85Hz</span><br><span class="line">hdmi_mode=45   1400x1050 120Hz reduced blanking</span><br><span class="line">hdmi_mode=46   1440x900        reduced blanking</span><br><span class="line">hdmi_mode=47   1440x900  60Hz</span><br><span class="line">hdmi_mode=48   1440x900  75Hz</span><br><span class="line">hdmi_mode=49   1440x900  85Hz</span><br><span class="line">hdmi_mode=50   1440x900  120Hz reduced blanking</span><br><span class="line">hdmi_mode=51   1600x1200 60Hz</span><br><span class="line">hdmi_mode=52   1600x1200 65Hz</span><br><span class="line">hdmi_mode=53   1600x1200 70Hz</span><br><span class="line">hdmi_mode=54   1600x1200 75Hz</span><br><span class="line">hdmi_mode=55   1600x1200 85Hz</span><br><span class="line">hdmi_mode=56   1600x1200 120Hz reduced blanking</span><br><span class="line">hdmi_mode=57   1680x1050       reduced blanking</span><br><span class="line">hdmi_mode=58   1680x1050 60Hz</span><br><span class="line">hdmi_mode=59   1680x1050 75Hz</span><br><span class="line">hdmi_mode=60   1680x1050 85Hz</span><br><span class="line">hdmi_mode=61   1680x1050 120Hz reduced blanking</span><br><span class="line">hdmi_mode=62   1792x1344 60Hz</span><br><span class="line">hdmi_mode=63   1792x1344 75Hz</span><br><span class="line">hdmi_mode=64   1792x1344 120Hz reduced blanking</span><br><span class="line">hdmi_mode=65   1856x1392 60Hz</span><br><span class="line">hdmi_mode=66   1856x1392 75Hz</span><br><span class="line">hdmi_mode=67   1856x1392 120Hz reduced blanking</span><br><span class="line">hdmi_mode=68   1920x1200       reduced blanking</span><br><span class="line">hdmi_mode=69   1920x1200 60Hz</span><br><span class="line">hdmi_mode=70   1920x1200 75Hz</span><br><span class="line">hdmi_mode=71   1920x1200 85Hz</span><br><span class="line">hdmi_mode=72   1920x1200 120Hz reduced blanking</span><br><span class="line">hdmi_mode=73   1920x1440 60Hz</span><br><span class="line">hdmi_mode=74   1920x1440 75Hz</span><br><span class="line">hdmi_mode=75   1920x1440 120Hz reduced blanking</span><br><span class="line">hdmi_mode=76   2560x1600       reduced blanking</span><br><span class="line">hdmi_mode=77   2560x1600 60Hz</span><br><span class="line">hdmi_mode=78   2560x1600 75Hz</span><br><span class="line">hdmi_mode=79   2560x1600 85Hz</span><br><span class="line">hdmi_mode=80   2560x1600 120Hz reduced blanking</span><br><span class="line">hdmi_mode=81   1366x768  60Hz</span><br><span class="line">hdmi_mode=82   1080p     60Hz</span><br><span class="line">hdmi_mode=83   1600x900        reduced blanking</span><br><span class="line">hdmi_mode=84   2048x1152       reduced blanking</span><br><span class="line">hdmi_mode=85   720p      60Hz</span><br><span class="line">hdmi_mode=86   1366x768        reduced blanking</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> RaspberryPi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ArchLinux 显卡驱动</title>
      <link href="/posts/ArchLinux-Nvidia.html"/>
      <url>/posts/ArchLinux-Nvidia.html</url>
      
        <content type="html"><![CDATA[<p>ArchLinux 双显卡驱动。</p><span id="more"></span><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="Nvidia-和-xorg-xrandr"><a href="#Nvidia-和-xorg-xrandr" class="headerlink" title="Nvidia 和 xorg-xrandr"></a>Nvidia 和 xorg-xrandr</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S nvidia nvidia-settings xorg-xrandr</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>获取显卡 PCI 地址</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lspci | grep -E <span class="string">&quot;VGA|3D&quot;</span></span><br></pre></td></tr></table></figure><p>地址转换</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">01:00.0 --&gt; 1:0:0 <span class="comment"># 转换示例</span></span><br></pre></td></tr></table></figure><p>配置 xorg.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/X11/xorg.conf</span><br></pre></td></tr></table></figure><ul><li>添加<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  Section <span class="string">&quot;Module&quot;</span></span><br><span class="line">Load <span class="string">&quot;modesetting&quot;</span></span><br><span class="line">EndSection</span><br><span class="line"></span><br><span class="line">Section <span class="string">&quot;Device&quot;</span></span><br><span class="line">Identifier <span class="string">&quot;nvidia&#x27;&quot;</span></span><br><span class="line">Driver <span class="string">&quot;nvidia&quot;</span></span><br><span class="line">BusID <span class="string">&quot;1:0:0&quot;</span></span><br><span class="line">Option <span class="string">&quot;AllowEmptyInitialConfiguration&quot;</span></span><br><span class="line">EndSection</span><br></pre></td></tr></table></figure></li></ul><h1 id="各桌面配置-Display-Managers"><a href="#各桌面配置-Display-Managers" class="headerlink" title="各桌面配置 (Display Managers)"></a>各桌面配置 (Display Managers)</h1><h2 id="SDDM-Plasma"><a href="#SDDM-Plasma" class="headerlink" title="SDDM (Plasma)"></a>SDDM (Plasma)</h2><p>启动管理器编辑脚本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /usr/share/sddm/scripts/Xsetup</span><br></pre></td></tr></table></figure><ul><li>添加<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xrandr --setprovideroutputsource modesetting NVIDIA-0</span><br><span class="line">xrandr --auto</span><br></pre></td></tr></table></figure></li></ul><h2 id="LightDM-Deepin"><a href="#LightDM-Deepin" class="headerlink" title="LightDM (Deepin)"></a>LightDM (Deepin)</h2><p>配置</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/lightdm/display_setup.sh</span><br></pre></td></tr></table></figure><ul><li>添加</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">xrandr --setprovideroutputsource modesetting NVIDIA-0</span><br><span class="line">xrandr --auto</span><br></pre></td></tr></table></figure><ul><li>chmod 权限</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /etc/lightdm/display_setup.sh</span><br></pre></td></tr></table></figure><p>配置脚本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/lightdm/lightdm.conf</span><br></pre></td></tr></table></figure><ul><li>添加</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Seat:*]</span><br><span class="line">display-setup-script=/etc/lightdm/display_setup.sh</span><br></pre></td></tr></table></figure><h2 id="GDM-Gnome"><a href="#GDM-Gnome" class="headerlink" title="GDM (Gnome)"></a>GDM (Gnome)</h2><p>创建两个新的 .desktop 文件</p><ul><li>&#x2F;usr&#x2F;share&#x2F;gdm&#x2F;greeter&#x2F;autostart&#x2F;optimus.desktop 下创建</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /usr/share/gdm/greeter/autostart/optimus.desktop</span><br></pre></td></tr></table></figure><ul><li>添加</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Type=Application</span><br><span class="line">Name=Optimus</span><br><span class="line">Exec=sh -c <span class="string">&quot;xrandr --setprovideroutputsource modesetting NVIDIA-0; xrandr --auto&quot;</span></span><br><span class="line">NoDisplay=<span class="literal">true</span></span><br><span class="line">X-GNOME-Autostart-Phase=DisplayServer</span><br></pre></td></tr></table></figure><ul><li>&#x2F;etc&#x2F;xdg&#x2F;autostart&#x2F;optimus.desktop 下创建</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/xdg/autostart/optimus.desktop</span><br></pre></td></tr></table></figure><ul><li>添加</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Type=Application</span><br><span class="line">Name=Optimus</span><br><span class="line">Exec=sh -c <span class="string">&quot;xrandr --setprovideroutputsource modesetting NVIDIA-0; xrandr --auto&quot;</span></span><br><span class="line">NoDisplay=<span class="literal">true</span></span><br><span class="line">X-GNOME-Autostart-Phase=DisplayServer</span><br></pre></td></tr></table></figure><p>确保 GDM 使用 X 作为默认后端</p><ul><li>Gnome 默认使用 Wayland 作为后端，只有 Wayland 后端无法启动时才使用 Xorg 后端。</li><li>修改为 X</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/gdm/custom.conf</span><br></pre></td></tr></table></figure><ul><li>取消以下注释</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#WaylandEnable=false</span></span><br></pre></td></tr></table></figure><p>解决错误提示</p><ul><li>删除主用户 “gdm”，删除组 “gdm”</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> userdel gdm</span><br><span class="line"><span class="built_in">sudo</span> groupdel gdm</span><br></pre></td></tr></table></figure><p>GDM使用单独的 dconf 数据库来控制电源管理</p><ul><li>通过将用户设置复制到 GDM 的 dconf 数据库，可以使 GDM 的行为与用户会话相同。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IFS=$<span class="string">&#x27;\n&#x27;</span>; <span class="keyword">for</span> x <span class="keyword">in</span> $(<span class="built_in">sudo</span> -u YOUR_USER gsettings list-recursively org.gnome.settings-daemon.plugins.power); <span class="keyword">do</span> <span class="built_in">eval</span> <span class="string">&quot;sudo -u gdm dbus-launch gsettings set <span class="variable">$x</span>&quot;</span>; <span class="keyword">done</span>; <span class="built_in">unset</span> IFS</span><br></pre></td></tr></table></figure><ul><li>或者简单地禁用自动挂起(在电池上运行时，也可以用 ac 替换电池来禁用它)：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> -u gdm dbus-launch gsettings <span class="built_in">set</span> org.gnome.settings-daemon.plugins.power sleep-inactive-ac-type <span class="string">&#x27;nothing&#x27;</span></span><br></pre></td></tr></table></figure><hr><p><strong>参考</strong></p><ul><li><a href="https://wiki.archlinux.org/index.php/NVIDIA_Optimus#Display_Managers">NVIDIA Optimus</a></li><li><a href="https://wiki.archlinux.org/index.php/GDM#Use_Xorg_backend">GDM</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派获取 IP 地址</title>
      <link href="/posts/RaspberryIp.html"/>
      <url>/posts/RaspberryIp.html</url>
      
        <content type="html"><![CDATA[<p>树莓派获取 IP </p><span id="more"></span><h1 id="有显示器"><a href="#有显示器" class="headerlink" title="有显示器"></a>有显示器</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br><span class="line">hostname -I</span><br></pre></td></tr></table></figure><h1 id="无显示器有路由器"><a href="#无显示器有路由器" class="headerlink" title="无显示器有路由器"></a>无显示器有路由器</h1><ul><li>连接路由器后<a href="http://192.168.1.1/">登陆路由器管理界</a>面查看即可。</li></ul><h1 id="只有电脑"><a href="#只有电脑" class="headerlink" title="只有电脑"></a>只有电脑</h1><ul><li>网线直接把树莓派与电脑连接起来</li><li>电脑需要连 WiFi</li><li>在 设置-&gt;网络-&gt;Wlan-&gt;网络与共享中心-&gt;Wlan-&gt;属性-&gt;共享-&gt;允许​其它用户通过它来连接-&gt;确定。</li><li>CMD 查看 IP</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping raspberrypi.local</span><br></pre></td></tr></table></figure><ul><li>改变了树莓派的主机名字，Avahi 也将改变 .local 的 DNS 多播地址</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arp -a</span><br><span class="line"><span class="comment"># 通常以192.168开头，最后一位是1</span></span><br></pre></td></tr></table></figure><h1 id="只有手机（安卓）"><a href="#只有手机（安卓）" class="headerlink" title="只有手机（安卓）"></a>只有手机（安卓）</h1><ul><li>USB 共享的网络</li><li>开启热点</li><li>使用局域网扫描软件(<a href="https://play.google.com/store/apps/details?id=com.overlook.android.fing">Find</a>,IpScanner,Es文件管理器…)查询 IP</li></ul><hr><p><strong>参考</strong></p><ul><li><a href="https://blog.csdn.net/wongnoubo/article/details/79628313">查看树莓派ip地址的几种方法</a></li><li><a href="https://www.jianshu.com/p/f2e0a02c01d9">树莓派获取ip地址的N种方法</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> RaspberryPi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ArchLinux Pacman 命令</title>
      <link href="/posts/ArchLinux-command.html"/>
      <url>/posts/ArchLinux-command.html</url>
      
        <content type="html"><![CDATA[<p>pacman 软件包管理器</p><span id="more"></span><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="安装指定的包"><a href="#安装指定的包" class="headerlink" title="安装指定的包"></a>安装指定的包</h2><p>安装或者升级单个软件包，或者一列软件包（包含依赖包）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S package_name1 package_name2 ...</span><br></pre></td></tr></table></figure><p>用正则表达式安装多个软件包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S $(pacman -Ssq package_regex)</span><br></pre></td></tr></table></figure><ul><li><a href="https://wiki.archlinux.org/index.php/Pacman/Tips_and_tricks">pacman&#x2F;Tips and tricks</a></li></ul><p>选择仓库按照</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S extra/package_name</span><br></pre></td></tr></table></figure><p>安装多个含有相似名称的软件包，而并非整个包组或全部匹配的软件包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S plasma-&#123;desktop,mediacenter,nm&#125;</span><br></pre></td></tr></table></figure><p>多层扩展</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S plasma-&#123;workspace&#123;,-wallpapers&#125;,pa&#125;</span><br></pre></td></tr></table></figure><p>安装包组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S gnome</span><br></pre></td></tr></table></figure><ul><li><a href="https://wiki.archlinux.org/index.php/Creating_packages#Meta_packages_and_groups">包组</a></li></ul><h2 id="删除软件包"><a href="#删除软件包" class="headerlink" title="删除软件包"></a>删除软件包</h2><p>删除但保留依赖关系</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -R package_name</span><br></pre></td></tr></table></figure><p>删除指定软件包，及其所有没有被其他已安装软件包使用的依赖关系</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Rs package_name</span><br></pre></td></tr></table></figure><p>删除软件包和所有依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Rsc package_name</span><br></pre></td></tr></table></figure><p>删除但不删除依赖这个软件包的其他程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Rdd package_name</span><br></pre></td></tr></table></figure><h2 id="升级软件包"><a href="#升级软件包" class="headerlink" title="升级软件包"></a>升级软件包</h2><p>升级整个系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Syu</span><br></pre></td></tr></table></figure><h2 id="查询包数据库"><a href="#查询包数据库" class="headerlink" title="查询包数据库"></a>查询包数据库</h2><ol><li><p>pacman 使用 -Q 参数查询本地软件包数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Q --<span class="built_in">help</span></span><br></pre></td></tr></table></figure></li><li><p>使用 -S 参数来查询远程同步的数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S --<span class="built_in">help</span></span><br></pre></td></tr></table></figure></li><li><p>pacman 可以在包数据库中查询软件包，查询位置包含了软件包的名字和描述</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Ss string1 string2 ...</span><br></pre></td></tr></table></figure></li><li><p>有时，-s的内置正则会匹配很多不需要的结果，所以应当指定仅搜索包名，而非描述或其他子段，下面的命令就会返回很多不必要结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Ss <span class="string">&#x27;^vim-&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>要查询已安装的软件包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Qs string1 string2 ...</span><br></pre></td></tr></table></figure></li><li><p>按文件名查找软件库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Fs string1 string2 ...</span><br></pre></td></tr></table></figure></li><li><p>显示软件包的详尽的信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Si package_name</span><br></pre></td></tr></table></figure></li><li><p>查询本地安装包的详细信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Qi package_name</span><br></pre></td></tr></table></figure></li><li><p>使用两个 -i 将同时显示备份文件和修改状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Qii package_name</span><br></pre></td></tr></table></figure></li><li><p>要获取已安装软件包所包含文件的列表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Ql package_name</span><br></pre></td></tr></table></figure></li><li><p>查询远程库中软件包包含的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Fl package_name</span><br></pre></td></tr></table></figure></li><li><p>检查软件包安装的文件是否都存在：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Qk package_name</span><br></pre></td></tr></table></figure></li><li><p>两个参数k将会执行一次更彻底的检查。 查询数据库获取某个文件属于哪个软件包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Qo /path/to/file_name</span><br></pre></td></tr></table></figure></li><li><p>查询文件属于远程数据库中的哪个软件包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Fo /path/to/file_name</span><br></pre></td></tr></table></figure></li><li><p>要罗列所有不再作为依赖的软件包(孤立orphans)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Qdt</span><br></pre></td></tr></table></figure></li><li><p>要罗列所有明确安装而且不被其它包依赖的软件包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Qet</span><br></pre></td></tr></table></figure></li><li><p>要显示软件包的依赖树：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pactree package_name</span><br></pre></td></tr></table></figure></li><li><p>检查一个安装的软件包被那些包依赖，可以使用 pkgtoolsAUR中的whoneeds:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whoneeds package_name</span><br></pre></td></tr></table></figure></li></ol><ul><li>或者pactree中使用-r:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pactree -r package_name</span><br></pre></td></tr></table></figure></li></ul><h2 id="数据库结构"><a href="#数据库结构" class="headerlink" title="数据库结构"></a>数据库结构</h2><p>pacman数据库通常位于 <code>/var/lib/pacman/sync</code>. 对于每一个在 <code>/etc/pacman.conf</code> 中指定的软件仓库， 这里都有一个一致的数据库。数据库文件夹里每个 <code>tar.gz</code> 文件都包含着一个仓库的软件包信息。例如which 包:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">% tree which-2.20-6</span><br><span class="line">which-2.20-6</span><br><span class="line">|-- depends</span><br><span class="line">`-- desc</span><br></pre></td></tr></table></figure><ul><li>这个 depends 项列出了该软件的依赖包， 而desc有该包的介绍，例如文件大小和MD5值 。</li></ul><h2 id="清理软件包缓存"><a href="#清理软件包缓存" class="headerlink" title="清理软件包缓存"></a>清理软件包缓存</h2><p> pacman 将下载的软件包保存在 <code>/var/cache/pacman/pkg/</code> 并且不会自动移除旧的和未安装版本的软件包，因此需要手动清理，以免该文件夹过于庞大。</p><p>使用内建选项即可清除未安装软件包的缓存：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Sc</span><br></pre></td></tr></table></figure><ul><li>pacman 提供的 paccache 命令默认会删除近3个版本前的软件包</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paccache -r</span><br></pre></td></tr></table></figure><ul><li>Tip: 可以使用 pacman hooks 自动执行清理，这里是<a href="https://bbs.archlinux.org/viewtopic.php?pid=1694743#p1694743">参考示例</a>。</li><li>也可以自己设置保留最近几个版本：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paccache -rk 1</span><br></pre></td></tr></table></figure><p>清理所有未安装包的缓存文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paccache -ruk0</span><br></pre></td></tr></table></figure><h1 id="其它命令"><a href="#其它命令" class="headerlink" title="其它命令"></a>其它命令</h1><p>升级系统时安装其他软件包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Syu package_name1 package_name2 ...</span><br></pre></td></tr></table></figure><p>下载包而不安装它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Sw package_name</span><br></pre></td></tr></table></figure><p>安装一个本地包(不从源里下载）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -U /path/to/package/package_name-version.pkg.tar.xz</span><br></pre></td></tr></table></figure><p>要将本地包保存至缓存，可执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -U file://path/to/package/package_name-version.pkg.tar.xz</span><br></pre></td></tr></table></figure><p>安装一个远程包（不在 pacman 配置的源里面）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -U http://www.example.com/repo/example.pkg.tar.xz</span><br></pre></td></tr></table></figure><ul><li>要禁用 <code>-S</code>, <code>-U</code> 和 <code>-R</code> 动作，可以使用 <code>-p</code> 选项.</li></ul><hr><p><strong>Via</strong></p><ul><li><a href="https://wiki.archlinux.org/index.php/Pacman_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Pacman</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 安装微信 QQ</title>
      <link href="/posts/linux-WeChat-QQ.html"/>
      <url>/posts/linux-WeChat-QQ.html</url>
      
        <content type="html"><![CDATA[<p>Linux 安装 QQ WeChat Tim.</p><span id="more"></span><h1 id="ArchLinux"><a href="#ArchLinux" class="headerlink" title="ArchLinux"></a>ArchLinux</h1><h2 id="添加-archlinuxcn-源"><a href="#添加-archlinuxcn-源" class="headerlink" title="添加 archlinuxcn 源"></a>添加 archlinuxcn 源</h2><ul><li>编辑 pacman.conf</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/pacman.conf</span><br></pre></td></tr></table></figure><ul><li>添加</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">SigLevel = Optional TrustAll</span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S wine</span><br><span class="line"><span class="built_in">sudo</span> pacman -S deepin.com.qq.im</span><br><span class="line"><span class="built_in">sudo</span> pacman -S deepin.com.qq.office</span><br><span class="line"><span class="built_in">sudo</span> pacman -S deepin.com.wechat</span><br><span class="line"><span class="built_in">sudo</span> pacman -S netease-cloud-music</span><br></pre></td></tr></table></figure><ul><li>ArchLinux 系发行版包括 ArchLinux、Manjaro、Antergos 等.</li></ul><h2 id="配置分辨率"><a href="#配置分辨率" class="headerlink" title="配置分辨率"></a>配置分辨率</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">env</span> WINEPREFIX=<span class="string">&quot;<span class="variable">$HOME</span>/.deepinwine/Deepin-WeChat&quot;</span> winecfg</span><br><span class="line"><span class="built_in">env</span> WINEPREFIX=<span class="string">&quot;<span class="variable">$HOME</span>/.deepinwine/Deepin-TIM&quot;</span> winecfg</span><br><span class="line"><span class="built_in">env</span> WINEPREFIX=<span class="string">&quot;<span class="variable">$HOME</span>/.deepinwine/Deepin-QQ&quot;</span> winecfg</span><br></pre></td></tr></table></figure><h1 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h1><h2 id="Deepin-wine-环境"><a href="#Deepin-wine-环境" class="headerlink" title="Deepin-wine 环境"></a>Deepin-wine 环境</h2><p>方法一</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> <span class="string">&#x27;https://gitee.com/wszqkzqk/deepin-wine-for-ubuntu.git</span></span><br><span class="line"><span class="string"># 克隆到本地，用图形界面的软件包管理器安装所有 deb 文件</span></span><br></pre></td></tr></table></figure><p>方法二</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitee.com/wszqkzqk/deepin-wine-for-ubuntu.git</span><br><span class="line"><span class="built_in">sudo</span> sh ./install.sh</span><br><span class="line"><span class="comment"># 克隆到本地,(授予可执行权限后)在终端中运行 install.sh .</span></span><br></pre></td></tr></table></figure><h2 id="Deepin-com-应用容器"><a href="#Deepin-com-应用容器" class="headerlink" title="Deepin.com 应用容器"></a>Deepin.com 应用容器</h2><ul><li>自行到<a href="http://mirrors.aliyun.com/deepin/pool/non-free/d/">阿里镜像</a>中下载想要的容器安装运行即可(容器建议使用命令安装)。</li><li>推荐容器<ul><li>QQ:<a href="http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.qq.im/">http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.qq.im/</a></li><li>TIM:<a href="http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.qq.office/">http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.qq.office/</a></li><li>QQ轻聊版:<a href="http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.qq.im.light/">http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.qq.im.light/</a></li><li>微信:<a href="http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.wechat/">http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.wechat/</a></li><li>Foxmail:<a href="http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.foxmail/">http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.foxmail/</a></li><li>百度网盘:<a href="http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.baidu.pan/">http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.baidu.pan/</a></li></ul></li><li>Ubuntu 系发行版包括Ubuntu、LinuxMint、ZorinOS 等.</li></ul><hr><p><strong>参考</strong></p><ul><li><a href="https://github.com/wszqkzqk/deepin-wine-ubuntu">Deepin wine for ubuntu</a>    </li><li><a href="https://www.lulinux.com/archives/1319">多发行版通过！目前Linux上真正完美稳定的wine QQ方案</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ArchLinux 安装及优化</title>
      <link href="/posts/ArchLinux.html"/>
      <url>/posts/ArchLinux.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>ArchLinux 安装及优化配置。</p></blockquote><h1 id="准备镜像"><a href="#准备镜像" class="headerlink" title="准备镜像"></a>准备镜像</h1><p><a href="https://www.archlinux.org/download/">下载 ISO</a> 并使用 <a href="https://rufus.ie/">Rufus</a> 或其他工具烧录镜像制作启动盘。Linux 下推荐用 DD 模式,开机选择烧录好的U盘进行引导进入安装。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dd</span> bs=4M <span class="keyword">if</span>=/home/download/archlinux.iso of=/dev/sdX  status=progress &amp;&amp; <span class="built_in">sync</span></span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="进行联网"><a href="#进行联网" class="headerlink" title="进行联网"></a>进行联网</h2><ul><li>WiFi 连接</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wifi-menu</span><br></pre></td></tr></table></figure><ul><li>PPOE 连接</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pppoe-setup</span><br></pre></td></tr></table></figure><ul><li>ADSL 连接</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start adsl</span><br></pre></td></tr></table></figure><ul><li>测试网络</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping www.vitan.me</span><br></pre></td></tr></table></figure><h2 id="更新系统时钟"><a href="#更新系统时钟" class="headerlink" title="更新系统时钟"></a>更新系统时钟</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-ntp <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="更换国内源"><a href="#更换国内源" class="headerlink" title="更换国内源"></a>更换国内源</h2><p>将 China 开头一下两行剪切到 ustc 最第一行，技巧(光标在 China 下，按2后 dd 最后 p 粘贴)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/pacman.d/mirrorlist</span><br></pre></td></tr></table></figure><h2 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h2><h3 id="分区方案"><a href="#分区方案" class="headerlink" title="分区方案"></a>分区方案</h3><table><thead><tr><th align="left">分区</th><th align="left">大小</th><th align="left">类型</th></tr></thead><tbody><tr><td align="left">boot</td><td align="left">512M</td><td align="left">EFI System</td></tr><tr><td align="left">swap</td><td align="left">8G</td><td align="left">Linux Swap</td></tr><tr><td align="left">&#x2F;</td><td align="left">75G</td><td align="left">Linux filesystem</td></tr><tr><td align="left">home</td><td align="left">65G</td><td align="left">Linux Homme</td></tr></tbody></table><h3 id="查看启动模式"><a href="#查看启动模式" class="headerlink" title="查看启动模式"></a>查看启动模式</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> /sys/firmware/efi/efivars</span><br></pre></td></tr></table></figure><p>如果提示不存在这个文件，那就说明我们的启动模式是 BIOS，否则就是 UEFI。BIOS 和 UEFI 的分区会有点不同，老铁们请移步查看 <a href="https://wiki.archlinux.org/index.php/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">archlinux wiki</a></p><h3 id="MBR-分区-BIOS-分区"><a href="#MBR-分区-BIOS-分区" class="headerlink" title="MBR 分区(BIOS 分区)"></a>MBR 分区(BIOS 分区)</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cfdisk /dev/sdb <span class="comment"># 进入分区</span></span><br><span class="line">new <span class="comment"># 新建分区，输入大小</span></span><br><span class="line"><span class="built_in">type</span> <span class="comment"># 选择分区属性</span></span><br><span class="line">write <span class="comment"># 执行分区</span></span><br></pre></td></tr></table></figure><h3 id="GPT-分区-UEFI-分区"><a href="#GPT-分区-UEFI-分区" class="headerlink" title="GPT 分区(UEFI 分区)"></a>GPT 分区(UEFI 分区)</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gdisk /dev/sdb <span class="comment">#不同电脑设备不同</span></span><br><span class="line">g <span class="comment"># 建立gpt分区表:</span></span><br><span class="line">n <span class="comment"># 添加一个分区</span></span><br><span class="line">提示让输入开始扇区(一个扇区512B，按自己要分区容量大小进行计算)</span><br><span class="line">输入2048,回车</span><br><span class="line">让输入结束扇区，由于一个扇区512B，要创建200M的分区,应该输入：+200M；</span><br><span class="line">w 保存并退出；</span><br><span class="line">lsblk <span class="comment"># 查看分区列表</span></span><br></pre></td></tr></table></figure><h2 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkfs.vfat /dev/sdb1 <span class="comment"># EFI分区  挂载在/mnt/boot/EFI</span></span><br><span class="line">mkswap -f /dev/sdb2 <span class="comment"># 格式化 swap</span></span><br><span class="line">swapon /dev/sdb2  <span class="comment"># swap分区</span></span><br><span class="line">mkfs.ext4 /dev/sdb3 <span class="comment"># /分区</span></span><br><span class="line">mkfs.ext4 /dev/sdb4 <span class="comment"># /home 分区</span></span><br></pre></td></tr></table></figure><h2 id="挂载分区"><a href="#挂载分区" class="headerlink" title="挂载分区"></a>挂载分区</h2><h3 id="BIOS-引导"><a href="#BIOS-引导" class="headerlink" title="BIOS 引导"></a>BIOS 引导</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sdb3 /mnt <span class="comment"># 根分区挂载到 /mnt 目录</span></span><br><span class="line"><span class="built_in">mkdir</span> /mnt/home</span><br><span class="line">mount /dev/sdb4 /mnt/home <span class="comment"># home 分区</span></span><br><span class="line"><span class="built_in">mkdir</span> /mnt/boot <span class="comment"># 在 /mnt 目录下新建 boot目录</span></span><br><span class="line">mount /dev/sdb1 /mnt/boot <span class="comment">#将boot分区挂载在刚创建的/mnt/boot目录</span></span><br></pre></td></tr></table></figure><h3 id="UEFI-引导"><a href="#UEFI-引导" class="headerlink" title="UEFI 引导"></a>UEFI 引导</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sdb3 /mnt <span class="comment"># /分区</span></span><br><span class="line"><span class="built_in">mkdir</span> /mnt/home</span><br><span class="line">mount /dev/sdb4 /mnt/home <span class="comment"># home 分区</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /mnt/boot</span><br><span class="line">mount /dev/sdb1 /mnt/boot <span class="comment"># EFI 分区</span></span><br></pre></td></tr></table></figure><h2 id="安装基本操作系统"><a href="#安装基本操作系统" class="headerlink" title="安装基本操作系统"></a>安装基本操作系统</h2><h3 id="配置软件源"><a href="#配置软件源" class="headerlink" title="配置软件源"></a>配置软件源</h3><p>将清华源移到第一行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/pacman.d/mirrorlist</span><br></pre></td></tr></table></figure><p>更新源</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Syy</span><br></pre></td></tr></table></figure><h3 id="基础包"><a href="#基础包" class="headerlink" title="基础包"></a>基础包</h3><p>安装系统到 <code>/dev/sdb2</code> 即挂载点 <code>/mnt</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pacstrap /mnt base linux linux-firmware base-devel</span><br><span class="line">pacstrap /mnt NetworkManager vim</span><br><span class="line">pacstrap /mnt base-devel <span class="comment"># 开发基础包</span></span><br></pre></td></tr></table></figure><h3 id="配置基础系统"><a href="#配置基础系统" class="headerlink" title="配置基础系统"></a>配置基础系统</h3><ul><li>生成 fstab 文件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br></pre></td></tr></table></figure><ul><li>检查</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /mnt/etc/fstab</span><br></pre></td></tr></table></figure><h2 id="切换到新系统"><a href="#切换到新系统" class="headerlink" title="切换到新系统"></a>切换到新系统</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure><h2 id="时区"><a href="#时区" class="headerlink" title="时区"></a>时区</h2><h3 id="设置时区"><a href="#设置时区" class="headerlink" title="设置时区"></a>设置时区</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><h3 id="硬件时间"><a href="#硬件时间" class="headerlink" title="硬件时间"></a>硬件时间</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure><h2 id="语言设置"><a href="#语言设置" class="headerlink" title="语言设置"></a>语言设置</h2><p><code>vim /etc/locale.gen</code> 反注释 <code>en_US.UTF-8</code> 和 <code>zh_CN.UTF-8</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#生成 locale</span></span><br><span class="line">locale-gen </span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 locale.conf</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;LANG=zh_CN.UTF-8&#x27;</span>  &gt; /etc/locale.conf</span><br></pre></td></tr></table></figure><h2 id="无线网络"><a href="#无线网络" class="headerlink" title="无线网络"></a>无线网络</h2><p>安装相关包</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S iw wpa_supplicant dialog net-tools networkmanager dhcpcd</span><br></pre></td></tr></table></figure><p>设置网络工具开机自启</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> NetworkManager</span><br><span class="line">systemctl <span class="built_in">enable</span> dhcpcd</span><br></pre></td></tr></table></figure><p>连接无线网络</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wifi-menu</span><br></pre></td></tr></table></figure><h2 id="设置主机名"><a href="#设置主机名" class="headerlink" title="设置主机名"></a>设置主机名</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> Vitan-ArchLinux &gt;&gt; /etc/hostname</span><br></pre></td></tr></table></figure><h2 id="账号密码设置"><a href="#账号密码设置" class="headerlink" title="账号密码设置"></a>账号密码设置</h2><ul><li>设置 root 密码</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><ul><li>添加用户</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd -m -G wheel vitan</span><br><span class="line">passwd vitan <span class="comment"># 修改密码</span></span><br></pre></td></tr></table></figure><ul><li>sudo 权限</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pacman -S <span class="built_in">sudo</span></span><br><span class="line">vim /etc/sudoers</span><br></pre></td></tr></table></figure><p>取消注释</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%wheel ALL=(ALL) ALL</span><br></pre></td></tr></table></figure><h2 id="安装微码"><a href="#安装微码" class="headerlink" title="安装微码"></a>安装微码</h2><ul><li>Intel CPU</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S intel-ucode</span><br></pre></td></tr></table></figure><ul><li>AMD CPU</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S amd-ucode</span><br></pre></td></tr></table></figure><h2 id="安装引导程序（不能漏）"><a href="#安装引导程序（不能漏）" class="headerlink" title="安装引导程序（不能漏）"></a>安装引导程序（不能漏）</h2><h3 id="UEFI-引导-1"><a href="#UEFI-引导-1" class="headerlink" title="UEFI 引导"></a>UEFI 引导</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pacman -S grub efibootmgr</span><br><span class="line">grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=ArchLinux</span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><h3 id="BIOS-引导-1"><a href="#BIOS-引导-1" class="headerlink" title="BIOS 引导"></a>BIOS 引导</h3><p>注意第二条命令是安装系统的盘符，若安装在 &#x2F;dev&#x2F;sdb 就填 &#x2F;dev&#x2F;sdb，后不跟数数字</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pacman -S grub</span><br><span class="line">grub-install /dev/sdb</span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><h2 id="退出-chroot-重启-笔记本跳过"><a href="#退出-chroot-重启-笔记本跳过" class="headerlink" title="退出 chroot 重启 (笔记本跳过)"></a>退出 chroot 重启 (笔记本跳过)</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span> <span class="comment"># 退回安装环境#</span></span><br><span class="line">umount -R  /mnt <span class="comment"># 卸载新分区</span></span><br><span class="line">reboot <span class="comment"># 重启</span></span><br></pre></td></tr></table></figure><h2 id="网络配置-重启后"><a href="#网络配置-重启后" class="headerlink" title="网络配置(重启后)"></a>网络配置(重启后)</h2><p>有线连接</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> dhcpcd</span><br></pre></td></tr></table></figure><p>无线连接</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S iw wpa_supplicant dialog netctl</span><br></pre></td></tr></table></figure><p>ADSL 宽带连接</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S rp-pppoe# pppoe-setup</span><br></pre></td></tr></table></figure><h2 id="重启不能联网"><a href="#重启不能联网" class="headerlink" title="重启不能联网"></a>重启不能联网</h2><p>重启 dhcpcd</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> dhcpcd</span><br></pre></td></tr></table></figure><p>继续输入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip <span class="built_in">link</span></span><br></pre></td></tr></table></figure><p>发现名称是ens33的网卡state 是down状态</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip <span class="built_in">link</span> <span class="built_in">set</span> ens33 up <span class="comment"># ifconfig ens33 up</span></span><br></pre></td></tr></table></figure><h1 id="安装桌面环境"><a href="#安装桌面环境" class="headerlink" title="安装桌面环境"></a>安装桌面环境</h1><h2 id="Gnome-桌面"><a href="#Gnome-桌面" class="headerlink" title="Gnome 桌面"></a>Gnome 桌面</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S gnome <span class="comment">#gnome桌面：</span></span><br><span class="line"><span class="built_in">sudo</span> pacman -S gnome-tweak-tool <span class="comment">#安装gnome桌面优化工具</span></span><br><span class="line"><span class="built_in">sudo</span> pacman -S alacarte <span class="comment"># 安装gnome桌面菜单编辑器</span></span><br><span class="line">systemctl <span class="built_in">enable</span> gdm <span class="comment">#启用gnome窗口管理器服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> NetworkManager <span class="comment"># 启用网络管理器服务</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="Deepin-桌面"><a href="#Deepin-桌面" class="headerlink" title="Deepin 桌面"></a>Deepin 桌面</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S deepin</span><br><span class="line"><span class="built_in">sudo</span> pacman -S deepin-extra</span><br><span class="line"><span class="built_in">sudo</span> pacman S bash-completion</span><br><span class="line"><span class="built_in">sudo</span> pacman -S networkmanager</span><br><span class="line">systemctl <span class="built_in">enable</span> NetworkManager <span class="comment"># 注意大小写</span></span><br><span class="line">systemctl start NetworkManager</span><br></pre></td></tr></table></figure><p>编辑</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/lightdm/lightdm.conf</span><br></pre></td></tr></table></figure><p>修改如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">greeter-session=lightdm-deepin-greeter</span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> lightdm.service</span><br></pre></td></tr></table></figure><h2 id="KDE-Plasma-桌面"><a href="#KDE-Plasma-桌面" class="headerlink" title="KDE Plasma 桌面"></a>KDE Plasma 桌面</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S xorg</span><br><span class="line"><span class="built_in">sudo</span> pacman -S xf86-input-synaptics <span class="comment">#触摸板驱动</span></span><br><span class="line"><span class="built_in">sudo</span> pacman -S ttf-dejavu wqy-microhei <span class="comment"># 字体</span></span><br><span class="line"><span class="built_in">sudo</span> pacman -S plasma kde-applications <span class="comment"># 桌面及基本应用</span></span><br><span class="line"><span class="built_in">sudo</span> pacman -S NetworkManager net-tools</span><br><span class="line"><span class="built_in">sudo</span> pacman -S kde-l10n-zh_cn <span class="comment"># KDE 中文包</span></span><br><span class="line"><span class="built_in">sudo</span> pacman -S alsa-utils pulseaudio pulseaudio-alsa <span class="comment"># 声音</span></span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> sddm <span class="comment"># 启用 sddm 显示管理器</span></span><br><span class="line">systemctl <span class="built_in">enable</span> NetworkManager <span class="comment"># 启用网络管理</span></span><br><span class="line">systemctl <span class="built_in">enable</span> dhcpcd</span><br></pre></td></tr></table></figure><h1 id="后续优化"><a href="#后续优化" class="headerlink" title="后续优化"></a>后续优化</h1><h2 id="配置源"><a href="#配置源" class="headerlink" title="配置源"></a>配置源</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/pacman.conf</span><br></pre></td></tr></table></figure><ol><li>首先去掉 multilib 中两行的注释</li><li>在文档结尾处加入</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">SigLevel = Optional TrustAll</span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure><p>刷新pacman数据库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -Syy</span><br></pre></td></tr></table></figure><h2 id="驱动"><a href="#驱动" class="headerlink" title="驱动"></a>驱动</h2><h3 id="声卡"><a href="#声卡" class="headerlink" title="声卡"></a>声卡</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S alsautils pulseaudio pulseaudio-alsa</span><br></pre></td></tr></table></figure><h3 id="显卡"><a href="#显卡" class="headerlink" title="显卡"></a>显卡</h3><p>安装驱动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S nvidia</span><br><span class="line"><span class="built_in">sudo</span> pacman -S nvidia-settings</span><br></pre></td></tr></table></figure><p>启动管理器编辑脚本(Plasma 桌面有效)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /usr/share/sddm/scripts/Xsetup</span><br></pre></td></tr></table></figure><p>添加</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xrandr --setprovideroutputsource modesetting NVIDIA-0</span><br><span class="line">xrandr --auto</span><br></pre></td></tr></table></figure><p>重启</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><p>获取显卡 PCI 地址</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ispci | grep -E <span class="string">&quot;VGA|3D&quot;</span></span><br></pre></td></tr></table></figure><p>地址转换</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">01:00.0 --&gt; 1:0:0 <span class="comment"># 转换示例</span></span><br></pre></td></tr></table></figure><p>配置 xorg.conf</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/X11/xorg.conf</span><br><span class="line"><span class="comment"># 确保 xorg 已安装</span></span><br></pre></td></tr></table></figure><p>添加</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Section <span class="string">&quot;Module&quot;</span></span><br><span class="line">Load <span class="string">&quot;modesetting&quot;</span></span><br><span class="line">EndSection</span><br><span class="line"></span><br><span class="line">Section <span class="string">&quot;Device&quot;</span></span><br><span class="line">Identifier <span class="string">&quot;nvidia&#x27;&quot;</span></span><br><span class="line">Driver <span class="string">&quot;nvidia&quot;</span></span><br><span class="line">BusID <span class="string">&quot;1:0:0&quot;</span></span><br><span class="line">Option <span class="string">&quot;AllowEmptyInitialConfiguration&quot;</span></span><br><span class="line">EndSection</span><br></pre></td></tr></table></figure><h1 id="必备软件"><a href="#必备软件" class="headerlink" title="必备软件"></a>必备软件</h1><h2 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S fcitx fcitx-configtool</span><br><span class="line"><span class="built_in">sudo</span> pacman -S fcitx-gtk2 fcitx-gtk3 fcitx-qt4 fcitx-qt5</span><br><span class="line"><span class="built_in">sudo</span> pacman -S fcitx-sogoupinyin</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.xprofile</span><br></pre></td></tr></table></figure><p>添加</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GTK_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> QT_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> XMODIFIERS=<span class="string">&quot;@im=fcitx&quot;</span></span><br></pre></td></tr></table></figure><p>桌面环境比较特殊，可能需要在 &#x2F;etc&#x2F;environmenet 后方也加入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GTK_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> QT_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> XMODIFIERS=<span class="string">&quot;@im=fcitx&quot;</span></span><br></pre></td></tr></table></figure><p>安装输入法</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S fcitx-sogoupinyin</span><br></pre></td></tr></table></figure><ul><li>可选</li></ul><ol><li>fcitx-cloudpinyin </li><li>fcitx-googlepinyin </li><li>fcitx-libpinyin </li><li>fcitx-sunpinyin</li><li>fcitx-sogoupinyin</li></ol><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S wqy-bitmapfont wqy-microhei \</span><br><span class="line">wqy-zenhei adobe-source-code-pro-fonts \</span><br><span class="line">adobe-source-han-sans-cn-fonts ttf-monaco</span><br></pre></td></tr></table></figure><h2 id="安装-yay-使用-aur"><a href="#安装-yay-使用-aur" class="headerlink" title="安装 yay 使用 aur"></a>安装 yay 使用 aur</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S yay</span><br></pre></td></tr></table></figure><ul><li>以后可以使用 yay 安装aur中的软件了, yay 跟 pacman 使用方法一样.</li></ul><h2 id="工具和常用软件"><a href="#工具和常用软件" class="headerlink" title="工具和常用软件"></a>工具和常用软件</h2><p>工具</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S git net-tools tree vim</span><br></pre></td></tr></table></figure><p><a href="https://vitan.me/2018/07/28/linux-WeChat-QQ/">微信QQ</a></p><p>科学上网</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S shadowsocks-qt5 proxychains-ng</span><br></pre></td></tr></table></figure><ul><li>Proxychains 实现终端下任意应用代理</li></ul><p>WPS</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S ttf-wps-fonts</span><br><span class="line"><span class="built_in">sudo</span> pacman -S wps-office</span><br></pre></td></tr></table></figure><p>Telegram</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S telegram-desktop</span><br></pre></td></tr></table></figure><p>Google Chrome</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S google-chrome</span><br></pre></td></tr></table></figure><p>网易云音乐</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S netease-cloud-music</span><br></pre></td></tr></table></figure><p>MailSpring</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yay -S mailspring</span><br><span class="line"><span class="built_in">sudo</span> pacman -S libsecret</span><br></pre></td></tr></table></figure><p>迅雷</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S deepin-wine-thunderspeed</span><br></pre></td></tr></table></figure><p>截图(Deppin)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S deepin-screenshot</span><br></pre></td></tr></table></figure><p>Docker</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S docker</span><br><span class="line"><span class="built_in">sudo</span> pacman -S docker-compose</span><br></pre></td></tr></table></figure><p>Visual Studio Code</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S visual-studio-code-bin</span><br></pre></td></tr></table></figure><hr><p><strong>参考</strong></p><ul><li><a href="https://blog.csdn.net/r8l8q8/article/details/76516523">ArchLinux安装图文教程</a></li><li><a href="http://www.bilibili.com/read/cv123034">ArchLinux安装deepin桌面&#x2F;常用软件流程文档</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>删除 Linux EFI 分区</title>
      <link href="/posts/%E5%88%A0%E9%99%A4eufi%E5%88%86%E5%8C%BA.html"/>
      <url>/posts/%E5%88%A0%E9%99%A4eufi%E5%88%86%E5%8C%BA.html</url>
      
        <content type="html"><![CDATA[<p>在 Win10 彻底删除 Linux  的  EFI 分区 及启动项的方法 。</p><span id="more"></span><h1 id="删除-EFI-分区"><a href="#删除-EFI-分区" class="headerlink" title="删除 EFI 分区"></a>删除 EFI 分区</h1><ul><li>使用 dispart</li></ul><ol><li>用管理员权限打开 cmd</li><li>输入 <code>diskpart</code></li><li>利用 <code>list disk</code> 查询磁盘信息</li><li>这里我们 Ubuntu 装在磁盘1中，所以选择磁盘1, <code>select disk 1</code></li><li>查看磁盘1下所有分区信息 <code>list partition</code></li><li>根据分区大小这里选择分区6  <code>select partition 6</code></li><li>删除 <code>delete partition override</code></li></ol><h1 id="删除-Linux-启动项"><a href="#删除-Linux-启动项" class="headerlink" title="删除 Linux 启动项"></a>删除 Linux 启动项</h1><ul><li>EFI 分区分配盘符</li></ul><ol><li>使用 diskpart</li><li><code>select disk 0</code> 即win10系统所在的磁盘</li><li>查看分区列表以确定具体分区 <code>list partition</code></li><li>根据容量(这里是260MB)选择分区 <code>select partition 1</code></li><li>为 Win10 的 EFI 分区分配盘符 <code>assign letter=F</code> 这里p为盘符，字母A~Z应该都可以(大小写无关，自动转成大写)，不要和已有的盘符重复即可。</li><li>用管理员权限打开记事本，然后通过记事本菜单栏里的<code>打开</code>来访问 F 盘，会发现P盘里有个EFI文件夹，打开直接删除ubuntu文件夹.</li><li>再回到 diskpart 删除EFI分区盘符F <code>remove letter=f</code></li></ol><hr><p><strong>Via</strong></p><ul><li><a href="https://blog.csdn.net/mtllyb/article/details/78635757">彻底删除Ubuntu EFI分区及启动项</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 安装 shadowsocks-qt5</title>
      <link href="/posts/Ubuntu18-SS-qt5.html"/>
      <url>/posts/Ubuntu18-SS-qt5.html</url>
      
        <content type="html"><![CDATA[<p> Ubuntu 安装 shadowsocks-qt5</p><span id="more"></span><h1 id="16-04-17-04的安装"><a href="#16-04-17-04的安装" class="headerlink" title="16.04&#x2F;17.04的安装"></a>16.04&#x2F;17.04的安装</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> add-apt-repository ppa:hzwhuang/ss-qt5</span><br><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="built_in">sudo</span> apt-get install shadowsocks-qt5</span><br></pre></td></tr></table></figure><h1 id="18-04的安装方法"><a href="#18-04的安装方法" class="headerlink" title="18.04的安装方法"></a>18.04的安装方法</h1><p>添加源</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> add-apt-repository ppa:hzwhuang/ss-qt5</span><br></pre></td></tr></table></figure><ul><li>作者还没有测试18.04,将源中的<code>bionic</code>改成<code>artful</code></li></ul><p>编辑</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> /etc/apt/sources.list.d/hzwhuang-ubuntu-ss-qt5-bionic.list</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://ppa.launchpad.net/hzwhuang/ss-qt5/ubuntu bionic main <span class="comment"># Before  </span></span><br><span class="line">http://ppa.launchpad.net/hzwhuang/ss-qt5/ubuntu artful main <span class="comment"># After</span></span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="built_in">sudo</span> apt-get install shadowsocks-qt5</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 常见目录</title>
      <link href="/posts/LinuxDir.html"/>
      <url>/posts/LinuxDir.html</url>
      
        <content type="html"><![CDATA[<p>Linux 常见目录</p><span id="more"></span><table><thead><tr><th align="left">目录</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">&#x2F;</td><td align="left">根目录</td></tr><tr><td align="left">&#x2F;bin</td><td align="left">命令保存目录（普通用户就可以读取的命令）</td></tr><tr><td align="left">&#x2F;boot</td><td align="left">启动目录，启动相关文件</td></tr><tr><td align="left">&#x2F;dev</td><td align="left">设备文件保存目录</td></tr><tr><td align="left">&#x2F;etc</td><td align="left">配置文件保存目录</td></tr><tr><td align="left">&#x2F;home</td><td align="left">普通用户的家目录</td></tr><tr><td align="left">&#x2F;lib</td><td align="left">系统库保存目录</td></tr><tr><td align="left">&#x2F;mnt</td><td align="left">系统挂载目录</td></tr><tr><td align="left">&#x2F;media</td><td align="left">挂载目录</td></tr><tr><td align="left">&#x2F;root</td><td align="left">超级用户的家目录</td></tr><tr><td align="left">&#x2F;tmp</td><td align="left">临时目录</td></tr><tr><td align="left">&#x2F;sbin</td><td align="left">命令保存目录(超级用户才能使用的目录)</td></tr><tr><td align="left">&#x2F;proc</td><td align="left">直接写入内存的</td></tr><tr><td align="left">&#x2F;sys</td><td align="left">将内核的一些信息映射，可供应用程序所用</td></tr><tr><td align="left">&#x2F;usr</td><td align="left">系统软件资源目录</td></tr><tr><td align="left">&#x2F;usr&#x2F;bin&#x2F;</td><td align="left">系统命令（普通用户）</td></tr><tr><td align="left">&#x2F;usr&#x2F;sbin&#x2F;</td><td align="left">系统命令（超级用户）</td></tr><tr><td align="left">&#x2F;var</td><td align="left">系统相关文档内容</td></tr><tr><td align="left">&#x2F;var&#x2F;log&#x2F;</td><td align="left">系统日志位置</td></tr><tr><td align="left">&#x2F;var&#x2F;spool&#x2F;mail&#x2F;</td><td align="left">系统默认邮箱位置</td></tr><tr><td align="left">&#x2F;var&#x2F;lib&#x2F;</td><td align="left">默认安装的库文件目录</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github 隐藏的技巧</title>
      <link href="/posts/GithubTips.html"/>
      <url>/posts/GithubTips.html</url>
      
        <content type="html"><![CDATA[<p>Github 中隐藏了很多可以提高效率的小技巧。</p><span id="more"></span><h1 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h1><h2 id="全站中"><a href="#全站中" class="headerlink" title="全站中"></a>全站中</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s 定位到搜索框</span><br><span class="line">? 展示当前页面可用的快捷键</span><br><span class="line">g+n 查看通知</span><br></pre></td></tr></table></figure><h2 id="库快捷键"><a href="#库快捷键" class="headerlink" title="库快捷键"></a>库快捷键</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">g+c 到代码库首页</span><br><span class="line">g+i 查看 issue</span><br><span class="line">g+p 查看 PR</span><br><span class="line">g+w 查看 Wiki</span><br></pre></td></tr></table></figure><h2 id="浏览代码"><a href="#浏览代码" class="headerlink" title="浏览代码"></a>浏览代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">t 激活查找文件模式</span><br><span class="line">l 定位到行</span><br><span class="line">w 切换分支或tag</span><br><span class="line">y 将 URL 展开成正则形式</span><br><span class="line">i 显示或隐藏 diff 中的评论</span><br></pre></td></tr></table></figure><h2 id="issues"><a href="#issues" class="headerlink" title="issues"></a>issues</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c 创建一个 issue</span><br><span class="line">/ 定位到 issue 搜索框</span><br><span class="line">l 过滤或编辑标签</span><br><span class="line">m 过滤或编辑 milestone</span><br><span class="line">a 过滤或编辑 assignee</span><br><span class="line">r 在回复中引用鼠标选中的文本</span><br></pre></td></tr></table></figure><h2 id="通知"><a href="#通知" class="headerlink" title="通知"></a>通知</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">e l y 标记为已读</span><br><span class="line">shift m 将帖子静音</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="仓库中"><a href="#仓库中" class="headerlink" title="仓库中"></a>仓库中</h1><h2 id="PR"><a href="#PR" class="headerlink" title="PR"></a>PR</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r 在回复中引用鼠标选中的文本</span><br><span class="line">o+enter 打开 issue</span><br></pre></td></tr></table></figure><h2 id="Network-Graph"><a href="#Network-Graph" class="headerlink" title="Network Graph"></a>Network Graph</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">方向键和 hjkl 与 Vim 中一样</span><br><span class="line">shift + 方向键或 hjkl 行动到头</span><br></pre></td></tr></table></figure><h1 id="URL-后添加"><a href="#URL-后添加" class="headerlink" title="URL 后添加"></a>URL 后添加</h1><h2 id="忽略空格-w-1"><a href="#忽略空格-w-1" class="headerlink" title="忽略空格: ?w&#x3D;1"></a>忽略空格: ?w&#x3D;1</h2><p>在任意的 diff URL 添加<code>?w=1</code>用来整理缩进<br><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1ftctuu01vrj20f005kaac.jpg"></p><h2 id="查看某个作者的提交历史"><a href="#查看某个作者的提交历史" class="headerlink" title="查看某个作者的提交历史"></a>查看某个作者的提交历史</h2><p>在 URL 中添加 <code>?author=username</code>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/rails/rails/commits/master?author=snowtraces</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1ftcu02qcwoj20cp0kota4.jpg"></p><h2 id="比较版本"><a href="#比较版本" class="headerlink" title="比较版本"></a>比较版本</h2><p>使用类似如下的 URL 比较分支</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/qutang/hexo-theme-cutie/compare/master...v2.1</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1ftcu7572zej20um05aq3i.jpg"></p><ul><li>也可以使用一下格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/rails/rails/compare/master@&#123;1.day.ago&#125;...master</span><br><span class="line">https://github.com/rails/rails/compare/master@&#123;2014-10-04&#125;...master</span><br></pre></td></tr></table></figure><ul><li>和派生仓库比较，加上派生仓库名作前缀即可</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/iVitan/hexo-theme-cutie/compare/master...qutang:master</span><br></pre></td></tr></table></figure><h2 id="高亮行"><a href="#高亮行" class="headerlink" title="高亮行"></a>高亮行</h2><p>在 URL 中加上<code>#L10</code>可以高亮第10行,或者你也可以直接点击行数。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/iVitan/hexo-theme-cutie/blob/master/_config.yml#L10</span><br></pre></td></tr></table></figure><ul><li>多行高亮同样支持。你可以使用类似<code>#L10-L20</code>格式，或者在按住 shift 的同时点击</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/iVitan/hexo-theme-cutie/blob/master/_config.yml#L10-L20</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1ftcuhwdriaj20fc08ft8x.jpg"></p><h2 id="合并请求的-diff-和-patch"><a href="#合并请求的-diff-和-patch" class="headerlink" title="合并请求的 diff 和 patch"></a>合并请求的 diff 和 patch</h2><p>可以在 URL 后添加<code>.diff</code>和<code>.patch</code>以对应的模式查看合并请求</p><h1 id="快速引用"><a href="#快速引用" class="headerlink" title="快速引用"></a>快速引用</h1><h2 id="引用评论"><a href="#引用评论" class="headerlink" title="引用评论"></a>引用评论</h2><ul><li>可以选中别人的评论文字，然后按 <code>r</code>，这些内容会以引用的形式被复制在文本框中</li></ul><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1ftcukae70tg20m80a7nfn.jpg"></p><h1 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h1><h2 id="To-Do"><a href="#To-Do" class="headerlink" title="To Do"></a>To Do</h2><p>在工单或合并请求中，你可以使用任务列表语法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- [ ] Be awesome</span><br><span class="line">- [ ] Do stuff</span><br><span class="line">- [ ] Sleep</span><br></pre></td></tr></table></figure><ul><li>勾选之后，会更新 Markdown</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- [x] Be awesome</span><br><span class="line">- [x] Do stuff</span><br><span class="line">- [ ] Sleep</span><br></pre></td></tr></table></figure><h1 id="嵌入-GitHub"><a href="#嵌入-GitHub" class="headerlink" title="嵌入 GitHub"></a>嵌入 GitHub</h1><ul><li>网页上面嵌入你自己的GitHub仓库页面</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=&quot;https://ghbtns.com/github-btn.html?user=ivitan&amp;amp;repo=ivitan.github.io&amp;amp;type=watch&amp;amp;count=true&amp;amp;size=large&quot; allowtransparency=&quot;true&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;156px&quot; height=&quot;30px&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;iframe src=&quot;https://ghbtns.com/github-btn.html?user=ivitan&amp;amp;repo=ivitan.github&amp;amp;type=fork&amp;amp;count=true&amp;amp;size=large&quot; allowtransparency=&quot;true&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;156px&quot; height=&quot;30px&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><ul><li><iframe src="https://ghbtns.com/github-btn.html?user=ivitan&amp;repo=ivitan.github.io&amp;type=watch&amp;count=true&amp;size=large" allowtransparency="true" frameborder="0" scrolling="0" width="156px" height="30px"></iframe></li><li><iframe src="https://ghbtns.com/github-btn.html?user=ivitan&amp;repo=ivitan.github.io&amp;type=fork&amp;count=true&amp;size=large" allowtransparency="true" frameborder="0" scrolling="0" width="156px" height="30px"></iframe></li></ul><h1 id="设置项目语言"><a href="#设置项目语言" class="headerlink" title="设置项目语言"></a>设置项目语言</h1><p>GitHub 会根据相关文件代码的数量来自动识别你这个项目，如果你需要自己指定项目语言，可以在项目的根目录下添加如下<code>.gitattributes</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*.html linguist-language=Python</span><br></pre></td></tr></table></figure><hr><p><strong>参考</strong></p><ul><li><a href="http://www.kuqin.com/shuoit/20151010/348440.html">关于Git和Github你不知道的十件事</a></li><li><a href="https://segmentfault.com/a/1190000000475547">少有人知的 GitHub 使用技巧</a></li><li><a href="https://blog.csdn.net/neilol/article/details/46568611">GitHub 使用小技巧</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 基础语句</title>
      <link href="/posts/MySQLbasic.html"/>
      <url>/posts/MySQLbasic.html</url>
      
        <content type="html"><![CDATA[<p>MySQL 基础语句</p><span id="more"></span><h1 id="MySQL-语句的规范"><a href="#MySQL-语句的规范" class="headerlink" title="MySQL 语句的规范"></a>MySQL 语句的规范</h1><ol><li>关键字与函数名称全部大写</li><li>数据库名称、表名称、字段名称全部小写</li><li>SQL语句必须以分号结尾</li></ol><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p>数据类型是指列、存储过程参数、表达式和局部变量的数据特征,它决定了数据的存储格式,代表了不同的信息类型。</p><h2 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h2><table><thead><tr><th align="left">列类型</th><th align="left">存储需求</th></tr></thead><tbody><tr><td align="left">CHAR(M)</td><td align="left">M个字节,0&lt;&#x3D;M&lt;&#x3D;255</td></tr><tr><td align="left">VARCHAR(M)</td><td align="left">L+1个字节,其中L&lt;&#x3D;M且0&lt;&#x3D;M&lt;&#x3D; 65535</td></tr><tr><td align="left">TINYTEXT</td><td align="left">L+1个字节,其中L&lt;2^8^</td></tr><tr><td align="left">TEXT</td><td align="left">L+2个字节,其中L&lt;2^16^</td></tr><tr><td align="left">MEDIUMTEXT</td><td align="left">L+3个字节,其中L&lt;2^24^</td></tr><tr><td align="left">LONGTEXT</td><td align="left">L+4个字节,其中L&lt;2^32^</td></tr><tr><td align="left">ENUM(‘value’,’value2’,…)</td><td align="left">1或2个字节,取决于枚举值的个数(最多65.535个值)</td></tr><tr><td align="left">SET(‘valuel’,’value2’,…)</td><td align="left">1、2、3、4或者8个字节,取决于set成员的数目(最多64个成员)</td></tr></tbody></table><h2 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h2><table><thead><tr><th align="left">数据类</th><th align="left">型存储范围</th><th align="left">字节</th></tr></thead><tbody><tr><td align="left">TINYINT</td><td align="left">有符号值:-128到127(-2^7^到2^7^-1)无符号值:0到255(0到2^8^ -1)</td><td align="left">1</td></tr><tr><td align="left">SMALLINT</td><td align="left">有符号值:-32768到32767(2^15^到2^15^-1)无符号值:0到65535 (0到2^16^-1)</td><td align="left">2</td></tr><tr><td align="left">MEDIUMINT</td><td align="left">有符号值:-8388608到8388607(-2^23^到2^23^-1)无符号值:0到16777215(0到2^24^-1)</td><td align="left">3</td></tr><tr><td align="left">INT</td><td align="left">有符号值:-2147483648到2147483647(-2^31^到2^31^-1)无符号值:0到4294967295(0到2^32^-1)</td><td align="left">4</td></tr><tr><td align="left">BIGINT</td><td align="left">有符号值:-9223372036854775808到9223373036854775807 (-2^63^到2^63^-1),无符号值:0到18446744073709551615(0到2^64^-1)</td><td align="left">8</td></tr></tbody></table><h2 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h2><p><img src="https://i.loli.net/2018/07/12/5b46f3cadd49b.jpg" alt="Screenshot_20180712-142200.jpg"></p><h2 id="日期时间型"><a href="#日期时间型" class="headerlink" title="日期时间型"></a>日期时间型</h2><table><thead><tr><th align="left">列类型</th><th align="left">存储需求</th></tr></thead><tbody><tr><td align="left">YEAE</td><td align="left">1</td></tr><tr><td align="left">TIME</td><td align="left">3</td></tr><tr><td align="left">DATE</td><td align="left">3</td></tr><tr><td align="left">DATETIME</td><td align="left">8</td></tr><tr><td align="left">TIMESTAMP</td><td align="left">4</td></tr></tbody></table><hr><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h2 id="MySQL-登录"><a href="#MySQL-登录" class="headerlink" title="MySQL 登录"></a>MySQL 登录</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>h <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>  <span class="operator">-</span>u root <span class="operator">-</span>p</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">-D,-database naime</td><td align="left">打开指定数据库</td></tr><tr><td align="left">–delimiter &#x3D; naime</td><td align="left">指定分隔符</td></tr><tr><td align="left">-h,-host taine</td><td align="left">服务器名称</td></tr><tr><td align="left">-p,–password [-name]</td><td align="left">密码</td></tr><tr><td align="left">-p,–prot&#x3D;#</td><td align="left">端口号</td></tr><tr><td align="left">–prompt line</td><td align="left">设置提示符</td></tr><tr><td align="left">-u,–user&#x3D;name</td><td align="left">用户名</td></tr><tr><td align="left">-V,–version</td><td align="left">輸出版本信息并且退出</td></tr></tbody></table><h2 id="修改MySQL提示符"><a href="#修改MySQL提示符" class="headerlink" title="修改MySQL提示符"></a>修改MySQL提示符</h2><ol><li>连接客户端时通过参数指定<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>uroot <span class="operator">-</span>proot <span class="comment">--prompt 提示符</span></span><br></pre></td></tr></table></figure>2.连接上客户端后,通过 prompt 命令修改<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;prompt 提示符</span><br></pre></td></tr></table></figure></li></ol><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">\D</td><td align="left">完整的日期</td></tr><tr><td align="left">\d</td><td align="left">当前数据库</td></tr><tr><td align="left">\h</td><td align="left">服务器名称</td></tr><tr><td align="left">\u</td><td align="left">用户名称</td></tr></tbody></table><h1 id="MySQL-常用语句"><a href="#MySQL-常用语句" class="headerlink" title="MySQL 常用语句"></a>MySQL 常用语句</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">当前服务器版本</span><br><span class="line"><span class="keyword">SELECT</span> VERSION();</span><br><span class="line">显示当前日期时间</span><br><span class="line"><span class="keyword">SELECT</span> NOW();</span><br><span class="line">显示当前用户</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">USER</span>();</span><br></pre></td></tr></table></figure><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span>(DATABASE SCHEMA [IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] name</span><br><span class="line"></span><br><span class="line">[<span class="keyword">DEFAULT</span>] <span class="type">CHARACTER</span> <span class="keyword">SET</span> [<span class="operator">=</span>] charset_name</span><br></pre></td></tr></table></figure><h2 id="查看当前服务器下的数据表列表"><a href="#查看当前服务器下的数据表列表" class="headerlink" title="查看当前服务器下的数据表列表"></a>查看当前服务器下的数据表列表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> (DATABASES SCHEMAS&#125;</span><br><span class="line"></span><br><span class="line">[<span class="keyword">LIKE</span> <span class="string">&#x27;pattern&#x27;</span> <span class="operator">|</span> <span class="keyword">WHERE</span> expr]</span><br></pre></td></tr></table></figure><h2 id="修改数据库"><a href="#修改数据库" class="headerlink" title="修改数据库"></a>修改数据库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ALTER &#123;DATABASE SCHEMA&#125; [db_name]</span><br><span class="line"></span><br><span class="line">[DEFAULT] CHARACTER SET [=] charset_name</span><br></pre></td></tr></table></figure><h2 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> &#123;DATABASE <span class="operator">|</span> SCHEMA&#125; [IF <span class="keyword">EXISTS</span>] db_name</span><br></pre></td></tr></table></figure><h1 id="表"><a href="#表" class="headerlink" title="表"></a>表</h1><p>数据表(或称表)是数据库最重要的组成部分之一,是其他对象的基础。</p><h2 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> [IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] table_name(</span><br><span class="line"><span class="keyword">column</span> name data_type,</span><br><span class="line">...</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="查看数据表列表"><a href="#查看数据表列表" class="headerlink" title="查看数据表列表"></a>查看数据表列表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> TABLES [<span class="keyword">FROM</span> db name]</span><br><span class="line">[<span class="keyword">LIKE</span> <span class="string">&#x27;pattern&#x27;</span> <span class="operator">|</span> <span class="keyword">WHERE</span> expr]</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> TABLES [<span class="keyword">FROM</span> db name]</span><br></pre></td></tr></table></figure><h2 id="查看数据表结构"><a href="#查看数据表结构" class="headerlink" title="查看数据表结构"></a>查看数据表结构</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> COLUMNS <span class="keyword">FROM</span> table_name</span><br></pre></td></tr></table></figure><h2 id="插入记录"><a href="#插入记录" class="headerlink" title="插入记录"></a>插入记录</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> [<span class="keyword">INTO</span>] table_name[(column_name...)] <span class="keyword">VALUES</span>(val,...)</span><br></pre></td></tr></table></figure><h2 id="记录查找"><a href="#记录查找" class="headerlink" title="记录查找"></a>记录查找</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> expr,... <span class="keyword">FROM</span> table_name</span><br></pre></td></tr></table></figure><h2 id="空值与非空"><a href="#空值与非空" class="headerlink" title="空值与非空"></a>空值与非空</h2><ol><li>NULL,字段值可以为空</li><li>NOT NULL,字段值禁止为空</li></ol><h2 id="AUTO-INCREMENT"><a href="#AUTO-INCREMENT" class="headerlink" title="AUTO_INCREMENT"></a>AUTO_INCREMENT</h2><p>自动编号,且必须与主键组合使用,默认情况下,起始值为1, 每次的增量为1.</p><h1 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h1><ol><li>约束保证数据的完整性和一致性。</li><li>约束分为表级约束和列级约束。</li></ol><h2 id="约束类型包括"><a href="#约束类型包括" class="headerlink" title="约束类型包括:"></a>约束类型包括:</h2><ul><li>NOT NULL (非空约束)</li><li>PRIMARY KEY (主键约束)</li><li>UNIQUE KEY (唯一约束)</li><li>DEFAULT (默认约束)</li><li>FOREIGN KEY (外键约束)</li></ul><h2 id="PRIMARY-KEY-主键约束"><a href="#PRIMARY-KEY-主键约束" class="headerlink" title="PRIMARY KEY 主键约束"></a>PRIMARY KEY 主键约束</h2><ol><li>每张数据表只能存在一个主键</li><li>主键保证记录的唯一性</li><li>主键自动为 NOT NULL</li></ol><h2 id="UNIQUE-KEY-唯一约束"><a href="#UNIQUE-KEY-唯一约束" class="headerlink" title="UNIQUE KEY 唯一约束"></a>UNIQUE KEY 唯一约束</h2><ol><li>唯一约束可以保证记录的唯一性</li><li>唯一约束的字段可以为空值(NULL)</li><li>每张数据表可以存在多个唯一约束</li></ol><h2 id="DEFAULT-默认值"><a href="#DEFAULT-默认值" class="headerlink" title="DEFAULT 默认值"></a>DEFAULT 默认值</h2><ul><li>当插入记录时,如果没有明确为字段赋值,则自动赋予默认值。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb5&#123;</span><br><span class="line">id <span class="type">SMALLINT</span> UNSIGNED AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">usernate <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> NUL <span class="keyword">UNIQUE</span> KEY,</span><br><span class="line">sex ENIUM(<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>,<span class="number">3</span><span class="string">&#x27;) DEFAULT &#x27;</span><span class="number">3</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="FOREIGN-KEY"><a href="#FOREIGN-KEY" class="headerlink" title="FOREIGN KEY"></a>FOREIGN KEY</h2><ul><li>作用</li></ul><ol><li>保持数据一致性,完整性。</li><li>实现一对一或一对多关系。</li></ol><ul><li><p>外键约束的要求</p><ol><li>父表和子表必须使用相同的存储引擎,而且禁止使用临时表。</li><li>数据表的存储引擎只能为InnoDB。</li><li>外键列和参照列必须具有相似的数据类型。其中数字的长度<br>  或是否有符号位必须相同;而字符的长度则可以不同。</li><li>外键和参照列必须创建索引。如果外键列不存在索引的话,MySQL将自动创建索引。</li></ol></li><li><p>外键约束的参照操作</p><ol><li>CASCADE:从主表删除或更新且自动删除或更新子表中配的行</li><li>SET NULL:从主表删除或更新行,并设置子表中的外键列为NULL。如果使用该选项,必须保证子表列没有指定NOT NULL</li><li>RESTRICT: 拒绝对父表的删除或更新操作。</li><li>NO ACTION:标准SQL的关键字,在MySQL中与RESTRICT相同</li></ol></li><li><p>表级约束与列级约束</p><ul><li>对一个数据列建立的约束,称为列级约束,</li><li>对多个数据列建立的约束,称为表级约束,</li><li>列级约束既可以在列定义时声明,也可以在列定义后声明,</li><li>表级约束只能在列定义后声明.</li></ul></li></ul><h1 id="修改数据表"><a href="#修改数据表" class="headerlink" title="修改数据表"></a>修改数据表</h1><h2 id="添加列"><a href="#添加列" class="headerlink" title="添加列"></a>添加列</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name <span class="keyword">ADD</span> [<span class="keyword">COLUMN</span>] colname</span><br><span class="line">column_definition [<span class="keyword">FIRST</span> <span class="operator">|</span> AFTER col_name]</span><br></pre></td></tr></table></figure><h2 id="添加多列"><a href="#添加多列" class="headerlink" title="添加多列"></a>添加多列</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name <span class="keyword">ADD</span> [<span class="keyword">COLUMN</span>]</span><br><span class="line">(col_name column_definitio,n...)</span><br></pre></td></tr></table></figure><h2 id="删除列"><a href="#删除列" class="headerlink" title="删除列"></a>删除列</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name <span class="keyword">DROP</span> [<span class="keyword">COLUMN</span>] colname</span><br></pre></td></tr></table></figure><h2 id="添加主键约束"><a href="#添加主键约束" class="headerlink" title="添加主键约束"></a>添加主键约束</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name <span class="keyword">ADD</span> [<span class="keyword">CONSTRAINT</span> [symbol]]</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY [index_type](index_col namer...)</span><br></pre></td></tr></table></figure><h2 id="删除主键约束"><a href="#删除主键约束" class="headerlink" title="删除主键约束"></a>删除主键约束</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name <span class="keyword">DROP</span> <span class="keyword">PRIMARY</span> KEY</span><br></pre></td></tr></table></figure><h2 id="添加唯一约束"><a href="#添加唯一约束" class="headerlink" title="添加唯一约束"></a>添加唯一约束</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name <span class="keyword">ADD</span> [<span class="keyword">CONSTRAINT</span> [symbol]]</span><br><span class="line"><span class="keyword">UNIQUE</span> [INDEX<span class="operator">|</span>KEY] [index_name] [index_type]</span><br><span class="line">(index_col name,...)</span><br></pre></td></tr></table></figure><h2 id="删除唯一约束"><a href="#删除唯一约束" class="headerlink" title="删除唯一约束"></a>删除唯一约束</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tbl_name <span class="keyword">DROP</span> &#123;INDEX<span class="operator">|</span>KEY&#125; index_name</span><br></pre></td></tr></table></figure><h1 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h1><h2 id="添加-删除默认约束"><a href="#添加-删除默认约束" class="headerlink" title="添加&#x2F;删除默认约束"></a>添加&#x2F;删除默认约束</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name <span class="keyword">ALTER</span> [<span class="keyword">COLUMN</span>] column_name</span><br><span class="line">&#123;<span class="keyword">SET</span> <span class="keyword">DEFAULT</span> literal <span class="operator">|</span> <span class="keyword">DROP</span> <span class="keyword">DEFAULT</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="删除外键约束"><a href="#删除外键约束" class="headerlink" title="删除外键约束"></a>删除外键约束</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name <span class="keyword">DROP</span> <span class="keyword">FOREIGN</span> KEY fk_symbol</span><br></pre></td></tr></table></figure><h2 id="修改列定义"><a href="#修改列定义" class="headerlink" title="修改列定义"></a>修改列定义</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name MODIFY [<span class="keyword">COLUMN</span>] col_name</span><br><span class="line">column_definition [<span class="keyword">FIRST</span> <span class="operator">|</span> AFTER col_name]</span><br></pre></td></tr></table></figure><h2 id="修改列名称"><a href="#修改列名称" class="headerlink" title="修改列名称"></a>修改列名称</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tbl_name CHANGE [<span class="keyword">COLUMN</span>] old_col_name</span><br><span class="line"><span class="keyword">new</span> col_name column_definition [<span class="keyword">FIRST</span> <span class="operator">|</span> AFTER col_name]</span><br></pre></td></tr></table></figure><h2 id="数据表更名"><a href="#数据表更名" class="headerlink" title="数据表更名"></a>数据表更名</h2><ul><li>方法一<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name RENAME [<span class="keyword">TO</span>[<span class="keyword">AS</span>] new_tbl_name</span><br></pre></td></tr></table></figure></li><li>方法二<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RENAME <span class="keyword">TABLE</span> tbl_name <span class="keyword">TO</span> new_tbl_name</span><br><span class="line">[, tbl_name2 <span class="keyword">TO</span> new_tb_name2]</span><br></pre></td></tr></table></figure></li></ul><h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><h2 id="INSERT"><a href="#INSERT" class="headerlink" title="INSERT"></a>INSERT</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> [<span class="keyword">INTO</span>] table_name [(column_name,...)) &#123;<span class="keyword">VALUES</span> <span class="operator">|</span> <span class="keyword">VALUE</span>&#125;</span><br><span class="line">(&#123;expr <span class="operator">|</span> <span class="keyword">DEFAULT</span>,...),(...)....</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> [<span class="keyword">INTO</span>] table_name <span class="keyword">SET</span> col_name<span class="operator">=</span>&#123;expr <span class="operator">|</span> <span class="keyword">DEFAULT</span>&#125;,...</span><br></pre></td></tr></table></figure><p>说明:与第一种方式的区别在于,此方法可以使用子查询(SubQuery)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> [<span class="keyword">INTO</span>] tbl_name [(col_name,...] SELECT...</span><br></pre></td></tr></table></figure><p>说明:此方法可以将查询结果插入到指定数据表。</p><h2 id="UPDATE"><a href="#UPDATE" class="headerlink" title="UPDATE"></a>UPDATE</h2><ul><li>UPDATE 更新记录值(单表)<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> [LOW_PRIORITY] [IGNORE] tabl_ reference <span class="keyword">SET</span></span><br><span class="line">col_name1<span class="operator">=</span>&#123;expr1 <span class="operator">|</span> <span class="keyword">DEFAULT</span>&#125; [, col_name2<span class="operator">=</span>&#123;expr2 <span class="operator">|</span> <span class="keyword">DEFAULT</span>&#125;]...</span><br><span class="line">[<span class="keyword">WHERE</span> where_condition]</span><br></pre></td></tr></table></figure></li></ul><p>##DELETE 删除记录(单表刪除)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> table_name [<span class="keyword">WHERE</span> where_condition]</span><br></pre></td></tr></table></figure><h2 id="SELECT"><a href="#SELECT" class="headerlink" title="SELECT"></a>SELECT</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> select_expr[,select_expr...]</span><br><span class="line">[</span><br><span class="line"><span class="keyword">FROM</span> table_references</span><br><span class="line">[<span class="keyword">WHERE</span> where_condition]</span><br><span class="line">[<span class="keyword">GROUP</span> <span class="keyword">BY</span> &#123;col_name <span class="operator">|</span> position&#125; [<span class="keyword">ASC</span> <span class="operator">|</span> <span class="keyword">DESC</span>],...]</span><br><span class="line">[<span class="keyword">HAVING</span> where_condition]</span><br><span class="line">[<span class="keyword">ORDER</span> <span class="keyword">BY</span> &#123;col_name <span class="operator">|</span> expr <span class="operator">|</span>  position) [<span class="keyword">ASC</span> <span class="operator">|</span> <span class="keyword">DESC</span>],...]</span><br><span class="line">[LIMIT &#123;[<span class="keyword">offset</span>,] row_count <span class="operator">|</span> row_count <span class="keyword">OFFSET</span> <span class="keyword">offset</span>&#125;]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="以上选项含义"><a href="#以上选项含义" class="headerlink" title="以上选项含义"></a>以上选项含义</h3><ul><li>select_expr 查询表达式<ul><li>每一个表达式表示想要的一列,必须有至少一个。</li><li>多个列之间以英文逗号分隔。</li><li>星号(*)所有列。 table_name. *可以命名表的所有列。</li><li>查询表达式可以使用[AS] alias_name为其赋予别名。</li><li>别名可用于GROUP BY ORDER BY或HAVING子句。</li></ul></li></ul><h2 id="WHERE-条件表达式"><a href="#WHERE-条件表达式" class="headerlink" title="WHERE 条件表达式"></a>WHERE 条件表达式</h2><ol><li>对记录进行过滤,如果没有指定WHERE子句,则显示所有记录。</li><li>在WHERE表达式中,可以使用MySQL支持的函数或运算符。</li></ol><h2 id="GROUP-BY-查询结果分组"><a href="#GROUP-BY-查询结果分组" class="headerlink" title="GROUP BY 查询结果分组"></a>GROUP BY 查询结果分组</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">GROUP</span> <span class="keyword">BY</span> &#123;col_name position&#125; [<span class="keyword">ASC</span> <span class="operator">|</span> <span class="keyword">DESC</span>],...]</span><br></pre></td></tr></table></figure><h2 id="HAVING-条件分组"><a href="#HAVING-条件分组" class="headerlink" title="HAVING 条件分组"></a>HAVING 条件分组</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">HAVING</span> where_condition]</span><br></pre></td></tr></table></figure><h2 id="ORDER-BY-对查询结果进行排序"><a href="#ORDER-BY-对查询结果进行排序" class="headerlink" title="ORDER BY 对查询结果进行排序"></a>ORDER BY 对查询结果进行排序</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">ORDER</span> <span class="keyword">BY</span> &#123;col_name <span class="operator">|</span> expr <span class="operator">|</span> position&#125; [<span class="keyword">ASC</span> <span class="operator">|</span> <span class="keyword">DESC</span>],..]</span><br></pre></td></tr></table></figure><h2 id="LIMIT-限制查询结果返回的数量"><a href="#LIMIT-限制查询结果返回的数量" class="headerlink" title="LIMIT 限制查询结果返回的数量"></a>LIMIT 限制查询结果返回的数量</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[LIMIT &#123;[<span class="keyword">offset</span>,] row_count <span class="operator">|</span> row_count <span class="keyword">OFFSET</span> <span class="keyword">offset</span>&#125;]</span><br></pre></td></tr></table></figure><h1 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h1><p>子查询(Subquery)是指出现在其他SQL语句内的SELECT子句。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t1 <span class="keyword">WHERE</span> coll <span class="operator">=</span> (<span class="keyword">SELECT</span> col2 <span class="keyword">FROM</span> t2);</span><br><span class="line">其中<span class="keyword">SELECT</span> <span class="keyword">FROM</span> t1,称为<span class="keyword">Outer</span> Query<span class="operator">/</span><span class="keyword">Inner</span> Statement</span><br><span class="line"><span class="keyword">SELECT</span> col2 <span class="keyword">FROM</span> t2 ,称为SubQuery</span><br></pre></td></tr></table></figure><ul><li><p>子查询指嵌套在查询内部,且必须始终出现在圆括号内。</p></li><li><p>子查询可以包含多个关键字或条件,</p><ul><li>如DISTINCT、GROUP BY、ORDER BY, LIMIT函数等。</li></ul></li><li><p>子查询的外层查询可以是:SELECT INSERT, UPDATE.SET或DO。</p><ol><li>子查询返回值</li></ol></li><li><p>子查询可以返回标量、一行、一列或子查询。</p><ol><li>使用比较运算符的子查询</li></ol></li><li><p>使用比较运算符的子查询</p><ul><li>&#x3D;, &gt;, &lt; &gt;, &lt;&#x3D; &lt;&gt;. !&gt;, &lt;&#x3D;&gt;</li></ul></li><li><p>语法结构</p><ul><li>operand comparison operator subquery</li></ul></li></ul><h1 id="用-ANY-SOME-或-ALL-修饰的比较运算符"><a href="#用-ANY-SOME-或-ALL-修饰的比较运算符" class="headerlink" title="用 ANY,SOME  或 ALL 修饰的比较运算符"></a>用 ANY,SOME  或 ALL 修饰的比较运算符</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">operand comparison operator <span class="keyword">ANY</span> (subquery)</span><br><span class="line">operand comparison operator <span class="built_in">SUM</span> (subquery)</span><br><span class="line">operand comparison operator <span class="keyword">ALL</span> (subquery)</span><br></pre></td></tr></table></figure><ul><li>ANY、SOME、ALL关键字</li></ul><table><thead><tr><th align="left">运算符</th><th align="left">ANY</th><th align="left">SOME</th><th align="left">ALL</th></tr></thead><tbody><tr><td align="left">&gt;,&gt;&#x3D;</td><td align="left">最小值</td><td align="left">最小值</td><td align="left">最大值</td></tr><tr><td align="left">&lt;,&lt;&#x3D;</td><td align="left">最大值</td><td align="left">最大值</td><td align="left">最小值</td></tr><tr><td align="left">&#x3D;</td><td align="left">任意值</td><td align="left">任意值</td><td align="left"></td></tr><tr><td align="left">&lt;&gt;,!&#x3D;</td><td align="left"></td><td align="left"></td><td align="left">任意值</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 常用命令</title>
      <link href="/posts/Git-common-command.html"/>
      <url>/posts/Git-common-command.html</url>
      
        <content type="html"><![CDATA[<p>Git 常用命令</p><span id="more"></span><p><img src="/assets/Picture/images/GitCmd.jpg"></p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><ul><li>基础配置</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Vitan&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;ivitan95@gmail.com&quot;</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;ivitan95@gmail.com&quot;</span></span><br><span class="line">git config --global color.ui <span class="literal">true</span></span><br><span class="line">git config --global alias.co checkout <span class="comment">#别名</span></span><br><span class="line">git config --global alias.ci commit</span><br><span class="line">git config --global alias.st status</span><br><span class="line">git config --global alias.br branch</span><br><span class="line">git config --global core.editor <span class="string">&quot;vim&quot;</span></span><br><span class="line"><span class="comment"># 设置Editor使用vim</span></span><br><span class="line">git config --global core.quotepath <span class="literal">false</span></span><br><span class="line"><span class="comment"># 设置显示中文文件名</span></span><br></pre></td></tr></table></figure><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><p>查看、添加、提交、删除、找回，重置修改文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">git co  -- &lt;file&gt;</span><br><span class="line"><span class="comment"># 抛弃工作区修改</span></span><br><span class="line">git co  .</span><br><span class="line"><span class="comment"># 抛弃工作区修改</span></span><br><span class="line"></span><br><span class="line">git add &lt;file&gt;</span><br><span class="line"><span class="comment"># 将工作文件修改提交到本地暂存区</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment"># 将所有修改过的工作文件提交暂存区</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">rm</span> &lt;file&gt;</span><br><span class="line"><span class="comment"># 从版本库中删除文件</span></span><br><span class="line">git <span class="built_in">rm</span> &lt;file&gt; --cached</span><br><span class="line"><span class="comment"># 从版本库中删除文件，但不删除文件</span></span><br><span class="line"></span><br><span class="line">git reset &lt;file&gt;</span><br><span class="line"><span class="comment"># 从暂存区恢复到工作文件</span></span><br><span class="line">git reset -- .</span><br><span class="line"><span class="comment"># 从暂存区恢复到工作文件</span></span><br><span class="line">git reset --hard</span><br><span class="line"><span class="comment"># 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改</span></span><br><span class="line"></span><br><span class="line">git ci &lt;file&gt;</span><br><span class="line">git ci .</span><br><span class="line">git ci -a</span><br><span class="line"><span class="comment"># 将git add, git rm和git ci等操作都合并在一起做</span></span><br><span class="line">git ci -am <span class="string">&quot;some comments&quot;</span></span><br><span class="line">git ci --amend</span><br><span class="line"><span class="comment"># 修改最后一次提交记录</span></span><br><span class="line"></span><br><span class="line">git revert &lt;<span class="variable">$id</span>&gt;</span><br><span class="line"><span class="comment"># 恢复某次提交的状态，恢复动作本身也创建了一次提交对象</span></span><br><span class="line">git revert HEAD</span><br><span class="line"><span class="comment"># 恢复最后一次提交的状态</span></span><br></pre></td></tr></table></figure><p>查看文件 diff</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">git diff &lt;file&gt;</span><br><span class="line"><span class="comment"># 比较当前文件和暂存区文件差异</span></span><br><span class="line">git diff</span><br><span class="line">git diff &lt;<span class="variable">$id1</span>&gt; &lt;<span class="variable">$id2</span>&gt;</span><br><span class="line"><span class="comment"># 比较两次提交之间的差异</span></span><br><span class="line">git diff &lt;branch1&gt;..&lt;branch2&gt;</span><br><span class="line"><span class="comment"># 在两个分支之间比较</span></span><br><span class="line">git diff --staged</span><br><span class="line"><span class="comment"># 比较暂存区和版本库差异</span></span><br><span class="line">git diff --cached</span><br><span class="line"><span class="comment"># 比较暂存区和版本库差异</span></span><br><span class="line">git diff --<span class="built_in">stat</span></span><br><span class="line"><span class="comment"># 仅仅比较统计信息</span></span><br></pre></td></tr></table></figure><p>查看提交记录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br><span class="line">git <span class="built_in">log</span> &lt;file&gt;</span><br><span class="line"><span class="comment"># 查看该文件每次提交记录</span></span><br><span class="line">git <span class="built_in">log</span> -p &lt;file&gt;</span><br><span class="line"><span class="comment"># 查看每次详细修改内容的diff</span></span><br><span class="line">git <span class="built_in">log</span> -p -2</span><br><span class="line"><span class="comment"># 查看最近两次详细</span></span><br></pre></td></tr></table></figure><pre><code>- Mac 上可以使用 tig 代替 diff 和 log，brew install tig</code></pre><h1 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h1><h2 id="本地分支管理"><a href="#本地分支管理" class="headerlink" title="本地分支管理"></a>本地分支管理</h2><p>查看、切换、创建和删除分支</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">git br -r</span><br><span class="line"><span class="comment"># 查看远程分支</span></span><br><span class="line">git br &lt;new_branch&gt;</span><br><span class="line"><span class="comment"># 创建新的分支</span></span><br><span class="line">git br -v</span><br><span class="line"><span class="comment"># 查看各个分支最后提交信息</span></span><br><span class="line">git br --merged</span><br><span class="line"><span class="comment"># 查看已经被合并到当前分支的分支</span></span><br><span class="line">git br --no-merged</span><br><span class="line"><span class="comment"># 查看尚未被合并到当前分支的分支</span></span><br><span class="line"></span><br><span class="line">git co &lt;branch&gt;</span><br><span class="line"><span class="comment"># 切换到某个分支</span></span><br><span class="line">git co -b &lt;new_branch&gt;</span><br><span class="line"><span class="comment"># 创建新的分支，并且切换过去</span></span><br><span class="line">git co -b &lt;new_branch&gt; &lt;branch&gt;</span><br><span class="line"><span class="comment"># 基于branch创建新的new_branch</span></span><br><span class="line"></span><br><span class="line">git co <span class="variable">$id</span></span><br><span class="line"><span class="comment"># 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除</span></span><br><span class="line">git co <span class="variable">$id</span> -b &lt;new_branch&gt;</span><br><span class="line"><span class="comment"># 把某次历史提交记录checkout出来，创建成一个分支</span></span><br><span class="line"></span><br><span class="line">git br -d &lt;branch&gt;</span><br><span class="line"><span class="comment"># 删除某个分支</span></span><br><span class="line">git br -D &lt;branch&gt;</span><br><span class="line"><span class="comment"># 强制删除某个分支 (未被合并的分支被删除的时候需要强制)</span></span><br></pre></td></tr></table></figure><p>分支合并和 rebase</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git merge &lt;branch&gt;</span><br><span class="line"><span class="comment"># 将branch分支合并到当前分支</span></span><br><span class="line">git merge origin/master --no-ff</span><br><span class="line"><span class="comment"># 不要Fast-Foward合并，这样可以生成merge提交</span></span><br><span class="line"></span><br><span class="line">git rebase master &lt;branch&gt;</span><br><span class="line"><span class="comment"># 将master rebase到branch，相当于：</span></span><br><span class="line"></span><br><span class="line">git co &lt;branch&gt; &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>补丁管理 (方便在多台机器上开发同步时用)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git diff &gt; ../sync.patch # 生成补丁</span><br><span class="line">git apply ../sync.patch # 打补丁</span><br><span class="line">git apply --check ../sync.patch # 测试补丁能否成功</span><br></pre></td></tr></table></figure><p>暂存管理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git stash # 暂存</span><br><span class="line">git stash list # 列所有stash</span><br><span class="line">git stash apply # 恢复暂存的内容</span><br><span class="line">git stash drop  # 删除暂存区</span><br><span class="line">git stash clear</span><br></pre></td></tr></table></figure><h2 id="远程分支管理"><a href="#远程分支管理" class="headerlink" title="远程分支管理"></a>远程分支管理</h2><p>基础命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br><span class="line"><span class="comment"># 抓取远程仓库所有分支更新并合并到本地</span></span><br><span class="line">git pull --no-ff</span><br><span class="line"><span class="comment"># 抓取远程仓库所有分支更新并合并到本地，不要快进合并</span></span><br><span class="line">git fetch origin</span><br><span class="line"><span class="comment"># 抓取远程仓库更新</span></span><br><span class="line">git merge origin/master</span><br><span class="line"><span class="comment"># 将远程主分支合并到本地当前分支</span></span><br><span class="line">git co --track origin/branch</span><br><span class="line"><span class="comment"># 跟踪某个远程分支创建相应的本地分支</span></span><br><span class="line">git co -b &lt;local_branch&gt; origin/&lt;remote_branch&gt;</span><br><span class="line"><span class="comment"># 基于远程分支创建本地分支，功能同上</span></span><br><span class="line"></span><br><span class="line">git push</span><br><span class="line"><span class="comment"># push所有分支</span></span><br><span class="line">git push origin master</span><br><span class="line"><span class="comment"># 将本地主分支推到远程主分支</span></span><br><span class="line">git push -u origin master</span><br><span class="line"><span class="comment"># 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)</span></span><br><span class="line">git push origin &lt;local_branch&gt;</span><br><span class="line"><span class="comment"># 创建远程分支， origin是远程仓库名</span></span><br><span class="line">git push origin &lt;local_branch&gt;:&lt;remote_branch&gt;</span><br><span class="line"><span class="comment"># 创建远程分支</span></span><br><span class="line">git push origin :&lt;remote_branch&gt;</span><br><span class="line"><span class="comment">#先删除本地分支(git br -d &lt;branch&gt;)，然后再push删除远程分支</span></span><br></pre></td></tr></table></figure><p>远程仓库管理</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br><span class="line"><span class="comment"># 查看远程服务器地址和仓库名称</span></span><br><span class="line">git remote show origin</span><br><span class="line"><span class="comment"># 查看远程服务器仓库状态</span></span><br><span class="line">git remote add origin git@github:stormzhang/demo.git</span><br><span class="line"><span class="comment"># 添加远程仓库地址</span></span><br><span class="line">git remote set-url origin git@github.com:stormzhang/demo.git</span><br><span class="line"><span class="comment"># 设置远程仓库地址(用于修改远程仓库地址</span></span><br></pre></td></tr></table></figure><p>创建远程仓库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --bare robbin_site robbin_site.git</span><br><span class="line"><span class="comment"># 用带版本的项目创建纯版本仓库</span></span><br><span class="line">scp -r my_project.git git@git.csdn.net:~</span><br><span class="line"><span class="comment"># 将纯仓库上传到服务器上</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> robbin_site.git &amp;&amp; <span class="built_in">cd</span> robbin_site.git &amp;&amp; git --bare init</span><br><span class="line"><span class="comment"># 在服务器创建纯仓库</span></span><br><span class="line">git remote add origin git@github.com:robbin/robbin_site.git</span><br><span class="line"><span class="comment"># 设置远程仓库地址</span></span><br><span class="line">git push -u origin master</span><br><span class="line"><span class="comment"># 客户端首次提交</span></span><br><span class="line">git push -u origin develop</span><br><span class="line"><span class="comment"># 首次将本地develop分支提交到远程develop分支，并且track</span></span><br><span class="line"></span><br><span class="line">git remote set-head origin master</span><br><span class="line"><span class="comment"># 设置远程仓库的HEAD指向master分支</span></span><br></pre></td></tr></table></figure><ul><li>也可以命令设置跟踪远程库和本地库</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch --set-upstream master origin/master</span><br><span class="line">git branch --set-upstream develop origin/develop</span><br></pre></td></tr></table></figure><hr><p><strong>Via</strong></p><ul><li><a href="http://stormzhang.com/git/2014/01/27/git-common-command/">stormzhang</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 域名</title>
      <link href="/posts/Hexo-Domain.html"/>
      <url>/posts/Hexo-Domain.html</url>
      
        <content type="html"><![CDATA[<p>Hexo 独立域名</p><span id="more"></span><h1 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h1><p>比较服务商可以到 <a href="https://www.nazhumi.com/">Nazhumi</a> 查看比较。</p><h1 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h1><ul><li>添加 A 记录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A @ 185.199.108.153</span><br><span class="line">A @ 185.199.109.153</span><br><span class="line">A @ 185.199.110.153</span><br><span class="line">A @ 185.199.111.153</span><br></pre></td></tr></table></figure><ul><li>添加 CNAME 记录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CNAME www ivitan.github.io</span><br></pre></td></tr></table></figure><h1 id="本地配置"><a href="#本地配置" class="headerlink" title="本地配置"></a>本地配置</h1><p>新建 CNAME 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;vitan.me&quot;</span> &gt; CNAME</span><br></pre></td></tr></table></figure><h1 id="Github-配置"><a href="#Github-配置" class="headerlink" title="Github 配置"></a>Github 配置</h1><p>仓库设置<br><img src="/assets/Picture/images/20190808222520.png"></p><hr><p><strong>参考</strong></p><ul><li><a href="https://hexo.io/zh-cn/docs/deployment#Netlify">Hexo</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 模式分解</title>
      <link href="/posts/SQLmode.html"/>
      <url>/posts/SQLmode.html</url>
      
        <content type="html"><![CDATA[<h1 id="关系模式"><a href="#关系模式" class="headerlink" title="关系模式"></a>关系模式</h1><p>关系模式R(U)的一个分解p&#x3D;{Ri(Ui)}满足U&#x3D;∪{Ui}，模式分解必须是无损连接并且需要保持函数依赖</p><span id="more"></span><p>无损连接</p><p><code>无损连接是指</code>某关系模式的事例r按照关系模式分解成多个关系r1,…,rk，若r1,…,rk的自然连接（Join操作）等于r，则称该模式分解是无损的.</p><p>测试无损连接</p><p>Chase方法能够检测完全的无损连接，设有n个属性的模式R分解为k个模式Ri，有如下Chase过程：</p><pre><code>1. 构造一个k行n列的表格，每行对应一个模式Ri，每列对应一个属性Aj，若Aj在模式Ri中则表格[i][j]中填入aj，否则填入bij2. 扫描F中的每个FD X→Y3. 若表格中有两行在X分量上相等，在Y分量上不相等则修改Y：若Y的分量中是个是aj，则另一个也修改为aj4. 如果没有aj，则用其中一个bij替换另一个符号（i是所有b中最小的行数）5. 重复2、3、4一直到表格不能修改为止6. 若此时表格中有一行全是a，则该分解是无损连接的分解</code></pre><p>当模式分解是简单的二元分解时（即p&#x3D;{R1,R2}），p是无损连接的分解当且仅当下面FD之一成立：</p><pre><code>1. R1和R2两模式属性的交集 → R1与R2两模式属性的差集2. R1和R2两模式属性的交集 → R2与R1两模式属性的差集</code></pre><p>保持函数依赖</p><p>保持函数依赖是指关系模式R的FD集F在分解后仍在数据库模式中保持不变，这是模式分解的第二个条件</p><p>形式化的定义分解后F在模式Ri上的投影为：</p><p>πRi(F)&#x3D;{X→Y|X→Y∈F+⋂X、Y⊂Ri}</p><p>若分解p满足如下条件则称p<strong>\保持函数依赖</strong>\：</p><p><img src="https://i.loli.net/2018/07/03/5b3b7eba9112d.jpg" alt="Screenshot_20180703-214805__01.jpg"></p><h1 id="关系模式的范式"><a href="#关系模式的范式" class="headerlink" title="关系模式的范式"></a>关系模式的范式</h1><p>含义<br>范式xNF即是满足特定要求的模式，将低一级范式的关系模式通过模式分解转换为高一级范式的关系模式集合的过程叫做规范化</p><p>范式从低级到高级依次为：1NF、2NF、3NF、BCNF、4NF、5NF，高一级的范式总是低一级范式的真子集</p><p>根据关系模式R的不可约FD集F，可以画出节点是属性或属性集，边是由被依赖节点指向依赖节点的有向图来辅助分析关系模式，叫做函数依赖图</p><p>1NF</p><p>1NF要求关系模式R的每一个实例r均满足：r中的每一个元组t的每一个属性中只有一个值，这是关系模式的基本要求</p><p>不满足1NF的关系模式有二义性！</p><p>2NF</p><p>假定：R只有一个候选码，且该候选码为主码</p><p>R∈1NF且R的每一个非主属性（非候选码的其他属性）都完全函数依赖于主码时，R∈2NF</p><p>A完全依赖于W是指：W→A且A不依赖于任何一个W的真子集X，W是主键也可能包括多个属性{X、Y}，非主属性A不能局部函数依赖于X或Y</p><p>不满足2NF的关系模式可能存在［插入异常、删除异常、更新异常和数据冗余］，通过画出函数依赖图无损分解非2NF得到2NF，但2NF也不能完全消除上述问题</p><p>3NF</p><p>假定：R只有一个候选码，且该候选码为主码</p><p>R∈2NF且R的每一个非主属性都不传递依赖于主码时，R∈3NF<br>称A传递依赖于Y则有：Y→X，X→A，并且Y不依赖于X（即Y不等于X）、A不是X的子集</p><p>不满足3NF的关系模式也可能存在［插入异常、删除异常、更新异常和数据冗余］，通过打破传递依赖链条，把关系模式分解成多个子关系模式</p><p>BCNF</p><p>BCNF是3NF处理R有多个候选码的扩展，当R有多个候选码时即使R∈3NF，也可能出现［插入异常、删除异常、更新异常和数据冗余］，这时需要分解为BCNF范式</p><p>如果关系模式R的所有不平凡的、完全的函数依赖的决定因素（左边的属性集）都是候选码，则R∈BCNF<br>若要求保持函数依赖和无损联接，则总可以达到3NF，但不一定满足BCNF；因为BCNF可以达到无损连接，但不一定保持函数依赖</p><h1 id="关系模式分解为范式的分解算法"><a href="#关系模式分解为范式的分解算法" class="headerlink" title="关系模式分解为范式的分解算法"></a>关系模式分解为范式的分解算法</h1><h2 id="保持函数依赖地分解R到3NF"><a href="#保持函数依赖地分解R到3NF" class="headerlink" title="保持函数依赖地分解R到3NF"></a>保持函数依赖地分解R到3NF</h2><p>算法步骤：<br>求出R的最小函数依赖集F</p><p>把所有不在F中出现的属性组成一个关系模式R’，并在U中去掉这些属性</p><p>若F中存在X→A且XA&#x3D;U，则算法结束输出{R’,R(U)}，否则继续下一步</p><p>对F中的FD按相同的左部分组构成一个关系模式Ri(Ui)，Ui包括了该组FD涉及的所有属性</p><p>去掉{Ri(Ui)}中属性集Ui是其他某个关系模式属性集Uj子集的关系模式Ri，得到最终的分解p&#x3D;{R1,R2,…,Rk,R’}，p能够保持函数依赖地把R分解到3NF</p><h2 id="无损连接且保持函数依赖地分解R到3NF"><a href="#无损连接且保持函数依赖地分解R到3NF" class="headerlink" title="无损连接且保持函数依赖地分解R到3NF"></a>无损连接且保持函数依赖地分解R到3NF</h2><p>算法步骤：</p><ol><li>按算法(1)中步骤求出保持函数依赖的3NF分解，设q&#x3D;{R1,R2,…,Rk}</li><li>设X是R的主码，p&#x3D;{R1,R2,…,Rk,R(X)}</li><li>若X是q中某个Ri(Ui)属性集Ui的子集，则删除p中的R(X)</li><li>输出p，p能够无损连接且保持函数依赖地把R分解到3NF</li></ol><h2 id="无损联接地分解R到BCNF"><a href="#无损联接地分解R到BCNF" class="headerlink" title="无损联接地分解R到BCNF"></a>无损联接地分解R到BCNF</h2><p>算法步骤：</p><ol><li>p&#x3D;{R}</li><li>检查p中各关系模式是否满足BCNF，是则终止输出p</li><li>设p中S(Us)非BCNF，则必存在X→A且X不是S的候选码：S分解为S1(XA)和S2(Us-A)，把p中的S替换为S1、S2，跳转至第二步</li></ol><p><strong>参考</strong></p><p><a href="https://blog.csdn.net/u014030117/article/details/46697823">数据库复习11——关系模式与范式</a></p>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 关系代数表达式</title>
      <link href="/posts/SQLrelAlg.html"/>
      <url>/posts/SQLrelAlg.html</url>
      
        <content type="html"><![CDATA[<p>关系代数是关系数据库系统查询语言的理论基础。很有必要学习一下，有些是用代数表达式很方便的东西，用SQL写出来还是挺麻烦的，并不是想象当中那么直接。</p><span id="more"></span><h1 id="一、关系代数的9种操作"><a href="#一、关系代数的9种操作" class="headerlink" title="一、关系代数的9种操作"></a>一、关系代数的9种操作</h1><p> 关系代数中包括了：并、交、差、乘、选择、投影、联接、除、自然联接等操作。</p><p>五个基本操作<br>并(∪)、差(-)、笛卡尔积(×)、选择(σ)、投影(π)</p><p>四个组合操作</p><ol><li>交(∩) 2. 联接(等值联接) 3. 自然联接(R⋈S) 4. 除法(÷)</li></ol><p>注2：等值连接表示先做笛卡尔积(×)之后，对相应列进行选择或等值关联后的结果(仅筛选行、不筛选列)</p><p>注2：自然连接表示两个关系中若有相同名称的属性，则自动作为关联条件，且仅列出一列</p><p>补充各种符号</p><ol><li>投影 π</li><li>选择 σ</li><li>重命名 ρ</li><li>自然连接 ⋈</li><li>θ-连接和相等连接 </li><li>半连接 ⋉ , ⋊</li><li>反连接 ▷</li><li>除法 ÷</li><li>左外连接 ⟕</li><li>右外连接 ⟖</li><li>全外连接 ⟗</li></ol><h1 id="二、关系代数表达式"><a href="#二、关系代数表达式" class="headerlink" title="二、关系代数表达式"></a>二、关系代数表达式</h1><p>由关系代数运算经有限次复合而成的式子称为关系代数表达式。这种表达式的运算结果仍然是一个关系。可以用关系代数表达式表示对数据库的查询和更新操作。</p><h1 id="三、举例说明"><a href="#三、举例说明" class="headerlink" title="三、举例说明"></a>三、举例说明</h1><p>设教学数据库中有3个关系：</p><p>学生关系S(SNO,SNAME,AGE,SEX)</p><p>学习关系SC(SNO,CNO,GRADE)</p><p>课程关系C(CNO,CNAME,TEACHER)</p><ol><li><p>检索学习课程号为C2的学生学号与成绩</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO,GRADE</span><br><span class="line">  <span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> CNO<span class="operator">=</span><span class="string">&#x27;C2&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">π SNO,GRADE(σCNO=&#x27;C2&#x27;(SC))</span><br></pre></td></tr></table></figure></li><li><p>检索学习课程号为C2的学生学号与姓名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SC.SNO,S.SNAME</span><br><span class="line"><span class="keyword">FROM</span> SC,S</span><br><span class="line"><span class="keyword">WHERE</span> SC.SNO<span class="operator">=</span>S.SNO</span><br><span class="line"><span class="keyword">AND</span> SC.CNO<span class="operator">=</span><span class="string">&#x27;C2&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">π SNO,SNAME(σCNO=&#x27;C2&#x27;(S⋈SC))</span><br><span class="line">此查询涉及S和SC，先进行自然连接，然后再执行选择投影操作。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">π SNO,SNAME（S）cross（πSNO(σCNO=&#x27;C2&#x27;(SC))）</span><br><span class="line">自然连接的右分量为&quot;学了C2课的学生学号的集合&quot;。</span><br><span class="line">此表达式比前一个表达式优化，执行起来要省时间、省空间。</span><br></pre></td></tr></table></figure></li><li><p>检索选修课程名为MATHS的学生学号与姓名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SC.SNO,S.SNAME</span><br><span class="line"><span class="keyword">FROM</span> SC,S,C</span><br><span class="line"><span class="keyword">WHERE</span> SC.SNO<span class="operator">=</span>S.SNO</span><br><span class="line"><span class="keyword">AND</span> SC.CNO<span class="operator">=</span>C.CNO</span><br><span class="line"><span class="keyword">AND</span> C.CNAME<span class="operator">=</span><span class="string">&#x27;MATHS&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">π SNO,SANME(σCNAME=&#x27;MATHS&#x27;(S⋈SC⋈C))</span><br></pre></td></tr></table></figure></li><li><p>检索选修课程号为C2或C4的学生学号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> CNO<span class="operator">=</span><span class="string">&#x27;C2&#x27;</span></span><br><span class="line"><span class="keyword">OR</span> CNO<span class="operator">=</span><span class="string">&#x27;C4&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">π SNO(σ CNO=&#x27;C2&#x27;∨CNO=&#x27;C4&#x27;(SC))</span><br></pre></td></tr></table></figure></li><li><p>检索至少选修课程号为C2或C4的学生学号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SA.SNO</span><br><span class="line"><span class="keyword">FROM</span> SC <span class="keyword">AS</span> SA,SC <span class="keyword">AS</span> SB</span><br><span class="line"><span class="keyword">WHERE</span> SA.SNO<span class="operator">=</span>SB.SNO</span><br><span class="line"><span class="keyword">AND</span> SA.CNO<span class="operator">=</span><span class="string">&#x27;C2&#x27;</span></span><br><span class="line"><span class="keyword">AND</span> SB.CNO<span class="operator">=</span><span class="string">&#x27;C4&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">π 1(σ1=4∧2=&#x27;C2&#x27;∧5=&#x27;C4&#x27;（SC×SC）)</span><br></pre></td></tr></table></figure></li><li><p>检索不学C2课的学生姓名与年龄</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNAME,AGE</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line">MINUS</span><br><span class="line"><span class="keyword">SELECT</span> S.SNAME,S.AGE</span><br><span class="line"><span class="keyword">FROM</span> SC,S</span><br><span class="line"><span class="keyword">WHERE</span> SC.SNO<span class="operator">=</span>S.SNO</span><br><span class="line"><span class="keyword">AND</span> SC.CNO<span class="operator">=</span><span class="string">&#x27;C2&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">π SNAME,AGE（S）－πSNAME,AGE(σCNO=&#x27;C2&#x27;（S⋈SC）)</span><br></pre></td></tr></table></figure></li><li><p>检索学习全部课程的学生姓名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">π SNO,CNO(SC)÷πCNO(C)</span><br><span class="line">先用除法取出选取所有课程的SNO集(除法可以理解为一个Filter)</span><br><span class="line">π SNAME(S ⋈ (πSNO,CNO(SC)÷πCNO(C)))</span><br><span class="line">再关联S表取出SNAME</span><br></pre></td></tr></table></figure></li><li><p>检索所学课程包含S3所学课程的学生学号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">π SNO,CNO(SC)÷ πCNO(σSNO=&#x27;S3&#x27;(SC)）</span><br><span class="line">同样运用了除法的特性</span><br></pre></td></tr></table></figure></li><li><p>将新课程元组(‘C10’,’PHYSICS’,’YU’)插入到关系C中</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> C <span class="keyword">VALUES</span>(<span class="string">&#x27;C10&#x27;</span>,<span class="string">&#x27;PHYSICS&#x27;</span>,<span class="string">&#x27;YU&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(C∪(&#x27;C10&#x27;,&#x27;PHYSICS&#x27;,&#x27;YU&#x27;))</span><br><span class="line">记住该符号的用法</span><br></pre></td></tr></table></figure></li><li><p>将学号S4选修课程号为C4的成绩改为85分</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> SC <span class="keyword">SET</span> GRADE<span class="operator">=</span><span class="number">85</span></span><br><span class="line"><span class="keyword">WHERE</span> SNO<span class="operator">=</span><span class="string">&#x27;S4&#x27;</span></span><br><span class="line"><span class="keyword">AND</span> CNO<span class="operator">=</span><span class="string">&#x27;C4&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（SC－（&#x27;S4&#x27;,&#x27;C4&#x27;,?)∪(&#x27;S4&#x27;,&#x27;C4&#x27;,85)）</span><br><span class="line">先用&#x27;－&#x27;实现DELETE功能，再用&#x27;∪&#x27;实现INSERT功能</span><br><span class="line">注意使用?来表示检索时忽略该字段值</span><br></pre></td></tr></table></figure></li></ol><h1 id="四、关系代数表达式的优化"><a href="#四、关系代数表达式的优化" class="headerlink" title="四、关系代数表达式的优化"></a>四、关系代数表达式的优化</h1><p>目的：<br>为了系统在执行时既省时间又能提高效率。</p><p>基本策略：<br>先做选择，运用投影去除多余属性等等。</p><p>优化算法：<br>语法树(尽量提前做选择操作；在每个操作后，应做个投影操作，去掉不用的属性值)</p><p>例如：</p><ol><li>π SNO,SNAME(σGRADE&gt;60(S⋈SC)) 进行优化后转换为：2. π SNO,SNAME(πSNO,SNAME(S)⋈πSNO(σGRADE&gt;60(SC)))<br>–即提前做选择操作；在每个操作后，应做个投影操作，去掉不用的属性值</li></ol><p>又如：</p><ol><li>S(S#,SNAME,AGE,SEX)</li><li>SC(S#,C#,GRADE)</li><li>C(C#,CNAME,TEACHER)</li></ol><p>π CNAME,TEACHER(σSEX&#x3D;’女’(S⋈SC⋈C)) 进行优化后转换为：</p><p>πCNAME,TEACHER(C⋈πC#(πS#,C#(SC)⋈S#(σSEX&#x3D;’女’(S))))</p><p>优化前和优化后的语法树如下所示：</p><p><img src="https://i.loli.net/2018/06/30/5b379215e6b8c.jpg" alt="syntax_tree_thumb.jpg"></p><h1 id="转载注明"><a href="#转载注明" class="headerlink" title="转载注明"></a>转载注明</h1><p><a href="http://www.blogjava.net/decode360/archive/2009/04/15/292362.html">数据库关系代数表达式学习</a></p>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 补充练习题</title>
      <link href="/posts/SQLexercise.html"/>
      <url>/posts/SQLexercise.html</url>
      
        <content type="html"><![CDATA[<p>数据库单表查询</p><span id="more"></span><h1 id="一、实验目的"><a href="#一、实验目的" class="headerlink" title="一、实验目的"></a>一、实验目的</h1><ol><li><p>掌握SELECT语句的基本语法和查询条件表示方法；</p></li><li><p>掌握查询条件表达式和使用方法；</p></li><li><p>掌握GROUP BY 子句的作用和使用方法；</p></li><li><p>掌握HAVING子句的作用和使用方法；</p></li><li><p>掌握ORDER BY子句的作用和使用方法。</p></li></ol><h1 id="二、实验环境"><a href="#二、实验环境" class="headerlink" title="二、实验环境"></a>二、实验环境</h1><p>已安装SQL Server 2005 企业版的计算机(13台)；</p><p>具有局域网环境,有固定IP;</p><h1 id="三、实验学时"><a href="#三、实验学时" class="headerlink" title="三、实验学时"></a>三、实验学时</h1><p>2学时</p><h1 id="四、实验要求"><a href="#四、实验要求" class="headerlink" title="四、实验要求"></a>四、实验要求</h1><ol><li><p>了解数据库查询；</p></li><li><p>了解数据库查询的实现方式；</p></li><li><p>完成实验报告；</p></li></ol><h1 id="五、实验内容及步骤"><a href="#五、实验内容及步骤" class="headerlink" title="五、实验内容及步骤"></a>五、实验内容及步骤</h1><p>以数据库原理实验6数据库中数据为基础，请使用T-SQL 语句实现以下操作：</p><ol><li><p>列出所有不姓刘的所有学生；（not like）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> s</span><br><span class="line"><span class="keyword">where</span> 姓名 <span class="keyword">not</span> <span class="keyword">like</span> <span class="string">&#x27;刘%&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>列出姓“张”且全名为3个汉字的学生；(张__下滑线表示任意一个字符)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> s</span><br><span class="line"><span class="keyword">where</span> 姓名 <span class="keyword">like</span> <span class="string">&#x27;张__&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>显示在2000年以后出生的学生的基本信息；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> s</span><br><span class="line"><span class="keyword">where</span> 年龄<span class="operator">&lt;=</span>(<span class="number">2018</span><span class="number">-2000</span>)</span><br></pre></td></tr></table></figure></li><li><p>查询出课程名含有“数据”字串的所有课程基本信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> c</span><br><span class="line"><span class="keyword">where</span> 课程名 <span class="keyword">like</span> <span class="string">&#x27;数据%&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>列出选修了‘101’课程的学生，按成绩的降序排列；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">where</span> 课程号<span class="operator">=</span><span class="string">&#x27;101&#x27;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 成绩 <span class="keyword">desc</span></span><br></pre></td></tr></table></figure></li><li><p>列出课程表中全部信息，按先修课的升序排列；</p></li><li><p>按照出生年份升序显示所有学生的学号、姓名、性别、出生年份及所在系，在结果集中列标题分别指定为“学号，姓名，性别，出生年份，所在系”；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 学号,姓名,性别,(<span class="number">2018</span><span class="operator">-</span>年龄) <span class="keyword">as</span> 出生年份,所在系</span><br><span class="line"><span class="keyword">from</span> s</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 出生年份 <span class="keyword">asc</span></span><br></pre></td></tr></table></figure></li><li><p>按照院系降序显示所有学生的 “所在系，学号、姓名、性别、年龄”等信息，其中所在系按照以下规定显示：院系为CS显示为计算机系，院系为IS显示为信息系，院系为MA显示为数学系，院系为JZ显示为建筑系，其他显示为院系不明；参考例句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  姓名,所在系,学号,院系英文书写<span class="operator">=</span><span class="keyword">case</span></span><br><span class="line"><span class="keyword">when</span> 所在系<span class="operator">=</span><span class="string">&#x27;计算机系&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;CS&#x27;</span></span><br><span class="line"><span class="keyword">when</span> 所在系<span class="operator">=</span><span class="string">&#x27;信息系&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;IS&#x27;</span></span><br><span class="line"><span class="keyword">when</span> 所在系<span class="operator">=</span><span class="string">&#x27;艺术系&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;AS&#x27;</span></span><br><span class="line"><span class="keyword">when</span> 所在系<span class="operator">=</span><span class="string">&#x27;会计系&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;KS&#x27;</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">from</span> s</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 院系英文书写 <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure></li></ol><p>显示所有院系（要求不能重复，不包括空值），并在结果集中增加一列字段“院系规模”，其中若该院系人数&gt;&#x3D;5则该字段值为“规模很大”，若该院系人数大于等于4小于5则该字段值为“规模一般”， 若该院系人数大于等于2小于4则该字段值为“规模稍小”，否则显示“规模很小”；（参考例句，同学们，适当增加、删除记录，观察结果）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 所在系,<span class="built_in">COUNT</span>(学号) 人数,院系规模<span class="operator">=</span><span class="keyword">case</span></span><br><span class="line"><span class="keyword">when</span> <span class="built_in">COUNT</span>(学号)<span class="operator">&gt;=</span><span class="number">7</span> <span class="keyword">then</span> <span class="string">&#x27;大规模&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="built_in">COUNT</span>(学号)<span class="operator">&gt;=</span><span class="number">5</span> <span class="keyword">and</span>  <span class="built_in">COUNT</span>(学号)<span class="operator">&lt;</span><span class="number">7</span>  <span class="keyword">then</span> <span class="string">&#x27;中等&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="built_in">COUNT</span>(学号)<span class="operator">&lt;</span><span class="number">5</span> <span class="keyword">then</span> <span class="string">&#x27;小规模&#x27;</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">from</span> s</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 所在系</span><br></pre></td></tr></table></figure><ol start="9"><li><p>按照课程号、成绩降序显示课程成绩在70-80之间的学生的学号、课程号及成绩；</p></li><li><p>显示学生信息表中的学生总人数及平均年龄，在结果集中列标题分别指定为“学生总人数，平均年龄”；</p></li><li><p>显示选修的课程数大于3的各个学生的选修课程数；</p></li><li><p>按课程号降序显示选修各个课程的总人数、最高成绩、最低成绩及平均成绩；</p></li><li><p>显示各个所在系男女生人数，其中在结果集中列标题分别指定为“所在系名称、男生人数、女生人数”；</p></li><li><p>列出有二门以上课程（含两门）不及格的学生的学号及该学生的平均成绩；</p></li></ol><h1 id="六、出现问题及解决办法"><a href="#六、出现问题及解决办法" class="headerlink" title="六、出现问题及解决办法"></a>六、出现问题及解决办法</h1><p>如：某些查询操作无法执行，如何解决？</p>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Termux 高级终端使用配置</title>
      <link href="/posts/Termux.html"/>
      <url>/posts/Termux.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://wiki.termux.com/wiki/Main_Page">Termux</a> 是一个 Android 下一个高级的终端模拟器, 开源且不需要 root, 支持 apt 管理软件包，十分方便安装软件包, 完美支持 Python PHP Ruby Go Nodejs MySQL 等。</p></blockquote><h1 id="一键部署脚本"><a href="#一键部署脚本" class="headerlink" title="一键部署脚本"></a>一键部署脚本</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/ivitan/Shell/master/Termux/Termux.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">pkg search &lt;query&gt;  <span class="comment">#搜索包</span></span><br><span class="line">pkg install &lt;package&gt; <span class="comment">#安装包</span></span><br><span class="line">pkg uninstall &lt;package&gt; <span class="comment">#卸载包</span></span><br><span class="line">pkg reinstall &lt;package&gt; <span class="comment">#重新安装包</span></span><br><span class="line">pkg update  <span class="comment">#更新源</span></span><br><span class="line">pkg upgrade <span class="comment">#升级软件包</span></span><br><span class="line">pkg list-all <span class="comment">#列出可供安装的所有包</span></span><br><span class="line">pkg list-installed  <span class="comment">#列出已经安装的包</span></span><br><span class="line">pkg shoe &lt;package&gt;  <span class="comment">#显示某个包的详细信息</span></span><br><span class="line">pkg files &lt;package&gt;  <span class="comment">#显示某个包的</span></span><br></pre></td></tr></table></figure><h2 id="安装-deb-文件"><a href="#安装-deb-文件" class="headerlink" title="安装 *.deb 文件"></a>安装 *.deb 文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i ./package.deb <span class="comment">#安装</span></span><br><span class="line">dpkg --remove [package name] <span class="comment">#卸载</span></span><br><span class="line">dpkg --remove [package name] <span class="comment">#列出所有已安装的包</span></span><br></pre></td></tr></table></figure><h1 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h1><h2 id="清华源"><a href="#清华源" class="headerlink" title="清华源"></a>清华源</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s@^\(deb.*stable main\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux stable main@&#x27;</span> <span class="variable">$PREFIX</span>/etc/apt/sources.list</span><br><span class="line">apt update &amp;&amp; apt upgrade -y</span><br></pre></td></tr></table></figure><p><a href="https://mirrors.tuna.tsinghua.edu.cn/termux">https://mirrors.tuna.tsinghua.edu.cn/termux</a> 代替原文中的 <a href="https://termux.net/">https://termux.net</a> 保存退出</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> EDITOR=vim <span class="comment"># 设置默认编辑器</span></span><br><span class="line">apt edit-sources</span><br></pre></td></tr></table></figure><h2 id="官方其他源"><a href="#官方其他源" class="headerlink" title="官方其他源"></a>官方其他源</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkg install root-repo</span><br><span class="line">pkg install x11-repo</span><br><span class="line">pkg install unstable-repo</span><br></pre></td></tr></table></figure><h2 id="its-pointless"><a href="#its-pointless" class="headerlink" title="its-pointless"></a><a href="https://github.com/its-pointless/its-pointless.github.io">its-pointless</a></h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkg install wget</span><br><span class="line"><span class="variable">$PREFIX</span>/bin/wget https://its-pointless.github.io/setup-pointless-repo.sh</span><br><span class="line">bash setup-pointless-repo.sh</span><br></pre></td></tr></table></figure><ul><li>库包括 gcc-7,gfortran，octave，r-cran（R语言），rustc，scipy 和许多游戏.</li></ul><h2 id="Extra"><a href="#Extra" class="headerlink" title="Extra"></a><a href="https://github.com/thioshp/termux-extra-packages">Extra</a></h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将PGP密钥添加到APT的密钥环中</span></span><br><span class="line">pkg install dirmngr</span><br><span class="line">apt-key adv --keyserver pool.sks-keyservers.net --recv 9D6D488416B493F0</span><br></pre></td></tr></table></figure><h3 id="手动下载公钥并添加它"><a href="#手动下载公钥并添加它" class="headerlink" title="手动下载公钥并添加它"></a>手动下载公钥并添加它</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -LO https://raw.githubusercontent.com/xeffyr/termux-extra-packages/master/pubkey.asc</span><br><span class="line">apt-key add pubkey.asc</span><br></pre></td></tr></table></figure><ul><li><code>apt edit-sources</code> 加入下方内容</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Xeffyr&#x27;s Extra packages</span></span><br><span class="line">deb https://termux.xeffyr.ml/ extra main x11</span><br></pre></td></tr></table></figure><ul><li>库有　OpenJDK</li></ul><h1 id="修改启动问候语"><a href="#修改启动问候语" class="headerlink" title="修改启动问候语"></a>修改启动问候语</h1><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="variable">$PREFIX</span>/etc/motd</span><br></pre></td></tr></table></figure><h2 id="不显示"><a href="#不显示" class="headerlink" title="不显示"></a>不显示</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> ~/.hushlogin</span><br></pre></td></tr></table></figure><h1 id="恢复双层键盘"><a href="#恢复双层键盘" class="headerlink" title="恢复双层键盘"></a>恢复双层键盘</h1><p>Termux在 0.66 取消了双层键盘</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> <span class="variable">$HOME</span>/.termux</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;extra-keys = [[&#x27;ESC&#x27;,&#x27;/&#x27;,&#x27;-&#x27;,&#x27;HOME&#x27;,&#x27;UP&#x27;,&#x27;END&#x27;,&#x27;PGUP&#x27;],[&#x27;TAB&#x27;,&#x27;CTRL&#x27;,&#x27;ALT&#x27;,&#x27;LEFT&#x27;,&#x27;DOWN&#x27;,&#x27;RIGHT&#x27;,&#x27;PGDN&#x27;]]&quot;</span> &gt;&gt; <span class="variable">$HOME</span>/.termux/termux.properties</span><br></pre></td></tr></table></figure><h1 id="管理员权限-root-问题"><a href="#管理员权限-root-问题" class="headerlink" title="管理员权限 root 问题"></a>管理员权限 root 问题</h1><h2 id="虚拟管理员-未root"><a href="#虚拟管理员-未root" class="headerlink" title="虚拟管理员(未root)"></a>虚拟管理员(未root)</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkg install proot</span><br><span class="line">termux-chroot <span class="comment"># 启动命令</span></span><br></pre></td></tr></table></figure><ul><li>模拟root环境的同时，还会模拟linux的文件路径。</li><li>普通文件路径是【&#x2F;data&#x2F;data&#x2F;com.termux&#x2F;file&#x2F;home】</li><li>开启后的文件路径是【&#x2F;home】</li></ul><h2 id="真实管理员-已root"><a href="#真实管理员-已root" class="headerlink" title="真实管理员(已root)"></a>真实管理员(已root)</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkg install tsu</span><br><span class="line">tsu <span class="comment"># 启动命令</span></span><br></pre></td></tr></table></figure><ul><li>执行后文件路径不变，因此可以进入手机的任何一个目录</li></ul><h1 id="安装-SSH"><a href="#安装-SSH" class="headerlink" title="安装 SSH"></a>安装 SSH</h1><p>安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install openssh</span><br></pre></td></tr></table></figure><h2 id="设置-SSH-Key"><a href="#设置-SSH-Key" class="headerlink" title="设置 SSH Key"></a>设置 SSH Key</h2><p>配置账户信息</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;UserName&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;email@example.com&quot;</span></span><br></pre></td></tr></table></figure><h2 id="创建-SSH-Key"><a href="#创建-SSH-Key" class="headerlink" title="创建 SSH Key"></a>创建 SSH Key</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;email@example.com&quot;</span></span><br></pre></td></tr></table></figure><h2 id="复制-Key"><a href="#复制-Key" class="headerlink" title="复制 Key"></a>复制 Key</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><h2 id="验证-SSH"><a href="#验证-SSH" class="headerlink" title="验证 SSH"></a>验证 SSH</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h2 id="SSH-基础使用"><a href="#SSH-基础使用" class="headerlink" title="SSH 基础使用"></a>SSH 基础使用</h2><h3 id="远程主机登录"><a href="#远程主机登录" class="headerlink" title="远程主机登录"></a>远程主机登录</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssh root@host</span><br><span class="line">ssh host</span><br><span class="line"><span class="comment">#本地用户名与远程用户名一致，登录时可以省略用户名</span></span><br><span class="line">ssh -p 2222 root@host</span><br><span class="line"><span class="comment"># SSH 的默认端口是22，使用 p 参数，可以修改这个端口。</span></span><br></pre></td></tr></table></figure><h3 id="公钥登录"><a href="#公钥登录" class="headerlink" title="公钥登录"></a>公钥登录</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id user@host</span><br><span class="line"><span class="comment">#将公钥传送到远程主机 host 上面</span></span><br></pre></td></tr></table></figure><ul><li>如果还是不行，就打开远程主机的 <code>/etc/ssh/sshd_config</code> 这个文件，检查下面几行前面”#”注释是否取掉。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">RSAAuthentication <span class="built_in">yes</span></span><br><span class="line">PubkeyAuthentication <span class="built_in">yes</span></span><br><span class="line">AuthorizedKeysFile</span><br><span class="line">.ssh/authorized_keys</span><br></pre></td></tr></table></figure><ul><li>然后，重启远程主机的ssh服务。<ul><li>Ubuntu系统 service ssh restart</li><li>Debian系统 &#x2F;etc&#x2F;init.d&#x2F;ssh restart</li></ul></li></ul><h1 id="Oh-My-ZSH"><a href="#Oh-My-ZSH" class="headerlink" title="Oh My ZSH"></a>Oh My ZSH</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt install git zsh curl -y</span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>&quot;</span></span><br><span class="line">chsh -s zsh</span><br></pre></td></tr></table></figure><h1 id="OpenJDK"><a href="#OpenJDK" class="headerlink" title="OpenJDK"></a>OpenJDK</h1><ul><li>JDK1.8<ul><li><a href="https://drive.google.com/file/d/1PdNqmLrhFlBoRlpCW-mC6CHbVS_Lva9D/view?usp=drivesdk">aarch64谷歌云盘</a></li><li><a href="https://pan.baidu.com/s/14T-2L2j3gZaxfbwkZxJxqg">aarch64百度云盘密码:ryea</a></li></ul></li><li>JDK1.9<ul><li><del><a href="https://drive.google.com/file/d/1U3o34Z3aI_g8mvkJ2gP3YfBB6aaQS1xK/view?usp=drivesdk">aarch64下载</a></del></li></ul></li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> storage/下载目录</span><br><span class="line">dpkg -i openjdk9_9.2017.8.20_aarch64.deb</span><br></pre></td></tr></table></figure><h2 id="Java-8"><a href="#Java-8" class="headerlink" title="Java 8"></a>Java 8</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/ivitan/Shell/releases/download/Java/java8.deb -O ~/Java.deb</span><br><span class="line">dpkg -i ~/Java.deb</span><br><span class="line"><span class="built_in">rm</span> -rf ~/Java.deb</span><br></pre></td></tr></table></figure><h1 id="安装-Nodejs"><a href="#安装-Nodejs" class="headerlink" title="安装 Nodejs"></a>安装 Nodejs</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkg install nodejs</span><br><span class="line">pkg install nodejs-lts</span><br></pre></td></tr></table></figure><h2 id="解决-npm-出现-npm-err-cannot-read-property-‘length’-of-undefined-问题"><a href="#解决-npm-出现-npm-err-cannot-read-property-‘length’-of-undefined-问题" class="headerlink" title="解决 npm 出现 npm err! cannot read property ‘length’ of undefined 问题"></a>解决 npm 出现 npm err! cannot read property ‘length’ of undefined 问题</h2><ul><li>复制下面内容</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(require(<span class="string">&#x27;os&#x27;</span>).cpus() || &#123; length: 1 &#125;).length</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ../usr/lib/node_modules/npm/node_modules/worker-farm/lib/farm.js</span><br></pre></td></tr></table></figure><ul><li>修改如下</li></ul><p><img src="/assets/Picture/images/5b3044e8a329d.jpg"></p><h1 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install hexo-cli -g</span><br><span class="line">npm init</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git</span><br><span class="line">hexo g      <span class="comment">#生成静态文件</span></span><br><span class="line">hexo s      <span class="comment">#启动 Hexo</span></span><br><span class="line">hexo d      <span class="comment">#部署到 Github</span></span><br><span class="line">hexo new <span class="string">&quot;my blog&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo s      <span class="comment">#开启本地服务</span></span><br><span class="line">hexo clean  <span class="comment">#清除 public</span></span><br><span class="line">npm update -g <span class="comment">#版本更新</span></span><br></pre></td></tr></table></figure><h1 id="Mariadb-MySQL"><a href="#Mariadb-MySQL" class="headerlink" title="Mariadb(MySQL)"></a>Mariadb(MySQL)</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install mariadb</span><br></pre></td></tr></table></figure><h2 id="安装基本数据"><a href="#安装基本数据" class="headerlink" title="安装基本数据"></a>安装基本数据</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_install_db</span><br></pre></td></tr></table></figure><ul><li>mysqld: Can’t read dir ofソdata&#x2F;data&#x2F;com . termux&#x2F;files&#x2F;usr&#x2F;e tc&#x2F;my.cnf.d’ (Errcode: 2 “No such file or directory”) Fatal error in defaults handling. Program aborted<ul><li>先在<code>my.cnf</code>所在目录下新建<code>my.cnf.d</code>文件夹，然后执行<code>mysql_install_db</code></li></ul></li></ul><h2 id="启动-Mariadb-服务"><a href="#启动-Mariadb-服务" class="headerlink" title="启动 Mariadb 服务"></a>启动 Mariadb 服务</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld</span><br></pre></td></tr></table></figure><ul><li>启动mysql后，该回话便无法进行任何操作，需要左滑唤醒会话菜单，开启新的回话。而倘若不在一个会话里启动mysqld，而是直接运行mysql，则会2002错误。</li></ul><h2 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation</span><br><span class="line"><span class="comment"># 输入旧密码，空则直接回车</span></span><br><span class="line">Set root password? [Y/n] y</span><br><span class="line">New password:</span><br><span class="line">Re-enter new password:# 两次输入新密码</span><br><span class="line"></span><br><span class="line">Remove anonymous <span class="built_in">users</span>? [Y/n] Y <span class="comment">#是否移除匿名用户</span></span><br><span class="line">Disallow root login remotely? [Y/n] n <span class="comment">#是否不允许root远程登录</span></span><br><span class="line">Remove <span class="built_in">test</span> database and access to it? [Y/n] n <span class="comment">#是否移除test数据库</span></span><br><span class="line">Reload privilege tables now? [Y/n] y <span class="comment">#是否重新加载表的权限</span></span><br></pre></td></tr></table></figure><h2 id="登录-MySQL"><a href="#登录-MySQL" class="headerlink" title="登录 MySQL"></a>登录 MySQL</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">Enter password: ***apache2</span><br></pre></td></tr></table></figure><ul><li>或者使用</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p******</span><br></pre></td></tr></table></figure><h1 id="Python-环境部署"><a href="#Python-环境部署" class="headerlink" title="Python 环境部署"></a>Python 环境部署</h1><h2 id="Python-2"><a href="#Python-2" class="headerlink" title="Python 2"></a>Python 2</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install python2</span><br></pre></td></tr></table></figure><h2 id="Python-3"><a href="#Python-3" class="headerlink" title="Python 3"></a>Python 3</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install python</span><br></pre></td></tr></table></figure><h2 id="升级-pip-版本"><a href="#升级-pip-版本" class="headerlink" title="升级 pip 版本"></a>升级 pip 版本</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python2 -m pip install --upgrade pip</span><br><span class="line">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure><p>pip 版本查看</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip -v</span><br><span class="line">pip3.6 -v</span><br></pre></td></tr></table></figure><h2 id="ipython"><a href="#ipython" class="headerlink" title="ipython"></a>ipython</h2><p>ipython 是一个 python 的交互式 shell，支持变量自动补全，自动缩进，支持 bash shell 命令，内置了许多很有用的功能和函数。学习 ipython 将会让我们以一种更高的效率来使用 python。<br>先安装clang, 否则直接使用pip安装ipython会失败报错.</p><ul><li>安装</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkg install clang</span><br><span class="line">pip install ipython</span><br><span class="line">pip3.6 install ipython</span><br></pre></td></tr></table></figure><ul><li>使用</li></ul><p>别使用<code>ipython</code>和<code>ipython2</code>进入<code>py2</code>和<code>py3</code>控制台:</p><h1 id="PHP部署"><a href="#PHP部署" class="headerlink" title="PHP部署"></a>PHP部署</h1><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkg install php <span class="comment"># 可采用phpinfo进行测试</span></span><br><span class="line">php -S 127.0.0.1:8080 -t www/</span><br></pre></td></tr></table></figure><ul><li>编写测试文件</li></ul><ol><li>在家目录下建一个www文件夹: <code>mkdir www</code></li><li>在www文件夹下新建一个 <code>index.php</code> 文件, 其内容为</li></ol><figure class="highlight php"><figcaption><span>index.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">phpinfo</span>();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Nmap-口扫描必备工具"><a href="#Nmap-口扫描必备工具" class="headerlink" title="Nmap(口扫描必备工具)"></a>Nmap(口扫描必备工具)</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install nmap</span><br></pre></td></tr></table></figure><h1 id="hydra"><a href="#hydra" class="headerlink" title="hydra"></a>hydra</h1><p>Hydra 是著名的黑客组织 THC 的一款开源暴力破解工具这是一个验证性质的工具，主要目的是：展示安全研究人员从远程获取一个系统认证权限。</p><ul><li>安装</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install hydra</span><br></pre></td></tr></table></figure><h1 id="sslscan"><a href="#sslscan" class="headerlink" title="sslscan"></a>sslscan</h1><p>SSLscan 主要探测基于 ssl 的服务，如 https。SSLscan 是一款探测目标服务器所支持的 SSL 加密算法工具。</p><ul><li>安装</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install sslscan</span><br></pre></td></tr></table></figure><h1 id="whatportis"><a href="#whatportis" class="headerlink" title="whatportis"></a>whatportis</h1><p>whatportis 是一款可以通过服务查询默认端口，或者是通过端口查询默认服务的工具，简单易用。在渗透测试过程中，如果需要查询某个端口绑定什么服务器，或者某个应用绑定的默认端口，可以使用 whatportis 查询。</p><ul><li>安装</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip2 install whatportis</span><br></pre></td></tr></table></figure><h1 id="RouterSploit"><a href="#RouterSploit" class="headerlink" title="RouterSploit"></a>RouterSploit</h1><p>RouteSploit 框架是一款开源的路由器等嵌入式设备漏洞检测及利用框架。</p><ul><li>安装</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip2 install requests</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/reverse-shell/routersploit</span><br><span class="line"><span class="built_in">cd</span> routersploit</span><br><span class="line">python2 rsf.py</span><br></pre></td></tr></table></figure><h1 id="Slowloris-低带宽的-DoS-工具"><a href="#Slowloris-低带宽的-DoS-工具" class="headerlink" title="Slowloris 低带宽的 DoS 工具"></a>Slowloris 低带宽的 DoS 工具</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/gkbrk/slowloris.git</span><br><span class="line"><span class="built_in">cd</span> slowloris</span><br><span class="line"><span class="built_in">chmod</span> +x slowloris.py</span><br></pre></td></tr></table></figure><hr><p><strong>参考</strong></p><ul><li><a href="https://wiki.termux.com/wiki/Package_Management">Termux Wike</a></li><li><a href="http://www.liuxi.site/2018/05/16/android%E4%B8%8A%E7%9A%84%E7%BB%88%E7%AB%AF%E2%80%94%E2%80%94termux/">android上的终端——termux</a></li><li><a href="http://www.sqlsec.com/2018/05/termux.html">Termux 高级终端安装使用配置教程</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Android </tag>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 检索练习题</title>
      <link href="/posts/SQLselect.html"/>
      <url>/posts/SQLselect.html</url>
      
        <content type="html"><![CDATA[<p>检索，存储过程，触发器相关练习。</p><span id="more"></span><table><thead><tr><th align="left">仓库号</th><th align="left">城市</th><th align="left">面积</th></tr></thead><tbody><tr><td align="left">WH1</td><td align="left">北京</td><td align="left">370</td></tr><tr><td align="left">WH2</td><td align="left">上海</td><td align="left">500</td></tr><tr><td align="left">WH3</td><td align="left">广州</td><td align="left">200</td></tr><tr><td align="left">WH4</td><td align="left">广州</td><td align="left">300</td></tr><tr><td align="left">WH5</td><td align="left">天津</td><td align="left">340</td></tr><tr><td align="left">WH6</td><td align="left">上海</td><td align="left">350</td></tr><tr><td align="left">WH7</td><td align="left">上海</td><td align="left">600</td></tr><tr><td align="left">WH8</td><td align="left">天津</td><td align="left">300</td></tr></tbody></table><hr><table><thead><tr><th align="left">职工号</th><th align="left">仓库号</th><th align="left">工资</th></tr></thead><tbody><tr><td align="left">E1</td><td align="left">WH2</td><td align="left">2220</td></tr><tr><td align="left">E2</td><td align="left">WH1</td><td align="left">1810</td></tr><tr><td align="left">E3</td><td align="left">WH2</td><td align="left">1850</td></tr><tr><td align="left">E5</td><td align="left">WH3</td><td align="left">1530</td></tr><tr><td align="left">E6</td><td align="left">WH1</td><td align="left">1550</td></tr><tr><td align="left">E7</td><td align="left">WH4</td><td align="left">2300</td></tr><tr><td align="left">E8</td><td align="left">WH4</td><td align="left">2000</td></tr><tr><td align="left">E9</td><td align="left">WH5</td><td align="left">2050</td></tr><tr><td align="left">E10</td><td align="left">WH5</td><td align="left">1900</td></tr><tr><td align="left">E11</td><td align="left">WH6</td><td align="left">2100</td></tr><tr><td align="left">E12</td><td align="left">WH7</td><td align="left">1700</td></tr><tr><td align="left">E15</td><td align="left">WH5</td><td align="left">1780</td></tr><tr><td align="left">E16</td><td align="left">WH1</td><td align="left">1600</td></tr></tbody></table><hr><table><thead><tr><th align="left">职工号</th><th align="left">供应商号</th><th align="left">订购单号</th><th align="left">订购日期</th></tr></thead><tbody><tr><td align="left">E3</td><td align="left">S7</td><td align="left">OR67</td><td align="left">2005-12-4</td></tr><tr><td align="left">E1</td><td align="left">S4</td><td align="left">OR73</td><td align="left">2006-4-1</td></tr><tr><td align="left">E7</td><td align="left">S4</td><td align="left">OR76</td><td align="left">2006-4-2</td></tr><tr><td align="left">E6</td><td align="left">S6</td><td align="left">OR77</td><td align="left">2006-1-21</td></tr><tr><td align="left">E3</td><td align="left">S4</td><td align="left">OR79</td><td align="left">2005-11-15</td></tr><tr><td align="left">E1</td><td align="left">S6</td><td align="left">OR80</td><td align="left">2006-2-1</td></tr><tr><td align="left">E3</td><td align="left">S6</td><td align="left">OR90</td><td align="left">2006-3-12</td></tr><tr><td align="left">E3</td><td align="left">S3</td><td align="left">OR91</td><td align="left">2006-3-2</td></tr></tbody></table><hr><p>|供应商号|供应商名|地址|<br>|:—|:—-|:—|:—|<br>|S3|振华电子厂|西安|<br>|S4|华通电子公司|北京|<br>|S6|607厂|郑州|<br>|S7|爱华电子厂|北京|</p><h1 id="检索"><a href="#检索" class="headerlink" title="检索"></a>检索</h1><ol><li>检索在北京的供应商的名称。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 供应商名 <span class="keyword">from</span> gys <span class="keyword">where</span> 地址<span class="operator">=</span><span class="string">&#x27;北京&#x27;</span></span><br></pre></td></tr></table></figure></li><li>检索发给供应商S6的订购单号。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 订购单号 <span class="keyword">from</span> dg <span class="keyword">where</span> 供应商号<span class="operator">=</span><span class="string">&#x27;S6&#x27;</span></span><br></pre></td></tr></table></figure></li><li>检索出职工E6发给供应商S6的订购单信息。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dg <span class="keyword">where</span> 职工号<span class="operator">=</span><span class="string">&#x27;E6&#x27;</span><span class="keyword">and</span> 供应商号<span class="operator">=</span><span class="string">&#x27;S6&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>检索出向供应商S3发过订购单的职工的职工号和仓库号。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> zg.职工号,仓库号 <span class="keyword">from</span> dg <span class="keyword">join</span> zg <span class="keyword">on</span> zg.职工号<span class="operator">=</span>dg.职工号</span><br><span class="line"> <span class="keyword">where</span> 供应商号<span class="operator">=</span><span class="string">&#x27;S3&#x27;</span></span><br></pre></td></tr></table></figure></li><li>检索出目前与S3供应商没有联系的职工信息。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> zg <span class="keyword">where</span> 职工号 <span class="keyword">not</span> <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 职工号 <span class="keyword">from</span> dg <span class="keyword">where</span> 供应商号<span class="operator">=</span><span class="string">&#x27;S3&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li>检索出目前没有任何订购单的供应商信息<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> gys <span class="keyword">where</span> 供应商号 <span class="keyword">not</span> <span class="keyword">in</span></span><br><span class="line"> (<span class="keyword">select</span> <span class="keyword">distinct</span> 供应商号 <span class="keyword">from</span> dg)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> gys <span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> </span><br><span class="line">( <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> dg <span class="keyword">WHERE</span> 供应商号<span class="operator">=</span>gys.供应商号 ) </span><br></pre></td></tr></table></figure></li><li>检索出和职工E1、E3都有联系的北京的供应商的信息。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> gys <span class="keyword">where</span> 地址<span class="operator">=</span><span class="string">&#x27;北京&#x27;</span> </span><br><span class="line"><span class="keyword">and</span> 供应商号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 供应商号 <span class="keyword">from</span> dg <span class="keyword">where</span> 职工号<span class="operator">=</span><span class="string">&#x27;E1&#x27;</span>)</span><br><span class="line"><span class="keyword">and</span> 供应商号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 供应商号 <span class="keyword">from</span> dg <span class="keyword">where</span> 职工号<span class="operator">=</span><span class="string">&#x27;E3&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li>检索出目前和华通电子公司有业务联系的每个职工的工资。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 职工号,工资 <span class="keyword">from</span> zg <span class="keyword">where</span> 职工号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 职工号 <span class="keyword">from</span> dg <span class="keyword">where</span> 供应商号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 供应商号 <span class="keyword">from</span> gys <span class="keyword">where</span> 供应商名<span class="operator">=</span><span class="string">&#x27;华通电子公司&#x27;</span>))</span><br></pre></td></tr></table></figure></li><li>检索出与工资在1220元以下的职工没有联系的供应商名称。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 供应商名 <span class="keyword">from</span> gys </span><br><span class="line"><span class="keyword">where</span> 供应商号 <span class="keyword">not</span> <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 供应商号 <span class="keyword">from</span> dg </span><br><span class="line"><span class="keyword">where</span> 职工号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 职工号 <span class="keyword">from</span> zg <span class="keyword">where</span> 工资<span class="operator">&lt;</span><span class="number">1220</span>))</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 供应商名 <span class="keyword">from</span> gys </span><br><span class="line"><span class="keyword">where</span> 供应商号 <span class="keyword">not</span> <span class="keyword">in</span> </span><br><span class="line">(<span class="keyword">select</span> 供应商号 <span class="keyword">from</span> dg <span class="keyword">join</span> zg <span class="keyword">on</span> dg.职工号<span class="operator">=</span>zg.职工号</span><br><span class="line"><span class="keyword">where</span> 工资<span class="operator">&gt;</span><span class="number">2250</span>)</span><br></pre></td></tr></table></figure></li><li>检索出向S4供应商发出订购单的仓库所在的城市。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 城市 <span class="keyword">from</span> ck <span class="keyword">where</span> 仓库号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 仓库号 <span class="keyword">from</span> zg <span class="keyword">where</span> 职工号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 职工号 <span class="keyword">from</span> dg <span class="keyword">where</span> 供应商号<span class="operator">=</span><span class="string">&#x27;S4&#x27;</span>))</span><br></pre></td></tr></table></figure></li><li>检索出在上海工作并且向S6供应商发出了订购单的职工号。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 职工号 <span class="keyword">from</span> zg <span class="keyword">where</span> 仓库号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 仓库号 <span class="keyword">from</span> ck <span class="keyword">where</span> 城市<span class="operator">=</span><span class="string">&#x27;上海&#x27;</span> <span class="keyword">and</span> 职工号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 职工号 <span class="keyword">from</span> dg <span class="keyword">where</span> 供应商号<span class="operator">=</span><span class="string">&#x27;S6&#x27;</span>))</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> dg.职工号 <span class="keyword">from</span> zg <span class="keyword">join</span> ck <span class="keyword">on</span> zg.仓库号<span class="operator">=</span>ck.仓库号</span><br><span class="line"><span class="keyword">join</span> dg <span class="keyword">on</span> zg.职工号<span class="operator">=</span>dg.职工号</span><br><span class="line"><span class="keyword">where</span> 城市<span class="operator">=</span><span class="string">&#x27;上海&#x27;</span> <span class="keyword">and</span> 供应商号<span class="operator">=</span><span class="string">&#x27;S6&#x27;</span></span><br></pre></td></tr></table></figure></li><li>检索出在广州工作并且只向S6供应商发出了订购单的职工号。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 职工号 <span class="keyword">from</span> zg <span class="keyword">where</span> 仓库号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 仓库号 <span class="keyword">from</span> ck <span class="keyword">where</span> 城市<span class="operator">=</span><span class="string">&#x27;广州&#x27;</span> </span><br><span class="line"><span class="keyword">and</span> 职工号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 职工号 <span class="keyword">from</span> dg <span class="keyword">where</span> 供应商号<span class="operator">=</span><span class="string">&#x27;S6&#x27;</span>) </span><br><span class="line"><span class="keyword">and</span> 职工号 <span class="keyword">not</span> <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">SELECT</span> 职工号 <span class="keyword">FROM</span> dg <span class="keyword">WHERE</span> 供应商号<span class="operator">!=</span><span class="string">&#x27;S6&#x27;</span>))</span><br></pre></td></tr></table></figure></li><li>检索出由工资多于1230元的职工向北京的供应商发出的订购单号。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 订购单号 <span class="keyword">from</span> dg <span class="keyword">where</span> 职工号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 职工号 <span class="keyword">from</span> zg <span class="keyword">where</span> 工资<span class="operator">&gt;</span><span class="number">1230</span>) <span class="keyword">and</span>  供应商号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 供应商号 <span class="keyword">from</span> gys <span class="keyword">where</span> 地址<span class="operator">=</span><span class="string">&#x27;北京&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 订购单号 <span class="keyword">from</span> dg <span class="keyword">where</span> 职工号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 职工号 <span class="keyword">from</span> zg <span class="keyword">where</span> 工资<span class="operator">&gt;</span><span class="number">2000</span>)</span><br><span class="line"><span class="keyword">and</span> 供应商号 <span class="keyword">in</span> (</span><br><span class="line"><span class="keyword">select</span> 供应商号 <span class="keyword">from</span> gys <span class="keyword">where</span> 地址<span class="operator">=</span><span class="string">&#x27;北京&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li>检索出仓库的个数<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(仓库号) <span class="keyword">from</span> ck</span><br></pre></td></tr></table></figure></li><li>检索出有最大面积的仓库信息。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ck <span class="keyword">where</span> ck.面积<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(面积) <span class="keyword">from</span> ck )</span><br></pre></td></tr></table></figure></li><li>检索出所有仓库的平均面积。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(面积) 平均面积  <span class="keyword">from</span> ck</span><br></pre></td></tr></table></figure></li><li>检索出向S4供应商发出订购单的那些仓库的平均面积。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(面积) <span class="keyword">as</span> 平均面积 <span class="keyword">from</span> ck <span class="keyword">where</span> 仓库号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 仓库号 <span class="keyword">from</span> zg <span class="keyword">where</span> 职工号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 仓库号 <span class="keyword">from</span> dg <span class="keyword">where</span> 供应商号<span class="operator">=</span><span class="string">&#x27;S4&#x27;</span>))</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(面积) <span class="keyword">as</span> 平均面积 <span class="keyword">from</span> ck</span><br><span class="line"><span class="keyword">where</span> 仓库号 <span class="keyword">in</span> </span><br><span class="line">(<span class="keyword">select</span> 仓库号 <span class="keyword">from</span> zg <span class="keyword">join</span> dg <span class="keyword">on</span> zg.职工号<span class="operator">=</span>dg.职工号</span><br><span class="line"><span class="keyword">where</span> 供应商号<span class="operator">=</span><span class="string">&#x27;S4&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li>检索出每个城市的供应商个数。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 地址,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> gys</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 地址</span><br></pre></td></tr></table></figure></li><li>检索出每个仓库中工资多于1220元的职工个数。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 仓库号,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> zg <span class="keyword">where</span> 工资<span class="operator">&gt;</span><span class="number">1220</span></span><br><span class="line"> <span class="keyword">group</span> <span class="keyword">by</span> 仓库号</span><br></pre></td></tr></table></figure></li><li>检索出和面积最小的仓库有联系的供应商的个数。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(供应商号) <span class="keyword">from</span> gys <span class="keyword">where</span> 供应商号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 供应商号 <span class="keyword">from</span> dg <span class="keyword">where</span> 职工号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 职工号 <span class="keyword">from</span> zg <span class="keyword">where</span> 仓库号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 仓库号 <span class="keyword">from</span> ck <span class="keyword">where</span> 面积<span class="operator">=</span></span><br><span class="line">(<span class="keyword">select</span> <span class="built_in">min</span>(面积) <span class="keyword">from</span> ck))))</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(供应商号) <span class="keyword">from</span> dg <span class="keyword">where</span> 职工号 <span class="keyword">in</span> </span><br><span class="line">(<span class="keyword">select</span> 职工号 <span class="keyword">from</span> zg <span class="keyword">where</span> 仓库号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 仓库号 <span class="keyword">from</span> ck <span class="keyword">where</span> 面积<span class="operator">=</span>(<span class="keyword">select</span> <span class="built_in">min</span>(面积) <span class="keyword">from</span> ck)))</span><br></pre></td></tr></table></figure></li><li>检索出工资低于本仓库平均工资的职工信息。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 职工 <span class="keyword">out</span> <span class="keyword">WHERE</span> 工资<span class="operator">&lt;</span> </span><br><span class="line">(<span class="keyword">SELECT</span> <span class="built_in">AVG</span>(工资) <span class="keyword">FROM</span> 职工 inne </span><br><span class="line"><span class="keyword">WHERE</span> 仓库号<span class="operator">=</span>out.仓库号) </span><br></pre></td></tr></table></figure></li></ol><h1 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h1><ol><li><p>创建一个存储过程P1，输入某个仓库号，查询对应仓库的<br>信息。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> proc P1</span><br><span class="line"><span class="variable">@ckh</span> nvarchar(<span class="number">225</span>) </span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ck <span class="keyword">where</span> 仓库号<span class="operator">=</span><span class="variable">@ckh</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exec</span> P1 <span class="string">&#x27;WH8&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>创建一个存储过程P2，输入某个仓库号，输出对应仓库的的职工人数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> proc P2</span><br><span class="line"><span class="variable">@ckh</span> nvarchar(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(职工号) 职工人数 <span class="keyword">from</span> zg <span class="keyword">where</span> 仓库号 <span class="operator">=</span> <span class="variable">@ckh</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 仓库号</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exec</span> P2 <span class="string">&#x27;WH1&#x27;</span></span><br></pre></td></tr></table></figure></li></ol><hr><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">TRIGGER</span> tri_salary</span><br><span class="line"><span class="keyword">ON</span> zhg <span class="keyword">FOR</span> <span class="keyword">UPDATE</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> INSERTED <span class="keyword">JOIN</span></span><br><span class="line">DELETED <span class="keyword">ON</span> INSERTED.职工号 <span class="operator">=</span> DELETED.职工号</span><br><span class="line">IF <span class="keyword">UPDATE</span>(工资)</span><br><span class="line">IF <span class="keyword">EXISTS</span>(<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> INSERTED <span class="keyword">JOIN</span></span><br><span class="line">DELETED <span class="keyword">ON</span> INSERTED.职工号 <span class="operator">=</span> DELETED.职工号</span><br><span class="line"><span class="keyword">WHERE</span> INSERTED.工资<span class="operator">&amp;</span>lt;DELETED.工资)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">print(<span class="operator">&amp;</span>#<span class="number">39</span>;新工资值低于原工资，拒绝修改<span class="operator">&amp;</span>#<span class="number">39</span>;)</span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> countzhigong</span><br><span class="line"><span class="variable">@ck</span> <span class="type">char</span>(<span class="number">20</span>), <span class="variable">@renshu</span> <span class="type">int</span> output</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@renshu</span> <span class="operator">=</span> <span class="built_in">count</span>(职工号)</span><br><span class="line"><span class="keyword">FROM</span> ck <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">JOIN</span> zhg <span class="keyword">ON</span> ck.仓库号<span class="operator">=</span> zhg.仓库号</span><br><span class="line"><span class="keyword">WHERE</span> ck.仓库号<span class="operator">=</span><span class="variable">@ck</span></span><br><span class="line"><span class="keyword">Declare</span> <span class="variable">@re</span> <span class="type">int</span></span><br><span class="line"><span class="keyword">Execute</span> countzhigong <span class="operator">&amp;</span>#<span class="number">39</span>;wh2<span class="operator">&amp;</span>#<span class="number">39</span>;, <span class="variable">@re</span> output</span><br><span class="line">Print <span class="variable">@re</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> ck <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">JOIN</span> zhg <span class="keyword">ON</span> ck.仓库号<span class="operator">=</span> zhg.仓库号</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> zhg</span><br></pre></td></tr></table></figure><hr><h1 id="创建、修改、删除触发器。"><a href="#创建、修改、删除触发器。" class="headerlink" title="创建、修改、删除触发器。"></a>创建、修改、删除触发器。</h1><ol><li>创建一个触发器zhigong1，在对职工表的工资属性修改时触发：每修改一个职工的工资，就检查新工资是否比原工资低，若是低，则恢复原工资而不做修改。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> zhigong1</span><br><span class="line"><span class="keyword">on</span> zg <span class="keyword">for</span> <span class="keyword">insert</span>,<span class="keyword">update</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> inserted <span class="keyword">join</span> deleted </span><br><span class="line"><span class="keyword">on</span> inserted.职工号<span class="operator">=</span>deleted.职工号</span><br><span class="line">if <span class="keyword">update</span>(工资)</span><br><span class="line">if <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> inserted <span class="keyword">join</span> </span><br><span class="line">deleted <span class="keyword">on</span> inserted.职工号<span class="operator">=</span>deleted.职工号</span><br><span class="line"><span class="keyword">where</span> inserted.工资<span class="operator">&lt;</span>deleted.工资)</span><br><span class="line"><span class="keyword">rollback</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> zg <span class="keyword">set</span> 工资<span class="operator">=</span><span class="string">&#x27;3000&#x27;</span> <span class="keyword">where</span> 职工号<span class="operator">=</span><span class="string">&#x27;E9&#x27;</span></span><br></pre></td></tr></table></figure></li><li>创建一个触发器zhigong2，在插入新的职工记录时触发：检查新职工记录的仓库号是否在仓库表的仓库号中存在，如果不存在就撤消插入操作。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">trigger</span> zhigong2</span><br><span class="line"><span class="keyword">on</span> zg <span class="keyword">for</span> <span class="keyword">insert</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> inserted <span class="keyword">join</span> deleted <span class="keyword">on</span> inserted.职工号<span class="operator">=</span>deleted.职工号</span><br><span class="line">if <span class="keyword">not</span> <span class="keyword">exists</span> ( <span class="keyword">select</span> 仓库号 <span class="keyword">from</span> inserted <span class="keyword">where</span> 仓库号 <span class="keyword">in</span> (<span class="keyword">select</span> 仓库号 <span class="keyword">from</span> ck ))</span><br><span class="line"><span class="keyword">rollback</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> zg <span class="keyword">values</span>(<span class="string">&#x27;E33&#x27;</span>,<span class="string">&#x27;WH2&#x27;</span>,<span class="string">&#x27;3000&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li>删除以上两个触发器。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">trigger</span> zhigong1,zhigong2</span><br></pre></td></tr></table></figure></li><li>创建一个触发器dinggou1，在对订购表进行插入操作时，输出该职工的所经手的订购单数目。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span>  <span class="keyword">trigger</span>  dinggou1</span><br><span class="line"><span class="keyword">on</span> dg <span class="keyword">for</span> <span class="keyword">insert</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> dg.职工号,<span class="built_in">count</span>(dg.订购单号) <span class="keyword">as</span> 订购单数目</span><br><span class="line"><span class="keyword">from</span> dg <span class="keyword">join</span> inserted <span class="keyword">on</span> dg.职工号<span class="operator">=</span>inserted.职工号</span><br><span class="line"><span class="keyword">where</span> dg.职工号<span class="operator">=</span>inserted.职工号</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> dg.职工号</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> dg <span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;E1&#x27;</span>,<span class="string">&#x27;S6&#x27;</span>,<span class="string">&#x27;OR98&#x27;</span>,<span class="string">&#x27;2018-01-21 00:00:00.000&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim 插件&amp;主题</title>
      <link href="/posts/Vim-Vundle-Markdown.html"/>
      <url>/posts/Vim-Vundle-Markdown.html</url>
      
        <content type="html"><![CDATA[<p>Vim 插件 主题</p><span id="more"></span><h1 id="SpaceVim"><a href="#SpaceVim" class="headerlink" title="SpaceVim"></a>SpaceVim</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sLf https://spacevim.org/install.sh | bash</span><br></pre></td></tr></table></figure><h1 id="Vundle-插件管理器"><a href="#Vundle-插件管理器" class="headerlink" title="Vundle 插件管理器"></a>Vundle 插件管理器</h1><p>Vundle 是Vim bundle 的简称,是一个 Vim 插件管理器.</p><p>Vundle 允许你做</p><ol><li>在.vimrc中跟踪和管理插件</li><li>安装特定格式的插件(a.k.a. scripts&#x2F;bundle)</li><li>更新特定格式插件</li><li>通过插件名称搜索Vim scripts中的插件</li><li>清理未使用的插件</li><li>可以通过单一按键完成以上操作,详见<a href="https://github.com/VundleVim/Vundle.vim/blob/v0.10.2/doc/vundle.txt#L319-L360">interactive mode</a></li></ol><p>安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</span><br></pre></td></tr></table></figure><ul><li>配置</li></ul><ol><li>编辑</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim .vimrc</span><br></pre></td></tr></table></figure><ol start="2"><li>添加下列内容</li></ol><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> nocompatible   <span class="comment">&quot; be iMproved, required</span></span><br><span class="line"><span class="keyword">filetype</span> off   <span class="comment">&quot; required</span></span><br><span class="line"><span class="keyword">set</span> rtp+=~/.<span class="keyword">vim</span>/bundle/Vundle.<span class="keyword">vim</span></span><br><span class="line"><span class="keyword">call</span> vundle#begin()</span><br><span class="line">Plugin <span class="string">&#x27;VundleVim/Vundle.vim&#x27;</span></span><br><span class="line"><span class="keyword">call</span> vundle#end()   <span class="comment">&quot; required</span></span><br><span class="line"><span class="keyword">filetype</span> plugin <span class="built_in">indent</span> <span class="keyword">on</span>  <span class="comment">&quot; required</span></span><br></pre></td></tr></table></figure><p>安装需要的插件</p><ul><li>bash 下：</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">vim</span> +PluginInstall +<span class="keyword">qall</span></span><br></pre></td></tr></table></figure><ul><li>vim 下</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:PluginInstall</span><br></pre></td></tr></table></figure><h1 id="安装-Markdown-插件"><a href="#安装-Markdown-插件" class="headerlink" title="安装 Markdown 插件"></a>安装 Markdown 插件</h1><p>修改vimrc配置文件,添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Plugin &#x27;godlygeek/tabular&#x27;</span><br><span class="line">Plugin &#x27;plasticboy/vim-markdown&#x27;</span><br></pre></td></tr></table></figure><p>下一步</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim</span><br><span class="line">:PluginInstall</span><br></pre></td></tr></table></figure><h1 id="安装-gruvbox-主题"><a href="#安装-gruvbox-主题" class="headerlink" title="安装 gruvbox 主题"></a>安装 gruvbox 主题</h1><p>在 .vimrc 添加</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Plugin <span class="string">&#x27;morhetz/gruvbox&#x27;</span></span><br><span class="line">Plugin <span class="string">&#x27;vim-airline/vim-airline&#x27;</span></span><br></pre></td></tr></table></figure><p>配置主题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">set bg=dark &quot;设置背景为黑色</span><br><span class="line">colorscheme gruvbox &quot;设置主题为 gruvbox</span><br><span class="line">set guioptions=  &quot;去掉两边的scrollbar</span><br><span class="line">set guifont=Monaco:h17 &quot;设置字体和字的大小</span><br></pre></td></tr></table></figure><h1 id="Vim-airline"><a href="#Vim-airline" class="headerlink" title="Vim-airline"></a>Vim-airline</h1><p>.vimrc 添加插件</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Plugin <span class="string">&#x27;vim-airline/vim-airline</span></span><br><span class="line"><span class="string">Plugin &#x27;</span><span class="keyword">vim</span>-airline/<span class="keyword">vim</span>-airline-themes<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>配置</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;</span> airline settings.</span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_theme</span> = <span class="string">&#x27;simple&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_powerline_fonts</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !exists(<span class="string">&#x27;g:airline_symbols&#x27;</span>)</span><br><span class="line">  <span class="keyword">let</span> <span class="variable">g:airline_symbols</span> = &#123;&#125;</span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_left_sep</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_left_alt_sep</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_right_sep</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_right_alt_sep</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_symbols</span>.branch = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_symbols</span>.readonly = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_symbols</span>.linenr = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline</span>#extensions#tabline#enabled = <span class="number">1</span></span><br><span class="line"><span class="comment">&quot; show absolute file path in status line</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_section_c</span> = <span class="string">&#x27;%&lt;%F%m %#__accent_red#%&#123;airline#util#wrap(airline#parts#readonly(),0)&#125;%#__restore__#&#x27;</span></span><br><span class="line"><span class="comment">&quot; show tab number in tab line</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline</span>#extensions#tabline#tab_nr_type = <span class="number">1</span></span><br></pre></td></tr></table></figure><p>支持主题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">badwolf</span><br><span class="line">base16</span><br><span class="line">behelit</span><br><span class="line">bubblegum</span><br><span class="line">dark</span><br><span class="line">durant</span><br><span class="line">hybridline</span><br><span class="line">hybrid</span><br><span class="line">jellybeans</span><br><span class="line">kalisi</span><br><span class="line">kolor</span><br><span class="line">laederon</span><br><span class="line">light</span><br><span class="line">lucius</span><br><span class="line">luna</span><br><span class="line">molokai</span><br><span class="line">monochrome</span><br><span class="line">murmur</span><br><span class="line">papercolor</span><br><span class="line">powerlineish</span><br><span class="line">raven</span><br><span class="line">serene</span><br><span class="line">silver</span><br><span class="line">simple</span><br><span class="line">solarized</span><br><span class="line">sol</span><br><span class="line">term</span><br><span class="line">tomorrow</span><br><span class="line">ubaryd</span><br><span class="line">understated</span><br><span class="line">wombat</span><br><span class="line">zenburn</span><br></pre></td></tr></table></figure><h1 id="NERD-Tree-文件浏览插件"><a href="#NERD-Tree-文件浏览插件" class="headerlink" title="NERD Tree 文件浏览插件"></a>NERD Tree 文件浏览插件</h1><p>.vimrc 添加插件</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Plugin <span class="string">&#x27;scrooloose/nerdtree&#x27;</span></span><br></pre></td></tr></table></figure><p>打开&#x2F;关闭 NERD Tree</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:NERDTreeToggle</span><br></pre></td></tr></table></figure><p>NERD Tree 配置</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&quot;当 vim 启动没指定文件时，自动打开 NERDTree</span></span><br><span class="line"><span class="keyword">autocmd</span> StdinReadPre * <span class="keyword">let</span> <span class="variable">s:std_in</span>=<span class="number">1</span></span><br><span class="line"><span class="keyword">autocmd</span> VimEnter * <span class="keyword">if</span> <span class="built_in">argc</span>() == <span class="number">0</span> &amp;&amp; !exists(<span class="string">&quot;s:std_in&quot;</span>) | NERDTree | <span class="keyword">endif</span></span><br><span class="line"><span class="comment">&quot;在 normal 下按 ,d 打开关闭文件浏览</span></span><br><span class="line"><span class="keyword">nmap</span> ,d :NERDTreeToggle<span class="symbol">&lt;CR&gt;</span></span><br></pre></td></tr></table></figure><p>使用技巧</p><ol><li>按 <code>?</code>可以打开 NERD tree 帮助文档</li><li>按 <code>j</code> ,<code>k</code> 在 NERD tree上下移动,<code>&lt;c-r&gt;</code> 打开关闭文件夹或文件</li><li><code>:vsp</code> 在右侧打开一个分屏，<code>:sp</code> 在下面打开一个分屏</li><li><code>&lt;c-w&gt;j</code> ，<code>&lt;c-w&gt;k</code>, <code>&lt;c-w&gt;h</code>, <code>&lt;c-w&gt;l</code>按键分别向上、下、左、右分屏移动。 <code>&lt;c-w&gt;=</code>均分屏幕</li></ol><p>改默的切换分屏按键方式</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;--------- Split Mapping --------------------&quot;</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;c-j&gt;</span> <span class="symbol">&lt;c-w&gt;</span><span class="keyword">j</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;c-k&gt;</span> <span class="symbol">&lt;c-w&gt;</span><span class="keyword">k</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;c-h&gt;</span> <span class="symbol">&lt;c-w&gt;</span>h</span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;c-l&gt;</span> <span class="symbol">&lt;c-w&gt;</span><span class="keyword">l</span></span><br></pre></td></tr></table></figure><ul><li>官网文档<br><a href="https://github.com/scrooloose/nerdtree">GitHub Repo</a></li></ul><h1 id="vimrc-配置文件"><a href="#vimrc-配置文件" class="headerlink" title=".vimrc 配置文件"></a>.vimrc 配置文件</h1><p>vimrc</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&quot;设置行号显示</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">number</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;将行号设置为相对行号</span></span><br><span class="line"><span class="keyword">set</span> relativenumber</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;显示标尺</span></span><br><span class="line"><span class="keyword">set</span> ruler</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 编码</span></span><br><span class="line"><span class="keyword">set</span> fileencodings=utf-<span class="number">8</span>,gb2312,gb18030,gbk,ucs-bom,cp936,latin1</span><br><span class="line"><span class="keyword">set</span> fileencoding=utf-<span class="number">8</span></span><br><span class="line"><span class="keyword">set</span> encoding=utf-<span class="number">8</span></span><br><span class="line"><span class="keyword">set</span> fencs=utf-<span class="number">8</span>,gbk,gb2312,gb18030</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;语法高亮</span></span><br><span class="line"><span class="keyword">syntax</span> enable</span><br><span class="line"><span class="keyword">syntax</span> <span class="keyword">on</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 高亮</span></span><br><span class="line"><span class="keyword">hi</span> pythonSelf            ctermfg=<span class="number">174</span> guifg=#<span class="number">6094</span>DB cterm=bold <span class="keyword">gui</span>=bold</span><br><span class="line"><span class="keyword">let</span> python_highlight_all=<span class="number">1</span></span><br><span class="line"><span class="keyword">syntax</span> enable</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 状态行颜色</span></span><br><span class="line"><span class="keyword">highlight</span> StatusLine guifg=SlateBlue guibg=Yellow</span><br><span class="line"><span class="keyword">highlight</span> StatusLineNC guifg=Gray guibg=White</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 增强模式中的命令行自动完成操作</span></span><br><span class="line"><span class="keyword">set</span> wildmenu</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 总是显示状态行</span></span><br><span class="line"><span class="keyword">set</span> laststatus=<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;命令行补全参数</span></span><br><span class="line"><span class="keyword">set</span> wildmenu</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;设置tab键空4格</span></span><br><span class="line"><span class="keyword">set</span> tabstop=<span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;自动检测文件类型</span></span><br><span class="line"><span class="keyword">filetype</span> plugin <span class="built_in">indent</span> <span class="keyword">on</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;开启自动缩进，智能缩进</span></span><br><span class="line"><span class="keyword">set</span> autoindent</span><br><span class="line"><span class="keyword">set</span> <span class="built_in">cindent</span></span><br><span class="line"><span class="keyword">set</span> smartindent</span><br><span class="line"><span class="keyword">set</span> <span class="built_in">shiftwidth</span>=<span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;映射光标在窗口间移动的快捷键</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;C-H&gt;</span> <span class="symbol">&lt;C-W&gt;</span>h</span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;C-J&gt;</span> <span class="symbol">&lt;C-W&gt;</span><span class="keyword">j</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;C-K&gt;</span> <span class="symbol">&lt;C-W&gt;</span><span class="keyword">k</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;C-L&gt;</span> <span class="symbol">&lt;C-W&gt;</span><span class="keyword">l</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;插件安装列表</span></span><br><span class="line"><span class="keyword">set</span> nocompatible              <span class="comment">&quot; be iMproved, required</span></span><br><span class="line"><span class="keyword">filetype</span> off                  <span class="comment">&quot; required</span></span><br><span class="line"><span class="keyword">set</span> rtp+=~/.<span class="keyword">vim</span>/bundle/Vundle.<span class="keyword">vim</span></span><br><span class="line"><span class="keyword">call</span> vundle#begin()</span><br><span class="line">Plugin <span class="string">&#x27;VundleVim/Vundle.vim&#x27;</span></span><br><span class="line">Plugin <span class="string">&#x27;morhetz/gruvbox&#x27;</span></span><br><span class="line">Plugin <span class="string">&#x27;vim-airline/vim-airline&#x27;</span></span><br><span class="line">Plugin <span class="string">&#x27;plasticboy/vim-markdown&#x27;</span></span><br><span class="line"><span class="keyword">call</span> vundle#end()            <span class="comment">&quot; required</span></span><br><span class="line"><span class="keyword">filetype</span> plugin <span class="built_in">indent</span> <span class="keyword">on</span>    <span class="comment">&quot; required</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;基本主题配置</span></span><br><span class="line"><span class="keyword">set</span> bg=dark       <span class="comment">&quot;设置背景为黑色</span></span><br><span class="line"><span class="keyword">colorscheme</span> gruvbox    <span class="comment">&quot;设置主题为 gruvbox</span></span><br><span class="line"><span class="keyword">set</span> guioptions=        <span class="comment">&quot;去掉两边的scrollbar</span></span><br><span class="line"><span class="keyword">set</span> guifont=Monaco:h17 <span class="comment">&quot;设置字体和字的大小</span></span><br><span class="line"><span class="keyword">set</span> cuc</span><br><span class="line"><span class="keyword">set</span> cul</span><br><span class="line"><span class="keyword">set</span> incsearch  <span class="comment">&quot;输入搜索内容时就显示搜索结果</span></span><br><span class="line"><span class="keyword">set</span> ignorecase</span><br><span class="line"><span class="keyword">set</span> hlsearch  <span class="comment">&quot;搜索时高亮显示被找到的文本</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;airline settings.</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_theme</span> = <span class="string">&#x27;simple&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_powerline_fonts</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !exists(<span class="string">&#x27;g:airline_symbols&#x27;</span>)</span><br><span class="line">  <span class="keyword">let</span> <span class="variable">g:airline_symbols</span> = &#123;&#125;</span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_left_sep</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_left_alt_sep</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_right_sep</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_right_alt_sep</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_symbols</span>.branch = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_symbols</span>.readonly = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_symbols</span>.linenr = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline</span>#extensions#tabline#enabled = <span class="number">1</span></span><br><span class="line"><span class="comment">&quot; show absolute file path in status line</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_section_c</span> = <span class="string">&#x27;%&lt;%F%m %#__accent_red#%&#123;airline#util#wrap(airline#parts#readonly(),0)&#125;%#__restore__#&#x27;</span></span><br><span class="line"><span class="comment">&quot; show tab number in tab line</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline</span>#extensions#tabline#tab_nr_type = <span class="number">1</span></span><br></pre></td></tr></table></figure><hr><p><strong>参考</strong></p><ul><li><a href="https://blog.csdn.net/zhangpower1993/article/details/52184581">Vim</a></li><li><a href="https://github.com/VundleVim/Vundle.vim">Vundle</a></li><li><a href="https://blog.csdn.net/u013950658/article/details/78211783">个性化 Vim</a>)</li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> Vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 实现数据完整性约束</title>
      <link href="/posts/SQLfull.html"/>
      <url>/posts/SQLfull.html</url>
      
        <content type="html"><![CDATA[<p>SQL实现数据完整性约束</p><ol><li>数据完整性基本概念</li><li>实现声明完整性</li><li>实现过程完整性<span id="more"></span></li></ol><h1 id="数据完整性基本概念"><a href="#数据完整性基本概念" class="headerlink" title="数据完整性基本概念"></a>数据完整性基本概念</h1><p>意义<br>数据的完整性是为了防止数据库中存在不符合语义的数据。<br>这些加在数据库数据之上的语义约束条件就是数据完整性约束条件。<br>这些约束条件作为表定义的一部分存储在数据库中。<br>DBMS检查数据是否满足完整性条件的机制就称为完整性检查。</p><h2 id="完整性约束条件的作用对象"><a href="#完整性约束条件的作用对象" class="headerlink" title="完整性约束条件的作用对象"></a>完整性约束条件的作用对象</h2><p>列级约束</p><ol><li>对数据类型的约束</li><li>对数据格式的约束</li><li>对取值范围或取值集合的约束</li><li>对空值的约束</li></ol><p>元组约束<br>元组中各个字段之间的联系的约束，如：开始日期小于结束日期。</p><p>关系约束<br>是若干元组之间、关系之间的联系的约束。</p><p>实现数据完整性的方法</p><ol><li>一种是在定义表时声明数据完整性，称为声明完整性，</li><li>另一种是在服务器端编写触发器来实现，称为过程完整性。</li></ol><p>在执行对数据的增、删、改操作时，数据库管理系统自动检查用户定义的完整性约束条件。</p><h1 id="实现声明完整性"><a href="#实现声明完整性" class="headerlink" title="实现声明完整性"></a>实现声明完整性</h1><h2 id="主码约束"><a href="#主码约束" class="headerlink" title="主码约束"></a>主码约束</h2><p>原则</p><ol><li>每个表只能有一个 <code>PRIMARY KEY</code> 约束</li><li>用 <code>PRIMARY KEY</code> 约束的列取值不能有重复，而且不允许有空值</li></ol><p>添加主码约束的语法格式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名</span><br><span class="line"><span class="keyword">ADD</span> [ <span class="keyword">CONSTRAINT</span> 约束名]</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY （<span class="operator">&lt;</span>列名<span class="operator">&gt;</span> [, … n] ）</span><br></pre></td></tr></table></figure><p>例：对雇员表和工作表添加主码约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 雇员表</span><br><span class="line"><span class="keyword">ADD</span>  <span class="keyword">CONSTRAINT</span>  PK_EMP</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY （雇员编号）</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 工作表</span><br><span class="line"><span class="keyword">ADD</span>  <span class="keyword">CONSTRAINT</span>  PK_JOB</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY （工作编号）</span><br></pre></td></tr></table></figure><h2 id="UNIQUE-约束"><a href="#UNIQUE-约束" class="headerlink" title="UNIQUE 约束"></a>UNIQUE 约束</h2><p>目的</p><ul><li>用于限制在一个列中不能有重复的值。</li><li>用在事实上具有惟一性的属性列上，比如每个人的身份证号码、驾驶证号码等均不能有重复值。</li></ul><p>注意：</p><ul><li>允许有一个空值；</li><li>在一个表中可以定义多个UNIQUE约束；</li><li>可以在一个列或多个列上定义UNIQUE约束。</li></ul><p>添加UNIQUE约束的语法格式为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名</span><br><span class="line"><span class="keyword">ADD</span> [ <span class="keyword">CONSTRAINT</span> 约束名]</span><br><span class="line"><span class="keyword">UNIQUE</span>（<span class="operator">&lt;</span>列名<span class="operator">&gt;</span> [, … n] ）</span><br></pre></td></tr></table></figure><p>例．为雇员表的“电话”列添加UNIQUE约束。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 雇员表</span><br><span class="line"><span class="keyword">ADD</span>  <span class="keyword">CONSTRAINT</span>  UK_SID</span><br><span class="line"><span class="keyword">UNIQUE</span>（电话）</span><br></pre></td></tr></table></figure><h2 id="FOREIGN-KEY-外码约束"><a href="#FOREIGN-KEY-外码约束" class="headerlink" title="FOREIGN KEY 外码约束"></a>FOREIGN KEY 外码约束</h2><p>目的</p><ul><li>实现引用完整性。</li><li>外码所引用的列必须是有<code>PRIMARY KEY约束</code>或<code>UNIQUE约束</code>的列。</li></ul><p>添加FOREIGN KEY约束的语法格式为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名</span><br><span class="line"><span class="keyword">ADD</span> [ <span class="keyword">CONSTRAINT</span> 约束名]</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY（<span class="operator">&lt;</span>列名<span class="operator">&gt;</span>）</span><br><span class="line"><span class="keyword">REFERENCES</span> 引用表名（<span class="operator">&lt;</span>列名<span class="operator">&gt;</span>）</span><br></pre></td></tr></table></figure><p>例．为雇员表的工作编号添加外码引用约束。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 雇员</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> FK_job_id</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY （工作编号）<span class="keyword">REFERENCES</span> 工作表 （工作编号）</span><br></pre></td></tr></table></figure><h2 id="DEFAULT-约束"><a href="#DEFAULT-约束" class="headerlink" title="DEFAULT 约束"></a>DEFAULT 约束</h2><p>目的</p><ul><li>用于提供列的默认值。</li><li>只有在向表中插入数据时才检查DEFAULT约束。</li></ul><p>添加DEFAULT约束的语法格式为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名</span><br><span class="line"><span class="keyword">ADD</span> [ <span class="keyword">CONSTRAINT</span> 约束名 ]</span><br><span class="line"><span class="keyword">DEFAULT</span> 默认值 <span class="keyword">FOR</span> 列名</span><br></pre></td></tr></table></figure><p>例．定义雇员表的工资的默认值为1000。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 雇员</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span>  DF_SALARY</span><br><span class="line"><span class="keyword">DEFAULT</span>  <span class="number">1000</span>  <span class="keyword">FOR</span> 工资</span><br></pre></td></tr></table></figure><h2 id="CHECK-约束"><a href="#CHECK-约束" class="headerlink" title="CHECK 约束"></a>CHECK 约束</h2><p>目的</p><ul><li>用于限制列的取值在指定的范围内，使数据库中存放的值都是有意义的。</li><li>系统在执行<code>INSERT语句</code>和<code>UPDATE语句</code>时自动检查CHECK约束。</li><li>CHECK约束可约束同一个表中多个列之间的取值关系。</li></ul><p>添加CHECK约束的语法格式为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名</span><br><span class="line"><span class="keyword">ADD</span> [ <span class="keyword">CONSTRAINT</span> 约束名 ]</span><br><span class="line"><span class="keyword">CHECK</span> （逻辑表达式）</span><br></pre></td></tr></table></figure><p>例1．限制雇员的工资必须大于等于200。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 雇员</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span>  CHK_Salary</span><br><span class="line"><span class="keyword">CHECK</span> ( 工资 <span class="operator">&gt;=</span> <span class="number">200</span> )</span><br></pre></td></tr></table></figure><p>例2．限制工资表的最低工资小于等于最高工资。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 工作</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span>  CHK_Job_Salary</span><br><span class="line"><span class="keyword">CHECK</span>( 最低工资 <span class="operator">&lt;=</span> 最高工资 )</span><br></pre></td></tr></table></figure><h1 id="实现过程完整性"><a href="#实现过程完整性" class="headerlink" title="实现过程完整性"></a>实现过程完整性</h1><p>简介</p><p>过程完整性是指在服务器端通过编写实现约束的一段代码来实现数据完整性约束，这段代码就称为触发器。<br>触发器是用编程的方法实现复杂的商业规则，它可以实现一般的数据完整性约束实现不了的复杂的完整性约束。</p><p>事务基本概念<br><code>事务（Transaction）</code>是作为完整的工作单元执行的一系列操作。<br>如果一个事务中的所有操作都成功，则事务成功，其对数据库的更改都会成为永久性的更改。<br>如果事务中的任何一个操作失败，则整个事务失败，其中所完成的操作均被取消，所有对数据的更改均无效。</p><p>事务的三种类型</p><ol><li><code>自动提交事务</code> 每一条对数据的增、删、改语句都自动地构成了一个事务。</li><li><code>显式事务</code> 是用户定义的事务，有显式的开始 <code>（BEGIN TRANSACTION ）</code> 和结束标记（<code>COMMIT（正常结束)</code> 和 <code>ROLLBACK（异常结束）</code>）。</li><li><code>隐式事务</code> 事务的开始是隐式的，以前一个事务结束后的第一个SQL语句作为下一个事务的开始，但每个事务必须有显式的结束标记。SQL Server支持的是显式事务。</li></ol><h1 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h1><p>概念<br>是一种特殊的存储过程，不需要由用户调用执行，而是当用户对表中的数据进行UPDATE、INSERT或DELETE操作时自动触发执行的。</p><p>触发器通常用于保证业务规则和数据完整性，其主要优点是用户可以用编程的方法来实现复杂的处理逻辑和商业规则，增强了数据完整性约束的功能。</p><p>触发器的优点</p><ol><li>完成比CHECK约束更复杂的数据约束。</li><li>为保证数据库性能而维护的非规范化数据。</li><li>可实现复杂的商业规则。</li><li>触发器也可以评估数据修改前后的表状态，并根据其差异采取对策。</li></ol><p>创建触发器语法格式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> 触发器名称</span><br><span class="line"><span class="keyword">ON</span> 表名</span><br><span class="line">&#123; <span class="keyword">FOR</span> <span class="operator">|</span> AFTER <span class="operator">|</span> INSTEAD <span class="keyword">OF</span> &#125;</span><br><span class="line">&#123; [ <span class="keyword">INSERT</span> ] [ , ] [ <span class="keyword">DELETE</span> ] [ , ]</span><br><span class="line">   [<span class="keyword">UPDATE</span> ] &#125;</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">  <span class="keyword">SQL</span> 语句 [ ... n ]</span><br></pre></td></tr></table></figure><p>两个逻辑工作表</p><ul><li><code>DELETED表</code> 存储 <code>DELETE和UPDATE</code> 语句所影响的行的副本。</li><li><code>INSERTED表</code>存储 <code>INSERT和UPDATE</code> 语句所影响的行的副本。</li></ul><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>创建限制最低工资必须大于等于400的触发器。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> tri_job_salary1</span><br><span class="line"><span class="keyword">ON</span> 工作表 <span class="keyword">FOR</span> <span class="keyword">INSERT</span>, <span class="keyword">UPDATE</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">IF <span class="keyword">EXISTS</span>( <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> INSERTED</span><br><span class="line"><span class="keyword">WHERE</span> 最低工资 <span class="operator">&lt;</span> <span class="number">400</span> )</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">PRINT <span class="string">&#x27;最低工资必须大于等于400&#x27;</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><p>创建实现限制最低工资必须小于最高工资的触发器。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> tri_job_salary2</span><br><span class="line"><span class="keyword">ON</span> 工作表 <span class="keyword">FOR</span> <span class="keyword">INSERT</span>, <span class="keyword">UPDATE</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">IF <span class="keyword">EXISTS</span>(<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> INSERTED</span><br><span class="line"><span class="keyword">WHERE</span> 最低工资 <span class="operator">&gt;=</span> 最高工资 )</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">PRINT <span class="string">&#x27;最低工资必须小于最高工资&#x27;</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><p>创建实现限制雇员的工资必须在工作表的相应工作的最低工资和最高工资之间。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> tri_emp_salary</span><br><span class="line"><span class="keyword">ON</span> 雇员表</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">INSERT</span>, <span class="keyword">UPDATE</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">IF <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> INSERTED a</span><br><span class="line"><span class="keyword">JOIN</span> 工作表 b <span class="keyword">ON</span> a.工作编号 <span class="operator">=</span> b.工作编号</span><br><span class="line"><span class="keyword">WHERE</span> 工资 <span class="keyword">NOT</span> <span class="keyword">BETWEEN</span> 最低工资</span><br><span class="line"><span class="keyword">AND</span> 最高工资 )</span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br></pre></td></tr></table></figure><h2 id="限制更新数据的触发器"><a href="#限制更新数据的触发器" class="headerlink" title="限制更新数据的触发器"></a>限制更新数据的触发器</h2><p>限制将SC表中不及格学生的成绩改为及格。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> tri_grade</span><br><span class="line"><span class="keyword">ON</span> SC <span class="keyword">FOR</span> <span class="keyword">UPDATE</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">IF <span class="keyword">UPDATE</span>(Grade)</span><br><span class="line">IF <span class="keyword">EXISTS</span>(<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> INSERTED <span class="keyword">JOIN</span></span><br><span class="line">DELETED <span class="keyword">ON</span> INSERTED.Sno <span class="operator">=</span> DELETED.Sno</span><br><span class="line"><span class="keyword">WHERE</span> INSERTED.Grade <span class="operator">&gt;=</span> <span class="number">60</span></span><br><span class="line"><span class="keyword">AND</span> DELETED.Grade <span class="operator">&lt;</span> <span class="number">60</span>)</span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br></pre></td></tr></table></figure><h2 id="限制删除的触发器"><a href="#限制删除的触发器" class="headerlink" title="限制删除的触发器"></a>限制删除的触发器</h2><p>限制删除SC表中成绩不及格学生的修课记录。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> tri_del_grade</span><br><span class="line"><span class="keyword">ON</span> SC <span class="keyword">FOR</span> <span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">IF <span class="keyword">EXISTS</span>(<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> DELETED</span><br><span class="line"><span class="keyword">WHERE</span> Grade <span class="operator">&lt;</span> <span class="number">60</span>)</span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br></pre></td></tr></table></figure><h2 id="修改触发器定义"><a href="#修改触发器定义" class="headerlink" title="修改触发器定义"></a>修改触发器定义</h2><p>语法格式为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TRIGGER</span> 触发器名称</span><br><span class="line"><span class="keyword">ON</span> 表名</span><br><span class="line">&#123; <span class="keyword">FOR</span> <span class="operator">|</span> AFTER <span class="operator">|</span> INSTEAD <span class="keyword">OF</span> &#125;</span><br><span class="line">&#123; [ <span class="keyword">INSERT</span> ] [ , ] [ <span class="keyword">DELETE</span> ] [ , ]</span><br><span class="line">   [<span class="keyword">UPDATE</span> ] &#125;</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SQL</span> 语句 [ ... n ]</span><br></pre></td></tr></table></figure><h2 id="删除触发器"><a href="#删除触发器" class="headerlink" title="删除触发器"></a>删除触发器</h2><p>语法格式为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> 触发器名 [ , ... n ]</span><br></pre></td></tr></table></figure><p>例：删除tri_grade触发器。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> tri_grade</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 锁与并发控制</title>
      <link href="/posts/SQLlock.html"/>
      <url>/posts/SQLlock.html</url>
      
        <content type="html"><![CDATA[<p>SQL锁与并发控制</p><span id="more"></span><h1 id="并发问题"><a href="#并发问题" class="headerlink" title="并发问题"></a>并发问题</h1><p>如果对数据库进行操作的事务是一个接一个地进行，不会带来什么问题，但这样效率很低，所以常常需要同时执行多个事务，如果没有什么控制的话，这种同时执行多个事务的情况就会带来许多问题。</p><p>错误的并发调度可能产生3种错误，又称为3类数据不一致。</p><p>3类数据不一致</p><ul><li><code>丢失更新</code>（记忆诀窍：读与写之间被插足了）<br>事务 T1 读取数据 A，然后对 A 进行运算修改，最后写回数据库。<br>如果在 T1 读取和写回数据库之间，有其他事务修改了 A 值，就造成了丢失更新，因为 T1 是在旧的数据上进行的运算。</li><li><code>脏读</code>（记忆诀窍：读被晃点了）<br>事务 T1 修改了数据 A，然后事务 T2 读取了数据 A，然后事务 T1 回滚了事务。<br>由于事务 T1 回滚了事务，所以数据 A 其实最终并没有被事务 T1 修改，也就是说事务 T2 读取了被丢掉的数据。</li><li><code>不可重复读</code>（记忆诀窍：读与读之间被插足了）<br>事务 T1 读取数据 A，然后做某些事，然后又读取数据 A。<br>如果在两次读取之间，有其他事务对数据 A 进行了修改，那么就造成了同一事务中，两次读取数据 A 的值不同。</li></ul><h1 id="X锁和S锁"><a href="#X锁和S锁" class="headerlink" title="X锁和S锁"></a>X锁和S锁</h1><p>X锁（exclusive locks，排他锁)</p><p>如果事务 T 对数据 A 加了 X 锁，则：事务 T 可对数据 A 进行读取和修改；其他事务不能对数据 A 加任何锁，也不能读取和修改数据 A。</p><p>S锁（share locks，共享锁)</p><p>如果事务 T 对数据 A 加了 S 锁，则：事务 T 可对数据 A 进行读取，但不能修改；其他事务也能对数据 A 加 S 锁，但不能加 X 锁。</p><h2 id="封锁协议"><a href="#封锁协议" class="headerlink" title="封锁协议"></a>封锁协议</h2><p>封锁协议</p><ol><li><code>一级封锁协议</code>在事务 T 修改数据 A 之前，对数据 A 加上 X 锁，直到事务结束才释放，解决了丢失更新的问题。</li><li><code>二级封锁协议</code>在一级封锁协议的基础上，在事务 T 读取数据 A 之前，对数据 A 加上 S 锁，直到读取结束才释放，解决了脏读的问题。</li><li><code>三级封锁协议</code>在一级封锁协议的基础上，在事务 T 读取数据 A 之前，对数据 A 加上 S 锁，直到事务结束才释放，解决了不可重复读的问题。</li><li><code>两段封锁协议</code>对任何数据进行读写之前必须对该数据加锁，在释放一个封锁之后，事务不再申请和获得任何其他封锁，这样缩短了封锁时间，提高了并发性，同时解决了数据不一致的问题。</li></ol><p>事务可分为两个阶段</p><ol><li>生长阶段：也称为扩展阶段（申请锁）在这个阶段事务获得所有需要的封锁，并且不释放任何锁。</li><li>收缩阶段:这阶段事务释放全部锁，并且也不能再获得任何锁。</li></ol><ul><li>所有事物均遵从两段协议，则对这些事务的并发调度一定是可串行化的。反过来，在一个可串行调度中，不一定所有事物都遵从两段协议。所有事物都遵从两段协议，是可串行化调度的成分而不是必要条件。</li></ul><h2 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h2><p>产生死锁的原因</p><ol><li>产生死锁的原因很多，举个例子：事务 T1 对数据 A 上了 X 锁，现在 T1 要读取数据 B；而另一方面，事务 T2 对数据 B 上了 X 锁，现在 T2 要读取数据 A。T1、T2 都需要对方已经锁定了的数据，相互等待对方释放，这就造成了死锁。<br>死锁的解决与避免</li><li>数据库管理系统（比如 SQL Server）识别到死锁后，会选择互锁的事务中的一个来作为牺牲品，回滚并结束该事务，并抛出一条消息。</li></ol><p>现在的数据库管理系统都很优秀，死锁很少发生，但很少不代表不会发生，如果我们在事务中注意一下，又可以进一步减少死锁的发生。下面是 SQL Server 中避免死锁发生的建议：</p><p>避免死锁发生的建议</p><ol><li>按同一顺序访问对象。比如上述示例中 T1 和 T2 都应先访问数据 A，后访问数据 B，而不是一个先访问数据 A，一个先访问数据 B。</li><li>避免事务中的用户交互。比如事务中不要等待用户输入，因为这种交互可能造成事务执行时间变长，增大了与其他事务竞争资源的可能性。</li><li>保持事务简短并在一个批处理中。</li><li>使用低隔离级别。</li><li>使用绑定连接。使用绑定连接使同一应用程序所打开的两个或多个连接可以相互合作。</li></ol><hr><p><strong>参考</strong></p><ul><li><a href="http://www.cftea.com/c/2009/07/VD08RGMWET3Y1UCH.asp">锁与并发控制</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 规范</title>
      <link href="/posts/SQLstyle.html"/>
      <url>/posts/SQLstyle.html</url>
      
        <content type="html"><![CDATA[<p>SQL规范，注意事项。</p><span id="more"></span><h1 id="MySQL-常用的存储引擎"><a href="#MySQL-常用的存储引擎" class="headerlink" title="MySQL 常用的存储引擎"></a>MySQL 常用的存储引擎</h1><p>数据引擎表</p><table><thead><tr><th align="left">存储引擎</th><th align="left">事务</th><th align="left">锁粒度</th><th align="left">主要应用</th><th align="left">忌用</th></tr></thead><tbody><tr><td align="left">MYISAM</td><td align="left">不支持</td><td align="left">支持并发插入的表级锁</td><td align="left">SELECT,INSERT</td><td align="left">读写操作频繁</td></tr><tr><td align="left">MRG_MYISAM</td><td align="left">不支持</td><td align="left">支持并发插入的表级锁</td><td align="left">分段归档,数据仓库</td><td align="left">数全局查找过多的场景</td></tr><tr><td align="left">Innodb</td><td align="left">支持</td><td align="left">支持MVCC的行级锁</td><td align="left">事务处理</td><td align="left">无</td></tr><tr><td align="left">Archive</td><td align="left">不支持</td><td align="left">行级锁</td><td align="left">日志记录只支持insert,select</td><td align="left">需要随机读取,更新,删除</td></tr><tr><td align="left">Ndb cluster</td><td align="left">支持</td><td align="left">行级锁</td><td align="left">高可用性</td><td align="left">大部份应用</td></tr></tbody></table><h1 id="表及字段的命名规则"><a href="#表及字段的命名规则" class="headerlink" title="表及字段的命名规则"></a>表及字段的命名规则</h1><p>规则</p><ul><li>可读性原则<ul><li>使用大写和小写来格式化的库对象名字以获得良好的可读性。<ul><li>例如:使用CustAddress而不是Custaddress来提高可读性。(这里要注意有些DBMS系统对表名的大小写是敏感的)</li></ul></li></ul></li><li>表意性原则<ul><li>对象的名字应该能够描述它所标识的对象。<ul><li>例如,对于表,表的名称应该能够体现表中存储的数据内容;对于存储过程,存储过程名称应该能够体现存储过程的功能。</li></ul></li></ul></li><li>长名原则<ul><li>尽可能少使用或者不使用缩写,<ul><li>适用于数据库(DATABASE)名之外的任一对象。</li></ul></li></ul></li></ul><h1 id="字段类型的选择原则"><a href="#字段类型的选择原则" class="headerlink" title="字段类型的选择原则"></a>字段类型的选择原则</h1><p>原因<br>列的数据类型一方面影响数据存储空间的开销,另一方面也会影响数据查询性能。当一个列可以选择多种数据类型时,应该优先考虑数字类型,其次是日期或二进制类型,最后是字符类型。对于相同级别的数据类型,应该优先选择占用空间小的数据类型。</p><table><thead><tr><th align="center">列类型</th><th align="center">存储空间</th></tr></thead><tbody><tr><td align="center">TINYINT</td><td align="center">1字节</td></tr><tr><td align="center">SMALLINT</td><td align="center">2个字节</td></tr><tr><td align="center">MEDIUMINT</td><td align="center">3个字节</td></tr><tr><td align="center">INT</td><td align="center">4个字节</td></tr><tr><td align="center">BIGINT</td><td align="center">8个字节</td></tr><tr><td align="center">DATE</td><td align="center">13个字节</td></tr><tr><td align="center">DATETIME</td><td align="center">8个字节</td></tr><tr><td align="center">TIMESTAMP</td><td align="center">4个字节</td></tr><tr><td align="center">CHAR(M)</td><td align="center">M字节,1 &lt;&#x3D; M &lt;&#x3D; 255</td></tr><tr><td align="center">VARCHAR(M)</td><td align="center">L+1字节,在此L &lt;&#x3D; M1 &lt;&#x3D; M &lt;&#x3D; 255</td></tr></tbody></table><ul><li>以上选择原则主要是从下面两个角度考虑<ul><li>在对数据进行比较(查询条件、JOIN条件及排序)操作时:<br>同样的数据,字符处理往往比数字处理慢。</li><li>在数据库中,数据处理以页为单位,列的长度越小,利于性能提升。</li></ul></li></ul><h2 id="char-varchar-如何选择"><a href="#char-varchar-如何选择" class="headerlink" title="char varchar 如何选择"></a>char varchar 如何选择</h2><p>原则</p><ol><li>如果列中要存储的数据长度差不多是一致的,则应该考虑用char;否则应该考虑用varchar。</li><li>如果列中的最大数据长度小于50Byte,则一般也考虑用char。(当然,如果这个列很少用,则基于节省空间和减少I&#x2F;O的考虑,还是可以选择用varchar)</li><li>一般不宜定义大于50 Byte的char类型列。</li></ol><h2 id="decimal与float-如何选择"><a href="#decimal与float-如何选择" class="headerlink" title="decimal与float 如何选择"></a>decimal与float 如何选择</h2><p>原则:</p><ol><li>decimal用于存储精确数据,而float只能用于存储非精确数据。故精确数据只能选择用decimal类型。</li><li>由于float的存储空间开销一般比decimal小(精确到7位小数只需要4个字节,而精确到15位小数只需要8字节)故非精确数据优先选择float类型。</li></ol><h2 id="时间类型如何存储"><a href="#时间类型如何存储" class="headerlink" title="时间类型如何存储"></a>时间类型如何存储</h2><p>使用int来存储时间字段的优缺点</p><ul><li>优点:字段长度比datetime小。</li><li>缺点:使用不方便,要进行函数转换。</li><li>限制<ul><li>只能存储到2038-1-19 11:14:07即2^32 为2147483648</li><li>需要存储的时间粒度<ul><li>年月日 小时 分 秒 周</li></ul></li></ul></li></ul><h1 id="如何选择主键"><a href="#如何选择主键" class="headerlink" title="如何选择主键"></a>如何选择主键</h1><p>区分业务主键和数据库主键</p><ol><li>业务主键用于标识业务数据,进行表与表之间的关联;数据库主键为了优化数据存储(Innodb会生成6个字节的隐含主键)</li><li>根据数据库的类型考虑主键是否要顺序增长</li></ol><ul><li>有些数据库是按主键的顺序逻辑存储的</li></ul><p>主键的字段类型所占空间要尽可能的小</p><p>对于使用聚集索引方式存储的表,每个索引后都会附加主键信息。</p><p>避免使用外键约束</p><ol><li>降低数据导入的效率</li><li>增加维护成本</li><li>虽然不建议使用外键约束,但是相关联的列上一定要建立索引</li></ol><p>避免使用触发器<br>:1. 降低数据导入的效率。<br>2. 可能会出现意想不到的数据异常。<br>3. 使业务逻辑变得复杂。</p><h1 id="关于预留字段"><a href="#关于预留字段" class="headerlink" title="关于预留字段"></a>关于预留字段</h1><p>原因</p><ol><li>无法准确的知道预留字段的类型。</li><li>无法准确的知道预留字段中所存储的内容。</li><li>后期维护预留字段所要的成本,同增加一个字段所需要的成本是相同的。</li><li>严禁使用预留字段。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 触发器</title>
      <link href="/posts/SQLtrigger.html"/>
      <url>/posts/SQLtrigger.html</url>
      
        <content type="html"><![CDATA[<p>SQL触发器</p><span id="more"></span><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>某一个表的一定的操作，触发某种条件，从而执行的一段程序。触发器是一个特殊的存储过程。</p><p>常见的触发器有三种：分别应用于Insert , Update , Delete 事件。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> 触发器名</span><br><span class="line"><span class="keyword">on</span></span><br><span class="line">zg   <span class="comment">-- 在zg表建立触发器</span></span><br><span class="line"><span class="keyword">for</span> <span class="keyword">insert</span>,<span class="keyword">update</span>  <span class="comment">-- 为什么事件触发</span></span><br><span class="line"><span class="keyword">as</span>   <span class="comment">-- 事件触发后所要做的事情</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> inserted</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> deleted</span><br><span class="line">if <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ck <span class="keyword">where</span> 仓库号 <span class="keyword">in</span> (<span class="keyword">select</span> 仓库号 <span class="keyword">from</span> inserted))</span><br><span class="line"><span class="keyword">commit</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">rollback</span></span><br></pre></td></tr></table></figure></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span>  <span class="keyword">TRIGGER</span> trigger_name [BEFORE<span class="operator">|</span>AFTER] event_name</span><br><span class="line"><span class="keyword">ON</span> table_name</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"> <span class="comment">-- Trigger logic goes here....</span></span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><p>Deleted 与 Inserted</p><ol><li><code>Deleted</code>表存放由于执行Delete或Update语句而要从表中删除的所有行。</li><li><code>Inserted</code>表存放由于执行Insert或Update语句而要向表中插入的所有行。</li></ol><h2 id="UPDATE-操作上在表的一个或多个指定列上创建触发器-Trigger"><a href="#UPDATE-操作上在表的一个或多个指定列上创建触发器-Trigger" class="headerlink" title="UPDATE 操作上在表的一个或多个指定列上创建触发器(Trigger)"></a>UPDATE 操作上在表的一个或多个指定列上创建触发器(Trigger)</h2><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span>  <span class="keyword">TRIGGER</span> trigger_name [BEFORE<span class="operator">|</span>AFTER] <span class="keyword">UPDATE</span> <span class="keyword">OF</span> column_name</span><br><span class="line"><span class="keyword">ON</span> table_name</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"> <span class="comment">-- Trigger logic goes here....</span></span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h1 id="触发器操作"><a href="#触发器操作" class="headerlink" title="触发器操作"></a>触发器操作</h1><p>删除</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">trigger</span> trigger_name</span><br></pre></td></tr></table></figure><p>修改</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span>  <span class="keyword">trigger</span> tri_ck_zg</span><br><span class="line"><span class="keyword">on</span> zg <span class="keyword">for</span> <span class="keyword">insert</span>,<span class="keyword">update</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> inserted</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> deleted</span><br><span class="line">if <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ck <span class="keyword">where</span> 仓库号 <span class="keyword">in</span> (<span class="keyword">select</span> 仓库号 <span class="keyword">from</span> inserted))</span><br><span class="line"><span class="keyword">commit</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">rollback</span></span><br></pre></td></tr></table></figure><p>列出触发器</p><ul><li>所有<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name <span class="keyword">FROM</span> sqlite_master</span><br><span class="line"><span class="keyword">WHERE</span> type <span class="operator">=</span> <span class="string">&#x27;trigger&#x27;</span></span><br></pre></td></tr></table></figure></li><li>指定表<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name <span class="keyword">FROM</span> sqlite_master</span><br><span class="line"><span class="keyword">WHERE</span> type <span class="operator">=</span> <span class="string">&#x27;trigger&#x27;</span> <span class="keyword">AND</span> tbl_name <span class="operator">=</span> <span class="string">&#x27;表名&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="习题"><a href="#习题" class="headerlink" title="习题"></a>习题</h1><h2 id="成绩小于60的不可更改-验证"><a href="#成绩小于60的不可更改-验证" class="headerlink" title="成绩小于60的不可更改- 验证"></a>成绩小于60的不可更改<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> tri_grade</span><br><span class="line"><span class="keyword">on</span> xkgx <span class="keyword">for</span> <span class="keyword">update</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> inserted</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> deleted</span><br><span class="line"></span><br><span class="line">if <span class="keyword">update</span>(成绩)</span><br><span class="line">if <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> deleted  <span class="keyword">where</span> 成绩<span class="operator">&lt;</span><span class="number">60</span>)</span><br><span class="line"><span class="keyword">rollback</span></span><br></pre></td></tr></table></figure><br>- 验证<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> xkgx <span class="keyword">set</span> 成绩<span class="operator">=</span><span class="number">80</span> <span class="keyword">where</span>课程号<span class="operator">=</span><span class="string">&#x27;303&#x27;</span> <span class="keyword">and</span>  学号<span class="operator">=</span><span class="string">&#x27;S101101&#x27;</span></span><br></pre></td></tr></table></figure></h2><p>成绩小于60的不可更改</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> tri_grade</span><br><span class="line"><span class="keyword">on</span> xkgx <span class="keyword">for</span> <span class="keyword">update</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> inserted</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> deleted</span><br><span class="line"></span><br><span class="line">if <span class="keyword">update</span>(成绩)</span><br><span class="line">if <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> inserted <span class="keyword">join</span> deleted <span class="keyword">on</span>  inserted.学号<span class="operator">=</span>deleted.学号</span><br><span class="line"><span class="keyword">where</span> inserted.成绩<span class="operator">&gt;=</span><span class="number">60</span> <span class="keyword">and</span> deleted.成绩<span class="operator">&lt;</span><span class="number">60</span>)</span><br><span class="line"><span class="keyword">rollback</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 事务</title>
      <link href="/posts/SQLtransaction.html"/>
      <url>/posts/SQLtransaction.html</url>
      
        <content type="html"><![CDATA[<p>SQL事务</p><span id="more"></span><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><ul><li>事务（Transaction）是指一个或多个更改数据库的扩展。例如，如果您正在创建一个记录或者更新一个记录或者从表中删除一个记录，那么您正在该表上执行事务。重要的是要控制事务以确保数据的完整性和处理数据库错误。</li><li>事务（Transaction）是一个对数据库执行工作单元。事务（Transaction）是以逻辑顺序完成的工作单位或序列，可以是由用户手动操作完成，也可以是由某种数据库程序自动完成。</li></ul><h1 id="事务的特点"><a href="#事务的特点" class="headerlink" title="事务的特点"></a>事务的特点</h1><p>四个特点</p><ol><li><code>原子性（Atomicity)</code>确保工作单位内的所有操作都成功完成，否则，事务会在出现故障时终止，之前的操作也会回滚到以前的状态。</li><li><code>一致性（Consistency)</code>确保数据库在成功提交的事务上正确地改变状态。</li><li><code>隔离性（Isolation)</code>使事务操作相互独立和透明。</li><li><code>持久性（Durability)</code>确保已提交事务的结果或效果在系统发生故障的情况下仍然存在。</li></ol><h1 id="事务控制"><a href="#事务控制" class="headerlink" title="事务控制"></a>事务控制</h1><h2 id="含义-BEGIN-TRANSACTION-开始事务处理。-COMMIT-保存更改，或者可以使用-END-TRANSACTION-命令。-ROLLBACK-回滚所做的更改。"><a href="#含义-BEGIN-TRANSACTION-开始事务处理。-COMMIT-保存更改，或者可以使用-END-TRANSACTION-命令。-ROLLBACK-回滚所做的更改。" class="headerlink" title="含义- BEGIN TRANSACTION 开始事务处理。- COMMIT 保存更改，或者可以使用 END TRANSACTION 命令。- ROLLBACK 回滚所做的更改。"></a>含义<br>- <code>BEGIN TRANSACTION</code> 开始事务处理。<br>- <code>COMMIT</code> 保存更改，或者可以使用 END TRANSACTION 命令。<br>- <code>ROLLBACK</code> 回滚所做的更改。</h2><ul><li>事务控制命令只与 DML 命令 INSERT、UPDATE 和 DELETE 一起使用。他们不能在创建表或删除表时使用，因为这些操作在数据库中是自动提交的</li></ul><h2 id="BEGIN-TRANSACTION-命令"><a href="#BEGIN-TRANSACTION-命令" class="headerlink" title="BEGIN TRANSACTION 命令"></a>BEGIN TRANSACTION 命令</h2><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span> TRANSACTION</span><br><span class="line">READ(A)</span><br><span class="line">A:<span class="operator">=</span>A<span class="number">-50</span></span><br><span class="line">WRITE(A)</span><br><span class="line">READ(B)</span><br><span class="line">B:<span class="operator">=</span>B<span class="operator">+</span><span class="number">50</span></span><br><span class="line"><span class="keyword">COMMIT</span></span><br></pre></td></tr></table></figure><ul><li>READ(X):把数据项X从数据库读出到事务的私有缓冲中</li><li>WRITE(X):把数据项X从事务的私有缓冲中写到数据库。</li></ul><h2 id="COMMIT-命令"><a href="#COMMIT-命令" class="headerlink" title="COMMIT 命令"></a>COMMIT 命令</h2><p>作用</p><p>COMMIT 命令用于保存事务对数据库所做的更改。会将自上次 COMMIT 命令或者 ROLLBACK 命令执行以来所有的事务都保存到数据库中。</p><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> S</span><br><span class="line">     <span class="keyword">WHERE</span> SIZE<span class="operator">=</span><span class="number">20</span></span><br><span class="line"><span class="keyword">COMMIT</span></span><br></pre></td></tr></table></figure><h2 id="ROLLBACK-命令"><a href="#ROLLBACK-命令" class="headerlink" title="ROLLBACK 命令"></a>ROLLBACK 命令</h2><p>作用<br>ROLLBACK 命令用于撤销尚未保存到数据库中的事务。只能撤销自上次 COMMIT 命令或者 ROLLBACK 命令执行以来的事务。</p><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> SIZE<span class="operator">=</span><span class="number">20</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br></pre></td></tr></table></figure><p>ROLLBACK 命令可以用于撤销一系列的事务</p><ul><li>回滚至某一保存点的语法如下所示：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ROLLBACK</span> <span class="keyword">TO</span> SAVEPOINT_NAME</span><br></pre></td></tr></table></figure></li></ul><h2 id="SAVEPOINT-命令"><a href="#SAVEPOINT-命令" class="headerlink" title="SAVEPOINT 命令"></a>SAVEPOINT 命令</h2><p>作用<br>SAVEPOINT 是事务中的一个状态点，使得我们可以将事务回滚至特定的点，而不是将整个事务都撤销。</p><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SAVEPOINT</span> SAVEPOINT_NAME</span><br></pre></td></tr></table></figure><ul><li>该命令只能在事务语句之间创建保存点（SAVEPOINT）。</li></ul><h2 id="RELEASE-SAVEPOINT-命令"><a href="#RELEASE-SAVEPOINT-命令" class="headerlink" title="RELEASE SAVEPOINT 命令"></a>RELEASE SAVEPOINT 命令</h2><p>作用<br>RELEASE SAVEPOINT 命令用于删除先前创建的保存点。</p><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">RELEASE</span> <span class="keyword">SAVEPOINT</span> SAVEPOINT_NAME</span><br></pre></td></tr></table></figure><h2 id="SET-TRANSACTION-命令"><a href="#SET-TRANSACTION-命令" class="headerlink" title="SET TRANSACTION 命令"></a>SET TRANSACTION 命令</h2><dl><dt>作用</dt><dd>SET TRANSACTION 命令可以用来初始化数据库事务，指定随后的事务的各种特征。</dd></dl><p>将某个事务指定为只读或者读写。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> TRANSACTION [ READ WRITE <span class="operator">|</span> READ <span class="keyword">ONLY</span> ]</span><br></pre></td></tr></table></figure><h1 id="存储过程使用事务"><a href="#存储过程使用事务" class="headerlink" title="存储过程使用事务"></a>存储过程使用事务</h1><p>实例一<br> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Create</span> <span class="keyword">Procedure</span>  MyProcedure</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">Begin</span></span><br><span class="line"><span class="keyword">Set</span>    NOCOUNT    <span class="keyword">ON</span>;</span><br><span class="line"><span class="keyword">Set</span> XACT_ABORT <span class="keyword">ON</span>;</span><br><span class="line"><span class="keyword">begin</span>   tran  ok  <span class="comment">--开始一个事务OK</span></span><br><span class="line"><span class="keyword">delete</span>  <span class="keyword">from</span>  rxqz  <span class="keyword">where</span> qz<span class="operator">=</span>   <span class="string">&#x27;rx015 &#x27;</span> <span class="comment">--删除数据</span></span><br><span class="line">save   tran  bcd   <span class="comment">--保存一个事务点命名为bcd</span></span><br><span class="line"><span class="keyword">update</span>  sz  <span class="keyword">set</span>   name<span class="operator">=</span><span class="string">&#x27;李丽s&#x27;</span> <span class="keyword">where</span> name<span class="operator">=</span> <span class="string">&#x27;李丽&#x27;</span><span class="comment">--修改数据</span></span><br><span class="line">if  @<span class="variable">@error</span><span class="operator">&lt;&gt;</span><span class="number">0</span>  <span class="comment">--判断修改数据有没有出错</span></span><br><span class="line"><span class="keyword">begin</span> <span class="comment">--如果出错</span></span><br><span class="line"><span class="keyword">rollback</span>   tran  bcd  <span class="comment">-- 回滚事务到BCD 的还原点</span></span><br><span class="line"><span class="keyword">commit</span>   tran  ok  <span class="comment">--提交事务</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span>  <span class="comment">--没有出错</span></span><br><span class="line"><span class="keyword">commit</span>  tran ok <span class="comment">--提交事务</span></span><br><span class="line"><span class="keyword">End</span></span><br></pre></td></tr></table></figure></p><h2 id="实例二"><a href="#实例二" class="headerlink" title="实例二"></a>实例二<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> proc <span class="number">1</span></span><br><span class="line"><span class="variable">@si</span> chark20),<span class="variable">@pi</span> <span class="type">char</span>(<span class="number">20</span>),<span class="variable">@Ji</span> chark20),<span class="variable">@shu</span> <span class="type">int</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SPJ <span class="keyword">values</span>(<span class="variable">@si</span>,<span class="variable">@pi</span>,<span class="variable">@Ji</span>,<span class="variable">@shu</span>)</span><br><span class="line">bdgin tran t1</span><br><span class="line">if <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> p <span class="keyword">where</span> Pno<span class="operator">=</span><span class="variable">@Pi</span>)</span><br><span class="line"><span class="keyword">commit</span> tran t1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">rollback</span> tran t1</span><br></pre></td></tr></table></figure></h2><p><strong>参考</strong></p><ul><li><a href="http://wiki.jikexueyuan.com/project/sql/transactions.html">连接</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 视图</title>
      <link href="/posts/SQLview.html"/>
      <url>/posts/SQLview.html</url>
      
        <content type="html"><![CDATA[<p>SQL视图</p><span id="more"></span><h1 id="什么是视图"><a href="#什么是视图" class="headerlink" title="什么是视图"></a>什么是视图</h1><p>解析</p><ul><li>在 SQL 中，视图是基于 SQL 语句的结果集的可视化的表。</li><li>视图包含行和列，就像一个真实的表。视图中的字段就是来自一个或多个数据库中的真实的表中的字段。我们可以向视图添加 SQL 函数、WHERE 以及 JOIN 语句，我们也可以提交数据，就像这些来自于某个单一的表。<ul><li>注释：数据库的设计和结构不会受到视图中的函数、where 或 join 语句的影响。</li></ul></li></ul><h1 id="SQL-CREATE-VIEW"><a href="#SQL-CREATE-VIEW" class="headerlink" title="SQL CREATE VIEW"></a>SQL CREATE VIEW</h1><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> view_name <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">condition</span></span><br></pre></td></tr></table></figure><ul><li>注释：视图总是显示最近的数据。每当用户查询视图时，数据库引擎通过使用 SQL 语句来重建数据。</li></ul><h2 id="SQL-CREATE-VIEW-实例"><a href="#SQL-CREATE-VIEW-实例" class="headerlink" title="SQL CREATE VIEW 实例"></a>SQL CREATE VIEW 实例</h2><p>要求</p><ol><li>可以从某个查询内部、某个存储过程内部，或者从另一个视图内部来使用视图。通过向视图添加函数、join 等等，我们可以向用户精确地提交我们希望提交的数据。</li><li>样本数据库 Northwind 拥有一些被默认安装的视图。视图 “Current Product List” 会从 Products 表列出所有正在使用的产品。这</li></ol><h2 id="创建：-查询上面这个视图：-Northwind-样本数据库的另一个视图会选取-Products-表中所有单位价格高于平均单位价格的产品-查询上面这个视图：-另一个来自-Northwind-数据库的视图实例会计算在-1997-年每个种类的销售总数。请注意，这个视图会从另一个名为-“Product-Sales-for-1997”-的视图那里选取数据：-查询上面这个视图：-也可以向查询添加条件。现在，我们仅仅需要查看-“Beverages”-类的全部销量：-SQL-更新视图语法-现在，我们希望向-“Current-Product-List”-视图添加-“Category”-列。我们将通过下列-SQL-更新视图：-SQL-撤销视图DROP-VIEW"><a href="#创建：-查询上面这个视图：-Northwind-样本数据库的另一个视图会选取-Products-表中所有单位价格高于平均单位价格的产品-查询上面这个视图：-另一个来自-Northwind-数据库的视图实例会计算在-1997-年每个种类的销售总数。请注意，这个视图会从另一个名为-“Product-Sales-for-1997”-的视图那里选取数据：-查询上面这个视图：-也可以向查询添加条件。现在，我们仅仅需要查看-“Beverages”-类的全部销量：-SQL-更新视图语法-现在，我们希望向-“Current-Product-List”-视图添加-“Category”-列。我们将通过下列-SQL-更新视图：-SQL-撤销视图DROP-VIEW" class="headerlink" title="创建：- 查询上面这个视图：- Northwind 样本数据库的另一个视图会选取 Products 表中所有单位价格高于平均单位价格的产品- 查询上面这个视图：- 另一个来自 Northwind 数据库的视图实例会计算在 1997 年每个种类的销售总数。请注意，这个视图会从另一个名为 “Product Sales for 1997” 的视图那里选取数据：- 查询上面这个视图：- 也可以向查询添加条件。现在，我们仅仅需要查看 “Beverages” 类的全部销量：## SQL 更新视图语法- 现在，我们希望向 “Current Product List” 视图添加 “Category” 列。我们将通过下列 SQL 更新视图：## SQL 撤销视图DROP VIEW"></a>创建：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> [<span class="keyword">Current</span> Product List] <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> ProductID,ProductName</span><br><span class="line"><span class="keyword">FROM</span> Products</span><br><span class="line"><span class="keyword">WHERE</span> Discontinued<span class="operator">=</span><span class="keyword">No</span></span><br></pre></td></tr></table></figure><br>- 查询上面这个视图：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> [<span class="keyword">Current</span> Product List]</span><br></pre></td></tr></table></figure><br>- Northwind 样本数据库的另一个视图会选取 Products 表中所有单位价格高于平均单位价格的产品<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> [Products Above Average Price] <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> ProductName,UnitPrice</span><br><span class="line"><span class="keyword">FROM</span> Products</span><br><span class="line"><span class="keyword">WHERE</span> UnitPrice<span class="operator">&gt;</span>(<span class="keyword">SELECT</span> <span class="built_in">AVG</span>(UnitPrice) <span class="keyword">FROM</span> Products)</span><br></pre></td></tr></table></figure><br>- 查询上面这个视图：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> [Products Above Average Price]</span><br></pre></td></tr></table></figure><br>- 另一个来自 Northwind 数据库的视图实例会计算在 1997 年每个种类的销售总数。请注意，这个视图会从另一个名为 “Product Sales for 1997” 的视图那里选取数据：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> [Category Sales <span class="keyword">For</span> <span class="number">1997</span>] <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> CategoryName,<span class="built_in">Sum</span>(ProductSales) <span class="keyword">AS</span> CategorySales</span><br><span class="line"><span class="keyword">FROM</span> [Product Sales <span class="keyword">for</span> <span class="number">1997</span>]</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> CategoryName</span><br></pre></td></tr></table></figure><br>- 查询上面这个视图：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> [Category Sales <span class="keyword">For</span> <span class="number">1997</span>]</span><br></pre></td></tr></table></figure><br>- 也可以向查询添加条件。现在，我们仅仅需要查看 “Beverages” 类的全部销量：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> [Category Sales <span class="keyword">For</span> <span class="number">1997</span>]</span><br><span class="line"><span class="keyword">WHERE</span> CategoryName<span class="operator">=</span><span class="string">&#x27;Beverages&#x27;</span></span><br></pre></td></tr></table></figure><br>## SQL 更新视图<br>语法<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SQL</span> <span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE <span class="keyword">VIEW</span> Syntax</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE <span class="keyword">VIEW</span> view_name <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">condition</span></span><br></pre></td></tr></table></figure><br>- 现在，我们希望向 “Current Product List” 视图添加 “Category” 列。我们将通过下列 SQL 更新视图：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> [<span class="keyword">Current</span> Product List] <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> ProductID,ProductName,Category</span><br><span class="line"><span class="keyword">FROM</span> Products</span><br><span class="line"><span class="keyword">WHERE</span> Discontinued<span class="operator">=</span><span class="keyword">No</span></span><br></pre></td></tr></table></figure><br>## SQL 撤销视图<br>DROP VIEW<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> Syntax</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> view_name</span><br></pre></td></tr></table></figure></h2><p><strong>Via</strong></p><ul><li><a href="http://www.w3school.com.cn/sql/sql_view.asp">来源</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 存储过程练习</title>
      <link href="/posts/SQlprocEx.html"/>
      <url>/posts/SQlprocEx.html</url>
      
        <content type="html"><![CDATA[<p>SQL储存过程练习题</p><span id="more"></span><table><thead><tr><th align="left">仓库号</th><th align="left">城市</th><th align="left">面积</th></tr></thead><tbody><tr><td align="left">WH1</td><td align="left">北京</td><td align="left">3700</td></tr><tr><td align="left">WH2</td><td align="left">上海</td><td align="left">5000</td></tr><tr><td align="left">WH3</td><td align="left">广州</td><td align="left">2000</td></tr><tr><td align="left">WH4</td><td align="left">武汉</td><td align="left">4000</td></tr><tr><td align="left">WH5</td><td align="left">北京</td><td align="left">3460</td></tr><tr><td align="left">WH6</td><td align="left">珠海</td><td align="left">3400</td></tr><tr><td align="left">WH7</td><td align="left">珠海</td><td align="left">5200</td></tr><tr><td align="left">WH8</td><td align="left">广州</td><td align="left">6300</td></tr></tbody></table><hr><table><thead><tr><th align="left">仓库号</th><th align="left">职工号</th><th align="left">工资</th></tr></thead><tbody><tr><td align="left">WH2</td><td align="left">E1</td><td align="left">1220</td></tr><tr><td align="left">WH1</td><td align="left">E3</td><td align="left">2210</td></tr><tr><td align="left">WH2</td><td align="left">E4</td><td align="left">4250</td></tr><tr><td align="left">WH3</td><td align="left">E6</td><td align="left">1230</td></tr><tr><td align="left">WH1</td><td align="left">E7</td><td align="left">2250</td></tr><tr><td align="left">WH1</td><td align="left">E8</td><td align="left">1700</td></tr><tr><td align="left">WH2</td><td align="left">E10</td><td align="left">3000</td></tr><tr><td align="left">WH3</td><td align="left">E11</td><td align="left">4500</td></tr><tr><td align="left">WH6</td><td align="left">E12</td><td align="left">2300</td></tr><tr><td align="left">WH2</td><td align="left">E13</td><td align="left">3400</td></tr><tr><td align="left">WH3</td><td align="left">E14</td><td align="left">4500</td></tr><tr><td align="left">WH6</td><td align="left">E15</td><td align="left">4000</td></tr><tr><td align="left">WH2</td><td align="left">E18</td><td align="left">3600</td></tr></tbody></table><hr><table><thead><tr><th align="left">职工号</th><th align="left">供应商号</th><th align="left">订购数量</th><th align="center">订购日期</th></tr></thead><tbody><tr><td align="left">E3</td><td align="left">S7</td><td align="left">67</td><td align="center">2010-12-4</td></tr><tr><td align="left">E1</td><td align="left">S4</td><td align="left">73</td><td align="center">2010-4-1</td></tr><tr><td align="left">E7</td><td align="left">S4</td><td align="left">76</td><td align="center">2010-4-2</td></tr><tr><td align="left">E6</td><td align="left">S6</td><td align="left">77</td><td align="center">20010-1-21</td></tr><tr><td align="left">E3</td><td align="left">S4</td><td align="left">79</td><td align="center">20010-10-15</td></tr><tr><td align="left">E1</td><td align="left">S6</td><td align="left">80</td><td align="center">2009-2-1</td></tr><tr><td align="left">E3</td><td align="left">S6</td><td align="left">90</td><td align="center">2010-3-12</td></tr><tr><td align="left">E3</td><td align="left">S3</td><td align="left">91</td><td align="center">2009-3-2</td></tr><tr><td align="left">E10</td><td align="left">S3</td><td align="left">93</td><td align="center">2010-10-26</td></tr></tbody></table><hr><p>|:—|:—|:—|<br>|S3|振华电子厂|西安|<br>|S4|华通电子公司|北京|<br>|S6|607|厂郑州|<br>|S7|爱华电子厂|北京|</p><ol><li>基于以上的数据库，创建一个名为myproc的存储过程。该存储过程的功能是从职工表中查询哪些仓库的职工人数在3人以上，列出这些仓库的基本信息。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> proc myproc</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ck <span class="keyword">where</span> 仓库号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 仓库号 <span class="keyword">from</span> zg</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 仓库号</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(职工号)<span class="operator">&gt;</span><span class="number">3</span>)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exec</span> myproc</span><br></pre></td></tr></table></figure></li><li>定义具有参数的存储过程。在以上数据库中，创建一个名为Myproc2的存储过程，该存储过程的功能是向仓库表中插入一条记录，新记录的值由参数提供。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> proc Myproc2</span><br><span class="line"><span class="variable">@ckh</span> <span class="type">char</span>(<span class="number">20</span>),<span class="variable">@city</span> <span class="type">char</span>(<span class="number">20</span>),<span class="variable">@mji</span> <span class="type">int</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> ck <span class="keyword">values</span>(<span class="variable">@ckh</span>,<span class="variable">@city</span>,<span class="variable">@mji</span>)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exec</span> Myproc2 <span class="string">&#x27;WH33&#x27;</span>,<span class="string">&#x27;新会&#x27;</span>,<span class="string">&#x27;3000&#x27;</span></span><br></pre></td></tr></table></figure></li><li>定义带返回值的存储过程。在以上数据库中，创建一个名为Myproc3的存储过程，该存储过程的功能是从表中根据供应商号查询对应的供应商名和地址。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> proc Myproc3</span><br><span class="line"><span class="variable">@gysh</span> <span class="type">char</span>(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> 供应商名,地址 <span class="keyword">from</span> gys <span class="keyword">where</span> 供应商号<span class="operator">=</span><span class="variable">@gysh</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exec</span> Myproc3 <span class="string">&#x27;S3&#x27;</span></span><br></pre></td></tr></table></figure></li></ol><hr><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Create</span> <span class="keyword">table</span>  雇员表(</span><br><span class="line">雇员编号 <span class="type">char</span>(<span class="number">10</span>),</span><br><span class="line">雇员姓名 <span class="type">char</span>(<span class="number">20</span>),</span><br><span class="line">年龄 <span class="type">int</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 雇员表</span><br><span class="line"><span class="keyword">ADD</span>  <span class="keyword">CONSTRAINT</span>  PK_EMP</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY （雇员编号）</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 工作表</span><br><span class="line"><span class="keyword">ADD</span>  <span class="keyword">CONSTRAINT</span>  PK_JOB</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY （工作编号）</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Create</span> <span class="keyword">table</span>  雇员表(</span><br><span class="line">雇员编号 <span class="type">char</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">雇员姓名 <span class="type">char</span>(<span class="number">20</span>),</span><br><span class="line">年龄 <span class="type">int</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 雇员表</span><br><span class="line"><span class="keyword">ADD</span>  <span class="keyword">CONSTRAINT</span>  PK_EMP</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (雇员编号)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 雇员表</span><br><span class="line"><span class="keyword">ADD</span>  <span class="keyword">CONSTRAINT</span>  check_age</span><br><span class="line"><span class="keyword">check</span> (年龄<span class="operator">&gt;=</span><span class="number">18</span> <span class="keyword">and</span> 年龄<span class="operator">&lt;=</span><span class="number">60</span>)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> proc p6</span><br><span class="line"><span class="variable">@bianhao</span> <span class="type">char</span>(<span class="number">10</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 雇员表</span><br><span class="line"><span class="keyword">where</span> 雇员编号<span class="operator">=</span><span class="variable">@bianhao</span></span><br><span class="line"><span class="keyword">exec</span>  p6 <span class="string">&#x27;q1&#x27;</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 雇员表</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ck</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> proc p7</span><br><span class="line"><span class="variable">@chengshi</span> <span class="type">char</span>(<span class="number">20</span>),<span class="variable">@geshu</span> <span class="type">int</span> output</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="variable">@geshu</span><span class="operator">=</span><span class="built_in">COUNT</span>(仓库号)</span><br><span class="line"><span class="keyword">from</span> ck</span><br><span class="line"><span class="keyword">where</span> 城市<span class="operator">=</span><span class="variable">@chengshi</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="variable">@jieshou</span> <span class="type">int</span></span><br><span class="line"><span class="keyword">exec</span> p7 <span class="string">&#x27;珠海&#x27;</span>,<span class="variable">@jieshou</span> output</span><br><span class="line">print <span class="variable">@jieshou</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> proc p8</span><br><span class="line"><span class="variable">@ckhao</span> <span class="type">char</span>(<span class="number">10</span>),<span class="variable">@city</span> <span class="type">char</span>(<span class="number">10</span>),<span class="variable">@mianji</span> <span class="type">float</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> ck</span><br><span class="line"><span class="keyword">values</span> (<span class="variable">@ckhao</span>,<span class="variable">@city</span>,<span class="variable">@mianji</span>)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exec</span> p8 <span class="string">&#x27;WH10&#x27;</span>,<span class="string">&#x27;增城&#x27;</span>,<span class="number">1000</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ck</span><br></pre></td></tr></table></figure><h1 id="存储过程使用事务"><a href="#存储过程使用事务" class="headerlink" title="存储过程使用事务"></a>存储过程使用事务</h1><p>实例</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Create</span> <span class="keyword">Procedure</span>  MyProcedure</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">Begin</span></span><br><span class="line"><span class="keyword">Set</span>    NOCOUNT    <span class="keyword">ON</span>;</span><br><span class="line"><span class="keyword">Set</span> XACT_ABORT <span class="keyword">ON</span>;</span><br><span class="line"><span class="keyword">begin</span>   tran  ok  <span class="comment">--开始一个事务OK</span></span><br><span class="line"><span class="keyword">delete</span>  <span class="keyword">from</span>  rxqz  <span class="keyword">where</span> qz<span class="operator">=</span>   <span class="string">&#x27;rx015 &#x27;</span> <span class="comment">--删除数据</span></span><br><span class="line">save   tran  bcd   <span class="comment">--保存一个事务点命名为bcd</span></span><br><span class="line"><span class="keyword">update</span>  sz  <span class="keyword">set</span>   name<span class="operator">=</span><span class="string">&#x27;李丽s&#x27;</span> <span class="keyword">where</span> name<span class="operator">=</span> <span class="string">&#x27;李丽&#x27;</span><span class="comment">--修改数据</span></span><br><span class="line">if  @<span class="variable">@error</span><span class="operator">&lt;&gt;</span><span class="number">0</span>  <span class="comment">--判断修改数据有没有出错</span></span><br><span class="line"><span class="keyword">begin</span> <span class="comment">--如果出错</span></span><br><span class="line"><span class="keyword">rollback</span>   tran  bcd  <span class="comment">-- 回滚事务到BCD 的还原点</span></span><br><span class="line"><span class="keyword">commit</span>   tran  ok  <span class="comment">--提交事务</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span>  <span class="comment">--没有出错</span></span><br><span class="line"><span class="keyword">commit</span>  tran ok <span class="comment">--提交事务</span></span><br><span class="line"><span class="keyword">End</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 各章练习题</title>
      <link href="/posts/SQLtest.html"/>
      <url>/posts/SQLtest.html</url>
      
        <content type="html"><![CDATA[<p>SQL数据库原理练习题</p><span id="more"></span><h1 id="第一章-绪论"><a href="#第一章-绪论" class="headerlink" title="第一章 绪论"></a>第一章 绪论</h1><h2 id="一-选择题"><a href="#一-选择题" class="headerlink" title="一,选择题"></a>一,选择题</h2><ol><li>DBS是采用了数据库技术的计算机系统,DBS是一个集合体,包含数据库,计算机硬件,软件和( C ).</li></ol><p>A.系统分析员 B. 程序员 C. 数据库管理员 D. 操作员<br>2. 数据库(DB),数据库系统(DBS)和数据库管理系统(DBMS)之间的关系是( A).</p><p>A. DBS包括DB和DBMS B. DBMS包括DB和DBS<br>C. DB包括DBS和DBMS D. DBS就是DB,也就是DBMS<br>3. 下面列出的数据库管理技术发展的三个阶段中,没有专门的软件对数据进行管理的是( D).<br>I.人工管理阶段<br>II.文件系统阶段<br>III.数据库阶段</p><p>A. I 和 II B. 只有 II<br>C. II 和 III D. 只有 I<br>4. 下列四项中,不属于数据库系统特点的是( C) .</p><p>A. 数据共享 B. 数据完整性 C. 数据冗余度高 D. 数据独立性高<br>5. 数据库系统的数据独立性体现在( B) .</p><p>A.不会因为数据的变化而影响到应用程序<br>B.不会因为系统数据存储结构与数据逻辑结构的变化而影响应用程序<br>C.不会因为存储策略的变化而影响存储结构<br>D.不会因为某些存储结构的变化而影响其他的存储结构<br>6. 描述数据库全体数据的全局逻辑结构和特性的是( A) .</p><p>A. 模式 B. 内模式 C. 外模式 D. 用户模式<br>7. 要保证数据库的数据独立性,需要修改的是(C ) .</p><p>A. 模式与外模式 B. 模式与内模式<br>C. 三层之间的两种映射 D. 三层模式<br>8. 要保证数据库的逻辑数据独立性,需要修改的是(A ) .</p><p>A. 模式与外模式的映射 B. 模式与内模式之间的映射<br>C. 模式 D. 三层模式<br>9. 用户或应用程序看到的那部分局部逻辑结构和特征的描述是(C),它是模式的逻辑子集.</p><p>A.模式 B. 物理模式 C. 子模式 D. 内模式<br>10. 下述(D )不是DBA数据库管理员的职责 .</p><p>A.完整性约束说明 B. 定义数据库模式<br>C.数据库安全 D. 数据库管理系统设计</p><p>选择题答案:</p><p>(1) C (2) A (3) D (4) C (5) B<br>(6) A (7) C (8) A (9) C (10) D</p><h2 id="二-简答题"><a href="#二-简答题" class="headerlink" title="二,简答题"></a>二,简答题</h2><ol><li>试述数据,数据库,数据库系统,数据库管理系统的概念.</li></ol><p><code>数据</code>:<br>描述事物的符号记录称为数据.数据的种类有文字,图形,图象,声音,正文等等.数据与其语义是不可分的.</p><p>解析:</p><p>在现代计算机系统中数据的概念是广义的.早期的计算机系统主要用于科学计算,处理的数据是整数,实数,浮点数等传统数学中的数据等.现在计算机能存储和处理的对象十分广泛,表示这些对象的 数据也越来越复杂.<br>数据与其语义是不可分的.500这个数字可以表示一件物品的价格是500元,也可以表示一个学术会议参加的人数有500人.还可以表示一袋奶粉重500克.</p><p><code>数据库</code>:<br>数据库是长期储存在计算机内,有组织的,可共享的数据集合.数据库中的数据按一定的数据模型组织,描述和储存,具有较小的冗余度,较高的数据独立性和易扩展性,并可为各种用户共享.</p><p>解析:简单地讲,数据数据库数据具有永久储存,有组织和可共享三个特点.<br>数据模型是数据库的核心概念.每个数据库中数据的都是按照某一种数据模型来组织的.</p><p><code>数据库系统</code>:<br>数据库系统(DBS)是指在计算机系统中引入数据库后的系统构成.数据库系统由数据库,数据库管理系统(及其开发工具),应用系统,数据库管理员构成.</p><p>解析:</p><p>数据库系统和数据库是两个概念.数据库系统是一个人-机系统,数据库是数据库系统的一个组成部分.但是在日常工作中人们常常把把数据库系统简称为数据库.希望读者能够从人们讲话或文章的上下文中区分”数据库系统”和”数据库”.</p><p>不要引起混淆.</p><p><code>数据库管理系统</code>:<br>数据库管理系统(DBMS)是位于用户与操作系统之间的一层数据管理软件.用于科学地组织和存储数据,高效地获取和维护数据.DBMS主要功能包括数据定义功能,数据操纵功能,数据库的运行管理功能,数据库的建立和维护功能.</p><p>解析:</p><p>DBMS是一个大型复杂的软件系统.是计算机中的基础软件.目前,专门研制DBMS的厂商及其研制的DBMS产品很多.著名的有美国IBM公司的DB2关系数据库管理系统,IMS层次数据库管理系统;美国ORACLE公司的ORACLE关系数据库管理系统;SYBASE公司的SYBASE关系数据库管理系统;美国微软公司的SQL SERVER关系数据库管理系统等等.</p><ol start="2"><li>使用数据库系统有什么好处<br>使用数据库系统的好处是由数据库管理系统的特点或优点决定的.<br>使用数据库系统的好处很多,例如可以大大提高应用开发的效率,方便用户的使用,减轻数据库系统管理人员维护的负担等.</li></ol><p>为什么有这些好处,可以结合第5题来回答.</p><p>使用数据库系统可以大大提高应用开发的效率.因为在数据库系统中应用程序不必考虑数据的定义,存储和数据存取的具体路径,这些工作都由DBMS来完成.用一个通俗的比喻,使用了DBMS就如有了一个好参谋好助手,许多具体的技术工作都由这个助手来完成.开发人员就可以专注于应用逻辑的设计而不必为管理数据的许许多多复杂的细节操心.</p><p>还有,当应用逻辑改变,数据的逻辑结构需要改变时,由于数据库系统提供了数据与程序之间的独立性.数据逻辑结构的改变是DBA的责任,开发人员不必修改应用程序,或者只需要修改很少的应用程序.从而既简化了应用程序的编制,又大大减少了应用程序的维护和修改.</p><p>使用数据库系统可以减轻数据库系统管理人员维护系统的负担.因为DBMS在数据库建立,运用和维护时对数据库进行统一的管理和控制,包括数据的完整性,安全性,多用户并发控制,故障恢复等等都由DBMS执行.</p><p>总之,使用数据库系统的优点是很多的,既便于数据的集中管理,控制数据冗余,可以提高数据的利用率和一致性,又有利于应用程序的开发和维护.读者可以在自己今后的工作中结合具体应用,认真加以体会和总结.</p><ol start="3"><li>试述文件系统与数据库系统的区别和联系.<br>文件系统与数据库系统的区别:</li></ol><p>文件系统面向某一应用程序,共享性差,冗余度大,独立性差,纪录内有结构,整体无结构,应用程序自己控制.</p><p>数据库系统面向现实世界,共享性高,冗余度小,具有高度的物理独立性和一定的逻辑独立性,整体结构化,用数据模型描述,由数据库管理系统提供数据安全性,完整性,并发控制和恢复能力.</p><p>读者可以参考《概论》书中表1.1 中的有关内容.</p><p>文件系统与数据库系统的联系是:文件系统与数据库系统都是计算机系统中管理数据的软件.<br>解析:</p><p>文件系统是操作系统的重要组成部分,而DBMS是独立于操作系统的软件.但是DBMS是在操作系统的基础上实现的.数据库中数据的组织和存储是通过操作系统中文件系统来实现的.</p><p>读者可以参考书中第十一章《数据库管理系统》.或者说,读者进一步学习数据库管理系统实现的有关课程(第十一章只是DBMS实现技术的概述)后可以对本题有深入的理解和全面的解答.因为DBMS的实现与操作系统中的文件系统是紧密相关的.例如,数据库实现的基础是文件,对数据库的任何操作最终要转化为对文件的操作.所以在DBMS实现中数据库物理组织的基本问题是如何利用或如何选择操作系统提供的基本的文件组织方法.这里我们就不具体展开了.</p><ol start="4"><li>举出适合用文件系统而不是数据库系统的例子;再举出适合用数据库系统的应用例子.<br>适用于文件系统而不是数据库系统的应用例子</li></ol><p>数据的备份,软件或应用程序使用过程中的临时数据存储一般使用文件比较合适.<br>早期功能比较简单,比较固定的应用系统也适合用文件系统.<br>适用于数据库系统而非文件系统的应用例子</p><p>目前,几乎所有企业或部门的信息系统都以数据库系统为基础,都使用数据库.如一个工厂的管理信息系统(其中会包括许多子系统,如库存管理系统,物资采购系统,作业调度系统,设备管理系统,人事管理系统等等),还比如学校的学生管理系统,人事管理系统,图书馆的图书管理系统等等都适合用数据库系统.</p><p>希望同学们能举出自己了解的应用例子.</p><ol start="5"><li>试述数据库系统的特点.</li></ol><p>数据库系统的主要特点有:</p><ul><li>一,数据结构化<br>数据库系统实现整体数据的结构化,这是数据库的主要特征之一,也是数据库系统与文件系统的本质区别.</li></ul><p>解析:</p><p>注意这里”整体”两个字.在数据库系统中,数据不再针对某一个应用,而是面向全组织,具有整体的结构化.不仅数据是结构化的,而且数据的存取单位即一次可以存取数据的大小也很灵活.可以小到某一个数据项(如一个学生的姓名),大到一组记录(成千上万个学生记录).而在文件系统中,数据的存取单位只有一个:记录.如一个学生的完整记录.</p><ul><li>二. 数据的共享性高,冗余度低,易扩充</li></ul><p>数据库的数据不再面向某个应用而是面向整个系统,因此可以被多个用户,多个应用,用多种不同的语言共享使用.由于数据面向整个系统,是有结构的数据,不仅可以被多个应用共享使用,而且容易增加新的应用,这就使得数据库系统弹性大,易于扩充.</p><p>解析:</p><p>数据共享可以大大减少数据冗余,节约存储空间,同时还能够避免数据之间的不相容性与不一致性.</p><p>所谓”数据面向某个应用”是指数据结构是针对某个应用设计的,只被这个应用程序或应用系统使用.可以说数据是某个应用的”私有资源”.</p><p>所谓”弹性大”是指系统容易扩充也容易收缩,即应用增加或减少时不必修改整个数据库的结构,或者只要做很少的修改.</p><p>我们可以取整体数据的各种子集用于不同的应用系统,当应用需求改变或增加时,只要重新选取不同的子集或加上一部分数据便可以满足新的需求.<br>三,数据独立性高</p><p>数据独立性包括数据的物理独立性和数据的逻辑独立性.</p><p>数据库管理系统的模式结构和二级映象功能保证了数据库中的数据具有很高的物理独立性和逻辑独立性.</p><p>解析:</p><p>所谓”独立性”即相互不依赖.数据独立性是指数据和程序相互不依赖.即数据的逻辑结构或物理结构改变了,程序不会跟着改变.数据与程序的独立,把数据的定义从程序中分离出去,加上数据的存取又由DBMS负责,简化了应用程序的编制,大大减少了应用程序的维护和修改.</p><p>四,数据由DBMS统一管理和控制</p><p>数据库的共享是并发的共享,即多个用户可以同时存取数据库中的数据甚至可以同时存取数据库中同一个数据.为此,DBMS必须提供统一的数据控制功能,包括数据的安全性保护,数据的完整性检查,并发控制和数据库恢复.</p><p>解析:</p><p>DBMS数据控制功能包括四个方面:</p><p>数据的安全性保护:保护数据以防止不合法的使用造成的数据的泄密和破坏;</p><p>数据的完整性检查:将数据控制在有效的范围内或保证数据之间满足一定的关系;</p><p>并发控制:对多用户的并发操作加以控制和协调,保证并发操作的正确性;</p><p>数据库恢复:当计算机系统发生硬件故障,软件故障,或者由于操作员的失误以及故意的破坏影响数据库中数据的正确性,甚至造成数据库部分或全部数据的丢失时,能将数据库从错误状态恢复到某一已知的正确状态(亦称为完整状态或一致状态).</p><p>下面我们可以得到”什么是数据库”的一个定义:</p><p>数据库是长期存储在计算机内有组织的大量的共享的数据集合.它可以供各种用户共享,具有最小冗余度和较高的数据独立性.DBMS在数据库建立,运用和维护时对数据库进行统一控制,以保证数据的完整性,安全性,并在多用户同时使用数据库时进行并发控制,在发生故障后对系统进行恢复.</p><p>数据库系统的出现使信息系统从以加工数据的程序为中心转向围绕共享的数据库为中心的新阶段.</p><ol start="6"><li>数据库管理系统的主要功能有哪些</li></ol><p>① 数据库定义功能;</p><p>② 数据存取功能;</p><p>③ 数据库运行管理;</p><p>④ 数据库的建立和维护功能.</p><ol start="7"><li>试述数据模型的概念,数据模型的作用和数据模型的三个要素.</li></ol><p>数据模型是数据库中用来对现实世界进行抽象的工具,是数据库中用于提供信息表示和操作手段的形式构架.</p><p>一般地讲,数据模型是严格定义的概念的集合.这些概念精确地描述系统的静态特性,动态特性和完整性约束条件.因此数据模型通常由数据结构,数据操作和完整性约束三部分组成.</p><p>① 数据结构:是所研究的对象类型的集合,是对系统的静态特性的描述.<br>② 数据操作:是指对数据库中各种对象(型)的实例(值)允许进行的操作的集合,包括操作及有关的操作规则,是对系统动态特性的描述.<br>③ 数据的约束条件:是完整性规则的集合,完整性规则是给定的数据模型中数据及其联系所具有的制约和依存规则,用以限定符合数据模型的数据库状态以及状态的变化,以保证数据的正确,有效,相容.</p><p>解析:</p><p>数据模型是数据库系统中最重要的概念之一.同学们必须通过《概论》的学习真正掌握</p><p>数据模型的概念和作用.</p><p>数据模型是数据库系统的基础.任何一个DBMS都以某一个数据模型为基础,或者说支持某一个数据模型.</p><p>数据库系统中模型有不同的层次.根据模型应用的不同目的,可以将模型分成两类或说两个层次:一是概念模型,是按用户的观点来对数据和信息建模,用于信息世界的建模,强调语义表达能力,概念简单清晰;另一是数据模型,是按计算机系统的观点对数据建模,用于机器世界,人们可以用它定义,操纵数据库中的数据.一般需要有严格的形式化定义和一组严格定义了语法和语义的语言,并有一些规定和限制,便于在机器上实现.</p><ol start="8"><li>试述概念模型的作用.<br>概念模型实际上是现实世界到机器世界的一个中间层次.概念模型用于信息世界的建模,是现实世界到信息世界的第一层抽象,是数据库设计人员进行数据库设计的有力工具,也是数据库设计人员和用户之间进行交流的语言.</li><li>定义并解释概念模型中以下术语:<br>实体,实体型,实体集,属性,码,实体联系图(E-R图)</li></ol><ul><li><code>实体</code>:客观存在并可以相互区分的事物叫实体.</li><li><code>实体型</code>:具有相同属性的实体具有相同的特征和性质,用实体名及其属性名集合来抽象和刻画同类实体称为实体型.</li><li><code>实体集</code>:同型实体的集合称为实体集.</li><li><code>属性</code>:实体所具有的某一特性,一个实体可由若干个属性来刻画.</li><li><code>码</code>:唯一标识实体的属性集称为码.</li><li><code>实体联系图</code>:E-R图提供了表示实体型,属性和联系的方法:</li><li><code>实体型</code>:用矩形表示,矩形框内写明实体名.</li><li><code>属性</code>:用椭圆形表示,并用无向边将其与相应的实体连接起来.</li><li><code>联系</code>:用菱形表示,菱形框内写明联系名,并用无向边分别与有关实体连接起来,同时在无向边旁标上联系的类型(1 : 1,1 : n或m : n).</li></ul><ol start="10"><li>试给出三个实际部门的E-R图,要求实体型之间具有一对一,一对多,多对多各种不同的联系.</li></ol><h1 id="第二章-关系数据库"><a href="#第二章-关系数据库" class="headerlink" title="第二章 关系数据库"></a>第二章 关系数据库</h1><h2 id="一-选择题-1"><a href="#一-选择题-1" class="headerlink" title="一.选择题"></a>一.选择题</h2><ol><li>下面的选项不是关系数据库基本特征的是(A ).</li></ol><p>A.不同的列应有不同的数据类型<br>B.不同的列应有不同的列名<br>C.与行的次序无关<br>D.与列的次序无关<br>2. 一个关系只有一个(D) .</p><p>A.候选码 B. 外码 C. 超码 D. 主码<br>3. 关系模型中,一个码是(C ).</p><p>A.可以由多个任意属性组成<br>B.至多由一个属性组成<br>C.可有多个或者一个其值能够唯一表示该关系模式中任何元组的属性组成<br>D.以上都不是<br>4. 现有如下关系:<br>患者(患者编号,患者姓名,性别,出生日起,所在单位)</p><p>医疗(患者编号,患者姓名,医生编号,医生姓名,诊断日期,诊断结果)<br>其中,医疗关系中的外码是(A ).</p><p>A. 患者编号 B. 患者姓名<br>C. 患者编号和患者姓名 D. 医生编号和患者编号<br>5. 现有一个关系:借阅(书号,书名,库存数,读者号,借期,还期),假如同一本书允许一个读者多次借阅,但不能同时对一种书借多本,则该关系模式的外码是( D).</p><p>A. 书号 B. 读者号<br>C. 书号+读者号 D. 书号+读者号+借期<br>6. 关系模型中实现实体间 N:M 联系是通过增加一个(A ) .</p><p>A.关系实现 B. 属性实现 C. 关系或一个属性实现 D. 关系和一个属性实现<br>7. 关系代数运算是以( C)为基础的运算 .</p><p>A. 关系运算 B. 谓词演算 C. 集合运算 D. 代数运算<br>8. 关系数据库管理系统应能实现的专门关系运算包括( B).</p><p>A. 排序,索引,统计 B. 选择,投影,连接<br>C. 关联,更新,排序 D. 显示,打印,制表<br>9. 五种基本关系代数运算是( A).</p><p>A.∪-×σπ<br>B.∪-σπ<br>C.∪∩×σπ<br>D.∪∩σπ<br>10. 关系代数表达式的优化策略中,首先要做的是(B ) .</p><p>A.对文件进行预处理  B.尽早执行选择运算<br>C.执行笛卡尔积运算  D.投影运算<br>11. 关系数据库中的投影操作是指从关系中(B ) .</p><p>A.抽出特定记录 B. 抽出特定字段<br>C.建立相应的影像 D. 建立相应的图形<br>12. 从一个数据库文件中取出满足某个条件的所有记录形成一个新的数据库文件的操作是(C )操作 .</p><p>A.投影 B. 联接 C. 选择 D. 复制<br>13. 关系代数中的联接操作是由(B )操作组合而成 .</p><p>A.选择和投影 B. 选择和笛卡尔积<br>C.投影,选择,笛卡尔积 D. 投影和笛卡尔积<br>14. 自然联接是构成新关系的有效方法.一般情况下,当对关系R和S是用自然联接时,要求R和S含有一个或者多个共有的(C).</p><p>A.记录 B. 行 C. 属性 D. 元组<br>15. 假设有关系R和S,在下列的关系运算中,(D )运算不要求:”R和S具有相同的元数,且它们的对应属性的数据类型也相同” .</p><p>A.R∩S B. R∪S C. R-S D. R×S<br>16. 假设有关系R和S,关系代数表达式R-(R-S)表示的是(A ).</p><p>A.R∩S B. R∪S C. R-S D. R×S<br>17. 下面列出的关系代数表达是中,那些式子能够成立( C) .<br>ⅰ. σf1 ( σf2 (E)) &#x3D; σf1∧f2 (E)<br>ⅱ. E1∞E2 &#x3D; E2∞E1<br>ⅲ. (E1∞E2)∞E3 &#x3D; E1∞ (E2∞E3)<br>ⅳ. σf1 ( σf2 (E)) &#x3D;σf2 ( σf1(E))</p><p>A.全部 B. ⅱ和ⅲ C. 没有 D. ⅰ和ⅳ<br>18. 下面四个关系表达式是等价的,是判别它们的执行效率( A) .<br>E1 &#x3D;πA (σ B&#x3D;C ∧ D&#x3D;E′ (R×S) )<br>E2 &#x3D;πA (σ B&#x3D;C (R× σD&#x3D;E′ (S) )<br>E3 &#x3D;πA (R∞B&#x3D;CσD&#x3D;E′(S) )<br>E3 &#x3D;πA (σD&#x3D;E′ (R∞B&#x3D;C S) )</p><p>A. E3最快 B. E2最快 C. E4最快 D. E1最快<br>19. 有关系SC(S_ID,C_ID,AGE,SCORE),查找年龄大于22岁的学生的学号和分数,正确的关系代数表达式是(D) .<br>ⅰ. πS_ID,SCORE (σ age&gt;22 (SC) )<br>ⅱ. σ age&gt;22 (πS_ID,SCORE (SC) )<br>ⅲ. πS_ID,SCORE (σ age&gt;22 (πS_ID,SCORE,AGE (SC) ) )</p><p>A.ⅰ和 ⅱ B. 只有ⅱ正确 C. 只有 ⅰ正确 D. ⅰ和ⅲ正确</p><p>选择题答案:<br>(1) A (2) D (3) C (4) A (5) D<br>(6) A (7) C (8) B (9) A (10) B<br>(11) B (12) C (13) B (14) C (15)D<br>(16) A (17) C (18) A (19) D</p><h2 id="二-简答题-1"><a href="#二-简答题-1" class="headerlink" title="二,简答题"></a>二,简答题</h2><ol><li>试述关系模型的三个组成部分.</li><li>试述关系数据语言的特点和分类.</li><li>设有一个SPJ数据库,包括S,P,J,SPJ四个关系模式:<br>S( SNO,SNAME,STATUS,CITY);</li></ol><p>P(PNO,PNAME,COLOR,WEIGHT);</p><p>J(JNO,JNAME,CITY);</p><p>SPJ(SNO,PNO,JNO,QTY);</p><p>供应商表S由供应商代码(SNO),供应商姓名(SNAME),供应商状态(STATUS),供应商所在城市(CITY)组成;零件表P由零件代码(PNO),零件名(PNAME),颜色(COLOR),重量(WEIGHT)组成;工程项目表J由工程项目代码(JNO),工程项目名(JNAME),工程项目所在城市(CITY)组成;供应情况表SPJ由供应商代码(SNO),零件代码(PNO),工程项目代码(JNO),供应数量(QTY)组成,表示某供应商供应某种零件给某工程项目的数量为QTY.</p><p>试用关系代数完成如下查询:</p><p>(1) 求供应工程J1零件的供应商号码SNO;</p><p>(2) 求供应工程J1零件P1的供应商号码SNO;</p><p>(3) 求供应工程J1零件为红色的供应商号码SNO;</p><p>(4) 求没有使用天津供应商生产的红色零件的工程号JNO;</p><p>(5) 求至少用了供应商S1所供应的全部零件的工程号JNO.</p><ol start="4"><li>定义并理解下列术语,说明它们之间的联系与区别:</li></ol><p>(1). 域,笛卡尔积,关系,元组,属性<br>(2). 主码,候选码,外码<br>(3). 关系模式,关系,关系数据库</p><ol start="5"><li><p>试述关系模型的完整性规则.在参照完整性中,为什么外码属性的值有时也可以为空 什么情况下才可以为空</p></li><li><p>试述等值连接与自然连接的区别和联系.</p></li><li><p>关系代数的基本运算有哪些</p></li><li><p>试用关系代数的基本运算来表示其他运算.</p></li></ol><h1 id="第三章-SQL语言"><a href="#第三章-SQL语言" class="headerlink" title="第三章 SQL语言"></a>第三章 SQL语言</h1><h2 id="一-选择题-2"><a href="#一-选择题-2" class="headerlink" title="一,选择题"></a>一,选择题</h2><ol><li>SQL语言是(B)的语言,容易学习 .</li></ol><p>A. 过程化 B. 非过程化<br>C. 格式化 D. 导航式</p><ol start="2"><li>SQL语言的数据操纵语句包括SELECT,INSERT,UPDATE,DELETE等.其中最重要的,也是使用最频繁的语句是(A) .</li></ol><p>A. SELECT B. INSERT<br>C. UPDATE D. DELETE<br>3. 在视图上不能完成的操作是( C) .</p><p>A. 更新视图 B. 查询<br>C. 在视图上定义新的表 D. 在视图上定义新的视图<br>4. SQL语言集数据查询,数据操纵,数据定义和数据控制功能于一体,其中,CREATE,DROP,ALTER语句是实现哪种功能(C ).</p><p>A. 数据查询 B. 数据操纵<br>C. 数据定义 D. 数据控制<br>5. SQL语言中,删除一个视图的命令是( B).</p><p>A.DELETE B.DROP C.CLEAR D.REMOVE<br>6. 在SQL语言中的视图VIEW是数据库的( A) .</p><p>A. 外模式 B. 模式 C. 内模式 D. 存储模式<br>7. 下列的SQL语句中,( D)不是数据定义语句.</p><p>A. CREATE TABLE B. DROP VIEW<br>C. CREATE VIEW D. GRANT<br>8. 若要撤销数据库中已经存在的表S,可用(C ).</p><p>A. DELETE TABLE S B. DELETE S<br>C. DROP TABLE S D. DROP S<br>9. 若要在基本表S中增加一列CN(课程名),可用( C).</p><p>A. ADD TABLE S(CN CHAR(8))<br>B. ADD TABLE S ALTER(CN CHAR(8))<br>C. ALTER TABLE S ADD(CN CHAR(8))<br>D. ALTER TABLE S (ADD CN CHAR(8))<br>10. 学生关系模式 S( S#,Sname,Sex,Age),S的属性分别表示学生的学号,姓名,性别,年龄.要在表S中删除一个属性”年龄”,可选用的SQL语句是(B ).</p><p>A. DELETE Age from S<br>B. ALTER TABLE S DROP Age<br>C. UPDATE S Age<br>D. ALTER TABLE S ‘Age’<br>11. 有关系S(S#,SNAME,SAGE),C(C#,CNAME),SC(S#,C#,GRADE).其中S#是学生号,SNAME是学生姓名,SAGE是学生年龄, C#是课程号,CNAME是课程名称.要查询选修”ACCESS”课的年龄不小于20的全体学生姓名的SQL语句是SELECT SNAME FROM S,C,SC WHERE子句.这里的WHERE子句的内容是(A).</p><p>A. S.S# &#x3D; SC.S# and C.C# &#x3D; SC.C# and SAGE&gt;&#x3D;20 and CNAME&#x3D;’ACCESS’<br>B. S.S# &#x3D; SC.S# and C.C# &#x3D; SC.C# and SAGE in&gt;&#x3D;20 and CNAME in ‘ACCESS’<br>C. SAGE in&gt;&#x3D;20 and CNAME in ‘ACCESS’<br>D. SAGE&gt;&#x3D;20 and CNAME&#x3D;’ ACCESS’<br>12. 设关系数据库中一个表S的结构为S(SN,CN,grade),其中SN为学生名,CN为课程名,二者均为字符型;grade为成绩,数值型,取值范围0-100.若要把”张二的化学成绩80分”插入S中,则可用( D).</p><p>A. ADD INTO S VALUES(‘张二’,’化学’,’80’)<br>B. INSERT INTO S VALUES(‘张二’,’化学’,’80’)<br>C. ADD INTO S VALUES(‘张二’,’化学’,80)<br>D. INSERT INTO S VALUES(‘张二’,’化学’,80)<br>13. 设关系数据库中一个表S的结构为:S(SN,CN,grade),其中SN为学生名,CN为课程名,二者均为字符型;grade为成绩,数值型,取值范围0-100.若要更正王二的化学成绩为85分,则可用( A) .</p><p>A. UPDATE S SET grade&#x3D;85 WHERE SN&#x3D;’王二’ AND CN&#x3D;’化学’<br>B. UPDATE S SET grade&#x3D;’85’ WHERE SN&#x3D;’王二’ AND CN&#x3D;’化学’<br>C. UPDATE grade&#x3D;85 WHERE SN&#x3D;’王二’ AND CN&#x3D;’化学’<br>D. UPDATE grade&#x3D;’85’ WHERE SN&#x3D;’王二’ AND CN&#x3D;’化学’<br>14. 在SQL语言中,子查询是(D) .</p><p>A. 返回单表中数据子集的查询语言<br>B. 选取多表中字段子集的查询语句<br>C. 选取单表中字段子集的查询语句<br>D. 嵌入到另一个查询语句之中的查询语句<br>15. SQL是一种(C )语言.</p><p>A. 高级算法 B. 人工智能<br>C. 关系数据库 D. 函数型<br>16. 有关系S(S#,SNAME,SEX),C(C#,CNAME),SC(S#,C#,GRADE).其中S#是学生号,SNAME是学生姓名,SEX是性别, C#是课程号,CNAME是课程名称.要查询选修”数据库”课的全体男生姓名的SQL语句是SELECT SNAME FROM S,C,SC WHERE子句.这里的WHERE子句的内容是( A).</p><p>A.S.S# &#x3D; SC.S# and C.C# &#x3D; SC.C# and SEX&#x3D;’男’ and CNAME&#x3D;’数据库’<br>B.S.S# &#x3D; SC.S# and C.C# &#x3D; SC.C# and SEX in’男’and CNAME in’数据库’<br>C.SEX ‘男’ and CNAME ‘ 数据库’<br>D.S.SEX&#x3D;’男’ and CNAME&#x3D;’ 数据库’</p><ol start="17"><li>若用如下的SQL语句创建了一个表SC:<br>CREATE TABLE SC (S# CHAR(6) NOT NULL,C# CHAR(3) NOT NULL,SCORE INTEGER,NOTE CHAR(20));向SC表插入如下行时,( B)行可以被插入 .</li></ol><p>A.(‘201009’,’111’,60,必修)<br>B.(‘200823’,’101’,NULL,NULL)<br>C.(NULL,’103’,80,’选修’)<br>D.(‘201132’,NULL,86,’ ‘)<br>18. 假设学生关系S(S#,SNAME,SEX),课程关系C(C#,CNAME),学生选课关系SC(S#,C#,GRADE).要查询选修”Computer”课的男生姓名,将涉及到关系( D).</p><p>A. S B. S,SC C. C,SC D. S,C,SC</p><p>选择题答案:<br>(1) B (2) A (3) C (4) C (5) B<br>(6) A (7) D (8) C (9) C (10) B<br>(11) A (12) D (13) A (14) D (15) C<br>(16) A (17) B (18) D</p><h2 id="二-简答题-2"><a href="#二-简答题-2" class="headerlink" title="二,简答题"></a>二,简答题</h2><ol><li>试述SQL语言的特点.</li></ol><p>答:</p><ol><li><p>综合统一. SQL语言集数据定义语言DDL,数据操纵语言DML,数据控制语言DCL的功能于一体.</p></li><li><p>高度非过程化.用SQL语言进行数据操作,只要提出”做什么”,而无须指明”怎么做”,因此无需了解存取路径,存取路径的选择以及SQL语句的操作过程由系统自动完成.</p></li><li><p>面向集合的操作方式.SQL语言采用集合操作方式,不仅操作对象,查找结果可以是元组的集合,而且一次插入,删除,更新操作的对象也可以是元组的集合.</p></li><li><p>以同一种语法结构提供两种使用方式.SQL语言既是自含式语言,又是嵌入式语言.作为自含式语言,它能够独立地用于联机交互的使用方式,也能够嵌入到高级语言程序中,供程序员设计程序时使用.</p></li><li><p>语言简捷,易学易用.</p></li></ol><ol start="2"><li>试述SQL的定义功能.</li></ol><p>答:</p><p>SQL的数据定义功能包括定义表,定义视图和定义索引.</p><p>SQL语言使用CREATE TABLE语句定义建立基本表,;ALTER TABLE语句修改基本表定义,DROP TABLE语句删除基本表;建立索引使用CREATE INDEX语句建立索引, DROP INDEX语句删除索引表;SQL语言使用CREATE VIEW命令建立视图,DROP VIEW语句删除视图.<br>3. 用SQL语句建立第3章习题3中的四个表.</p><p>答:</p><p>对于S表:S( SNO,SNAME,STATUS,CITY);</p><p>建S表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE S</span><br><span class="line">(SNO CHAR(3),</span><br><span class="line">SNAME CHAR(10)</span><br><span class="line">STATUS CHAR(2)</span><br><span class="line">CITY CHAR(10))</span><br></pre></td></tr></table></figure><p>P(PNO,PNAME,COLOR,WEIGHT);</p><p>建P表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> P</span><br><span class="line">(PNO <span class="type">CHAR</span>(<span class="number">3</span>),</span><br><span class="line">PNAME <span class="type">CHAR</span>(<span class="number">10</span>),</span><br><span class="line">COLOR <span class="type">CHAR</span>(<span class="number">4</span>),</span><br><span class="line">WEIGHT <span class="type">INT</span>);</span><br><span class="line">J(JNO,JNAME,CITY);</span><br></pre></td></tr></table></figure><p>建J表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> J</span><br><span class="line">(JNO <span class="type">CHAR</span>(<span class="number">3</span>),</span><br><span class="line">JNAME <span class="type">CHAR</span>(<span class="number">10</span>)</span><br><span class="line">CITY <span class="type">CHAR</span>(<span class="number">10</span>))</span><br></pre></td></tr></table></figure><p>SPJ(SNO,PNO,JNO,QTY)</p><p>建SPJ表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> SPJ</span><br><span class="line">(SNO <span class="type">CHAR</span>(<span class="number">3</span>),</span><br><span class="line">PNO <span class="type">CHAR</span>(<span class="number">3</span>),</span><br><span class="line">JNO <span class="type">CHAR</span>(<span class="number">3</span>),</span><br><span class="line">QTY <span class="type">INT</span>);</span><br></pre></td></tr></table></figure><ol start="4"><li>针对上题中建立的四个表试用SQL语言完成第3章习题3中的查询.</li></ol><p>答:</p><p>(1) 求供应工程J1零件的供应商号码SNO;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> JNO<span class="operator">=</span><span class="string">&#x27;J1&#x27;</span>;</span><br></pre></td></tr></table></figure><p>(2) 求供应工程J1零件P1的供应商号码SNO;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> JNO<span class="operator">=</span><span class="string">&#x27;J1&#x27;</span></span><br><span class="line"><span class="keyword">AND</span> PNO<span class="operator">=</span><span class="string">&#x27;P1&#x27;</span>;</span><br></pre></td></tr></table></figure><p>(3) 求供应工程J1零件为红色的供应商号码SNO;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> JNO<span class="operator">=</span><span class="string">&#x27;J1&#x27;</span></span><br><span class="line"><span class="keyword">AND</span> PNO <span class="keyword">IN</span></span><br><span class="line">(<span class="keyword">SELECT</span> PNO</span><br><span class="line"><span class="keyword">FROM</span> P</span><br><span class="line"><span class="keyword">WHERE</span> COLOR<span class="operator">=</span><span class="string">&#x27;红&#x27;</span>);</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ,P</span><br><span class="line"><span class="keyword">WHERE</span> JNO<span class="operator">=</span><span class="string">&#x27;J1&#x27;</span></span><br><span class="line"><span class="keyword">AND</span> SPJ.PNO<span class="operator">=</span>P.PNO</span><br><span class="line"><span class="keyword">AND</span> COLOR<span class="operator">=</span><span class="string">&#x27;红&#x27;</span>;</span><br></pre></td></tr></table></figure><p>(4) 求没有使用天津供应商生产的红色零件的工程号JNO;<br>解析:<br>用SQL语言表示如下:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> JNO</span><br><span class="line"><span class="keyword">FROM</span> J</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span></span><br><span class="line">(<span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> SPJ.JNO<span class="operator">=</span>J.JNO</span><br><span class="line"><span class="keyword">AND</span> SNO <span class="keyword">IN</span></span><br><span class="line">(<span class="keyword">SELECT</span> SNO</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> CITY<span class="operator">=</span><span class="string">&#x27;天津&#x27;</span>)</span><br><span class="line"><span class="keyword">AND</span> PNO <span class="keyword">IN</span></span><br><span class="line">(<span class="keyword">SELECT</span> PNO</span><br><span class="line"><span class="keyword">FROM</span> P</span><br><span class="line"><span class="keyword">WHERE</span> COLOR<span class="operator">=</span><span class="string">&#x27;红&#x27;</span>));</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> JNO</span><br><span class="line"><span class="keyword">FROM</span> J</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span></span><br><span class="line">(<span class="keyword">SELECT</span> <span class="operator">*</span><span class="number">1</span></span><br><span class="line"><span class="keyword">FROM</span> SPJ, S, P</span><br><span class="line"><span class="keyword">WHERE</span> SPJ.JNO<span class="operator">=</span>J.JNO</span><br><span class="line"><span class="keyword">AND</span> SPJ.SNO<span class="operator">=</span>S.SNO</span><br><span class="line"><span class="keyword">AND</span> SPJ.PNO<span class="operator">=</span>P.PNO</span><br><span class="line"><span class="keyword">AND</span> S.CITY<span class="operator">=</span><span class="string">&#x27;天津&#x27;</span></span><br><span class="line"><span class="keyword">AND</span> P. COLOR<span class="operator">=</span><span class="string">&#x27;红&#x27;</span>);</span><br></pre></td></tr></table></figure><p>注意:从 J 表入手,以包含那些尚未使用任何零件的工程号.</p><p>(5) 求至少用了供应商S1所供应的全部零件的工程号JNO .</p><p>解析:<br>用SQL语言表示如下:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> JNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ SPJZ</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span></span><br><span class="line">(<span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> SPJ SPJX</span><br><span class="line"><span class="keyword">WHERE</span> SNO<span class="operator">=</span><span class="string">&#x27;S1&#x27;</span></span><br><span class="line"><span class="keyword">AND</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span></span><br><span class="line">(<span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> SPJ SPJY</span><br><span class="line"><span class="keyword">WHERE</span> SPJY.PNO<span class="operator">=</span>SPJX.PNO</span><br><span class="line"><span class="keyword">AND</span> SPJY.JNON<span class="operator">=</span>SPJZ.JNO</span><br><span class="line"><span class="keyword">AND</span> SPJY.SNO<span class="operator">=</span><span class="string">&#x27;S1&#x27;</span>));</span><br><span class="line"><span class="keyword">AND</span> SPJY.SNO<span class="operator">=</span><span class="string">&#x27;S1&#x27;</span> ));</span><br></pre></td></tr></table></figure><ol start="5"><li>针对习题3中的四个表试用SQL语言完成以下各项操作:</li></ol><p>(1) 找出所有供应商的姓名和所在城市.</p><p>(2) 找出所有零件的名称,颜色,重量.</p><p>(3) 找出使用供应商S1所供应零件的工程号码.</p><p>(4) 找出工程项目J2使用的各种零件的名称及其数量.</p><p>(5) 找出上海厂商供应的所有零件号码.</p><p>(6) 找出使用上海产的零件的工程名称.</p><p>(7) 找出没有使用天津产的零件的工程号码.</p><p>(8) 把全部红色零件的颜色改成蓝色.</p><p>(9) 由S5供给J4的零件P6改为由S3供应,请作必要的修改.</p><p>(10) 从供应商关系中删除S2的记录,并从供应情况关系中删除相应的记录.</p><p>(11) 请将 (S2,J6,P4,200) 插入供应情况关系.</p><p>答:</p><p>(1) 找出所有供应商的姓名和所在城市.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNAME, CITY</span><br><span class="line"><span class="keyword">FROM</span> S;</span><br></pre></td></tr></table></figure><p>(2) 找出所有零件的名称,颜色,重量.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> PNAME, COLOR, WEIGHT</span><br><span class="line"><span class="keyword">FROM</span> P</span><br></pre></td></tr></table></figure><p>(3) 找出使用供应商S1所供应零件的工程号码.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> JNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> SNO<span class="operator">=</span><span class="string">&#x27;S1&#x27;</span></span><br></pre></td></tr></table></figure><p>(4) 找出工程项目J2使用的各种零件的名称及其数量.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> P.PNAME, SPJ.QTY</span><br><span class="line"><span class="keyword">FROM</span> P, SPJ</span><br><span class="line"><span class="keyword">WHERE</span> P.PNO<span class="operator">=</span>SPJ.PNO</span><br><span class="line"><span class="keyword">AND</span> SPJ.JNO<span class="operator">=</span><span class="string">&#x27;J2&#x27;</span>;</span><br></pre></td></tr></table></figure><p>(5) 找出上海厂商供应的所有零件号码.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> PNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> SNO <span class="keyword">IN</span></span><br><span class="line">(<span class="keyword">SELECT</span> SNO</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> CITY<span class="operator">=</span><span class="string">&#x27;上海&#x27;</span>);</span><br></pre></td></tr></table></figure><p>(6) 找出使用上海产的零件的工程名称.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> JNAME</span><br><span class="line"><span class="keyword">FROM</span> J, SPJ, S</span><br><span class="line"><span class="keyword">WHERE</span> J. JNO<span class="operator">=</span>SPJ. JNO</span><br><span class="line"><span class="keyword">AND</span> SPJ. SNO<span class="operator">=</span>S.SNO</span><br><span class="line"><span class="keyword">AND</span> S.CITY<span class="operator">=</span><span class="string">&#x27;上海&#x27;</span>;</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> JNAME</span><br><span class="line"><span class="keyword">FROM</span> J</span><br><span class="line"><span class="keyword">WHERE</span> JNO <span class="keyword">IN</span></span><br><span class="line">(<span class="keyword">SELECT</span> JNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ, S</span><br><span class="line"><span class="keyword">WHERE</span> SPJ. SNO<span class="operator">=</span>S.SNO</span><br><span class="line"><span class="keyword">AND</span> S.CITY<span class="operator">=</span><span class="string">&#x27;上海&#x27;</span>);</span><br></pre></td></tr></table></figure><p>(7) 找出没有使用天津产的零件的工程号码.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> JNO</span><br><span class="line"><span class="keyword">FROM</span> J</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span></span><br><span class="line">(<span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> SPJ.JNO<span class="operator">=</span>J.JNO <span class="keyword">AND</span> SNO <span class="keyword">IN</span></span><br><span class="line">(<span class="keyword">SELECT</span> SNO</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> CITY<span class="operator">=</span><span class="string">&#x27;天津&#x27;</span>))</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> JNO</span><br><span class="line"><span class="keyword">FROM</span> J</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span></span><br><span class="line">(<span class="keyword">SELECT</span> <span class="operator">*</span><span class="number">1</span></span><br><span class="line"><span class="keyword">FROM</span> SPJ, S</span><br><span class="line"><span class="keyword">WHERE</span> SPJ.JNO<span class="operator">=</span>J.JNO <span class="keyword">AND</span> SPJ.SNO<span class="operator">=</span>S.SNO <span class="keyword">AND</span> S.CITY<span class="operator">=</span><span class="string">&#x27;天津&#x27;</span>)</span><br></pre></td></tr></table></figure><p>(8) 把全部红色零件的颜色改成蓝色.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> P</span><br><span class="line"><span class="keyword">SET</span> COLOR<span class="operator">=</span><span class="string">&#x27;蓝&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> COLOR<span class="operator">=</span><span class="string">&#x27;红&#x27;</span></span><br></pre></td></tr></table></figure><p>(9) 由S5供给J4的零件P6改为由S3供应,请作必要的修改.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> SPJ</span><br><span class="line"><span class="keyword">SET</span> SNO<span class="operator">=</span><span class="string">&#x27;S3&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> SNO<span class="operator">=</span><span class="string">&#x27;S5&#x27;</span> <span class="keyword">AND</span> JNO<span class="operator">=</span><span class="string">&#x27;J4&#x27;</span> <span class="keyword">AND</span> PNO<span class="operator">=</span><span class="string">&#x27;P6&#x27;</span></span><br></pre></td></tr></table></figure><p>(10) 从供应商关系中删除S2的记录,并从供应情况关系中删除相应的记录.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> SNO<span class="operator">=</span><span class="string">&#x27;S2&#x27;</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> SNO<span class="operator">=</span><span class="string">&#x27;S2&#x27;</span></span><br></pre></td></tr></table></figure><p>解析:注意删除顺序,应该先从SPJ表中删除供应商S2所供应零件的记录,然后从从S表中删除S2.</p><p>(11) 请将 (S2,J6,P4,200) 插入供应情况关系.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ(SNO, JNO, PNO, QTY)</span><br><span class="line"><span class="keyword">VALUES</span> (S2,J6,P4,<span class="number">200</span>);</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ</span><br><span class="line"><span class="keyword">VALUES</span> (S2,P4,J6,<span class="number">200</span>);</span><br></pre></td></tr></table></figure><ol start="6"><li>什么是基本表 什么是视图 两者的区别和联系是什么</li></ol><p>答:</p><p>基本表是本身独立存在的表,在SQL中一个关系就对应一个表.</p><p>视图是从一个或几个基本表导出的表.视图本身不独立存储在数据库中,是一个虚表.即数据库中只存放视图的定义而不存放视图对应的数据,这些数据仍存放在导出视图的基本表中.视图在概念上与基本表等同,用户可以如同基本表那样使用视图,可以在视图上再定义视图.</p><ol start="7"><li>试述视图的优点.</li></ol><p>答:</p><p>(1) 视图能够简化用户的操作.</p><p>(2) 视图使用户能以多种角度看待同一数据.</p><p>(3) 视图对重构数据库提供了一定程度的逻辑独立性.</p><p>(4) 视图能够对机密数据提供安全保护.</p><ol start="8"><li>所有的视图是否都可以更新 为什么</li></ol><p>答:</p><p>不是.视图是不实际存储数据的虚表,因此对视图的更新,最终要转换为对基本表的更新.因为有些视图的更新不能唯一地有意义地转换成对相应基本表的更新,所以,并不是所有的视图都是可更新的.如《概论》3.5.1中的视图S_G(学生的学号及他的平均成绩)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREAT <span class="keyword">VIEW</span> S_G(Sno,Gavg)</span><br><span class="line"><span class="keyword">AS</span> <span class="keyword">SELECT</span> Sno,<span class="built_in">AVG</span>(Grade)</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> Sno;</span><br></pre></td></tr></table></figure><p>要修改平均成绩,必须修改各科成绩,而我们无法知道哪些课程成绩的变化导致了平均成绩的变化.<br>9. 哪类视图是可以更新的,哪类视图是不可更新的 各举一例说明.<br>答:</p><p>基本表的行列子集视图一般是可更新的.如《概论》3.5.3中的例1.<br>若视图的属性来自集函数,表达式,则该视图肯定是不可以更新的.</p><p>如《概论》3.5.3中的S_G视图.<br>10. 试述某个你熟悉的实际系统中对视图更新的规定.</p><p>答:(略)</p><p>解析:不同的系统对视图更新的规定是不同的,读者必须了解你所用系统对视图更新的规定.<br>11. 请为三建工程项目建立一个供应情况的视图,包括供应商代码(SNO),零件<br>代码(PNO),供应数量(QTY).针对该视图完成下列查询:</p><p>(1) 找出三建工程项目使用的各种零件代码及其数量.<br>(2) 找出供应商S1的供应情况.</p><p>答:建视图:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> V_SPJ <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> SNO, PNO, QTY</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> JNO<span class="operator">=</span></span><br><span class="line">(<span class="keyword">SELECT</span> JNO</span><br><span class="line"><span class="keyword">FROM</span> J</span><br><span class="line"><span class="keyword">WHERE</span> JNAME<span class="operator">=</span><span class="string">&#x27;三建&#x27;</span>);</span><br></pre></td></tr></table></figure><p>对该视图查询:</p><p>(1) 找出三建工程项目使用的各种零件代码及其数量.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> PNO, QTY</span><br><span class="line"><span class="keyword">FROM</span> V_SPJ;</span><br></pre></td></tr></table></figure><p>(2) 找出供应商S1的供应情况.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> PNO, QTY <span class="comment">/* S1供应三建工程的零件号和对应的数量*/</span></span><br><span class="line"><span class="keyword">FROM</span> V_SPJ</span><br><span class="line"><span class="keyword">WHERE</span> SNO<span class="operator">=</span><span class="string">&#x27;S1&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="第四章-关系系统及其优化"><a href="#第四章-关系系统及其优化" class="headerlink" title="第四章 关系系统及其优化"></a>第四章 关系系统及其优化</h1><h2 id="一-选择题-3"><a href="#一-选择题-3" class="headerlink" title="一,选择题"></a>一,选择题</h2><ol><li>概念模型是现实世界的第一层抽象,这一类最著名的模型是(D) .</li></ol><p>A.层次模型 B. 关系模型 C. 网状模型 D. 实体-关系模型<br>2. 区分不同实体的依据是( B) .</p><p>A. 名称 B. 属性 C. 对象 D. 概念<br>3. 关系数据模型是目前最重要的一种数据模型,它的三个要素分别为(B).</p><p>A.实体完整,参照完整,用户自定义完整<br>B.数据结构,关系操作,完整性约束<br>C.数据增加,数据修改,数据查询<br>D.外模式,模式,内模式<br>4. 在(A )中一个结点可以有多个双亲,节点之间可以有多种联系.</p><p>A.网状模型 B. 关系模型<br>C.层次模型 D. 以上都有<br>5. (B )的存取路径对用户透明,从而具有更高的数据独立性,更好的安全保密性,<br>也简化了程序员的工作和数据库开发建立的工作.</p><p>A.网状模型 B. 关系模型<br>D.层次模型 D. 以上都有<br>6. 在关系数据库中,要求基本关系中所有的主属性上不能有空值,其遵守的约束规则是( C) .</p><p>A.数据依赖完整性规则 B. 用户定义完整性规则<br>C.实体完整性规则 D. 域完整性规则</p><p>选择题答案:<br>(1) D (2) B (3) B (4) A (5) B (6) C</p><h2 id="二-简答题-3"><a href="#二-简答题-3" class="headerlink" title="二,简答题"></a>二,简答题</h2><ol><li>试述关系模型的三个组成部分.</li></ol><p>答:关系模型由关系数据结构,关系操作集合和关系完整性约束三部分组成.</p><ol start="2"><li>试述关系数据语言的特点和分类.</li></ol><p>答:关系数据语言可以分为三类:</p><p>关系代数语言 例如ISBL</p><p>关系演算语言 (元组关系演算语言 例如APLHA,QUEL 和 域关系演算语言 例如QBE)</p><p>具有关系代数和关系演算双重特点的语言 例如SQL</p><p>这些关系数据语言的共同特点是,具有完备的表达能力,是非过程化的集合操作语言,功能强,能够嵌入高级语言中使用.</p><ol start="3"><li>定义并理解下列术语,说明它们之间的联系与区别:</li></ol><p>(1) 域,关系,元组,属性</p><p>答:</p><p>域:域是一组具有相同数据类型的值的集合.</p><p>关系:在域D1,D2,…,Dn上笛卡尔积D1×D2×…×Dn的子集称为关系,表示为R(D1,D2,…,Dn)</p><p>元组:关系中的每个元素是关系中的元组.</p><p>属性:关系也是一个二维表,表的每行对应一个元组,表的每列对应一个域.由于域可以相同,为了加以区分,必须对每列起一个名字,称为属性(Attribute).</p><p>(2) 主码,候选码,外部码</p><p>答:</p><p><code>候选码</code>:若关系中的某一属性组的值能唯一地标识一个元组,则称该属性组为候选码(Candidate key).</p><p><code>主码</code>:若一个关系有多个候选码,则选定其中一个为主码(Primary key).<br><code>外部码</code>:设F是基本关系R的一个或一组属性,但不是关系R的码,如果F与基本关系S的主码Ks相对应,则称F是基本关系R的外部码(Foreign key),简称外码.</p><p>基本关系R称为参照关系(Referencing relation),基本关系S称为被参照关系(Referenced relation)或目标关系(Target relation).关系R和S可以是相同的关系.</p><p>(3) 关系模式,关系,关系数据库</p><p>关系模式:关系的描述称为关系模式(Relation Schema).它可以形式化地表示为:R(U,D,dom,F)</p><p>其中R为关系名,U为组成该关系的属性名集合,D为属性组U中属性所来自的域,dom为属性向域的映象集合,F为属性间数据的依赖关系集合.</p><p>关系:在域D1,D2,…,Dn上笛卡尔积D1×D2×…×Dn的子集称为关系,表示为R(D1,D2,…,Dn)</p><p>关系是关系模式在某一时刻的状态或内容.关系模式是静态的,稳定的,而关系是动态的,随时间不断变化的,因为关系操作在不断地更新着数据库中的数据.</p><p><code>关系数据库</code>:关系数据库也有型和值之分.关系数据库的型也称为关系数据库模式,是对关系数据库的描述,它包括若干域的定义以及在这些域上定义的若干关系模式.关系数据库的值是这些关系模式在某一时刻对应的关系的集合,通常就称为关系数据库.</p><ol start="4"><li>试述关系模型的完整性规则.在参照完整性中,为什么外部码属性的值也可以为空 什么情况下才可以为空</li></ol><p>答:</p><p>关系模型的完整性规则是对关系的某种约束条件.关系模型中可以有三类完整性约束:实体完整性,参照完整性和用户定义的完整性.<br>其中实体完整性和参照完整性是关系模型必须满足的完整性约束条件,被称作是关系的两个不变性,应该由关系系统自动支持.</p><p>(1) 实体完整性规则:若属性A是基本关系R的主属性,则属性A不能取空值.</p><p>(2) 参照完整性规则:若属性(或属性组)F是基本关系R的外码,它与基本关系S的主码Ks相对应(基本关系R和S不一定是不同的关系),则对于R中每个元组在F上的值必须为:</p><ul><li>或者取空值(F的每个属性值均为空值);</li><li>或者等于S中某个元组的主码值.</li></ul><p>(3) 用户定义的完整性是针对某一具体关系数据库的约束条件.它反映某一具体应用所涉及的数据必须满足的语义要求.</p><p>在参照完整性中,外部码属性的值可以为空,它表示该属性的值尚未确定.但前提条件是该外部码属性不是其所在关系的主属性.</p><p>例如,在下面的”学生”表中,”专业号”是一个外部码,不是学生表的主属性,可以为空.其语义是,该学生的专业尚未确定.</p><p>学生(学号,姓名,性别,专业号,年龄)<br>专业(专业号,专业名)</p><p>而在下面的”选修”表中的”课程号”虽然也是一个外部码属性,但它又是”选修”表的主属性,所以不能为空.因为关系模型必须满足实体完整性.</p><p>课程(课程号,课程名,学分)<br>选修(学号,课程号,成绩)</p><ol start="5"><li>等值连接与自然连接的区别是什么</li></ol><p>答:</p><p>连接运算中有两种最为重要也最为常用的连接,一种是等值连接(equi-join),另一种是自然连接(Natural join).θ为”&#x3D;”的连接运算称为等值连接.<br>它是从关系R与S的笛卡尔积中选取A,B属性值相等的那些元组.即等值连接为:RA&#x3D;BS&#x3D;{ tr ts| tr∈R ∧ ts∈S ∧ tr[A] &#x3D; ts[B] }</p><p>自然连接(Natural join)是一种特殊的等值连接,它要求两个关系中进行比较的分量必须是相同的属性组,并且要在结果中把重复的属性去掉.即若R和S具有相同的属性组B,则自然连接可记作:RS&#x3D;{ tr ts| tr∈R ∧ ts∈S ∧ tr[B] &#x3D; ts[B] }</p><h2 id="第五章-关系数据理论"><a href="#第五章-关系数据理论" class="headerlink" title="第五章 关系数据理论"></a>第五章 关系数据理论</h2><h2 id="一-选择题-4"><a href="#一-选择题-4" class="headerlink" title="一,选择题"></a>一,选择题</h2><ol><li>为了设计出性能较优的关系模式,必须进行规范化,规范化主要的理论依据是(A ) .</li></ol><p>A. 关系规范化理论 B. 关系代数理论<br>C.数理逻辑 D. 关系运算理论<br>2. 规范化理论是关系数据库进行逻辑设计的理论依据,根据这个理论,关系数据库中的关系必须满足:每一个属性都是(B ) .</p><p>A. 长度不变的 B. 不可分解的<br>C.互相关联的 D. 互不相关的<br>3. 已知关系模式R(A,B,C,D,E)及其上的函数相关性集合F&#x3D;{A→D,B→C ,E→A },该关系模式的候选关键字是( B) .</p><p>A. AB B. BE<br>C. CD D. DE<br>4. 设学生关系S(SNO,SNAME,SSEX,SAGE,SDPART)的主键为SNO,学生选课关系SC(SNO,CNO,SCORE)的主键为SNO和CNO,则关系R(SNO,CNO,SSEX,SAGE,SDPART,SCORE)的主键为SNO和CNO,其满足( A).</p><p>A. 1NF B.2NF    C. 3NF D. BCNF<br>5. 设有关系模式W(C,P,S,G,T,R),其中各属性的含义是:C表示课程,P表示教师,S表示学生,G表示成绩,T表示时间,R表示教室,根据语义有如下数据依赖集:D&#x3D;{ C→P,(S,C)→G,(T,R)→C,(T,P)→R,(T,S)→R },关系模式W的一个关键字是( D) .</p><p>A. (S,C) B. (T,R)   C. (T,P) D. (T,S)<br>6. 关系模式中,满足2NF的模式(B) .</p><p>A. 可能是1NF B. 必定是1NF<br>C. 必定是3NF D. 必定是BCNF<br>7. 关系模式R中的属性全是主属性,则R的最高范式必定是(C ) .</p><p>A. 1NF B. 2NF   C. 3NF D. BCNF<br>8. 消除了部分函数依赖的1NF的关系模式,必定是(B ) .</p><p>A. 1NF B. 2NF   C. 3NF D. BCNF<br>9. 如果A-&gt;B ,那么属性A和属性B的联系是( B) .</p><p>A. 一对多 B. 多对一 C.多对多 D. 以上都不是<br>10. 关系模式的候选关键字可以有1个或多个,而主关键字有( C) .</p><p>A. 多个 B. 0个  C. 1个 D. 1个或多个</p><ol start="11"><li>候选关键字的属性可以有( D) .</li></ol><p>A. 多个 B. 0个  C. 1个 D. 1个或多个<br>12. 关系模式的任何属性( A) .</p><p>A. 不可再分 B. 可以再分<br>C. 命名在关系模式上可以不唯一 D. 以上都不是<br>13. 设有关系模式W(C,P,S,G,T,R),其中各属性的含义是:C表示课程,P表示教师,S表示学生,G表示成绩,T表示时间,R表示教室,根据语义有如下数据依赖集:D&#x3D;{ C→P,(S,C)→G,(T,R)→C,(T,P)→R,(T,S)→R },若将关系模式W分解为三个关系模式W1(C,P),W2(S,C,G),W2(S,T,R,C),则W1的规范化程序最高达到( D) .</p><p>A. 1NF B.2NF    C. 3NF D. BCNF<br>14. 在关系数据库中,任何二元关系模式的最高范式必定是(D ) .</p><p>A. 1NF B.2NF    C. 3NF D. BCNF<br>15. 在关系规范式中,分解关系的基本原则是(B ).<br>I.实现无损连接<br>II.分解后的关系相互独立<br>III.保持原有的依赖关系</p><p>A. Ⅰ和Ⅱ B. Ⅰ和Ⅲ C. Ⅰ D. Ⅱ<br>16. 不能使一个关系从第一范式转化为第二范式的条件是( B).</p><p>A.每一个非属性都完全函数依赖主属性<br>B.每一个非属性都部分函数依赖主属性<br>C.在一个关系中没有非属性存在<br>D.主键由一个属性构成<br>17. 任何一个满足2NF但不满足3NF的关系模式都不存在(D ).</p><p>A.主属性对键的部分依赖<br>B.非主属性对键的部分依赖<br>C.主属性对键的传递依赖<br>D.非主属性对键的传递依赖<br>18. 设数据库关系模式R&#x3D;(A,B,C,D,E),有下列函数依赖:A→BC,D→E,C→D;下述对R的分解中,哪些分解是R的无损连接分解( B) .<br>I.(A,B,C)(C,D,E)<br>II.(A,B)(A,C,D,E)<br>III.(A,C)(B,C,D,E)<br>IV.(A,B)(C,D,E)</p><p>A.只有Ⅳ B. Ⅰ和Ⅱ C. Ⅰ,Ⅱ和Ⅲ D. 都不是<br>19. 设U是所有属性的集合,X,Y,Z都是U的子集,且Z&#x3D;U-X-Y.下面关于多值依赖的叙述中,不正确的是( C).</p><p>A.若X→→Y,则X→→Z        B.若X→Y,则X→→Y<br>C.若X→→Y,且Y′∈Y,则X→→Y′     D.若Z&#x3D;∮,则X→→Y<br>20. 若关系模式R(U,F)属于3NF,则(C ).</p><p>A. 一定属于BCNF<br>B. 消除了插入的删除异常<br>C. 仍存在一定的插入和删除异常<br>D. 属于BCNF且消除了插入和删除异常<br>21. 下列说法不正确的是(C ).</p><p>A. 任何一个包含两个属性的关系模式一定满足3NF<br>B. 任何一个包含两个属性的关系模式一定满足BCNF<br>C. 任何一个包含三个属性的关系模式一定满足3NF<br>D. 任何一个关系模式都一定有码<br>22. 设关系模式R(A,B,C),F是R上成立的FD集,F&#x3D;{B→C},则分解P&#x3D;{AB,BC}相对于F( A).</p><p>A. 是无损联接,也是保持FD的分解<br>B. 是无损联接,也不保持FD的分解<br>C. 不是无损联接,但保持FD的分解<br>D. 既不是无损联接,也不保持FD的分解<br>23. 关系数据库规范化是为了解决关系数据库中( A)的问题而引入的.</p><p>A. 插入,删除和数据冗余<br>B. 提高查询速度<br>C. 减少数据操作的复杂性<br>D. 保证数据的安全性和完整性<br>24. 关系的规范化中,各个范式之间的关系是( A) .</p><p>A. 1NF∈2NF∈3NF<br>B. 3NF∈2NF∈1NF<br>C. 1NF&#x3D;2NF&#x3D;3NF<br>D. 1NF∈2NF∈BCNF∈3NF<br>25. 数据库中的冗余数据是指可(D)的数据 .</p><p>A. 容易产生错误 B. 容易产生冲突<br>C. 无关紧要     D. 由基本数据导出<br>26. 学生表(id,name,sex,age,depart_id,depart_name),存在函数依赖是id→name,sex,age,depart_id;dept_id→dept_name,其满足( B).</p><p>A. 1NF B. 2NF   C. 3NF D. BCNF<br>27. 设有关系模式R(S,D,M),其函数依赖集:F&#x3D;{S→D,D→M},则关系模式R的规范化程度最高达到(B ).</p><p>A. 1NF B. 2NF   C. 3NF D. BCNF<br>28. 设有关系模式R(A,B,C,D),其数据依赖集:F&#x3D;{(A,B)→C,C→D},则关系模式R的规范化程度最高达到( B).</p><p>A. 1NF B. 2NF   C. 3NF D. BCNF<br>29. 下列关于函数依赖的叙述中,哪一条是不正确的(B ).</p><p>A.由X→Y,Y→Z,则X→YZ  B.由X→YZ,则X→Y, Y→Z<br>C.由X→Y,WY→Z,则XW→Z D.由X→Y,Z∈Y,则X→Z<br>30. X→Y,当下列哪一条成立时,称为平凡的函数依赖(B ).</p><p>A. X∈Y B. Y∈X   C. X∩Y&#x3D;∮ D. X∩Y≠∮<br>31. 关系数据库的规范化理论指出:关系数据库中的关系应该满足一定的要求,最起码的要求是达到1NF,即满足( D).</p><p>A.每个非主键属性都完全依赖于主键属性<br>B.主键属性唯一标识关系中的元组<br>C.关系中的元组不可重复<br>D.每个属性都是不可分解的<br>32. 根据关系数据库规范化理论,关系数据库中的关系要满足第一范式,部门(部门号,部门名,部门成员,部门总经理)关系中,因哪个属性而使它不满足第一范式(B).</p><p>A. 部门总经理 B. 部门成员 C. 部门名 D. 部门号<br>33. 有关系模式A(C,T,H,R,S),其中各属性的含义是:</p><p>C:课程 T:教员 H:上课时间 R:教室 S:学生<br>根据语义有如下函数依赖集:</p><p>F&#x3D;{C→T,(H,R)→C,(H,T)RC,(H,S)→R}</p><p>(1) 关系模式A的码是(B ).</p><p>A. C B.(H,S) C.(H,R) D.(H,T)</p><p>(2) 关系模式A的规范化程度最高达到( B).</p><p>A. 1NF B. 2NF C. 3NF D. BCNF</p><p>(3) 现将关系模式A分解为两个关系模式A1(C,T),A2(H,R,S),则其中A1的规范化程度达到(D ).</p><p>A. 1NF B. 2NF C. 3NF D. BCNF</p><p>选择题答案:<br>(1) A (2) B (3) B (4) A (5) D<br>(6) B (7) C (8) B (9) B (10) C<br>(11) D (12) A (13) D (14) D (15) B<br>(16) B (17) D (18) B (19) C (20) C<br>(21) C (22) A (23) A (24) A (25) D<br>(26) B (27) B (28) B (29) B (30) B<br>(31) D (32) B (33) B B D</p><h1 id="二-简答题-4"><a href="#二-简答题-4" class="headerlink" title="二,简答题"></a>二,简答题</h1><ol><li>理解并给出下列术语的定义:</li></ol><p>函数依赖,部分函数依赖,完全函数依赖,候选码,主码, 外码,全码.</p><p>解析:</p><p>解答本题不能仅仅把《概论》上的定义写下来.关键是真正理解和运用这些概念.</p><p>答:</p><p><code>函数依赖</code>:设R (U)是一个关系模式,U是R的属性集合,X和Y是U的子集.对于R (U)的任意一个可能的关系r,如果r中不存在两个元组,它们在X上的属性值相同, 而在Y上的属性值不同, 则称”X函数确定Y”或”Y函数依赖于X”,记作X→Y.</p><p>解析:</p><ol><li><p>函数依赖是最基本的一种数据依赖,也是最重要的一种数据依赖.</p></li><li><p>函数依赖是属性之间的一种联系,体现在属性值是否相等.由上面的定义可以知道,如果X→Y,则r中任意两个元组,若它们在X上的属性值相同,那么在Y上的属性值一定也相同.</p></li><li><p>我们要从属性间实际存在的语义来确定他们之间的函数依赖,即函数依赖反映了(描述了)现实世界的一种语义.</p></li><li><p>函数依赖不是指关系模式R的在某个时刻的关系(值)满足的约束条件,而是指R任何时刻的一切关系均要满足的约束条件.</p></li></ol><p>答:</p><p>完全函数依赖,部分函数依赖:在R(U)中,如果X→Y,并且对于X的任何一个真子集X,都有X′→Y,则称Y对X完全函数依赖;若X→Y,但Y不完全函数依赖于X,则称Y对X部分函数依赖;</p><p><code>候选码</code>,<code>主码</code>: 设K为R(U,F)中的属性或属性组合,若K → U则K为R的候选码.若候选码多于一个,则选定其中的一个为主码.<br>答:</p><p><code>外码</code>:关系模式R中属性或属性组X并非R的码,但X是另一个关系模式的码,则称X是R的外部码也称外码.</p><p><code>全码</code>:整个属性组是码,称为全码(All-key).</p><ol start="2"><li>建立一个关于系,学生,班级,学会等诸信息的关系数据库.</li></ol><p>描述学生的属性有:学号,姓名,出生年月,系名,班号,宿舍区.</p><p>描述班级的属性有:班号,专业名,系名,人数,入校年份.</p><p>描述系的属性有:系名,系号,系办公室地点,人数.</p><p>描述学会的属性有:学会名,成立年份,地点,人数.</p><p>有关语义如下:一个系有若干专业,每个专业每年只招一个班,每个班有若干学生.一个系的学生住在同一宿舍区.每个学生可参加若干学会,每个学会有若干学生.学生参加某学会有一个入会年份.</p><p>请给出关系模式,写出每个关系模式的极小函数依赖集,指出是否存在传递函数依赖,对于函数依赖左部是多属性的情况讨论函数依赖是完全函数依赖,还是部分函数依赖.</p><p>指出各关系的候选码,外部码,有没有全码存在</p><p>答:</p><p>关系模式: 学生S(S#,SN,SB,DN,C#,SA)</p><p>班级C(C#,CS,DN,CNUM,CDATE)</p><p>系 D(D#,DN,DA,DNUM)</p><p>学会P(PN,DATE1,PA,PNUM)</p><p>学生–学会SP(S#,PN,DATE2)</p><p>其中,S#—学号,SN—姓名,SB—出生年月,SA—宿舍区</p><p>C#—班号,CS—专业名,CNUM—班级人数,CDATE—入校年份</p><p>D#—系号,DN—系名,DA—系办公室地点,DNUM—系人数</p><p>PN—学会名,DATE1—成立年月,PA—地点,PNUM—学会人数,DATE2—入会年份</p><p>每个关系模式的极小函数依赖集:</p><p>S:S#→SN,S#→SB,S#→C#,C#→DN,DN→SA</p><p>C:C#→CS,C#→CNUM,C#→CDATE,CS→DN,(CS,CDATE)→C#</p><p>D:D#→DN,DN→D#,D#→DA,D#→DNUM</p><p>P:PN→DATE1,PN→PA,PN→PNUM</p><p>SP:(S#,PN)→DATE2</p><p>S中存在传递函数依赖: S#→DN, S#→SA, C#→SA</p><p>C中存在传递函数依赖:C#→DN</p><p>(S#,PN)→DATE2 和(CS,CDATE)→C# 均为SP中的函数依赖,是完全函数依赖</p><p>关系 候选码 外部码 全码</p><p>S S# C#,DN 无</p><p>C C#,(CS,CDATE) DN 无</p><p>D D#和DN 无 无</p><p>P PN 无 无</p><p>SP (S#,PN) S#,PN 无</p><ol start="3"><li>试由Armostrong公理系统推导出下面三条推理规则:</li></ol><p>(1) 合并规则:若X→Z,X→Y,则有X→YZ</p><p>(2) 伪传递规则:由X→Y,WY→Z有XW→Z</p><p>(3) 分解规则:X→Y,Z 包含于 Y,有X→Z</p><p>证:</p><p>(1) 已知X→Z,由增广律知XY→YZ,又因为X→Y,可得XX→XY→YZ,最后根据传递律得X→YZ.<br>(2) 已知X→Y,据增广律得XW→WY,因为WY→Z,所以XW→WY→Z,通过传递律可知XW→Z.<br>(3) 已知Z 包含于 Y,根据自反律知Y→Z,又因为X→Y,所以由传递律可得X→Z.</p><ol start="4"><li>试举出三个多值依赖的实例.<br>答:</li></ol><p>(1) 关系模式MSC(M,S,C)中,M表示专业,S表示学生,C表示该专业的必修课.假设每个专业有多个学生,有一组必修课.设同专业内所有学生的选修的必修课相同,实例关系如下.按照语义对于M的每一个值M i,S有一个完整的集合与之对应而不问C取何值,所以M→→S.由于C与S的完全对称性,必然有M→→C成立.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">M S C</span><br><span class="line">M 1 S1 C1</span><br><span class="line">M 1 S1 C2</span><br><span class="line">M 1 S2 C1</span><br><span class="line">M 1 S2 C2</span><br><span class="line">…… …… ……</span><br></pre></td></tr></table></figure><p>(2) 关系模式ISA(I,S,A)中,I表示学生兴趣小组,S表示学生,A表示某兴趣小组的活动项目.假设每个兴趣小组有多个学生,有若干活动项目.每个学生必须参加所在兴趣小组的所有活动项目,每个活动项目要求该兴趣小组的所有学生参加.<br>按照语义有I→→S,I→→A成立.</p><p>(3) 关系模式RDP(R,D,P)中,R表示医院的病房,D表示责任医务人员,P表示病人.假设每个病房住有多个病人,有多个责任医务人员负责医治和护理该病房的所有病人.按照语义有R→→D,R→→P成立.</p><ol start="5"><li>下面的结论哪些是正确的,哪些是错误的 对于错误的结论请给出理由或给出一个反例说明之.<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(1) 任何一个二目关系都是属于3NF的.√</span><br><span class="line">(2) 任何一个二目关系都是属于BCNF的.√</span><br><span class="line">(3) 任何一个二目关系都是属于4NF的.√</span><br><span class="line">(5) 若R.A→R.B,R.B→R.C,则R.A→R.C √</span><br><span class="line">(6) 若R.A→R.B,R.A→R.C,则R.A→R.(B, C) √</span><br><span class="line">(7) 若R.B→R.A,R.C→R.A,则R.(B, C)→R.A √</span><br><span class="line">(8) 若R.(B, C)→R.A,则R.B→R.A,R.C→R.A ×</span><br><span class="line">反例:关系模式 SC(S#,C#,G) (S#,C#)→G,但是S# → G,C#→G</span><br></pre></td></tr></table></figure></li></ol><h1 id="第六章-数据库设计"><a href="#第六章-数据库设计" class="headerlink" title="第六章 数据库设计"></a>第六章 数据库设计</h1><h2 id="一-选择题-5"><a href="#一-选择题-5" class="headerlink" title="一,选择题"></a>一,选择题</h2><ol><li>数据流程图是用于描述结构化方法中(D )阶段的工具.</li></ol><p>A. 概要设计 B. 可行性分析<br>C. 程序编码 D. 需求分析<br>2. 数据库设计中,用E-R图赖描述信息结构但不涉及信息在计算机中的表示,这是数据库设计的( C).</p><p>A. 需求分析阶段 B. 逻辑设计阶段<br>C. 概念设计阶段 D. 物理设计阶段<br>3. 在数据库设计中,将E-R图转换成关系数据模型的过程属于(B ).</p><p>A. 需求分析阶段 B. 逻辑设计阶段<br>C. 概念设计阶段 D. 物理设计阶段<br>4. 子模式DDL是用来描述( B).</p><p>A. 数据库的总体逻辑结构 B. 数据库的局部逻辑结构<br>C. 数据库的物理存储结构 D. 数据库的概念结构<br>5. 数据库设计的概念设计阶段,表示概念结构的常用方法和描述工具是(C).</p><p>A.层次分析法和层次结构图<br>B.数据流程分析法和数据流程图<br>C.实体联系法和实体联系图<br>D.结构分析法和模块结构图<br>6. 在E-R模型向关系模型转换时,M:N的联系转换为关系模式时,其关键字是(C ).</p><p>A.M端实体的关键字<br>B.N端实体的关键字<br>C.M,N端实体的关键字组合<br>D.重新选取其他属性<br>7. 某学校规定,每一个班级最多有50名学生,至少有10名学生;每一名学生必须属于一个班级.在班级与学生实体的联系中,学生实体的基数是( B) .</p><p>A. (0,1) B. (1,1)<br>C. (1,10) D. (10,50)<br>8. 在关系数据库设计中,设计关系模式是数据库设计中(A )阶段的任.</p><p>A. 逻辑设计阶段 B. 概念设计阶段<br>C. 物理设计阶段 D. 需求分析阶段<br>9. 关系数据库的规范化理论主要解决的问题是(A ).</p><p>A.如何构造合适的数据逻辑结构<br>B.如何构造合适的数据物理结构<br>C.如何构造合适的应用程序界面<br>D.如何控制不同用户的数据操作权限<br>10. 数据库设计可划分为七个阶段,每个阶段都有自己的设计内容,”为哪些关系,在哪些属性上,键什么样的索引”这一设计内容应该属于( C)设计阶段.</p><p>A. 概念设计 B. 逻辑设计<br>C. 物理设计 D. 全局设计<br>11. 假设设计数据库性能用”开销”,即时间,空间及可能的费用来衡量,则在数据库应用系统生存期中存在很多开销.其中,对物理设计者来说,主要考虑的是( C).</p><p>A. 规划开销 B. 设计开销<br>C. 操作开销 D. 维护开销<br>12. 数据库物理设计完成后,进入数据库实施阶段,下述工作中,(D )一般不属于实施阶段的工作.</p><p>A. 建立库结构 B. 系统调试<br>C. 加载数据 D. 扩充功能<br>13. 从ER图导出关系模型时,如果实体间的联系是M:N的,下列说法中正确的是(C ).</p><p>A.将N方关键字和联系的属性纳入M方的属性中<br>B.将M方关键字和联系的属性纳入N方的属性中<br>C.增加一个关系表示联系,其中纳入M方和N方的关键字<br>D.在M方属性和N方属性中均增加一个表示级别的属性<br>14. 在ER模型中,如果有3个不同的实体集,3个M:N联系,根据ER模型转换为关系模型的规则,转换为关系的数目是(C ).</p><p>A. 4 B. 5   C. 6 D. 7</p><p>选择题答案:<br>(1) D (2) C (3) B (4) B (5) C<br>(6) C (7) B (8) A (9) A (10) C</p><p>(11) C (12) D (13) C (14) C</p><h2 id="二-简答题-5"><a href="#二-简答题-5" class="headerlink" title="二,简答题"></a>二,简答题</h2><ol><li>试述数据库设计过程.</li></ol><p>解析</p><p>希望同学能够认真阅读《概论》的内容,了解并掌握数据库设计过程.这里只概要列出数据库设计过程的六个阶段:</p><ol><li><p>需求分析</p></li><li><p>概念结构设计</p></li><li><p>逻辑结构设计</p></li><li><p>数据库物理设计</p></li><li><p>数据库实施</p></li><li><p>数据库运行和维护</p></li></ol><p>这是一个完整的实际数据库及其应用系统的设计过程.不仅包括设计数据库本身,还包括数据库的实施,数据库运行和维护.<br>设计一个完善的数据库应用系统往往是上述六个阶段的不断反复.</p><ol start="2"><li>试述数据库设计过程的各个阶段上的设计描述.</li></ol><p>解析:这是进一步了解数据库设计的具体内容.设计描述是指在各个阶段体现设计内容,描述设计结果的各种文档,程序.</p><p>答:</p><p>各阶段的设计要点如下:</p><ol><li><p>需求分析:准确了解与分析用户需求(包括数据与处理).</p></li><li><p>概念结构设计:通过对用户需求进行综合,归纳与抽象,形成一个独立于具体DBMS的概念模型.</p></li><li><p>逻辑结构设计:将概念结构转换为某个DBMS所支持的数据模型,并对其进行优化.</p></li><li><p>数据库物理设计:为逻辑数据模型选取一个最适合应用环境的物理结构(包括存储结构和存取方法).</p></li><li><p>数据库实施:设计人员运用DBMS提供的数据语言,工具及宿主语言,根据逻辑设计和物理设计的结果建立数据库,编制与调试应用程序,组织数据入库,并进行试运行.</p></li><li><p>数据库运行和维护:在数据库系统运行过程中对其进行评价,调整与修改.</p></li></ol><ol start="3"><li>试述数据库设计过程中结构设计部分形成的数据库模式.</li></ol><p>答:</p><p>数据库结构设计的不同阶段形成数据库的各级模式,即:</p><p>在概念设计阶段形成独立于机器特点,独立于各个DBMS产品的概念模式,在本篇中就是E-R图;</p><p>在逻辑设计阶段将E-R图转换成具体的数据库产品支持的数据模型,如关系模型,形成数据库逻辑模式;然后在基本表的基础上再建立必要的视图(View),形成数据的外模式;</p><p>在物理设计阶段,根据DBMS特点和处理的需要,进行物理存储安排,建立索引,形成数据库内模式.</p><p>概念模式是面向用户和设计人员的,属于概念模型的层次;逻辑模式,外模式,内模式是DBMS支持的模式,属于数据模型的层次.可以在DBMS中加以描述和存储.</p><ol start="4"><li>试述数据库设计的特点.</li></ol><p>答:<br>数据库设计既是一项涉及多学科的综合性技术又是一项庞大的工程项目</p><p>其主要特点有:</p><ol><li><p>数据库建设是硬件,软件和干件(技术与管理的界面)的结合.</p></li><li><p>从软件设计的技术角度看,数据库设计应该和应用系统设计相结合,也就是说,整个设计过程中要把结构(数据)设计和行为(处理)设计密切结合起来.</p></li></ol><ol start="5"><li>需求分析阶段的设计目标是什么 调查的内容是什么</li></ol><p>答:</p><p>需求分析阶段的设计目标是通过详细调查现实世界要处理的对象(组织,部门,企业等),充分了解原系统(手工系统或计算机系统)工作概况,明确用户的各种需求,然后在此基础上确定新系统的功能.</p><p>调查的内容是”数据”和”处理”,即获得用户对数据库的如下要求:</p><p>(1) 信息要求.指用户需要从数据库中获得信息的内容与性质.由信息要求可以导出数据要求,即在数据库中需要存储哪些数据.</p><p>(2) 处理要求.指用户要完成什么处理功能,对处理的响应时间有什么要求,处理方式是批处理还是联机处理.</p><p>(3) 安全性与完整性要求.</p><ol start="6"><li>数据字典的内容和作用是什么</li></ol><p>答:</p><p>数据字典是系统中各类数据描述的集合.数据字典的内容通常包括:数据项,数据结构,数据流,数据存储,处理过程五个部分</p><p>其中数据项是数据的最小组成单位,若干个数据项可以组成一个数据结构.数据字典通过对数据项和数据结构的定义来描述数据流,数据存储的逻辑内容.</p><p>数据字典的作用:</p><p>数据字典是关于数据库中数据的描述,在需求分析阶段建立,是下一步进行概念设计的基础,并在数据库设计过程中不断修改,充实,完善.</p><p>(注意,数据库设计阶段形成的数据字典与后面讲到的数据字典不同,后者是DBMS关于数据库中数据的描述,当然两者是有联系的).</p><ol start="7"><li>什么是数据库的概念结构 试述其特点和设计策略.</li></ol><p>答:概念结构是信息世界的结构,即概念模型,其主要特点是:</p><p>(1) 能真实,充分地反映现实世界,包括事物和事物之间的联系,能满足用户对数据的处理要求.是对现实世界的一个真实模型.</p><p>(2) 易于理解,从而可以用它和不熟悉计算机的用户交换意见,用户的积极参与是数据库的设计成功的关键.</p><p>(3) 易于更改,当应用环境和应用要求改变时,容易对概念模型修改和扩充.</p><p>(4) 易于向关系,网状,层次等各种数据模型转换.</p><p>概念结构的设计策略通常有四种:</p><p><code>自顶向下</code>.即首先定义全局概念结构的框架,然后逐步细化;</p><p><code>自底向上</code>.即首先定义各局部应用的概念结构,然后将它们集成起来,得到全局概念<br>结构;</p><p><code>逐步扩张</code>.首先定义最重要的核心概念结构,然后向外扩充,以滚雪球的方式逐步生<br>成其他概念结构,直至总体概念结构;</p><p><code>混合策略</code>.即将自顶向下和自底向上相结合,用自顶向下策略设计一个全局概念结构的框架,以它为骨架集成由自底向上策略中设计的各局部概念结构.</p><ol start="8"><li>什么叫数据抽象 试举例说明.</li></ol><p>答:</p><p>数据抽象是对实际的人,物,事和概念进行人为处理,抽取所关心的共同特性,忽略非本质的细节,并把这些特性用各种概念精确地加以描述,这些概念组成了某种模型.</p><p>如分类这种抽象是:定义某一类概念作为现实世界中一组对象的类型.这些对象具有某些共同的特性和行为.它抽象了对象值和型之间的”is member of”的语义.在E-R模型中,实体型就是这种抽象.例如在学校环境中,李英是老师,表示李英是教师类型中的一员,则教师是实体型,李英是教师实体型中的一个实体值,具有教师共同的特性和行为:在某个系某个专业教学,讲授某些课程,从事某个方向的科研.</p><ol start="9"><li>试述数据库概念结构设计的重要性和设计步骤.</li></ol><p>答:</p><p>重要性:数据库概念设计是整个数据库设计的关键,将在需求分析阶段所得到的应用需求首先抽象为概念结构,以此作为各种数据模型的共同基础,从而能更好地,更准确地用某一DBMS实现这些需求.</p><p>设计步骤:</p><p>概念结构的设计方法有多种,其中最经常采用的策略是自底向上方法,该方法的设计步<br>骤通常分为两步:</p><p>第1步是抽象数据并设计局部视图,第2步是集成局部视图,得到全局的概念结构</p><ol start="10"><li>什么是E-R图 构成E-R图的基本要素是什么</li></ol><p>答:<br>E-R图为实体-联系图,提供了表示实体型,属性和联系的方法,用来描述现实世界的概念模型.</p><p>构成E-R图的基本要素是实体型,属性和联系,其表示方法为:</p><p>实体型:用矩形表示,矩形框内写明实体名;</p><p>属性:用椭圆形表示,并用无向边将其与相应的实体连接起来;</p><p>联系:用菱形表示,菱形框内写明联系名,并用无向边分别与有关实体连接起来,同时在无向边旁标上联系的类型(1 : 1,1 : n或m : n).</p><ol start="11"><li>为什么要视图集成 视图集成的方法是什么</li></ol><p>答:</p><p>在对数据库系统进行概念结构设计时一般采用自底向上的设计方法,把繁杂的大系统分解子系统.首先设计各个子系统的局部视图,然后通过视图集成的方式将各子系统有机的融合起来,综合成一个系统的总视图.这样设计清晰,由简到繁.由于数据库系统是从整体角度看待和描述数据的,因此数据不再面向某个应用而是整个系统.因此必须进行视图集成,使得数据库能被全系统的多个用户,多个应用共享使用.</p><p>一般说来,视图集成可以有两种方式:</p><ul><li>多个分E-R图一次集成;</li><li>逐步集成,用累加的方式一次集成两个分E-R图.</li></ul><p>无论采用哪种方式,每次集成局部E-R图时都需要分两步走:</p><p>(1) 合并.解决各分E-R图之间的冲突,将各分E-R图合并起来生成初步E-R图.</p><p>(2) 修改和重构.消除不必要的冗余,生成基本E-R图.</p><ol start="12"><li>什么是数据库的逻辑结构设计 试述其设计步骤.</li></ol><p>答:</p><p>数据库的逻辑结构设计就是把概念结构设计阶段设计好的基本E-R图转换为与选用的DBMS产品所支持的数据模型相符合的逻辑结构.</p><p>设计步骤为:</p><ul><li>将概念结构转换为一般的关系,网状,层次模型;</li><li>将转换来的关系,网状,层次模型向特定DBMS支持下的数据模型转换</li><li>对数据模型进行优化.</li></ul><ol start="13"><li>试述把E-R图转换为DBTG模型和关系模型的转换规则.</li></ol><p>答:</p><p>E-R图向DBTG模型的转换规则:</p><ol><li>每个实体型转换为记录型,实体的属性转换为记录的数据项;</li><li>实体型之间1:n(n≥1)的联系转换为一个系,没有任何联系的实体型转换为奇异系;</li><li>K(K≥2)个实体型之间多对多的联系,引入一个连结记录,形成K个实体型和连结记录之间的K个系.连结记录的属性由诸首记录的码及联系属性所组成;</li><li>同一实体型内的1:n,n:m联系,引入连结记录,转换为两个系.</li></ol><p>解析</p><p>根据我国实际情况,网状,层次数据库系统已很少使用,因此《概论》第三版把它们删去了,有关的主要概念放在第一章数据模型中介绍.对于DBTG模型的许多概念也介绍得很简单.本题的内容已经超出了书上的内容,同学们只要了解就可以了.但是,下面E-R图向关系模型的转换规则要求同学必须掌握,并且能够举一反三.</p><p>答:</p><p>E-R图向关系模型的转换规则:</p><p>一个实体型转换为一个关系模式.实体的属性就是关系的属性,实体的码就是关系的码.</p><p>对于实体间的联系则有以下不同的情况:</p><p>(1) 一个1:1联系可以转换为一个独立的关系模式,也可以与任意一端对应的关系模式合并.如果转换为一个独立的关系模式,则与该联系相连的各实体的码以及联系本身的属性均转换为关系的属性,每个实体的码均是该关系的候选码.如果与某一端实体对应的关系模式合并,则需要在该关系模式的属性中加入另一个关系模式的码和联系本身的属性.</p><p>(2) 一个1:n联系可以转换为一个独立的关系模式,也可以与n端对应的关系模式合并.如果转换为一个独立的关系模式,则与该联系相连的各实体的码以及联系本身的属性均转换为关系的属性,而关系的码为n端实体的码.</p><p>(3) 一个m:n联系转换为一个关系模式.与该联系相连的各实体的码以及联系本身的属性均转换为关系的属性,各实体码的组合组成该关系的码,或码的一部分.</p><p>(4) 三个或三个以上实体间的一个多元联系可以转换为一个关系模式.与该多元联系相连的各实体的码以及联系本身的属性均转换为关系的属性,而关系的码为各实体码的组合.</p><p>(5) 具有相同码的关系模式可合并.<br>14. 你能给出由E-R图转换为IMS模型的转换规则吗</p><p>答:</p><p>E-R图向IMS模型的转换规则:</p><p>1)每个实体型转换为记录型,实体的属性转换为记录的数据项;</p><p>2)实体型之间1:n(n≥1)的联系转换记录型之间的有向边;</p><p>3)实体型之间m:n(m&gt;1,n&gt;1)的联系则分解成一对多联系,再根据2)转换;</p><p>4)K(K≥2)个实体型之间多对多的联系,可先转换成多对两个实体型之间的联系,再根据3)转换.</p><p>解析</p><p>IMS是IBM公司的层次数据库管理系统.IMS模型是层次模型.E-R图向IMS模型转换的另一种方法是,先把E-R图转换为网状模型,再利用IMS逻辑数据库LDB的概念来表示网状模型.详细方法这里从略.</p><h1 id="第七章-数据库恢复技术"><a href="#第七章-数据库恢复技术" class="headerlink" title="第七章 数据库恢复技术"></a>第七章 数据库恢复技术</h1><h2 id="一-选择题-6"><a href="#一-选择题-6" class="headerlink" title="一,选择题"></a>一,选择题</h2><ol><li>一个事务的执行,要么全部完成,要么全部不做,一个事务中对数据库的所有操作都是一个不可分割的操作序列的属性是(A ) .</li></ol><p>A. 原子性 B. 一致性<br>C. 独立性 D. 持久性</p><ol start="2"><li>表示两个或多个事务可以同时运行而不互相影响的是( C).</li></ol><p>A. 原子性 B. 一致性<br>C. 独立性 D. 持久性<br>3. 事务的持续性是指( B)</p><p>A.事务中包括的所有操作要么都做,要么都不做.<br>B.事务一旦提交,对数据库的改变是永久的.<br>C.一个事务内部的操作对并发的其他事务是隔离的.<br>D.事务必须是使数据库从一个一致性状态变到另一个一致性状态.<br>4. SQL语言中的COMMIT语句的主要作用是( C).</p><p>A. 结束程序 B. 返回系统<br>C. 提交事务 D. 存储数据<br>5. SQL语言中用( B)语句实现事务的回滚</p><p>A. CREATE TABLE B. ROLLBACK<br>C. GRANT和REVOKE D. COMMIT<br>6. 若系统在运行过程中,由于某种硬件故障,使存储在外存上的数据部分损失或全部损失,这种情况称为(A).</p><p>A. 介质故障 B. 运行故障<br>C. 系统故障 D. 事务故障<br>7. 在DBMS中实现事务持久性的子系统是( D ).</p><p>A. 安全管理子系统 B. 完整性管理子系统<br>C. 并发控制子系统 D. 恢复管理子系统<br>8. 后援副本的作用是( C ).</p><p>A. 保障安全性 B. 一致性控制<br>C. 故障后的恢复 D. 数据的转储<br>9. 事务日志用于保存( C )</p><p>A. 程序运行过程 B. 程序的执行结果<br>C. 对数据的更新操作 D. 数据操作<br>10. 数据库恢复的基础是利用转储的冗余数据.这些转储的冗余数据包括( C).</p><p>A. 数据字典,应用程序,审计档案,数据库后备副本<br>B. 数据字典,应用程序,审计档案,日志文件<br>C. 日志文件,数据库后备副本<br>D. 数据字典,应用程序,数据库后备副本</p><p>选择题答案:<br>(1) A (2) C (3) B (4) C (5) B<br>(6) A (7) D (8) C (9) C (10) C</p><h2 id="二-简答题-6"><a href="#二-简答题-6" class="headerlink" title="二,简答题"></a>二,简答题</h2><ol><li>试述事务的概念及事务的四个特性.</li></ol><p>答:</p><p>事务是用户定义的一个数据库操作序列,这些操作要么全做要么全不做,是一个不可分割的工作单位.</p><p>事务具有四个特性:原子性(Atomicity),一致性(Consistency),隔离性(Isolation)和持续性(Durability).这个四个特性也简称为ACID特性.</p><p><code>原子性</code>:事务是数据库的逻辑工作单位,事务中包括的诸操作要么都做,要么都不做.</p><p><code>一致性</code>:事务执行的结果必须是使数据库从一个一致性状态变到另一个一致性状态.</p><p><code>隔离性</code>:一个事务的执行不能被其他事务干扰.即一个事务内部的操作及使用的数据对其他并发事务是隔离的,并发执行的各个事务之间不能互相干扰.</p><p><code>持续性</code>:持续性也称永久性(Permanence),指一个事务一旦提交,它对数据库中数据的改变就应该是永久性的.接下来的其他操作或故障不应该对其执行结果有任何影响.</p><ol start="2"><li>为什么事务非正常结束时会影响数据库数据的正确性,请列举一例说明之.<br>答:</li></ol><p>事务执行的结果必须是使数据库从一个一致性状态变到另一个一致性状态.如果数据库系统运行中发生故障,有些事务尚未完成就被迫中断,这些未完成事务对数据库所做的修改有一部分已写入物理数据库,这时数据库就处于一种不正确的状态,或者说是不一致的状态.</p><p>例如某工厂的库存管理系统中,要把数量为Q的某种零件从仓库1移到仓库2存放.<br>则可以定义一个事务T,T包括两个操作;Q1&#x3D;Q1-Q,Q2&#x3D;Q2+Q.如果T非正常终止时只做了第一个操作,则数据库就处于不一致性状态,库存量无缘无故少了Q.</p><ol start="3"><li>数据库中为什么要有恢复子系统 它的功能是什么</li></ol><p>答:</p><p>因为计算机系统中硬件的故障,软件的错误,操作员的失误以及恶意的破坏是不可避免的,这些故障轻则造成运行事务非正常中断,影响数据库中数据的正确性,重则破坏数据库,使数据库中全部或部分数据丢失,因此必须要有恢复子系统.</p><p>恢复子系统的功能是:把数据库从错误状态恢复到某一已知的正确状态(亦称为一致状态或完整状态).</p><ol start="4"><li>数据库运行中可能产生的故障有哪几类 哪些故障影响事务的正常执行 哪些故障破坏数据库数据</li></ol><p>答:数据库系统中可能发生各种各样的故障,大致可以分以下几类:</p><p>(1) 事务内部的故障;</p><p>(2) 系统故障;</p><p>(3) 介质故障;</p><p>(4) 计算机病毒.</p><p>事务故障,系统故障和介质故障影响事务的正常执行;介质故障和计算机病毒破坏数据库数据.</p><p>5.据库恢复的基本技术有哪些</p><p>答:</p><p>数据转储和登录日志文件是数据库恢复的基本技术.</p><p>当系统运行过程中发生故障,利用转储的数据库后备副本和日志文件就可以将数据库恢复到故障前的某个一致性状态.</p><ol start="6"><li>数据库转储的意义是什么 试比较各种数据转储方法.</li></ol><p>答:</p><p>数据转储是数据库恢复中采用的基本技术.所谓转储即DBA定期地将数据库复制到磁带或另一个磁盘上保存起来的过程.当数据库遭到破坏后可以将后备副本重新装入,将数据库恢复到转储时的状态.</p><p><code>静态转储</code>:在系统中无运行事务时进行的转储操作.静态转储简单,但必须等待正运行的用户事务结束才能进行.同样,新的事务必须等待转储结束才能执行.显然,这会降低数据库的可用性.</p><p><code>动态转储</code>:指转储期间允许对数据库进行存取或修改.动态转储可克服静态转储的缺点,它不用等待正在运行的用户事务结束,也不会影响新事务的运行.但是,转储结束时后援副本上的数据并不能保证正确有效.因为转储期间运行的事务可能修改了某些数据,使得后援副本上的数据不是数据库的一致版本.为此,必须把转储期间各事务对数据库的修改活动登记下来,建立日志文件(log file).这样,后援副本加上日志文件就能得到数据库某一时刻的正确状态.转储还可以分为海量转储和增量转储两种方式.</p><p><code>海量转储</code>是指每次转储全部数据库.增量转储则指每次只转储上一次转储后更新过的数据.从恢复角度看,使用海量转储得到的后备副本进行恢复一般说来更简单些.但如果数据库很大,事务处理又十分频繁,则增量转储方式更实用更有效.</p><ol start="7"><li>什么是日志文件 为什么要设立日志文件</li></ol><p>答:<br>(1) 日志文件是用来记录事务对数据库的更新操作的文件.</p><p>(2) 设立日志文件的目的是: 进行事务故障恢复;进行系统故障恢复;协助后备副本进行介质故障恢复.</p><ol start="8"><li>登记日志文件时为什么必须先写日志文件,后写数据库</li></ol><p>答:</p><p>把对数据的修改写到数据库中和把表示这个修改的日志记录写到日志文件中是两个不同的操作.有可能在这两个操作之间发生故障,即这两个写操作只完成了一个.</p><p>如果先写了数据库修改,而在运行记录中没有登记这个修改,则以后就无法恢复这个修改了.如果先写日志,但没有修改数据库,在恢复时只不过是多执行一次UNDO操作,并不会影响数据库的正确性.所以一定要先写日志文件,即首先把日志记录写到日志文件中,然后写数据库的修改.</p><ol start="9"><li>针对不同的故障,试给出恢复的策略和方法.(即如何进行事务故障的恢复 系统故障的恢复 介质故障恢复 )</li></ol><p>答:</p><p>事务故障的恢复:</p><p>事务故障的恢复是由DBMS自动完成的,对用户是透明的.</p><p>DBMS执行恢复步骤是:</p><p>(1) 反向扫描文件日志(即从最后向前扫描日志文件),查找该事务的更新操作.</p><p>(2) 对该事务的更新操作执行逆操作.即将日志记录中”更新前的值”写入数据库.</p><p>(3) 继续反向扫描日志文件,做同样处理.</p><p>(4) 如此处理下去,直至读到此事务的开始标记,该事务故障的恢复就完成了.</p><p>答:</p><p>系统故障的恢复:</p><p>系统故障可能会造成数据库处于不一致状态:</p><p>一是未完成事务对数据库的更新可能已写入数据库;</p><p>二是已提交事务对数据库的更新可能还留在缓冲区,没来得及写入数据库.</p><p>因此恢复操作就是要撤销(UNDO)故障发生时未完成的事务,重做(REDO)已完成的事务.</p><p>系统的恢复步骤是:</p><p>(1) 正向扫描日志文件,找出在故障发生前已经提交的事务队列(REDO队列)和未完成的事务队列(UNDO队列).</p><p>(2) 对撤销队列中的各个事务进行UNDO处理.<br>进行UNDO处理的方法是,反向扫描日志文件,对每个UNDO事务的更新操作执行逆操作,即将日志记录中”更新前的值”(Before Image)写入数据库.</p><p>(3) 对重做队列中的各个事务进行REDO处理.</p><p>进行REDO处理的方法是:正向扫描日志文件,对每个REDO事务重新执行日志文件登记的操作.即将日志记录中”更新后的值”(After Image)写入数据库.</p><p>解析:<br>在第(1)步中如何找出REDO队列和UNDO队列 请大家思考一下.</p><p>下面给出一个算法:</p><ol><li>建立两个事务队列:</li></ol><p>UNDO-LIST: 需要执行undo操作的事务集合;</p><p>REDO-LIST: 需要执行redo操作的事务集合;</p><p>两个事务队列初始均为空.</p><ol start="2"><li>从日志文件头开始,正向扫描日志文件</li></ol><p>· 如有新开始(遇到Begin Transaction)的事务Ti,把Ti暂时放入UNDO-LIST队列;<br>· 如有提交的事务(遇到End Transaction)Tj,把Tj从UNDO-LIST队列移到REDO-LIST队列;<br>直到日志文件结束</p><p>答:</p><p>介质故障的恢复:</p><p>介质故障是最严重的一种故障.</p><p>恢复方法是重装数据库,然后重做已完成的事务.具体过程是:</p><p>(1) DBA装入最新的数据库后备副本(离故障发生时刻最近的转储副本),使数据库恢复到转储时的一致性状态.</p><p>(2) DBA装入转储结束时刻的日志文件副本</p><p>(3) DBA启动系统恢复命令,由DBMS完成恢复功能,即重做已完成的事务.</p><p>解析</p><ol><li>我们假定采用的是静态转储,因此第(1)步装入数据库后备副本便可以了.</li><li>如果采用的是静动态转储,第(1)步装入数据库后备副本还不够,还需同时装入转储开始时刻的日志文件副本,经过处理后才能得到正确的数据库后备副本.</li><li>第(2)步重做已完成的事务的算法是:<br>a. 正向扫描日志文件,找出故障发生前已提交的事务的标识,将其记入重做队列<br>b. 再一次正向扫描日志文件,对重做队列中的所有事务进行重做处理.即将日志记录中”更新后的值”写入数据库.</li></ol><ol start="10"><li>具有检查点的恢复技术有什么优点</li></ol><p>答:</p><p>利用日志技术进行数据库恢复时,恢复子系统必须搜索日志,确定哪些事务需要REDO,哪些事务需要UNDO.一般来说,需要检查所有日志记录.这样做有两个问题:</p><p>一是搜索整个日志将耗费大量的时间.</p><p>二是很多需要REDO处理的事务实际上已经将它们的更新操作结果写到数据库中了,恢复子系统又重新执行了这些操作,浪费了大量时间.</p><p>检查点技术就是为了解决这些问题.</p><ol start="11"><li>试述使用检查点方法进行恢复的步骤.</li></ol><p>答:</p><p>① 从重新开始文件中找到最后一个检查点记录在日志文件中的地址,由该地址在日志文件中找到最后一个检查点记录.</p><p>② 由该检查点记录得到检查点建立时刻所有正在执行的事务清单ACTIVE-LIST.</p><p>这里建立两个事务队列:<br>· UNDO-LIST: 需要执行undo操作的事务集合;<br>· REDO-LIST: 需要执行redo操作的事务集合;<br>把ACTIVE-LIST暂时放入UNDO-LIST队列,REDO队列暂为空.</p><p>③ 从检查点开始正向扫描日志文件</p><p>· 如有新开始的事务Ti,把Ti暂时放入UNDO-LIST队列;</p><p>· 如有提交的事务Tj,把Tj从UNDO-LIST队列移到REDO-LIST队列,直到日志文件结束;</p><p>④ 对UNDO-LIST中的每个事务执行UNDO操作, 对REDO-LIST中的每个事务执行REDO操作.</p><ol start="12"><li>什么是数据库镜像 它有什么用途</li></ol><p>答:</p><p>数据库镜像即根据DBA的要求,自动把整个数据库或者其中的部分关键数据复制到另一个磁盘上.每当主数据库更新时,DBMS自动把更新后的数据复制过去,即DBMS自动保证镜像数据与主数据的一致性.</p><p>数据库镜像的用途有:</p><p>一是用于数据库恢复.当出现介质故障时,可由镜像磁盘继续提供使用,同时DBMS自动利用镜像磁盘数据进行数据库的恢复,不需要关闭系统和重装数据库副本.<br>二是提高数据库的可用性.在没有出现故障时,当一个用户对某个数据加排它锁进行修改时,其他用户可以读镜像数据库上的数据,而不必等待该用户释放锁.</p><ol start="13"><li>试述你了解的某一个实际的DBMS产品中采用的恢复策略.<br>答:</li></ol><p>下面简单介绍一下Oracle的恢复技术:</p><p>Oracle中恢复机制也采用了转储和登记日志文件两个技术.</p><p>Oracle向DBA提供了多种转储后备副本的方法,如文件拷贝,利用Oracle的Export实用程序,用SQL命令Spool以及自己编程实现等.相应地,Oracle也提供了多种重装后备副本的方法,如文件拷贝,利用Oracle的Import实用程序,利用SQL * LOADER以及自己编程实现等.</p><p>在Oracle 早期版本(V.5)中,日志文件以数据块为单位,也就是说,Oracle的恢复操作是基于数据块的,不是基于操作的.Oracle中记录数据库更新前的旧值的日志文件称为数据库前像文件(Before Image,简称BI文件),记录数据库更新后的新值的日志文件称为数据库的后像文件(After Image,简称AI文件).BI文件是必须配置的,AI文件是可以任选的.</p><p>Oracle7为了能够在出现故障时更有效地恢复数据,也为了解决读”脏”数据问题,提供了REDO日志文件和回滚段(Rollback Segment).REDO日志文件中记录了被更新数据的前像和后像.回滚段记录更新数据的前像,设在数据库缓冲区中.在利用日志文件进行故障恢复时,为减少扫描日志文件的遍数,Oracle7首先扫描REDO日志文件,重做所有操作,包括未正常提交的事务的操作,然后再根据回滚段中的数据,撤销未正常提交的事务的操作.</p><p>详细技术希望同学自己设法了解Oracle最新版本的介绍,例如通过INTERNET访问Oracle公司的网站.也可以了解其他DBMS厂商的产品情况.</p><ol start="14"><li>试用恢复的基本技术设计一个恢复子系统,给出这个子系统的恢复策略,包括:</li></ol><p>(a) 当产生某一类故障时如何恢复数据库的方法;</p><p>(b) 日志文件的结构;</p><p>(c) 登记日志文件的方法;</p><p>(d) 利用日志文件恢复事务的方法;</p><p>(e) 转储的类型;</p><p>(f) 转储的后备副本和日志文件如何配合使用.</p><p>解析</p><p>这是一个大作业.可以综合复习和运用学到的知识.设计一个恢复子系统</p><p>例如,日志文件的结构你可以记录为单位,也可以以数据块为单位.不同的日志文件结构,登记的日志内容,日志文件恢复事务的方法也就不同了.</p><p>对于研究生,还应该上机模拟实现你设计的恢复子系统.</p><h1 id="第八章-数据库并发控制"><a href="#第八章-数据库并发控制" class="headerlink" title="第八章 数据库并发控制"></a>第八章 数据库并发控制</h1><h2 id="一-选择题-7"><a href="#一-选择题-7" class="headerlink" title="一,选择题"></a>一,选择题</h2><ol><li>为了防止一个用户的工作不适当地影响另一个用户,应该采取(D) .</li></ol><p>A. 完整性控制 B. 访问控制<br>C. 安全性控制 D. 并发控制<br>2. 解决并发操作带来的数据不一致问题普遍采用( A)技术.</p><p>A. 封锁 B. 存取控制<br>C. 恢复 D. 协商<br>3. 下列不属于并发操作带来的问题是( C).</p><p>A. 丢失修改 B. 不可重复读<br>C. 死锁 D. 脏读<br>4. DBMS普遍采用(C )方法来保证调度的正确性 .</p><p>A. 索引 B. 授权<br>C. 封锁 D. 日志<br>5. 事务T在修改数据R之前必须先对其加X锁,直到事务结束才释放,这是(A ) .</p><p>A. 一级封锁协议 B. 二级封锁协议<br>C. 三级封锁协议 D. 零级封锁协议<br>6. 如果事务T获得了数据项Q上的排他锁,则T对Q( C) .</p><p>A. 只能读不能写 B. 只能写不能读<br>C. 既可读又可写 D. 不能读也不能写<br>7. 设事务T1和T2,对数据库中地数据A进行操作,可能有如下几种情况,请问哪一种不会发生冲突操作(D ) .</p><p>A. T1正在写A,T2要读A<br>B. T1正在写A,T2也要写A<br>C. T1正在读A,T2要写A<br>D. T1正在读A,T2也要读A<br>8. 如果有两个事务,同时对数据库中同一数据进行操作,不会引起冲突的操作是( D) .</p><p>A. 一个是DELETE,一个是SELECT<br>B. 一个是SELECT,一个是DELETE<br>C. 两个都是UPDATE<br>D. 两个都是SELECT<br>9. 在数据库系统中,死锁属于(B ).</p><p>A. 系统故障 B. 事务故障<br>C. 介质故障 D. 程序故障</p><p>选择题答案:<br>(1) D (2) A (3) C (4) C (5) A<br>(6) C (7) D (8) D (9) B</p><h2 id="二-简答题-7"><a href="#二-简答题-7" class="headerlink" title="二,简答题"></a>二,简答题</h2><ol><li>在数据库中为什么要并发控制</li></ol><p>答:<br>数据库是共享资源,通常有许多个事务同时在运行.<br>当多个事务并发地存取数据库时就会产生同时读取和&#x2F;或修改同一数据的情况.若对并发操作不加控制就可能会存取和存储不正确的数据,破坏数据库的一致性.所以数据库管理系统必须提供并发控制机制.</p><ol start="2"><li>并发操作可能会产生哪几类数据不一致 用什么方法能避免各种不一致的情况</li></ol><p>答:</p><p>并发操作带来的数据不一致性包括三类:丢失修改,不可重复读和读”脏”数据.</p><ol><li>丢失修改(Lost Update)<br>两个事务T1和T2读入同一数据并修改,T2提交的结果破坏了(覆盖了)T1提交的结果,导致T1的修改被丢失.</li><li>不可重复读(Non-Repeatable Read)<br>不可重复读是指事务T1读取数据后,事务T2执行更新操作,使T1无法再现前一次读取结果.</li><li>读”脏”数据(Dirty Read)<br>读”脏”数据是指事务T1修改某一数据,并将其写回磁盘,事务T2读取同一数据后,T1由于某种原因被撤销,这时T1已修改过的数据恢复原值,T2读到的数据就与数据库中的数据不一致,则T2读到的数据就为”脏”数据,即不正确的数据.<br>避免不一致性的方法和技术就是并发控制.最常用的并发控制技术是封锁技术.<br>也可以用其他技术,例如在分布式数据库系统中可以采用时间戳方法来进行并发控制.</li></ol><ol start="3"><li>什么是封锁</li></ol><p>答:<br>封锁就是事务T在对某个数据对象例如表,记录等操作之前,先向系统发出请求,对其加锁.加锁后事务T就对该数据对象有了一定的控制,在事务T释放它的锁之前,其他的事务不能更新此数据对象.</p><p>封锁是实现并发控制的一个非常重要的技术.</p><ol start="4"><li>基本的封锁类型有几种 试述它们的含义.</li></ol><p>答:<br>基本的封锁类型有两种: 排它锁(Exclusive Locks,简称X锁) 和共享锁(Share Locks,简称S锁).</p><p>排它锁又称为写锁.若事务T对数据对象A加上X锁,则只允许T读取和修改A,其他任何事务都不能再对A加任何类型的锁,直到T释放A上的锁.这就保证了其他事务在T释放A上的锁之前不能再读取和修改A.</p><p>共享锁又称为读锁.若事务T对数据对象A加上S锁,则事务T可以读A但不能修改A,其他事务只能再对A加S锁,而不能加X锁,直到T释放A上的S锁.这就保证了其他事务可以读A,但在T释放A上的S锁之前不能对A做任何修改.</p><ol start="5"><li>什么是封锁协议 不同级别的封锁协议的主要区别是什么</li></ol><p>答:</p><p>在运用封锁技术对数据加锁时,要约定一些规则.例如,在运用X锁和S锁对数据对象加锁时,要约定何时申请X锁或S锁,何时释放封锁等.这些约定或者规则称为封锁协议(Locking Protocol).对封锁方式约定不同的规则,就形成了各种不同的封锁协议.不同级别的封锁协议,例如《概论》中介绍的三级封锁协议,三级协议的主要区别在于什么操作需要申请封锁,何时申请封锁以及何时释放锁(即持锁时间的长短).</p><p>一级封锁协议:事务T在修改数据R之前必须先对其加X锁,直到事务结束才释放.</p><p>二级封锁协议:一级封锁协议加上事务T在读取数据R之前必须先对其加S锁,读完后即可释放S锁.</p><p>三级封锁协议:一级封锁协议加上事务T在读取数据R之前必须先对其加S锁,直到事务结束才释放.</p><ol start="6"><li>不同封锁协议与系统一致性级别的关系是什么</li></ol><p>答:<br>不同的封锁协议对应不同的一致性级别.</p><p>一级封锁协议可防止丢失修改,并保证事务T是可恢复的.在一级封锁协议中,对读数据是不加S锁的,所以它不能保证可重复读和不读”脏”数据.</p><p>二级封锁协议除防止了丢失修改,还可进一步防止读”脏”数据.在二级封锁协议中,由于读完数据后立即释放S锁,所以它不能保证可重复读.</p><p>在三级封锁协议中,无论是读数据还是写数据都加长锁,即都要到事务结束时才释放封锁.所以三级封锁协议除防止了丢失修改和不读”脏”数据外,还进一步防止了不可重复读.</p><ol start="7"><li>试述活锁的产生原因和解决方法.</li></ol><p>答:</p><p>活锁产生的原因:当一系列封锁不能按照其先后顺序执行时,就可能导致一些事务无限期等待某个封锁,从而导致活锁.</p><p>避免活锁的简单方法是采用先来先服务的策略.当多个事务请求封锁同一数据对象时,封锁子系统按请求封锁的先后次序对事务排队,数据对象上的锁一旦释放就批准申请队列中第一个事务获得锁.</p><ol start="8"><li>请给出预防死锁的若干方法.</li></ol><p>答:</p><p>在数据库中,产生死锁的原因是两个或多个事务都已封锁了一些数据对象,然后又都请求已被其他事务封锁的数据加锁,从而出现死等待.</p><p>防止死锁的发生其实就是要破坏产生死锁的条件.预防死锁通常有两种方法:<br>(1)一次封锁法</p><p>要求每个事务必须一次将所有要使用的数据全部加锁,否则就不能继续执行.<br>(2)顺序封锁法</p><p>预先对数据对象规定一个封锁顺序,所有事务都按这个顺序实行封锁.<br>不过,预防死锁的策略不大适合数据库系统的特点.</p><ol start="9"><li>请给出检测死锁发生的一种方法,当发生死锁后如何解除死锁</li></ol><p>答:</p><p>数据库系统一般采用允许死锁发生,DBMS检测到死锁后加以解除的方法.<br>DBMS中诊断死锁的方法与操作系统类似,一般使用超时法或事务等待图法.</p><p>超时法是:如果一个事务的等待时间超过了规定的时限,就认为发生了死锁.超时法实现简单,但有可能误判死锁,事务因其他原因长时间等待超过时限时,系统会误认为发生了死锁.若时限设置得太长,又不能及时发现死锁发生.</p><p>DBMS并发控制子系统检测到死锁后,就要设法解除.通常采用的方法是选择一个处理死锁代价最小的事务,将其撤消,释放此事务持有的所有锁,使其他事务得以继续运行下去.当然,对撤销的事务所执行的数据修改操作必须加以恢复.</p><ol start="10"><li>什么样的并发调度是正确的调度</li></ol><p>答:</p><p>可串行化(Serializable)的调度是正确的调度.</p><p>可串行化的调度的定义:多个事务的并发执行是正确的,当且仅当其结果与按某一次序串行地执行它们时的结果相同,我们称这种调度策略为可串行化的调度.</p><ol start="11"><li>试述两段锁协议的概念.</li></ol><p>答:</p><p>两段锁协议是指所有事务必须分两个阶段对数据项加锁和解锁.在对任何数据进行读,写操作之前,首先要申请并获得对该数据的封锁; 在释放一个封锁之后,事务不再申请和获得任何其他封锁.</p><p>“两段”的含义是,事务分为两个阶段:</p><p>第一阶段是获得封锁,也称为扩展阶段.在这阶段,事务可以申请获得任何数据项上的任何类型的锁,但是不能释放任何锁.</p><p>第二阶段是释放封锁,也称为收缩阶段.在这阶段,事务释放已经获得的锁,但是不能再申请任何锁.</p><ol start="12"><li>为什么要引进意向锁 意向锁的含义是什么</li></ol><p>答:</p><p>引进意向锁是为了提高封锁子系统的效率.该封锁子系统支持多种封锁粒度.</p><p>原因是:在多粒度封锁方法中一个数据对象可能以两种方式加锁—显式封锁和隐式封锁.因此系统在对某一数据对象加锁时不仅要检查该数据对象上有无(显式和隐式)封锁与之冲突;还要检查其所有上级结点和所有下级结点,看申请的封锁是否与这些结点上的(显式和隐式)封锁冲突;显然,这样的检查方法效率很低.为此引进了意向锁.</p><p>意向锁的含义是:对任一结点加锁时,必须先对它的上层结点加意向锁.</p><p>例如事务T要对某个元组加X锁,则首先要对关系和数据库加IX锁.换言之,对关系和数据库加IX锁,表示它的后裔结点—某个元组拟(意向)加X锁.</p><p>引进意向锁后,系统对某一数据对象加锁时不必逐个检查与下一级结点的封锁冲突了.例如,事务T要对关系R加X锁时,系统只要检查根结点数据库和R本身是否已加了不相容的锁(如发现已经加了IX,则与X冲突),而不再需要搜索和检查R中的每一个元组是否加了X锁或S锁.</p><ol start="13"><li>试述常用的意向锁:IS锁,IX锁,SIX锁,给出这些锁的相容矩阵.</li></ol><p>答:</p><p>IS锁</p><p>如果对一个数据对象加IS锁,表示它的后裔结点拟(意向)加S锁.例如,要对某个元组加S锁,则要首先对关系和数据库加IS锁</p><p>IX锁</p><p>如果对一个数据对象加IX锁,表示它的后裔结点拟(意向)加X锁.例如,要对某个元组加X锁,则要首先对关系和数据库加IX锁.</p><p>SIX锁</p><p>如果对一个数据对象加SIX锁,表示对它加S锁,再加IX锁,即SIX &#x3D; S + IX.<br>相容矩阵(略)</p><ol start="14"><li>理解并解释下列术语的含义:封锁,活锁,死锁,排它锁,共享锁,并发事务的调度,可串行化的调度,两段锁协议.</li></ol><p>答:(略,已经在上面有关习题中解答)</p><ol start="25"><li>试述你了解的某一个实际的DBMS产品的并发控制机制.</li></ol><p>答:(略,参见《概论》第8节,简单介绍了有关Oracle的并发控制机制.)</p><h1 id="第九章-数据库安全性"><a href="#第九章-数据库安全性" class="headerlink" title="第九章 数据库安全性"></a>第九章 数据库安全性</h1><h2 id="一-选择题-8"><a href="#一-选择题-8" class="headerlink" title="一,选择题"></a>一,选择题</h2><ol><li>以下( D)不属于实现数据库系统安全性的主要技术和方法.</li></ol><p>A. 存取控制技术 B. 视图技术<br>C. 审计技术 D. 出入机房登记和加锁<br>2. SQL中的视图提高了数据库系统的(D ).</p><p>A. 完整性 B. 并发控制<br>C. 隔离性 D. 安全性<br>3. SQL语言的GRANT和REMOVE语句主要是用来维护数据库的(C )</p><p>A. 完整性 B. 可靠性<br>C. 安全性 D. 一致性<br>4. 在数据库的安全性控制中,授权的数据对象的( A),授权子系统就越灵活.</p><p>A. 范围越小 B. 约束越细致<br>C. 范围越大 D. 约束范围大</p><p>选择题答案:<br>(1) D (2) D (3) C (4) A</p><h2 id="三-简答题"><a href="#三-简答题" class="headerlink" title="三,简答题"></a>三,简答题</h2><ol><li>什么是数据库的安全性</li></ol><p>答:数据库的安全性是指保护数据库以防止不合法的使用所造成的数据泄露,更改或破坏.<br>2. 数据库安全性和计算机系统的安全性有什么关系</p><p>答:</p><p>安全性问题不是数据库系统所独有的,所有计算机系统都有这个问题.只是在数据库系统中大量数据集中存放,而且为许多最终用户直接共享,从而使安全性问题更为突出.<br>系统安全保护措施是否有效是数据库系统的主要指标之一.</p><p>数据库的安全性和计算机系统的安全性,包括操作系统,网络系统的安全性是紧密联系,相互支持的,<br>3. 试述实现数据库安全性控制的常用方法和技术.</p><p>答:</p><p>实现数据库安全性控制的常用方法和技术有:</p><ol><li>用户标识和鉴别:该方法由系统提供一定的方式让用户标识自己的名字或身份.每次用户要求进入系统时,由系统进行核对,通过鉴定后才提供系统的使用权.</li><li>存取控制:通过用户权限定义和合法权检查确保只有合法权限的用户访问数据库,所有未被授权的人员无法存取数据.例如C2级中的自主存取控制(DAC),B1级中的强制存取控制(MAC);</li><li>视图机制:为不同的用户定义视图,通过视图机制把要保密的数据对无权存取的用户隐藏起来,从而自动地对数据提供一定程度的安全保护.<br>4)审计:建立审计日志,把用户对数据库的所有操作自动记录下来放入审计日志中, DBA可以利用审计跟踪的信息,重现导致数据库现有状况的一系列事件,找出非法存取数据的人,时间和内容等.</li><li>数据加密:对存储和传输的数据进行加密处理,从而使得不知道解密算法的人无法获知数据的内容.</li></ol><p>具体内容请参见《概论》9.2.</p><ol start="4"><li>什么是数据库中的自主存取控制方法和强制存取控制方法</li></ol><p>答:<br>自主存取控制方法:定义各个用户对不同数据对象的存取权限.当用户对数据库访问时首先检查用户的存取权限.防止不合法用户对数据库的存取.</p><p>强制存取控制方法:每一个数据对象被(强制地)标以一定的密级,每一个用户也被(强制地)授予某一个级别的许可证.系统规定只有具有某一许可证级别的用户才能存取某一个密级的数据对象.</p><p>解析:</p><p>自主存取控制中自主的含义是:用户可以将自己拥有的存取权限”自主”地授予别人.即用户具有一定的”自主”权.<br>5. SQL语言中提供了哪些数据控制(自主存取控制)的语句 请试举几例说明它们的使用方法.<br>答:<br>SQL中 的自主存取控制是通过GRANT 语句和 REVOKE 语句来实现的.如:<br>GRANT SELECT, INSERT ON Student TO 王平 WITH GRANT OPTION;<br>就将Student表的SELECT和INSERT权限授予了用户王平,后面的”WITH GRANT OPTION”子句表示用户王平同时也获得了”授权”的权限,即可以把得到的权限继续授予其他用户.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">INSERT</span> <span class="keyword">ON</span> Student <span class="keyword">FROM</span> 王平 CASCADE;</span><br><span class="line">```<span class="keyword">sql</span></span><br><span class="line">就将Student表 的<span class="keyword">INSERT</span>权限从用户王平处收回,选项 CASCADE 表示,如果用户王平将 Student 的 <span class="keyword">INSERT</span> 权限又转授给了其他用户,那么这些权限也将从其他用户处收回.</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span> 今有两个关系模式:</span><br><span class="line"></span><br><span class="line">职工(职工号,姓名,年龄,职务,工资,部门号)</span><br><span class="line"></span><br><span class="line">部门(部门号,名称,经理名,地址,电话号)</span><br><span class="line"></span><br><span class="line">请用<span class="keyword">SQL</span>的<span class="keyword">GRANT</span>和<span class="keyword">REVOKE</span>语句(加上视图机制)完成以下授权定义或存取控制功能:</span><br><span class="line"></span><br><span class="line">(a) 用户王明对两个表有<span class="keyword">SELECT</span>权力;</span><br><span class="line">```<span class="keyword">sql</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> 职工,部门</span><br><span class="line"><span class="keyword">TO</span> 王明;</span><br></pre></td></tr></table></figure><p>(b) 用户李勇对两个表有INSERT和DELETE权力;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">INSERT</span>,<span class="keyword">DELETE</span> <span class="keyword">ON</span> 职工,部门 <span class="keyword">TO</span> 李勇</span><br></pre></td></tr></table></figure><p>(c) 每个职工只对自己的记录有SELECT权力;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> 职工 <span class="keyword">WHEN</span> <span class="keyword">USER</span>()<span class="operator">=</span> NAME <span class="keyword">TO</span> <span class="keyword">ALL</span></span><br></pre></td></tr></table></figure><p>这里假定系统的GRANT语句支持WHEN子句和USER()的使用.用户将自己的名字作为ID.注意,不同的系统这些扩展语句可能是不同的.读者应该了解你使用的DBMS产品的扩展语句.</p><p>(d) 用户刘星对职工表有SELECT权力,对工资字段具有更新权力;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>,<span class="keyword">UPDATE</span>(工资) <span class="keyword">ON</span> 职工</span><br><span class="line"><span class="keyword">TO</span> 刘星;</span><br></pre></td></tr></table></figure><p>(e) 用户张新具有修改这两个表的结构的权力;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">ON</span> 职工,部门</span><br><span class="line"><span class="keyword">TO</span> 张新;</span><br></pre></td></tr></table></figure><p>(f) 用户周平具有对两个表所有权力(读,插,改,删数据),并具有给其他用户授权的权力;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILIGES <span class="keyword">ON</span> 职工,部门 <span class="keyword">TO</span> 周平 <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br></pre></td></tr></table></figure><p>(g) 用户杨兰具有从每个部门职工中SELECT最高工资,最低工资,平均工资的权力,他不能查看每个人的工资.<br>答:<br>首先建立一个视图.然后对这个视图定义杨兰的存取权限.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> 部门工资 <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> 部门.名称,<span class="built_in">MAX</span>(工资),<span class="built_in">MIN</span>(工资),<span class="built_in">AVG</span>(工资)</span><br><span class="line"><span class="keyword">FROM</span> 职工,部门</span><br><span class="line"><span class="keyword">WHERE</span> 职工.部门号 <span class="operator">=</span> 部门. 部门号</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> 职工.部门号;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> 部门工资 <span class="keyword">TO</span> 杨兰;</span><br></pre></td></tr></table></figure><ol start="7"><li>把习题8中(a)~(g) 的每一种情况,撤销各用户所授予的权力.<br>答:</li></ol><p>(a)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> 职工,部门</span><br><span class="line"><span class="keyword">FROM</span> 王明</span><br></pre></td></tr></table></figure><p>(b)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">INSERT</span>,<span class="keyword">DELETE</span> <span class="keyword">ON</span> 职工,部门</span><br><span class="line"><span class="keyword">FROM</span> 李勇;</span><br></pre></td></tr></table></figure><p>(c)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">REOVKE <span class="keyword">SELECT</span> <span class="keyword">ON</span> 职工</span><br><span class="line"><span class="keyword">WHEN</span> <span class="keyword">USER</span>()<span class="operator">=</span> NAME</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">ALL</span>;</span><br></pre></td></tr></table></figure><p>这里假定用户将自己的名字作为ID,且系统的REOVKE语句支持WHEN子句,系统也支持USER()的使用.</p><p>(d)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">SELECT</span>,<span class="keyword">UPDATE</span> <span class="keyword">ON</span> 职工</span><br><span class="line"><span class="keyword">FROM</span> 刘星;</span><br></pre></td></tr></table></figure><p>(e)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">REVOKE ALTER TABLE ON 职工,部门</span><br><span class="line">FROM 张新</span><br></pre></td></tr></table></figure><p>(f)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALL</span> PRIVILIGES <span class="keyword">ON</span> 职工,部门</span><br><span class="line"><span class="keyword">FROM</span> 周平;</span><br></pre></td></tr></table></figure><p>(g)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">REVOKE SELECT ON 部门工资</span><br><span class="line">FROM 杨兰;</span><br><span class="line">DROP VIEW 部门工资;</span><br></pre></td></tr></table></figure><ol start="8"><li>为什么强制存取控制提供了更高级别的数据库安全性</li></ol><p>答:</p><p>强制存取控制(MAC)是对数据本身进行密级标记,无论数据如何复制,标记与数据是一个不可分的整体,只有符合密级标记要求的用户才可以操纵数据,从而提供了更高级别的安全性.</p><ol start="9"><li>理解并解释MAC机制中主体,客体,敏感度标记的含义.</li></ol><p>答:</p><p>主体是系统中的活动实体,既包括DBMS所管理的实际用户,也包括代表用户的各进程.<br>客体是系统中的被动实体,是受主体操纵的,包括文件,基表,索引,视图等.<br>对于主体和客体,DBMS为它们每个实例(值)指派一个敏感度标记(Label).敏感度标记被分成若干级别,例如绝密(Top Secret),机密(Secret),可信(Confidential),公开(Public)等.主体的敏感度标记称为许可证级别(Clearance Level),客体的敏感度标记称为密级(Classification Level).</p><ol start="10"><li>什么是数据库的审计功能,为什么要提供审计功能</li></ol><p>答:</p><p>审计功能是指DBMS的审计模块在用户对数据库执行操作的同时把所有操作自动记录到系统的审计日志中.</p><p>因为任何系统的安全保护措施都不是完美无缺的,蓄意盗窃破坏数据的人总可能存在.利用数据库的审计功能,DBA可以根据审计跟踪的信息,重现导致数据库现有状况的一系列事件,找出非法存取数据的人,时间和内容等.</p><ol start="11"><li>统计数据库中存在何种特殊的安全性问题</li></ol><p>答:</p><p>统计数据库允许用户查询聚集类型的信息,如合计,平均值,最大值,最小值等,不允许查询单个记录信息.但是,人们可以从合法的查询中推导出不合法的信息,即可能存在隐蔽的信息通道,这是统计数据库要研究和解决的特殊的安全性问题.</p><ol start="12"><li>试述你了解的某一个实际的DBMS产品的安全性措施.</li></ol><p>答:</p><p>不同的DBMS产品以及同一产品的不同版本的安全措施各不相同,仁者见仁,智者见智,请读者自己了解.《概论》上9.4 简单介绍了有关ORACLE数据库的安全性措施.</p><h1 id="第十章-数据库完整性"><a href="#第十章-数据库完整性" class="headerlink" title="第十章 数据库完整性"></a>第十章 数据库完整性</h1><h2 id="一-选择题-9"><a href="#一-选择题-9" class="headerlink" title="一,选择题"></a>一,选择题</h2><ol><li>完整性检查和控制的防范对象( A),防止它们进入数据库.(C)安全性控制的防范对象是(B ),防止他们对数据库数据的存取.(D)</li></ol><p>A. 不合语义的数据 B. 非法用户<br>C. 不正确的数据 D. 非法操作<br>2. 下述哪个是SQL语言中的数据控制命令( A).</p><p>A. GRANT B. COMMIT<br>C. UPDATE D. SELECT<br>3. 下述SQL语言中的权限,哪一个允许用户定义新关系时,引用其他关系的主码作为外码( C).</p><p>A. INSERT B. DELETE<br>C. REFERENCES D. SELECT</p><p>选择题答案:<br>(1) A C B D (2) A (3) C</p><h2 id="二-简答题-8"><a href="#二-简答题-8" class="headerlink" title="二,简答题"></a>二,简答题</h2><ol><li><p>什么是数据库的完整性<br>答:<br>数据库的完整性是指数据的正确性和相容性.</p></li><li><p>数据库的完整性概念与数据库的安全性概念有什么区别和联系<br>答:<br>数据的完整性和安全性是两个不同的概念,但是有一定的联系.</p></li></ol><p>前者是为了防止数据库中存在不符合语义的数据,防止错误信息的输入和输出,即所谓垃圾进垃圾出(Garbage In Garbage Out)所造成的无效操作和错误结果.<br>后者是保护数据库防止恶意的破坏和非法的存取.</p><p>也就是说,安全性措施的防范对象是非法用户和非法操作,完整性措施的防范对象是不合语义的数据.</p><ol start="3"><li>什么是数据库的完整性约束条件 可分为哪几类<br>答:<br>完整性约束条件是指数据库中的数据应该满足的语义约束条件.<br>一般可以分为六类:</li></ol><p>静态列级约束,静态元组约束,静态关系约束,动态列级约束,动态元组约束,动态关系约束.</p><p>静态列级约束是对一个列的取值域的说明,包括以下几方面:</p><ol><li>对数据类型的约束,包括数据的类型,长度,单位,精度等</li><li>对数据格式的约束</li><li>对取值范围或取值集合的约束.</li><li>对空值的约束</li><li>其他约束</li></ol><p>静态元组约束就是规定组成一个元组的各个列之间的约束关系,静态元组约束只局限在单个元组上.</p><p>静态关系约束是在一个关系的各个元组之间或者若干关系之间常常存在各种联系或约束.常见的静态关系约束有:</p><ol><li>实体完整性约束.</li><li>参照完整性约束.</li><li>函数依赖约束.</li></ol><p>动态列级约束是修改列定义或列值时应满足的约束条件,包括下面两方面:</p><ol><li>修改列定义时的约束</li><li>修改列值时的约束</li></ol><p>动态元组约束是指修改某个元组的值时需要参照其旧值,并且新旧值之间需要满足某种约束条件.</p><p>动态关系约束是加在关系变化前后状态上的限制条件,例如事务一致性,原子性等约束条件.</p><p>详细内容可以参见《概论》10.1中的介绍.</p><ol start="4"><li>DBMS的完整性控制机制应具有哪些功能</li></ol><p>答:<br>DBMS的完整性控制机制应具有三个方面的功能:</p><ol><li>定义功能,即提供定义完整性约束条件的机制.</li><li>检查功能,即检查用户发出的操作请求是否违背了完整性约束条件.</li><li>违约反应:如果发现用户的操作请求使数据违背了完整性约束条件,则采取一定的动作来保证数据的完整性.</li></ol><ol start="5"><li>RDBMS在实现参照完整性时需要考虑哪些方面</li></ol><p>答:<br>RDBMS在实现参照完整性时需要考虑以下几个方面:</p><ol><li><p>外码是否可以接受空值</p></li><li><p>删除被参照关系的元组时的考虑,这时系统可能采取的作法有三种:</p></li></ol><p>a) 级联删除(CASCADES);<br>b) 受限删除(RESTRICTED);<br>c) 置空值删除(NULLIFIES)</p><ol start="3"><li><p>在参照关系中插入元组时的问题,这时系统可能采取的作法有:<br>a) 受限插入<br>b) 递归插入</p></li><li><p>修改关系中主码的问题</p></li></ol><p>一般是不能用UPDATE语句修改关系主码的.如果需要修改主码值,只能先删除该元组,然后再把具有新主码值的元组插入到关系中.</p><p>如果允许修改主码,首先要保证主码的唯一性和非空,否则拒绝修改.然后要区分是参照关系还是被参照关系.</p><p>详细讨论可以参见《概论》10.2.</p><ol start="6"><li>假设有下面两个关系模式:</li></ol><p>职工(职工号,姓名,年龄,职务,工资,部门号),其中职工号为主码;</p><p>部门(部门号,名称,经理名,电话),其中部门号为主码;</p><p>用SQL语言定义这两个关系模式,要求在模式中完成以下完整性约束条件的定义:<br>定义每个模式的主码;定义参照完整性;定义职工年龄不得超过60岁.</p><p>答</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> DEPT</span><br><span class="line">(Deptno NUMBER(<span class="number">2</span>),</span><br><span class="line">Deptname <span class="type">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">Manager <span class="type">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">PhoneNumber <span class="type">Char</span>(<span class="number">12</span>)</span><br><span class="line"><span class="keyword">CONSTRAINT</span> PK_SC <span class="keyword">PRIMARY</span> KEY (Deptno));</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> EMP(Empno NUMBER(<span class="number">4</span>),</span><br><span class="line">Ename <span class="type">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">Age NUMBER(<span class="number">2</span>),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> C1 <span class="keyword">CHECK</span> (Age《<span class="operator">=</span><span class="number">60</span>),</span><br><span class="line">Job <span class="type">VARCHAR</span>(<span class="number">9</span>),</span><br><span class="line">Sal NUMBER(<span class="number">7</span>,<span class="number">2</span>),</span><br><span class="line">Deptno NUMBER(<span class="number">2</span>),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> FK_DEPTNO</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (Deptno)</span><br><span class="line"><span class="keyword">REFERENCES</span> DEPT(Deptno));</span><br></pre></td></tr></table></figure><ol start="7"><li>关系系统中,当操作违反实体完整性,参照完整性和用户定义的完整性约束条件时,一般是如何分别进行处理的</li></ol><p>答:</p><p>对于违反实体完整性和用户定义的完整性的操作一般都采用拒绝执行的方式进行处理.而对于违反参照完整性的操作,并不都是简单地拒绝执行,有时要根据应用语义执行一些附加的操作,以保证数据库的正确性.具体的处理可以参见上面第5题或《概论》10.2中相应部分.</p><ol start="8"><li>试述你了解的某一个实际的DBMS产品的完整性控制策略.</li></ol><p>答:</p><p>不同的DBMS产品以及同一产品的不同版本的完整性控制策略各不相同,读者要去了解某一个DBMS产品的完整性控制策略.</p><p>《概论》上10.3 简单介绍了有关ORACLE数据库的完整性控制策略.</p><h1 id="第十二章-数据库技术新发展"><a href="#第十二章-数据库技术新发展" class="headerlink" title="第十二章 数据库技术新发展"></a>第十二章 数据库技术新发展</h1><ol><li>试述数据库技术的发展过程.</li></ol><p>答案要点:</p><ol><li>数据模型是数据库系统的核心和基础.数据库技术的三个发展阶段应该按照数据模型的进展来界定.按照数据模型的进展,数据库技术可以相应地分为三个发展阶段.</li><li>数据模型的发展经历了格式化数据模型(包括层次数据模型和网状数据模型),关系数据模型两个阶段,以面向对象数据模型为代表的非传统数据模型的阶段.</li><li>同学们可以从每一代数据库系统的主要特征,代表性系统,主要成就,优点和不足来了解数据库技术的发展过程.</li></ol><p>层次数据库系统和网状数据库系统的数据模型虽然分别为层次模型和网状模型,但实质上层次模型是网状模型的特例.它们都是格式化模型.它们从体系结构,数据库语言到数据存储管理均具有共同特征,是第一代数据库系统.</p><p>关系数据库系统支持关系模型.关系模型不仅简单,清晰,而且有关系代数作为语言模型,有关系数据理论作为理论基础.因此,关系数据库系统具有形式基础好,数据独立性强,数据库语言非过程化等特色,标志着数据库技术发展到了第二代.</p><p>第二代数据库系统的数据模型虽然描述了现实世界数据的结构和一些重要的相互联系,但是仍不能捕捉和表达数据对象所具有的丰富而重要的语义,因此尚只能属于语法模型.</p><p>第三代的数据库系统将是以更加丰富的数据模型和更强大的数据管理功能为特征,从而满足传统数据库系统难以支持的新的应用要求.</p><ol start="2"><li>当前数据库技术发展的主要特征是什么</li></ol><p>答案要点:</p><p>新一代数据库技术的特点是:</p><p>(1) 面向对象的方法和技术对数据库发展的影响最为深远,数据库研究人员借鉴和吸收了面向对象的方法和技术,提出了面向对象数据模型(简称对象模型).该模型克服了传统数据模型的局限性,促进了数据库技术在一个新的技术基础上继续发展.</p><p>(2) 数据库技术与多学科技术的有机结合,计算机领域中其他新兴技术的发展对数据库技术产生了重大影响.传统的数据库技术和其他计算机技术如,网络通信技术,人工智能技术,面向对象程序设计技术,并行计算技术移动计算技术等的互相结合,互相渗透,使数据库中新的技术内容层出不穷.</p><p>(3) 面向应用领域的数据库技术的研究在传统数据库系统基础上,结合各个应用领域的特点,研究适合该应用领域的数据库技术,如数据仓库,工程数据库,统计数据库,科学数据库,空间数据库,地理数据库等,这是当前数据库技术发展的又一重要特征.</p><p>解析<br>我们可以用一个三维空间的视图,比较清晰地从数据模型,新技术内容,应用领域三个方面描述新一代数据库系统及其相互关系.</p><ol start="3"><li>试述第一,二代数据库系统的主要成就.</li></ol><p>答案要点:</p><p>第一代数据库系统指层次和网状数据库系统,其代表是:</p><p>(1) 1969年IBM公司研制的层次模型的数据库管理系统IMS.</p><p>(2) 美国数据库系统语言协商会CODASYL下属的数据库任务组DBTG对数据库方法进行了系统的研究,探讨,于20世纪60年代末70年代初提出了若干DBTG报告.DBTG 报告确定并建立了数据库系统的许多概念,方法和技术.DBTG所提议的方法是基于网状结构的.它是数据库网状模型的典型代表.在DBTG方法和思想的指引下数据库系统的实现技术不断成熟,开发了许多商品化的数据库管理系统,它们都是基于网状模型或层次模型的.</p><p>可以说,层次数据库是数据库系统的先驱,而网状数据库则是数据库概念,方法,技术的奠基.它们是数据库技术中研究得最早的两种数据库系统.支持关系数据模型的关系数据库系统是第二代数据库系统.</p><p>20世纪70年代是关系数据库理论研究和原型开发的时代,.其中以IBM San Jose研究室开发的System R和Berkeley大学研制的INGRES为典型代表.经过大量的高层次的研究和开发取得了一系列的成果,.主要是:</p><p>(1) 奠定了关系模型的理论基础,给出了人们一致接受的关系模型的规范说明.</p><p>(2) 研究了关系数据语言,有关系代数,关系演算,SQL语言及QBE等.这些描述性语言一改以往程序设计语言和网状,层次数据库系统中数据库语言的风格,以其易学易懂的优点得到了最终用户的喜爱,为20世纪80年代数据库语言标准化打下了基础.</p><p>(3) 研制了大量的RDBMS的原型,攻克了系统实现中查询优化,并发控制,故障恢复等一系列关键技术.不仅大大丰富了DBMS实现技术和数据库理论,更重要的是促进了RDBMS产品的蓬勃发展和广泛应用.</p><p>在计算机领域中把20世纪70年代称为数据库时代.20世纪80年代几乎所有新开发的系统均是关系的.关系数据库系统从实验室走向了社会,数据库技术日益广泛地应用到企业管理,情报检索,辅助决策等各个方面,成为实现和优化信息系统的基础和基本技术.</p><ol start="4"><li>第三代数据库系统的主要特点是什么</li></ol><p>答:<br>经过多年的研究和讨论,对第三代数据库系统的基本特征已有了共识.</p><p>(1)第三代数据库系统应支持数据管理,对象管理和知识管理,除提供传统的数据管理服务外,第三代数据库系统将支持更加丰富的对象结构和规则,应该集数据管理,对象管理和知识管理为一体.由此可以导出第三代数据库系统必须支持OO数据模型.</p><p>(2)第三代数据库系统必须保持或继承第二代数据库系统的技术,第三代数据库系统应继承第二代数据库系统已有的技术,.如第二代数据库系统的非过程化数据存取方式和数据独立性.不仅能很好的支持对象管理和规则管理,而且能更好地支持原有的数据管理,支持多数用户需要的即席查询等.</p><p>(3)第三代数据库系统必须对其他系统开放数据库系统的开放性表现在:支持数据库语言标准;在网络上支持标准网络协议;系统具有良好的可移植性,可连接性,可扩展性和可互操作性等.</p><ol start="5"><li>试述数据模型在数据库系统发展中的作用和地位.</li></ol><p>答案要点:</p><ol><li>数据模型是数据库系统的核心和基础.</li><li>数据库的发展集中表现在数据模型的发展.</li></ol><ol start="6"><li>请用实例阐述数据库技术与其他学科的技术相结合的成果.<br>答案要点:</li></ol><p>数据库技术与其他学科的内容相结合,是新一代数据库技术的一个显著特征,涌现出各种新型的数据库系统.例如:</p><ul><li>数据库技术与分布处理技术相结合,出现了分布式数据库系统;</li><li>数据库技术与并行处理技术相结合,出现了并行数据库系统;</li><li>数据库技术与人工智能技术相结合,出现了知识库系统和主动数据库系统;</li><li>数据库技术与多媒体技术相结合,出现了多媒体数据库系统;</li><li>数据库技术与模糊技术相结合,出现了模糊数据库系统; 等等.</li></ul><ol start="7"><li>请阐述以下数据库系统的主要概念,研究的主要问题及其发展过程:</li></ol><p>分布式数据库系统,并行数据库系统,主动数据库系统,多媒体数据库系统,模糊数据库系统.</p><p>答案要点:</p><p>下面仅仅给出有关概念,它们研究的主要问题及其发展过程请参见教科书《概论》.</p><p>分布式数据库系统:分布式数据库是由一组数据组成的,这组数据分布在计算机网络的不同计算机上,网络中的每个结点具有独立处理的能力(称为场地自治),可以执行局部应用.同时,每个结点也能通过网络通信子系统执行全局应用.</p><p>并行数据库系统:并行数据库系统是在并行机上运行的具有并行处理能力的数据库系统.并行数据库系统是数据库技术与并行计算技术相结合的产物.</p><p>主动数据库系统:主动数据库是相对于传统数据库的被动性而言的.主动数据库能根据数据库的当前状态,主动适时地做出反应,执行某些操作,向用户提供有关信息.主动数据库是传统数据库技术与人工智能技术,面向对象技术相结合的产物.</p><p>多媒体数据库系统:可实现对格式化和非格式化的多媒体数据的存储,管理和查询的数据库系统.</p><p>模糊数据库系统:存储,组织,管理和操作模糊数据的数据库系统.</p><ol start="8"><li>试述数据仓库的产生背景.</li></ol><p>答案要点:</p><ol><li>数据库技术的发展和广泛应用使许多部门,企业积累了大量的原始数据,这些数据是宝贵的资源</li><li>对这些数据的分析和利用可以了解企业运行的情况,发现存在的问题,预测未来的趋势.</li><li>数据库系统作为数据管理的先进技术已经成功用于事务处理.但是它</li></ol><p>对分析处理的支持一直不能令人满意,具体表现在:<br>(1) 分析处理时性能低.<br>(2) 分析的数据对象分散,而且不一致,即缺乏对数据的清洗,集成能力.<br>(3) 事务处理系统不具备动态集成的能力.<br>(4) 系统缺乏对历史数据的有效组织和存储能力,而分析方法必须以大量的历史数据为依托.<br>(5) 在事务处理系统中存储的是细节数据,不适合进行分析处理,而事务处理系统又不具备对数据的综合能力.</p><p>总之,DSS对数据在空间和时间的广度上都有了更高的要求,.而事务处理环境难以满足这些要求.在事务型环境中直接构建分析型应用是一种失败的尝试.数据仓库正是为了构建这种新的分析处理环境而出现的一种数据存储和组织技术.但是数据仓库的主要驱动力并不是过去的缺点,而是市场商业经营行为的改变,市场竞争要求捕获和分析事务级的业务数据.</p><ol start="9"><li>数据仓库数据的基本特征是什么</li></ol><p>答案要点:四个基本特征是:</p><p>· 数据仓库的数据是面向主题的<br>· 数据仓库的数据是集成的<br>· 数据仓库的数据是不可更新的<br>· 数据仓库的数据是随时间不断变化的</p><ol start="10"><li>什么是联机分析处理 什么是数据挖掘</li></ol><p>答案要点:</p><p>联机分析处理OLAP是以海量数据为基础的复杂分析技术.</p><p>OLAP支持各级管理决策人员从不同的角度,快速灵活地对数据仓库中的数据进行复杂查询和多维分析处理,并且能以直观易懂的形式将查询和分析结果提供给决策人员,以方便他们及时掌握企业内外的情况,辅助各级领导进行正确决策,提高企业的竞争力</p><p>数据挖掘是从超大型数据库(VLDB)或数据仓库中发现并提取隐藏在内的模式的过程,这些模式是有效的,新颖的,有潜在使用价值的和易于理解的.目的是帮助决策者寻找数据间潜在的关联,发现经营者被忽略的要素,而这些要素对预测趋势,决策行为也许是十分有用的信息.</p><ol start="11"><li>基于数据库技术的DSS解决方案是什么</li></ol><p>答:</p><p>基于数据库技术的DSS的解决方案是: DW+OLAP+DM DSS的可行方案</p><p>数据仓库,联机分析处理和数据挖掘是作为三种独立的信息处理技术出现的.数据仓库用于数据的存储和组织,OLAP集中于数据的分析,数据挖掘则致力于知识的发现.由于这三种技术内在的联系性和互补性,将它们结合起来是一种新的DSS构架.是DSS有效而可操作的整体解决方案.</p><ol start="12"><li>什么是工程数据库</li></ol><p>答:</p><p>工程数据库是一种能存储和管理各种工程设计图形和工程设计文档,并能为工程设计提供各种服务的数据库.<br>主要应用于CAD&#x2F;CAM,CIM,CASE等工程应用领域.</p><p>工程数据库中,由于传统的数据模型难以满足工程应用的要求,需要运用新的模型技术,如扩展的关系模型,语义模型,面向对象的数据模型.</p><p>工程数据库管理系统的功能与传统数据库管理系统有很大不同.</p><ol start="13"><li>什么是统计数据库</li></ol><p>答:</p><p>统计数据库是一种用来对统计数据进行存储,统计,分析的数据库系统.</p><p>统计数据具有层次型特点,但并不完全是层次型结构.统计数据也有关系型特点,但关系型也不完全满足需要.统计数据具有一些特殊的性质,例如:</p><ol><li>分类属性和统计属性</li><li>多维性</li><li>分类属性的层次结构</li><li>微数据和宏数据之分</li></ol><p>统计数据库中常用的操作有:抽样,邻近搜索,估计与插值,转置,聚集及复杂的分析操作.这些操作不同于关系数据库中传统的查询,增加,删除,修改操作.人们希望能从DMBS一级来支持以上的数据特性和操作.因此,研究和发展了统计数据库技术.</p><p>统计数据库在安全性方面有特殊的要求,要防止某些用户在统计数据库中利用对统计数据(如综合数据)的合法查询推导出该用户无权了解的某一个体的具体数据.</p><ol start="14"><li>什么是空间数据库</li></ol><p>答:</p><p>空间数据库系统是描述,存储和处理空间数据及其属性数据的数据库系统.</p><p>空间数据是用于表示空间物体的位置,形状,大小和分布特征等诸方面信息的数据.</p><p>空间数据的特点是不仅包括物体本身的空间位置及状态信息,还包括表示物体的空间关系(即拓扑关系)的信息.</p><p>空间数据库是随着地理信息系统(GIS)的开发和应用而发展起来的数据库新技术.目前,空间数据库系统不是独立存在的系统,它是和应用紧密结合,大多数作为地理信息系统的基础和核心的形式出现.</p><p>空间数据库的研究涉及计算机科学,地理学,地图制图学,摄影测量与遥感,图像处理等多个学科.空间数据库技术研究的主要内容包括:</p><ol><li>空间数据模型</li><li>空间数据查询语言</li><li>空间数据库管理系统</li></ol><p>等等.</p><h1 id="第十三章-面向对象程数据库系统"><a href="#第十三章-面向对象程数据库系统" class="headerlink" title="第十三章 面向对象程数据库系统"></a>第十三章 面向对象程数据库系统</h1><ol><li>面向对象程序设计的基本思想是什么 它的主要特点是什么</li></ol><p>答案要点:</p><p>面向对象程序设计的基本思想是封装和可扩展性.</p><p>封装的特点:</p><p>面向对象程序设</p><p>计就是把数据结构和数据结构上的操作算法封装在一个对象之中.</p><p>对象是以对象名封装的数据结构和可施加在这些数据上的私有操作.对象的数据结构描述了对象的状态,对象的操作是对象的行为.</p><p>面向对象程序设计中,操作名列在封装对象的界面上,当其他对象要启动它的某个操作时,以操作名发一条消息,该对象接受消息,操作动作起来,完成对私有数据的加工.当一个面向对象的程序运行完毕时,各对象也就达到了各自的终态.输入,输出也由对象自己完成.</p><p>这种全封装的计算实体给软件带来了模块性,安全性等显著优点.因为它基本没有数据耦合,对象间没有因操作而产生的边界效应,出了错可以很快找到原因,所以易于维护和修改.</p><p>可扩展性的特点:</p><p>面向对象程序设计的可扩展性体现在继承性和行为扩展两个方面.<br>因为对象具有一种层次关系.每个对象可以有子对象.子对象可以继承父对象(及其祖先对象)的数据结构和操作,继承的部分就可以重用.<br>另一方面子对象还可以增加新的数据结构和新的操作.新增加的部分就是子对象对父对象发展的部分.</p><p>面向对象程序设计的行为扩展是指可以方便地增加程序代码来扩展对象的行为而不会影响该对象上的其他操作.</p><ol start="2"><li>定义并解释OO模型中以下核心概念: 对象与对象标识,封装,类,类层次.</li></ol><p>答案要点:</p><ol><li>对象与对象标识OID</li></ol><p>现实世界的任一实体被模型化为一个对象,每个对象有一个唯一的标识,称为对象标识.</p><ol start="2"><li>封装</li></ol><p>每一个对象是其状态与行为的封装,其中状态是该对象一系列属性值的集合,而行为是在对象状态上操作的集合,操作也称为方法.<br>3) 类</p><p>共享同样属性和方法集的所有对象构成了一个对象类简称类,一个对象是某一类的一个实例.类的属性的定义域可以是任何类,即可以是基本类也可以是包含属性和方法的一般类,还也可是这个类自身.<br>4) 类层次</p><p>在一个面向对象数据库模式中,可以定义一个类(如C1)的子类(如C2),类C1称为类C2的超类(或父类).子类(如C2)还可以再定义子类(如C3).这样,面向对象数据库模式的一组类形成一个有限的层次结构,称为类层次.</p><p>3.OO模型中对象标识与关系模型中的”码”有什么区别</p><p>答案要点:</p><p>对象标识具有永久持久性.一个对象一经产生系统就给它赋于一个在全系统中唯一的对象标识符,直到它被删除.对象标识是由系统统一分配的,用户不能对对象标识符进行修改.对象标识是稳定的,独立于值的,它不会因为对象中某个值的修改而改变.</p><p>关系模型中的”码”是值标识,不具有永久持久性,只具有程序内持久性.码是由用户建立的,用来区分关系的不同元组.</p><p>4.什么是单继承 什么是多重继承 继承性有什么优点</p><p>答案要点:</p><p>若一个子类只能继承一个超类的特性(包括属性,方法和消息),这种继承称为单继承;若一个子类能继承多个超类的特性,这种继承称为多重继承.</p><p>继承性优点:</p><ol><li>它是建模的有力工具,提供了对现实世界简明而精确的描述.</li><li>它提供了信息重用机制.由于子类可以继承超类的特性,这就可以避免许多重复定义.</li></ol><ol start="5"><li>什么是操作的重载 在OODB中为什么要滞后联编</li></ol><p>答案要点:<br>在OO模型中对于同一个操作,可以按照类的不同,重新定义操作的实现,这称为操作的重载.这样,同一个操作名就与不同的实现方法,与不同的参数相联系.</p><p>为了提供这个功能,OODBMS不能在编译时就把操作名联编到程序上,必须在运行时根据实际请求中的对象类型和操作来选择相应的程序,把操作名与它联编上(即把操作名转换成该程序的地址),这个推迟的转换称为滞后联编.</p><ol start="6"><li>什么是OODB模式演进 为什么面向对象数据库模式的修改要比关系模式的修改复杂得多</li></ol><p>答案要点:</p><p>面向对象数据库模式是类的集合.模式为适应需求的变化会随着时间而变化,这称为模式演进.模式演进包括创建新的类,删除旧的类,修改类的属性和操作等.</p><p>面向对象数据库模式的修改要比关系模式的修改复杂的原因是:</p><ol><li>模式改变频繁<br>使用OODB系统的应用通常需要频繁地改变OODB数据库模式.例如OODB常运用于工程设计环境中,设计环境特征之一就是不断变化.</li><li>模式修改复杂<br>OO模型具有很强的建模能力和丰富的语义,包括类本身的语义,类属性之间和类之间丰富的语义联系,这使得模式修改操作的类型复杂多样.</li><li>OODB中模式演进往往是动态的,使得实现技术更加复杂.</li></ol><ol start="7"><li>什么是对象-关系数据库 它的主要特点是什么 常用的实现方法有哪些</li></ol><p>答案要点:</p><p>对象-关系数据库系统是将关系数据库系统与面向对象数据库系统两方面的特征相结合,不仅支持核心的面向对象数据模型,而且支持传统数据库系统所具有的特征.</p><p>主要特点有:</p><ol><li>具有原来关系数据库的各种特点;</li><li>扩充数据类型;</li><li>支持复杂对象;</li><li>支持继承的概念;</li><li>提供通用的规则系统;</li></ol><p>实现对象-关系数据库系统的方法主要有以下五类.</p><ol><li><p>从头开发对象-关系DBMS.</p></li><li><p>在现有的关系型DBMS基础上进行扩展.扩展方法有两种:<br>a) 对关系型DBMS核心进行扩充,逐渐增加对象特性.<br>b) 不修改现有的关系型DBMS核心,而是在现有关系型DBMS外面加一个包装层.</p></li><li><p>将现有的关系型DBMS与其他厂商的对象-关系型DBMS连接在一起,使现有的关系型DBMS直接而迅速地具有了对象-关系特征.连接方法主要有两种:<br>a) 关系型DBMS使用网关技术与其他厂商的对象-关系型DBMS连接.<br>b) 将对象-关系型引擎与关系型存储管理器结合起来,即以关系型DBMS作为系统的最底层,对象-关系型系统作为上层.</p></li><li><p>将现有的OO型DBMS与其他厂商的对象-关系型DBMS连接在一起,使现有的面向对象型DBMS直接而迅速地具有了对象-关系特征.</p></li><li><p>扩充现有的面向对象的DBMS,使之成为对象-关系型DBMS.</p></li></ol><h1 id="第十四章-分布式数据库系统"><a href="#第十四章-分布式数据库系统" class="headerlink" title="第十四章 分布式数据库系统"></a>第十四章 分布式数据库系统</h1><ol><li>什么样的数据库系统是分布式数据库系统 图14.1的系统配置在什么情况下只能算分散的数据库系统 在什么条件下才是分布式数据库系统</li></ol><p>答案要点:</p><p>分布式数据库是由一组数据组成的,这组数据分布在计算机网络的不同计算机上,网络中的每个结点具有独立处理的能力(称为场地自治),可以执行局部应用.同时,每个结点也能通过网络通信子系统执行全局应用.</p><p>分布式数据库定义的要点:分布性,逻辑整体性,自治性和协作性.</p><p>解析:</p><ol><li>分布性,数据库中的数据不是存储在同一场地上,这就可以和集中式数据库相区别.</li><li>逻辑整体性,这些数据逻辑上是互相联系的,是一个整体,逻辑上如同集中数据库.</li><li>自治性,分布数据库中每个结点上的DBMS具有独立处理的能力(如果没有连入网络,也是一个完整的DBMS).</li><li>协作性,分布数据库中各个结点上的DBMS能相互协调,执行全局应用.</li></ol><p>答案要点:</p><p>《概论》图14.1中,如果用户既可以通过客户机对本地服务器中的数据库执行局部应用,也可以对两个或两个以上结点中的数据库执行全局应用,这样的系统是分布式数据库系统.不支持全局应用的系统不能称为分布式数据库系统,即只是分散的数据库系统.</p><p>(详细说明参见《概论》14.1.1)</p><ol start="2"><li>分布式数据库系统有什么特点</li></ol><p>答案要点:</p><p>分布式数据库系统是在集中式数据库系统技术的基础上发展起来的,但不是简单地把集中式数据库分散地实现,它是具有自己的性质和特征的系统.<br>数据独立性:除了数据的逻辑独立性与物理独立性外,还具有数据分布独立性亦称分布透明性.</p><p>集中与自治相结合的控制结构:各局部的DBMS可以独立地管理局部数据库,具有自治的功能.同时又有集中控制机制,协调各局部DBMS的工作,执行全局应用.</p><p>数据可以适当冗余以提高系统的可靠性,可用性和性能.</p><p>全局的一致性,可串行性和可恢复性.分布式数据库系统中各局部数据库应满足集中式数据库的一致性,并发事务的可串行性和可恢复性.除此以外还应保证数据库的全局一致性,全局并发事务的可串行性和系统的全局可恢复性.</p><p>(详细说明参见《概论》14.1.2).</p><ol start="3"><li>试述研制分布式数据库系统的目的和动机.</li></ol><p>答案要点:研制分布式数据库系统的目的和动机,主要包括技术和组织两方面.</p><p>适应部门分布的组织结构,降低费用;<br>提高系统的可靠性和可用性;<br>充分利用数据库资源,提高数据库的利用率和共享程度;<br>逐步地扩展系统处理能力和系统规模.</p><p>(详细说明参见《概论》14.1.3).</p><ol start="4"><li>试述分布式数据库系统的模式结构.</li></ol><p>答案要点:</p><p>分布式数据库系统的模式结构可以分为两大部分:集中式数据库系统的模式结构和分布式数据库系统增加的模式级别,其中包括:</p><ol><li>全局外模式,它们是全局应用的用户视图,是全局概念模式的子集.</li><li>全局概念模式,它定义分布式数据库中数据的整体逻辑结构,使得数据如同没有分布一样.</li><li>分片模式,定义片段以及全局关系到片段的映象.</li><li>分布模式,定义片段的存放结点.分布模式的映象类型确定了分布式数据库是冗余的还是非冗余的.</li></ol><p>(详细可参考《概论》图14.3分布式数据库系统的模式结构).</p><ol start="5"><li>什么是数据分片 有几种分片方式 数据分片的目的是什么 有什么优点</li></ol><p>答案要点:</p><p>数据分片就是将数据表按照一定条件划分成若干子集,每个子集称为一个片段.<br>分片的方式有多种,水平分片和垂直分片是两种基本的分片方式,混合分片和导出分片是较复杂的分片方式.</p><p>水平分片是指按一定的条件将关系表按行(水平方向)分为若干不相交的子集,每个子集为关系的一个片段.</p><p>垂直分片是指将关系按列(垂直方向)分为若干子集.垂直分片的各个片段都要包含关系的码.这样才能从各个片段重构原来的关系.</p><p>导出分片是指导出水平分片,即水平分片的条件不是本身属性的条件而是其他关系的属性的条件.</p><p>混合分片是指按上述三种分片方式得到的片段继续按另一种方式分片.</p><p>数据分片的优点是:数据不是按照关系而是按片段来存放,有利于更好地根据用户需求来组织数据的分布,也有利于控制数据的冗余度.</p><ol start="6"><li>试述分布透明性的内容.</li></ol><p>答案要点:</p><p>分布透明性包括分片透明性,位置透明性和局部数据模型透明性.</p><p>分片透明性指用户或应用程序只对全局关系进行操作而不必考虑关系的分片.当分片模式改变了,由于全局模式到分片模式的映象,全局模式不变,应用程序不必改写.</p><p>位置透明性指用户或应用程序不必了解片段的存储场地,当存储场地改变了,由于分片模式到分布模式的映象,应用程序不必改变.同时,若片段的重复副本数目改变了,数据的冗余度改变了,用户也不必关心如何保持各副本的一致性,这就是重复副本的透明性.</p><p>局部数据模型透明性指用户或用户程序不必了解局部场地上使用的是哪种数据模型.</p><ol start="7"><li>什么是同构型D-DBMS 什么是异构型D-DBMS</li></ol><p>答案要点:</p><p>D-DBMS的同构和异构可以有三级:硬件级,操作系统级和局部DBMS级.其中最主要的是局部DBMS这一级,因为硬件和操作系统的不同将由通信软件处理和管理.所以,同构型D-DBMS定义为:在分布数据库系统中若每个结点的局部数据库具有相同的DBMS则成为同构型D-DBMS;若各结点的局部数据库具有不同的DBMS,则成为异构型的D-DBMS.</p><p>(详细说明参见《概论》14.2.4)</p><ol start="8"><li>设在《概论》14.2.3节的分布式数据库系统例子中,还有全局关系SC(SNO,CNO,G),它具有两个导出分片SC_A,SC_B,分别存储理学院和文学院学生的选课记录.SC_A存放在场地4,SC_B存放在场地5.今有一个稍复杂的查询,从终端输入一个课程号,查找选修该课程的学生学号和姓名,并把它们显示在屏幕上.请写出具有不同层次分布透明性(类比例子中的三种情况)的应用程序.不必给出细节,只需写出算法思想.</li></ol><p>情况1 若系统具有分片透明性,则</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Scanf(〃<span class="operator">%</span> s〃,SCnumber); <span class="comment">/*从终端读入课程号到变量SCnumber中 */</span></span><br><span class="line"><span class="keyword">EXEC</span> <span class="keyword">SQL</span> <span class="keyword">SELECT</span> Sno,Sname <span class="keyword">INTO</span> :SNO, :NAME</span><br><span class="line"><span class="operator">/</span> <span class="operator">*</span> SNO,NAME为程序变量<span class="operator">*</span><span class="operator">/</span></span><br><span class="line"><span class="keyword">FROM</span> SC,Student <span class="comment">/*在全局关系SC,Student中查找*/</span></span><br><span class="line"><span class="keyword">WHERE</span> SC.Cno <span class="operator">=</span>:SCnumber <span class="keyword">AND</span> SC.Sno<span class="operator">=</span>Student.Sno;</span><br><span class="line">Printf(〃<span class="operator">%</span> s,<span class="operator">%</span> s〃,SNO,NAME); <span class="comment">/*把SNO,NAME输出在屏幕上*/</span></span><br></pre></td></tr></table></figure><p>情况2 若系统具有位置透明性,但不具有分片透明性,则</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Scanf(〃<span class="operator">%</span> s〃,SCnumber);</span><br><span class="line"><span class="keyword">EXEC</span> <span class="keyword">SQL</span> <span class="keyword">SELECT</span> Sno,Sname <span class="keyword">INTO</span> :SNO, :NAME</span><br><span class="line"><span class="keyword">FROM</span> SC_A,S_A</span><br><span class="line"><span class="keyword">WHERE</span> SC_A.Cno <span class="operator">=</span>:SCnumber <span class="keyword">AND</span> SC_A.Sno<span class="operator">=</span>S_A.Sno;</span><br><span class="line">If(<span class="operator">!</span> FOUND)&#123;</span><br><span class="line"><span class="keyword">EXEC</span> <span class="keyword">SQL</span> <span class="keyword">SELECT</span> Sno,Sname <span class="keyword">INTO</span> :SNO, :NAME</span><br><span class="line"><span class="keyword">FROM</span> SC_B,S_B</span><br><span class="line"><span class="keyword">WHERE</span> SC_B.Cno <span class="operator">=</span>:SCnumber <span class="keyword">AND</span> SC_B.Sno<span class="operator">=</span>S_B.Sno;</span><br><span class="line">&#125;</span><br><span class="line">Printf(〃<span class="operator">%</span> s,<span class="operator">%</span> s〃,SNO,NAME);</span><br></pre></td></tr></table></figure><p>情况3 若系统只具有局部数据模型透明性,不具有位置透明性(当然也就不具有分片透明性),则</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Scanf(〃<span class="operator">%</span> s〃,SCnumber);</span><br><span class="line"><span class="keyword">EXEC</span> <span class="keyword">SQL</span> <span class="keyword">SELECT</span> Sno,Sname <span class="keyword">INTO</span> :SNO,:NAME</span><br><span class="line"><span class="keyword">FROM</span> SC_A <span class="keyword">AT</span> Site4, S_A <span class="keyword">AT</span> Site1</span><br><span class="line"><span class="comment">/*先在场地4的片段SC_A和场地1的片段S_A中查找*/</span></span><br><span class="line"><span class="keyword">WHERE</span> SC_A.Cno <span class="operator">=</span>:SCnumber <span class="keyword">AND</span> SC_A.Sno<span class="operator">=</span>S_A.Sno;</span><br><span class="line">If(<span class="operator">!</span> FOUND)&#123;</span><br><span class="line"><span class="keyword">EXEC</span> <span class="keyword">SQL</span> <span class="keyword">SELECT</span> Sno,Sname <span class="keyword">INTO</span> :SNO,:NAME</span><br><span class="line"><span class="keyword">FROM</span> SC_B <span class="keyword">AT</span> Site5,S_B <span class="keyword">AT</span> Site2</span><br><span class="line"><span class="comment">/*再在场地5的片段SC_B和场地2的片段S_B中查找*/</span></span><br><span class="line"><span class="comment">/*也可以在场地5的片段SC_B和场地3的片段S_B中查找*/</span></span><br><span class="line"><span class="keyword">WHERE</span> SC_B.Cno <span class="operator">=</span>:SCnumber <span class="keyword">AND</span> SC_B.Sno<span class="operator">=</span>S_B.Sno;</span><br><span class="line">&#125;</span><br><span class="line">Printf(〃<span class="operator">%</span> s,<span class="operator">%</span> s〃,SNO,NAME);</span><br></pre></td></tr></table></figure><ol start="9"><li>试述下列概念:两段提交协议(2PC);分布事务的原子性;全局死锁.</li></ol><p>答案要点:<br>2PC:2PC把一个分布事务的事务管理分为协调者和参与者.<br>2PC的第一阶段:协调者向所有参与者发出”准备提交”信息.如果某个参与者准备提交,就回答”就绪”信息,否则回答”撤销”信息.参与者在回答前,应把有关信息写入自己的日志中.协调者在发出准备提交信息前也要把有关信息写入自己的日志中.如果在规定时间内协调者收到了所有参与者”就绪”的信息,则将作出提交的决定,否则将作出撤销的决定.</p><p>2PC的第二阶段:协调者将有关决定的信息先写入日志,然后把这个决定发送给的所有的参与者.所有参与者收到命令之后首先往日志中写入”收到提交(或撤销)”决定的信息,并向协调者发送”应答(ACK)”消息,最后执行有关决定.协调者收到所有参与者的应答消息后,一个事务的执行到此结束,有关日志信息可以脱机保存.</p><p>分布事务的原子性:分布事务的原子性就应该是:组成一个全局事务的所有子事务要么一致地全部提交,要么一致地全部滚回.</p><p>全局死锁:全局事务执行时发生的涉及两个以上场地上的死锁.</p><ol start="10"><li>在分布式数据库系统中,对多副本的封锁有几种解决方法</li></ol><p>处理多副本的封锁可采取如下几种方法:</p><ol><li>对写操作,要申请对所有副本的X锁.对于读操作,只要申请对某个副本的S锁.</li><li>无论是写操作还是读操作都要对多数(大于半数)副本申请X锁或S锁.</li><li>规定某个场地上的副本为主副本,所有的读写操作均申请对主副本的封锁.</li></ol><h1 id="第十五章-并行数据库系统"><a href="#第十五章-并行数据库系统" class="headerlink" title="第十五章 并行数据库系统"></a>第十五章 并行数据库系统</h1><ol><li>什么是并行数据库系统</li></ol><p>答案要点:<br>并行数据库系统是在并行机上运行的具有并行处理能力的数据库系统.并行数据库系统是数据库技术与并行计算技术相结合的产物.</p><ol start="2"><li>试述并行数据库系统的研制目标.</li></ol><p>答案要点:</p><p>并行数据库系统该实现如下目标:</p><ol><li>高性能<br>并行数据库系统通过将数据库管理技术与并行处理技术有机结合,发挥多处理机结构的优势,提供比相应的大型机系统更高的性能价格比和可用性.</li><li>高可用性<br>并行数据库系统可通过数据复制来增强数据库的可用性.</li><li>可扩充性<br>系统通过增加处理和存储能力来平滑地扩展性能,应具有线性伸缩比和线性加速比.</li></ol><p>具体说明可参考《概论》15.2.</p><ol start="3"><li>什么是并行数据库系统的伸缩比和加速比</li></ol><p>答案要点:</p><p>线性伸缩比是指当任务扩大N倍,系统处理和存储能力也扩大N倍时系统性能不变.<br>线性伸缩比&#x3D;(小任务在小系统上的运行时间)&#x2F;(大(N倍)任务在大任务上的运行时间)&#x3D;1<br>线性加速比是指当任务不变而系统处理和存储能力扩大N倍时,系统性能也提高N倍.<br>线性加速比&#x3D;(小系统上执行一个任务的时间)&#x2F;(大(N倍)系统上执行同一任务的时间)&#x3D;N</p><ol start="4"><li>并行数据库系统有哪几种体系结构 试比较它们的特点.</li></ol><p>答案要点:<br>从硬件结构来看,根据处理机与磁盘,内存的相互关系可以将并行计算机分为三种基本的体系结构:</p><p>·共享内存结构(SM);<br>·共享磁盘结构(SD);<br>·无共享资源结构(SN).</p><p>此外还有混合结构,即整个系统是Shared_Nothing结构而每个结点是Shared_Memory结构.这种结构综合了SM与SN的优点.</p><ol><li>SM并行结构<br>SM并行结构由多个处理机,一个共享内存(主存储器)和多个磁盘存储器构成.多处理机和共享内存由高速通讯网络连接,每个处理机可直接存取一个或多个磁盘,即所有内存与磁盘为所有处理机共享.</li><li>SD并行结构<br>SD并行结构由多个具有独立内存的处理机和多个磁盘构成.每个处理机都可以读写任何磁盘.</li><li>SN并行结构<br>SN并行结构由多个处理节点构成.每个处理节点具有自己独立的处理机,内存和磁盘存储器.多个处理机结点由高速通信网络连接.</li></ol><ol start="5"><li>并行数据库系统中并行查询优化的必要性和困难何在</li></ol><p>答案要点:</p><p>查询优化始终是数据库管理系统的重要组成部分,查询优化的目标在于提高执行效率.由于并行数据库环境中存在多个处理机,并行查询优化应尽可能地使每个操作并行处理,充分利用系统资源提高并行度来达到提高系统性能的目的.并行查询优化面临的两大困难在于:</p><ol><li>执行计划的搜索空间十分庞大</li><li>执行时的某些系统参数比如CPU数目,内存大小在优化时是未知的.</li></ol><ol start="6"><li>试述数据划分在并行查询处理中的重要性.</li></ol><p>答案要点:</p><p>数据划分是并行查询处理的重要基础.研究和实际表明,数据划分对于并行数据库系统的性能具有很大的影响.</p><p>通过将每个关系的数据划分为小的片段,并把这些小片段均匀地分布在系统的多个磁盘驱动器上可以降低数据的聚集度,使得每个操作能够由多个处理机来承担,从而减少查询的响应时间并提高整个系统的吞吐量.若负载不均,往往会造成多个处理机结点能力的浪费.所以使用正确的数据分布算法以达到负载均衡是并行数据库中数据分布的关键问题.</p><p>7.并行数据库系统中有哪几种常用的数据划分方法</p><p>答案要点:</p><p>划分数据时可以依据一个属性的值,也可以同时依据多个属性的值,前者称为一维数据划分,后者则称为多维数据划分.</p><p>一维数据划分方法相对比较简单,常用的数据划分方法有:</p><p>·轮转法<br>·Hash法<br>·值域划分法</p><p>此外,还有用户定义的划分法,模式划分法,Hybrid_Range划分法等.</p><ol start="8"><li>试述并行数据库系统与分布式数据库系统的区别.</li></ol><p>答案要点:</p><p>分布式数据库系统与并行数据库系统特别是与SN结构的并行数据库系<br>具有很多相似点:</p><ol><li>它们都是用网络连接各个数据处理结点;</li><li>整个网络中的所有结点构成一个逻辑上统一的整体;</li><li>用户可以对各个结点上的数据进行透明存取等等.</li></ol><p>分布式数据库系统和并行数据库系统的应用目标和具体实现方法不同,使得它们具有很大的不同:</p><ol start="4"><li>应用目标不同</li></ol><p>并行数据库系统的目标是充分发挥并行计算机的优势,利用各个处理机结点并行地完成任务,提高系统的整体性能.<br>分布式数据库系统的目标是实现场地自治和数据的全局透明共享,而不要求利用网络中的各个结点来提高系统处理性能.</p><ol start="5"><li>实现方式不同</li></ol><p>在并行数据库系统中各结点间采用高速网络互连,结点间的数据传输代价相对较低,因此当某些结点处于空闲状态时,可以将工作负载过大的结点上的部分任务通过高速网传送给空闲结点处理,从而实现系统的负载平衡.</p><p>在分布式数据库系统中,各结点间一般采用局域网或广域网相连,网络带宽较低,点到点的通信开销较大,因此在查询处理时一般应尽量减少结点间的数据传输量.</p><ol start="6"><li>各结点的地位不同</li></ol><p>在并行数据库系统中,不存在全局应用和局部应用的概念.各结点是非独立的.</p><p>而在分布式数据库系统中,各结点除了能通过网络协同完成全局事务外,更重要的是各结点具有场地自治性.</p>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 范式</title>
      <link href="/posts/SQLnfs.html"/>
      <url>/posts/SQLnfs.html</url>
      
        <content type="html"><![CDATA[<p>SQL范式</p><span id="more"></span><h1 id="数据库基本概念"><a href="#数据库基本概念" class="headerlink" title="数据库基本概念"></a>数据库基本概念</h1><p>要理解范式，首先必须对知道什么是关系数据库，简单的说：关系数据库就是用二维表来保存数据。</p><p>概念</p><ul><li><code>实体</code>现实世界中客观存在并可以被区别的事物。比如“一个学生”、“一本书”、“一门课”等等。值得强调的是这里所说的“事物”不仅仅是看得见摸得着的“东西”，它也可以是虚拟的，不如说“老师与学校的关系”。</li><li><code>字段</code> 就是一项数据，也就是我们平常所说的“列”。</li><li><code>记录</code> 一个实体的一个实例所特有的相关数据项的集合，也就是我们平常所说的“行”。</li><li><code> 码</code> 表中可以唯一确定一个元组的某个属性（或者属性组），如果这    样的码有不止一个，那么大家都叫   候选码，我们从候选码中挑一个出    来做老大，它就叫主码。</li><li><code>主码</code> 被数据库设计者选中的，用来在同一实体集中区分不同实体的&gt;    候选码；此外，应该选择哪些从不或极少变化的属性；</li><li><code>键</code> 可唯一标识一条记录的一个字段或字段集，有时翻译为“码”。</li><li><code>主键（primary key)</code>用于唯一标识一个表中的一条记录的键。每个主键应该具有下列特征：<ul><li>唯一的。</li><li>最小 的（尽量选择最少键的组合）。</li><li>非空。</li><li>不可更新的（不能随时更改）</li></ul></li><li><code>外键（foreign keys</code> 对连接父表和子表的相关记录的主键字段的复制。</li><li><code>依赖表（dependent table)</code> 也称为弱实体（weak entity）是需要用父表标识的子表。</li><li><code>关联表（associative table）</code> 是多对多关系中两个父表的子表。</li><li><code>实体完整性</code> 每个表必须有一个有效的主 键。</li><li><code>参照完整性</code> 没有不相匹配的外键值。</li><li><code>属性</code> 教科书上解释为：“实体所具有的某一特性”，由此可见，属性一开始是个逻辑概念，比如说，“性别”是“人”的一个属性。在关系数据库中，属性又是个物理概念，属性可以看作是“表的一列”。</li><li><code>元组</code> 表中的一行就是一个元组。</li><li><code>分量</code> 元组的某个属性值。在一个关系数据库中，它是一个操作原子，即关系数据库在做任何操作的时候，属性是“不可分的”。否则就不是关系数据库了。</li><li><code>候选码</code> 如果任意超码的真子集不能包括超码，则称其为候选码；超码包括候选码；</li><li><code>候选码</code> 若关系中的某一属性或属性组的值能唯一的标识一个元组，&gt;    而其任何真子集都不能再标识，则称该属性组为（超级码）候选码。</li><li><code>全码</code> 如果一个码包含了所有的属性，这个码就是全码。</li><li><code>主属性(码属性)</code> 一个属性只要在任何一个候选码中出现过，这个属性就是主属性。</li><li><code>非主属性(非码属性)</code> 与上面相反，没有在任何候选码中出现过，这个属性就是非主属性。</li><li><code>超码</code> 一个或多个属性的集合，这些属性的组合可以使我们在一个实&gt;    体集中唯一的标识一个实体。</li><li><code>外部码</code> 一个属性（或属性组），它不是码，但是它别的表的码，它就是外码。</li></ul><h1 id="范式"><a href="#范式" class="headerlink" title="范式"></a>范式</h1><p>概念<br>(数据库设计范式，数据库的设计范式）是符合某一种级别的关系模式的集合。构造数据库必须遵循一定的规则。在关系数据库中，这种规则就是范式。关系数据库中的关系必须满足一定的要求，即满足不同的范式。</p><p>满足最低要求的范式是第一范式（1NF）。在第一范式的基础上进一步满足更多要求的称为第二范式（2NF），其余范式以次类推。一般说来，数据库只需满足第三范式（3NF）就行了。</p><h2 id="第一范式-1NF"><a href="#第一范式-1NF" class="headerlink" title="第一范式(1NF)"></a>第一范式(1NF)</h2><p>如果一个关系模式R的所有属性都是不可分的基本数据项，则R∈1NF（即R符合第一范式）。简单的说，就是每一个列（属性）只有一个，没有重复。</p><p>特点</p><ul><li>有主键，且主键不能为空。</li><li>字段不能再分。</li></ul><p>要求</p><ul><li>1.必须有主键来加以识别。</li><li>2.每个字段只能存放单一的值并确保有数据没有重复的组。</li></ul><p>例如：</p><table><thead><tr><th align="left">姓名</th><th align="left">班级</th><th align="left">课程</th></tr></thead><tbody><tr><td align="left">小明</td><td align="left">1班</td><td align="left">数学,语文</td></tr><tr><td align="left">小红</td><td align="left">2班</td><td align="left">英语</td></tr><tr><td align="left">小明</td><td align="left">2班</td><td align="left">数学</td></tr></tbody></table><hr><p>里面还有重复组并且没有存放单一的值，并不符合第一范式，给其增加主键学号加以区别：</p><table><thead><tr><th align="left">学号</th><th align="left">姓名</th><th align="left">班级</th><th align="left">课程</th></tr></thead><tbody><tr><td align="left">101</td><td align="left">小明</td><td align="left">1班</td><td align="left">数学</td></tr><tr><td align="left">101</td><td align="left">小明</td><td align="left">1班</td><td align="left">语文</td></tr><tr><td align="left">201</td><td align="left">小红</td><td align="left">2班</td><td align="left">英语</td></tr><tr><td align="left">202</td><td align="left">小明</td><td align="left">2班</td><td align="left">数学</td></tr></tbody></table><hr><h2 id="第二范式-2NF"><a href="#第二范式-2NF" class="headerlink" title="第二范式(2NF)"></a>第二范式(2NF)</h2><p>概念</p><ol><li>首先要满足第一范式。它的规则是要求数据表里的所有数据都要和该数据表的主键有完全依赖关系。</li><li>若关系模式R€1NF，并且每一个 <code>非主属性</code> 都 <code>完全函数依赖</code> 于 R 的 <code>候选吗</code>，则R€2NF。</li></ol><p>判断方法：<br>是否存在某个非主属性，它部分依赖<code>候选码</code>，或者说依赖候选码的一部分，存在则属于2NF。</p><p>特点</p><ol><li>满足第一范式。</li><li>表中的每一个非主属性，必须完全依赖于本表码。</li><li>只有当一个表中，主码由两个或以上的属性组成的时候，才会出现不符合第二范式的情况</li></ol><p>例如有表：</p><p>|货物|供应商ID|供应商|价格|供应商地址|<br>|:—|:—|:—|:—|:—|:—|<br>|毛巾|01|世纪联华|10.0|星光大道|<br>|牙刷|01|世纪联华|5.0|星光大道|<br>|毛巾|02|十足|12.0|月光大道|</p><ul><li>可知，这里的主键有货物和供应商ID，价格和两个主键都有关，可是供应商地址只和供应商ID有依赖关系。那么不符合第二范式，我们可以将其修改为两张表：</li></ul><hr><table><thead><tr><th align="left">供应商ID</th><th align="left">供应商</th><th align="left">供应商地址</th></tr></thead><tbody><tr><td align="left">01</td><td align="left">世纪联华</td><td align="left">星光大道</td></tr><tr><td align="left">02</td><td align="left">十足</td><td align="left">月光大道</td></tr></tbody></table><hr><table><thead><tr><th align="left">货物</th><th align="left">供应商ID</th><th align="left">价格</th></tr></thead><tbody><tr><td align="left">毛巾</td><td align="left">01</td><td align="left">10.0</td></tr><tr><td align="left">牙刷</td><td align="left">01</td><td align="left">5.0</td></tr><tr><td align="left">毛巾</td><td align="left">01</td><td align="left">12.0</td></tr></tbody></table><hr><ul><li>这样就符合了第二范式要求的表内数据和表内主键完全依赖的关系。</li></ul><h2 id="第三范式-3NF"><a href="#第三范式-3NF" class="headerlink" title="第三范式(3NF)"></a>第三范式(3NF)</h2><p>概念</p><ol><li>在第二范式的基础上，要求所有非键属性都只和候选键有相关性，也就是说非键属性之间应该是独立无关的。</li><li>若关系模式R€1NF,并且每一个 <code>非主属性</code> 都<code> 非传递依赖</code> 于 <code>候选码</code>，R€3NF。</li></ol><p>判断方法：</p><p>是否存在某个<code>非主属性</code>，它传递依赖<code>候选码</code>或者函数依赖某个<code>非主属性</code>，存在则不属于3NF，不存在则属于3NF。</p><p>特点：</p><ol><li>满足第二范式。</li><li>非主属性不能传递依赖于码</li></ol><p>从上述表来说，供应商和供应商地址是相关的，知道了供应商也就知道了供应商地址（不考虑一厂多址的情况）。可以分为：</p><table><thead><tr><th align="left">供应商ID</th><th align="left">供应商</th></tr></thead><tbody><tr><td align="left">01</td><td align="left">世纪联华</td></tr><tr><td align="left">02</td><td align="left">十足</td></tr></tbody></table><hr><table><thead><tr><th align="left">供应商ID</th><th align="left">供应商地址</th></tr></thead><tbody><tr><td align="left">01</td><td align="left">星光大道</td></tr><tr><td align="left">02</td><td align="left">月光大道</td></tr></tbody></table><h1 id="BC范式-BCNF"><a href="#BC范式-BCNF" class="headerlink" title="BC范式(BCNF)"></a>BC范式(BCNF)</h1><p>概念</p><ol><li>BCNF是修正的第三范式。</li><li>若关系模式R€1NF，对每个非平凡的函数依赖X–&gt;Y，X一定是<code>超码</code>（具有唯一性）</li></ol><p>判断方法：</p><ol><li>能够找到平凡函数依赖 X—&gt;Y，左边的X不是超码</li><li>BCNF意味着在关系模式中每一个决定因素都包含候选键，也就是说，只要属性或属性组A能够决定任何一个属性B，则A的子集中必须有候选键。BCNF范式排除了任何属性(不光是非主属性，2NF和3NF所限制的都是非主属性)对候选键的传递依赖与部分依赖。</li></ol><p><img src="https://i.loli.net/2018/05/29/5b0d0900efe53.png" alt="例子"></p><dl><dt>要求：</dt><dd>在满足第三范式的基础上，且不允许主键的一部分被另一部分或其它部分决定。</dd></dl><p>特点：</p><ol><li>满足第三范式。</li><li>所有非主属性对每一个码都是完全函数依赖。</li><li>所有的主属性对每一个不包含它的码，也是完全函数依赖。</li><li>没有任何属性完全函数依赖于非码的任何一组属性。</li></ol><hr><p><strong>参考</strong></p><ul><li><a href="https://www.jianshu.com/p/6e8254a99314">转载来源1</a></li><li><a href="http://josh-persistence.iteye.com/blog/2200644">转载来源2</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 函数赖与模式分解</title>
      <link href="/posts/SQLfunDep.html"/>
      <url>/posts/SQLfunDep.html</url>
      
        <content type="html"><![CDATA[<h1 id="函数依赖-Functional-Dependency"><a href="#函数依赖-Functional-Dependency" class="headerlink" title="函数依赖 Functional Dependency"></a>函数依赖 Functional Dependency</h1><p>数据依赖的一种，它反映属性或属性组之间相依存，互相制约的关系，即反映现实世界的约束关系。</p><span id="more"></span><p>定义<br>设R(U)是属性U上的一个关系模式，X和Y均为U&#x3D;{A1，A2，…，An}的子集，r为R的任一关系，如果对于r中的任意两个元组u，v，只要有u[X]&#x3D;v[X]，就有u[Y]&#x3D;v[Y]，则称X函数决定Y，或称Y函数依赖于X，记为X→Y。</p><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(sno-学生ID，tno-教师ID，cno-课程ID，</span><br><span class="line">sname-学生姓名，tname-教师姓名，cname-课程名称，grade-成绩）</span><br><span class="line">sno→sname, cno→cname,(sno,cno)→grade √</span><br><span class="line">sname→sno, tno→cno, sno→tname ×</span><br></pre></td></tr></table></figure><p>函数依赖是语义范畴</p><ol><li>语义：数据所反映的现实世界事物本质联系</li><li>根据语义来确定函数依赖性的存在与否</li><li>函数依赖反映属性之间的一般规律，必须在关系模式下的任一个关系r中都满足约束条件。</li></ol><h1 id="属性间的联系决定函数依赖关系"><a href="#属性间的联系决定函数依赖关系" class="headerlink" title="属性间的联系决定函数依赖关系"></a>属性间的联系决定函数依赖关系</h1><p>例子<br>设X、Y均是U的子集</p><ol><li>X和Y间联系是1:1，则X→Y,Y→X。（相互依赖，可记作X←→Y）</li><li>X和Y间联系是M:1(M)， 则X→Y。</li><li>X和Y间联系是M:N(M,N)，则X、Y间不存在函数依赖。</li></ol><h1 id="完全函数依赖和部分函数依赖"><a href="#完全函数依赖和部分函数依赖" class="headerlink" title="完全函数依赖和部分函数依赖"></a>完全函数依赖和部分函数依赖</h1><p>函数依赖分为完全函数依赖和部分函数依赖</p><p>定义</p><p>在R(U)中，如果X→Y，并且对于X的任何真子集X’都有X’Y’，则称 Y 完全依赖于 X ，记作X→Y；否则，如果X→Y，且X中存在一个真子集X’，使得X’→Y成立，则称 Y 部分依赖 于 X。</p><p>例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">学生ID，学生姓名，所修课程ID，课程名称，成绩</span><br><span class="line">（学生ID，所修课程ID）→成绩</span><br><span class="line">成绩既不能单独依赖于学生ID，也不能单独依赖于所修课程ID，因此成绩完全函数依赖于关键字。</span><br><span class="line">（学生ID，所修课程ID）→学生姓名</span><br><span class="line">学生ID→学生姓名</span><br><span class="line">学生姓名可以依赖于关键字的一个主属性——学生ID，因此学生姓名部分函数依赖于（学生ID，所修课程ID）。</span><br></pre></td></tr></table></figure><h1 id="平凡函数依赖和非平凡函数依赖"><a href="#平凡函数依赖和非平凡函数依赖" class="headerlink" title="平凡函数依赖和非平凡函数依赖"></a>平凡函数依赖和非平凡函数依赖</h1><p>平凡函数依赖</p><p>当关系中属性集合Y是属性集合X的子集时(Y?X)，存在函数依赖X→Y，即一组属性函数决定它的所有子集，这种函数依赖称为 <code>平凡函数依赖</code></p><p>非平凡函数依赖</p><p>当关系中属性集合Y不是属性集合X的子集时，存在函数依赖X→Y，则称这种函数依赖为 <code>非平凡函数依赖</code>。</p><p>设X，Y均为某关系上的属性集，且X→Y</p><ol><li>若Y包含于X，则称X→Y为：平凡函数依赖；(Sno, Cno) → Sno  (Sno, Cno) → Cno</li><li>若Y不包含于X，则称X→Y为：非平凡函数依赖。(Sno, Cno) → Grade<br>Y包含于X内，W于X相交，与Y无直接交集。则：X→Y为平凡函数依赖X→W, W→Y为非平凡函数依赖</li></ol><h1 id="传递函数依赖-X→Y，Y→Z-则Z传递函数依赖于X"><a href="#传递函数依赖-X→Y，Y→Z-则Z传递函数依赖于X" class="headerlink" title="传递函数依赖 X→Y，Y→Z 则Z传递函数依赖于X"></a>传递函数依赖 X→Y，Y→Z 则Z传递函数依赖于X</h1><p>例1<br>设X,Y,Z是关系R中互不相同的属性集合，存在X→Y(Y !→X),Y→Z，则称Z传递函数依赖于X。</p><ul><li>函数依赖<br>设R(U)是一个属性集U上的关系模式，X和Y是U的子集。<br>若对于R(U)的任意一个可能的关系r，r中不可能存在两个元组在X上的属性值相等， 而在Y上的属性值不等， 则称 “X函数确定Y” 或 “Y函数依赖于X”，记作X→Y。<br>X称为这个函数依赖的决定属性集(Determinant)。<br>Y&#x3D;f(x)<ul><li>说明：<ul><li>函数依赖不是指关系模式R的某个或某些关系实例满足的约束条件，而是指R的所有关系实例均要满足的约束条件。</li><li>函数依赖是语义范畴的概念。只能根据数据的语义来确定函数依赖。<br>例如“姓名→年龄”这个函数依赖只有在不允许有同名人的条件下成立</li><li>数据库设计者可以对现实世界作强制的规定。例如规定不允许同名人出现，函数依赖“姓名→年龄”成立。所插入的元组必须满足规定的函数依赖，若发现有同名人存在， 则拒绝装入该元组。</li></ul></li></ul></li></ul><p>例2<br>Student(Sno, Sname, Ssex, Sage, Sdept)</p><ul><li>假设不允许重名，则有:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Sno → Ssex， Sno → Sage , Sno → Sdept，</span><br><span class="line">Sno ←→ Sname, Sname → Ssex， Sname → Sage</span><br><span class="line">Sname → Sdept</span><br><span class="line">但Ssex －\→Sage</span><br><span class="line">若X→Y，并且Y→X, 则记为X←→Y。</span><br><span class="line">若Y不函数依赖于X, 则记为X－\→Y。</span><br></pre></td></tr></table></figure></li><li>在关系模式R(U)中，对于U的子集X和Y，<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">如果X→Y，但Y 不为 X的子集，则称X→Y是非平凡的函数依赖</span><br><span class="line">若X→Y，但Y 为 X的子集, 则称X→Y是平凡的函数依赖</span><br></pre></td></tr></table></figure>例3<br>在关系SC(Sno, Cno, Grade)中</li></ul><ol><li>凡函数依赖:(Sno, Cno) → Grade</li><li>平凡函数依赖：(Sno, Cno) → Sno(Sno, Cno) → Cno</li><li>部分函数依赖：若x-&gt;y 并且，存在X的真子集x1，使得x1-&gt;y,则 y部分依赖于 x。</li><li>完全函数依赖：若x-&gt;y并且，对于x的任何一个真子集x1，都不在x1-&gt;y 则称y完全依赖于x</li></ol><h1 id="传递与直接函数依赖"><a href="#传递与直接函数依赖" class="headerlink" title="传递与直接函数依赖"></a>传递与直接函数依赖</h1><p>概念<br>设有两个非平凡函数依赖 X  → Y，Y → Z，当 X 不依赖于 Y，则称 Z<code> 传递</code>函数依赖于 X。<br>-这里之所以规定” X 不函数依赖于 Y”，是因为当 Y → X 时，X 与 Y 就一一对应了，在这种情况下 Z 就<code>直接</code>函数依赖于 X（而不是我们所说的传递函数依赖）。</p><ul><li>Z 传递函数依赖于 X，表名 Z 间接依赖于 X，从而表明 X 和 Z 之间关联较弱。</li></ul><h1 id="函数依赖的-Armstrong-公理"><a href="#函数依赖的-Armstrong-公理" class="headerlink" title="函数依赖的 Armstrong 公理"></a>函数依赖的 Armstrong 公理</h1><p>无冗余的函数依赖集 和 函数依赖的完备集（闭包）是好的关系设计。由已知的函数依赖集可以推导出 无冗余的函数依赖集 和 函数依赖的完备集（闭包）。</p><h2 id="基本公理和推理规则："><a href="#基本公理和推理规则：" class="headerlink" title="基本公理和推理规则："></a>基本公理和推理规则：</h2><p>基本公理：</p><ul><li><code>自反律</code>如果 Y ∈ X∈ U，则 X → Y 成立。（平凡函数依赖）</li><li><code>增广律</code>如果 X → Y 在 R(U)  成立，且 Z∈ U，则 XZ → XY</li><li><code>传递律</code>如果 X → Y，Y → Z 成立，则 X → Z 成立。</li></ul><p>推理规则：</p><ul><li><code>合并规则</code>{X → Y，X → Z}，则 X → YZ</li><li><code>分解规则</code>{X → Y，Z ∈ Y}，则 X → Z。（或：X → YZ，那么 X → Y，X → Z）</li><li><code>伪传递规则</code> {X → Y,YW → Z}，则 WX → Z</li><li><code>复合规则</code>{X → Y，W → Z},则 XW → YZ</li><li><code>自积律规则</code>{X → YZ，Z → W}，则 X → YZW</li></ul><h2 id="属性闭包"><a href="#属性闭包" class="headerlink" title="属性闭包"></a>属性闭包</h2><p>概念</p><p>设 F 是属性集合 U 上的一个函数依赖集，X ∈ U，称 X+ &#x3D; { A|:A∈U,X → A 由 F 按照 Armstrong 公理系统推导得到 } 为属性集的 x 关于 F 的闭包。</p><p>例子：<br>设有关系模式 R（U，F），U &#x3D; ABC，F&#x3D;{A→B，B → C}，则有 A 的闭包 A+ &#x3D; ABC，B+&#x3D;BC，C+&#x3D;C。</p><p>函数依赖闭包和属性集闭包</p><p>一般来说，我们很少会求函数依赖闭包，因为这样会产生大量“无意义”或者意义不大的函数依赖。多数时候，我们关心的只是 F+ 的一个子集，常常伴随的问题是某函数依赖 X → Y 是否在 F+中。而求解这个问题的解决方式，通常是求在 F 下，属性集合 X 的闭包 X+（至于其证明，有兴趣的可以查阅一下相关资料）。</p><ul><li>如何求解 X 的属性闭包：<ul><li>设置初始值：令X(0) &#x3D; ?，X(1)&#x3D; X，F’&#x3D;?。</li><li>若X(0)≠X(1),令 X(0)&#x3D;X(1)。否则转向 4）。</li></ul></li><li>构造函数依赖集合 F’&#x3D;{Y→Z | (Y→Z)∈F∩Y∈X(1)}，令 F &#x3D; F – F’,对于其中的每个函数依赖 Y→Z，令X(1) &#x3D; X(1)∪Z，转向 2）。<ul><li>输出 X(1),它就是X+</li></ul></li></ul><h1 id="最小函数依赖集"><a href="#最小函数依赖集" class="headerlink" title="最小函数依赖集"></a>最小函数依赖集</h1><p>概念<br>对于函数集 F ，称函数集Fmin 为F 的最小函数依赖集，如果 Fmin满足一下条件：</p><ol><li>Fmin与 F等价：Fmin+&#x3D;F+。</li><li>Fmin中每个函数依赖 X→Y 的依赖因素为单元素集，即Y中只含有一个属性集合。</li><li>Fmin中每个函数依赖 X→Y的决定因素不存在冗余，即既要删除X中任何一个属性，就会改变Fmin的闭包。</li><li>Fmin中每个函数毒不是冗余的，即删除 Fmin 中任意一个函数依赖，就会改变Fmin 的闭包。</li></ol><h1 id="无损分解"><a href="#无损分解" class="headerlink" title="无损分解"></a>无损分解</h1><p>概念</p><p>无损分解指的是对关系模式分解时，原关系模型下任一合法的关系值在分解之后应能通过自然联接运算恢复起来。反之，则称为有损分解。</p><p>这里解释一下：“损”代表了信息的丢失的丢失，可能发生的情况是：分解后的关系模式通过自然连接合并，原有元组丢失或增加了无意义的元组，此情况记为“损”。在实际应用当中，我们希望通过自然连接之后可恢复原有关系模式，既不减少也不增加新的元组。那如何才可以做到无损分解呢？？答案是：保持原有关系模式的函数依赖</p><p>保持函数依赖的分解</p><h2 id="分解需要保持函数依赖，因为-F-中每一个函数依赖都代表数据库的一个约束。如果模式分解不保持函数依赖，那在模式分解中就会丢失一些函数依赖。注意：这里保持原有的函数依赖，包括了通过原有函数依赖推到出来的函数依赖，可以理解为保持原有函数的-F"><a href="#分解需要保持函数依赖，因为-F-中每一个函数依赖都代表数据库的一个约束。如果模式分解不保持函数依赖，那在模式分解中就会丢失一些函数依赖。注意：这里保持原有的函数依赖，包括了通过原有函数依赖推到出来的函数依赖，可以理解为保持原有函数的-F" class="headerlink" title="分解需要保持函数依赖，因为 F 中每一个函数依赖都代表数据库的一个约束。如果模式分解不保持函数依赖，那在模式分解中就会丢失一些函数依赖。注意：这里保持原有的函数依赖，包括了通过原有函数依赖推到出来的函数依赖，可以理解为保持原有函数的 F+"></a>分解需要保持函数依赖，因为 F 中每一个函数依赖都代表数据库的一个约束。如果模式分解不保持函数依赖，那在模式分解中就会丢失一些函数依赖。注意：这里保持原有的函数依赖，包括了通过原有函数依赖推到出来的函数依赖，可以理解为保持原有函数的 F+</h2><p><strong>Via</strong></p><ul><li><a href="http://www.cnblogs.com/ndxsdhy/archive/2010/12/21/1913123.html">源地址</a></li><li><a href="http://blog.51cto.com/peiquan/1425012">函数依赖与模式分解</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 授权</title>
      <link href="/posts/SQLgrant.html"/>
      <url>/posts/SQLgrant.html</url>
      
        <content type="html"><![CDATA[<p> SQL授权</p><span id="more"></span><h1 id="授权命令"><a href="#授权命令" class="headerlink" title="授权命令"></a>授权命令</h1><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="operator">&lt;</span>权限名<span class="operator">&gt;</span>[ ,<span class="operator">&lt;</span>权限名<span class="operator">&gt;</span>] <span class="keyword">on</span> <span class="operator">&lt;</span>对象<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">to</span> 用户<span class="number">1</span>,用户<span class="number">2</span>,... <span class="operator">|</span> public [<span class="keyword">with</span> <span class="keyword">grant</span> option]</span><br></pre></td></tr></table></figure><ul><li>对应不同对象,有不可权限,代表不同的操作(语句)。<br>  注音: All Privileges–對象上的所有权限的总和。</li><li>public –表示所有用户</li><li>指定With grant option时,用户可以获得的权限转受给其他用户;否則,用户只能使用而不能转受。</li><li>SQL 标准允许具有with grant option 的用户把相应的权限或其子集传递授予其他用户,但不允许循环授权,即被授权者不能把权限再授回给授权者或其祖先.</li></ul><p>DBA 执行了如下语句:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span>, <span class="keyword">update</span> <span class="keyword">on</span> Student <span class="keyword">to</span> Liming</span><br><span class="line"><span class="keyword">with</span> <span class="keyword">grant</span> option</span><br></pre></td></tr></table></figure><ul><li>则 <code>DBA</code> 把对 <code>Student</code> (基本表或视图)的权限赋给用户 Liming,因为有<code>with grant option</code>,所以 Lining 可以把这个权限再转授给其他用户。</li></ul><p>用户 Liming 执行了如下语句:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span>(Sno, Sname), <span class="keyword">update</span> (Sname)</span><br><span class="line"><span class="keyword">on</span> Student <span class="keyword">to</span> U5</span><br></pre></td></tr></table></figure><ul><li>则 <code>Liming</code> 把对 <code>Student</code> 上某些列的权限赋给用户<code> U5</code>,但 U5不可以把这个权限再转授给其他用户。</li></ul><p>DBA 对表查询的权限授予所有用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">on</span> SC <span class="keyword">to</span> public</span><br></pre></td></tr></table></figure><p>Grant 还可以实现数据库类型和模式类型权限管理,格式如下:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> 权限名[,...] <span class="keyword">to</span> user1,user2,...</span><br><span class="line"><span class="operator">|</span> public[<span class="keyword">with</span> <span class="keyword">grant</span> option]</span><br></pre></td></tr></table></figure><p>授予用户 Liming 具有创建数据表和图的权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="keyword">table</span>, <span class="keyword">create</span> <span class="keyword">view</span> <span class="keyword">to</span> Liming</span><br></pre></td></tr></table></figure><h1 id="收回权限"><a href="#收回权限" class="headerlink" title="收回权限"></a>收回权限</h1><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">revoke</span> 权限名[ ,…] <span class="keyword">on</span> 对象 form</span><br><span class="line">用户<span class="number">1</span>,用户<span class="number">2</span>,… <span class="operator">|</span> public</span><br></pre></td></tr></table></figure><ul><li>收回权限时,若该用户已将权限转授给其他用户，则这些转受的权限也一并收回。</li></ul><p>DBA 执行以下语句:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">revoke</span> <span class="keyword">update</span> <span class="keyword">on</span> Student <span class="keyword">from</span> Liming</span><br></pre></td></tr></table></figure><ul><li>DBA 回收用户<code> Liming</code> 的对<code> Student</code> 的更新权限.理论上，Liming转受给用户U5的对Student某些列的更新权限也一并收回udent 某些列的更新权限也要一并收回</li></ul><p>收回所有用户对表 SC 的查询权</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Revoke</span> <span class="keyword">select</span> <span class="keyword">on</span> SC <span class="keyword">from</span> public</span><br></pre></td></tr></table></figure><ul><li><code>revoke</code>还可以实现数据库类型和模式类型权限收回,格式如下</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">revoke</span> 权限名[ ,…] <span class="keyword">from</span> 用户<span class="number">1</span>,用户<span class="number">2</span>,... <span class="operator">|</span> public</span><br></pre></td></tr></table></figure><p>收回Liming 创建表的权限。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Revoke</span> <span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">from</span> Liming</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 存储过程</title>
      <link href="/posts/SQLprocedure.html"/>
      <url>/posts/SQLprocedure.html</url>
      
        <content type="html"><![CDATA[<h2 id="SQL存储过程建立引用"><a href="#SQL存储过程建立引用" class="headerlink" title="SQL存储过程建立引用"></a>SQL存储过程<br><span id="more"></span><br>建立<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> lianxi66</span><br><span class="line"><span class="variable">@arel</span> <span class="type">char</span>(<span class="number">20</span>)</span><br><span class="line"><span class="variable">@x1</span> <span class="type">int</span> output,<span class="variable">@x2</span> <span class="type">float</span> output</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="variable">@x1</span><span class="operator">=</span><span class="built_in">count</span>(<span class="operator">*</span>),<span class="variable">@x2</span><span class="operator">=</span><span class="built_in">avg</span>(年龄)</span><br><span class="line"><span class="keyword">from</span> S</span><br><span class="line"><span class="keyword">where</span> 所在系<span class="operator">=</span><span class="variable">@arel</span></span><br></pre></td></tr></table></figure><br>引用<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">declare @ok int, @ck float</span><br><span class="line">exec lianxi66 &quot;会计系&quot;,@ok output,@ck output</span><br><span class="line">print @ok</span><br><span class="line">print @ck</span><br></pre></td></tr></table></figure></h2><h2 id="建立引用"><a href="#建立引用" class="headerlink" title="建立引用"></a>建立<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> lianxi3511</span><br><span class="line"></span><br><span class="line"><span class="variable">@varl</span> <span class="type">char</span>(<span class="number">10</span>), <span class="variable">@var3</span> <span class="type">int</span> output</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="variable">@var3</span><span class="operator">=</span>S.年龄</span><br><span class="line">frоm ѕ</span><br><span class="line"><span class="keyword">where</span> s.学号<span class="operator">=</span><span class="variable">@varl</span></span><br></pre></td></tr></table></figure><br>引用<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Declare</span> <span class="variable">@res</span> <span class="type">int</span></span><br><span class="line"><span class="keyword">Execute</span> liarixi3511 <span class="string">&#x27;101101&#x27;</span>, <span class="variable">@res</span> output</span><br><span class="line">Print <span class="variable">@res</span></span><br></pre></td></tr></table></figure></h2><h2 id="建立引用-1"><a href="#建立引用-1" class="headerlink" title="建立引用"></a>建立<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> lianxi2511</span><br><span class="line"><span class="variable">@var1</span> <span class="type">int</span>, <span class="variable">@var2</span> <span class="type">int</span>, var3 <span class="type">int</span> output</span><br><span class="line"><span class="keyword">As</span></span><br><span class="line"><span class="keyword">Set</span> <span class="variable">@var3</span> <span class="operator">=</span> <span class="variable">@vari</span><span class="operator">*</span><span class="variable">@var2</span></span><br></pre></td></tr></table></figure><br>引用<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Declare</span> <span class="variable">@res</span> <span class="type">int</span></span><br><span class="line"><span class="keyword">Execute</span> liarxi2511 <span class="number">5</span>, <span class="number">7</span>, <span class="variable">@res</span> output</span><br><span class="line">Print <span class="variable">@res</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">exec</span> liarxi2511 <span class="number">3</span>,<span class="number">4</span></span><br></pre></td></tr></table></figure></h2><h2 id="建立引用-2"><a href="#建立引用-2" class="headerlink" title="建立引用"></a>建立<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> lianxi1511</span><br><span class="line"><span class="variable">@student_no</span> <span class="type">char</span> (<span class="number">10</span>),</span><br><span class="line"><span class="variable">@course_no</span> <span class="type">char</span> (<span class="number">20</span>)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> S.姓名, S.学号,SC.课程号,C.课程名, SC.成绩</span><br><span class="line"><span class="keyword">FROM</span> S <span class="keyword">JOIN</span> SC  <span class="keyword">ON</span> S.学号<span class="operator">=</span>SC.学号</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> C  <span class="keyword">ON</span> C.课程号<span class="operator">=</span>SC.课程号</span><br><span class="line"><span class="keyword">WHERE</span> S.学号<span class="operator">=</span><span class="variable">@student_no</span></span><br><span class="line">ANO SC.课程号<span class="operator">=</span><span class="variable">@course_no</span></span><br></pre></td></tr></table></figure><br>引用<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exec</span> lianxi1511 <span class="string">&#x27;101101&#x27;</span>,<span class="string">&#x27;101&#x27;</span></span><br></pre></td></tr></table></figure></h2><h1 id="习题"><a href="#习题" class="headerlink" title="习题"></a>习题</h1><h2 id="若输入的学号存在则删除-创建-引用与验证-存储过程使用事务实例"><a href="#若输入的学号存在则删除-创建-引用与验证-存储过程使用事务实例" class="headerlink" title="若输入的学号存在则删除- 创建- 引用与验证# 存储过程使用事务实例"></a>若输入的学号存在则删除<br>- 创建<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> del_cno1</span><br><span class="line"><span class="variable">@cno</span> <span class="type">char</span>(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">begin</span> tran t1 <span class="comment">--事件t1开始</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> kcgx  <span class="keyword">where</span> 课程号<span class="operator">=</span><span class="variable">@cno</span></span><br><span class="line">if <span class="keyword">exists</span> (<span class="keyword">select</span>  <span class="operator">*</span> <span class="keyword">from</span> xkgx <span class="keyword">where</span> 课程号<span class="operator">=</span><span class="variable">@cno</span>)</span><br><span class="line"><span class="keyword">rollback</span> tran t1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">commit</span> tran t1</span><br></pre></td></tr></table></figure><br>- 引用与验证<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exec</span> del_cno1 <span class="string">&#x27;305&#x27;</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> xkgx</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> kcgx</span><br></pre></td></tr></table></figure><br># 存储过程使用事务<br>实例<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Create</span> <span class="keyword">Procedure</span>  MyProcedure</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">Begin</span></span><br><span class="line"><span class="keyword">Set</span>    NOCOUNT    <span class="keyword">ON</span>;</span><br><span class="line"><span class="keyword">Set</span> XACT_ABORT <span class="keyword">ON</span>;</span><br><span class="line"><span class="keyword">begin</span>   tran  ok  <span class="comment">--开始一个事务OK</span></span><br><span class="line"><span class="keyword">delete</span>  <span class="keyword">from</span>  rxqz  <span class="keyword">where</span> qz<span class="operator">=</span>   <span class="string">&#x27;rx015 &#x27;</span> <span class="comment">--删除数据</span></span><br><span class="line">save   tran  bcd   <span class="comment">--保存一个事务点命名为bcd</span></span><br><span class="line"><span class="keyword">update</span>  sz  <span class="keyword">set</span>   name<span class="operator">=</span><span class="string">&#x27;李丽s&#x27;</span> <span class="keyword">where</span> name<span class="operator">=</span> <span class="string">&#x27;李丽&#x27;</span><span class="comment">--修改数据</span></span><br><span class="line">if  @<span class="variable">@error</span><span class="operator">&lt;&gt;</span><span class="number">0</span>  <span class="comment">--判断修改数据有没有出错</span></span><br><span class="line"><span class="keyword">begin</span> <span class="comment">--如果出错</span></span><br><span class="line"><span class="keyword">rollback</span>   tran  bcd  <span class="comment">-- 回滚事务到BCD 的还原点</span></span><br><span class="line"><span class="keyword">commit</span>   tran  ok  <span class="comment">--提交事务</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span>  <span class="comment">--没有出错</span></span><br><span class="line"><span class="keyword">commit</span>  tran ok <span class="comment">--提交事务</span></span><br><span class="line"><span class="keyword">End</span></span><br></pre></td></tr></table></figure></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> proc <span class="number">1</span></span><br><span class="line"><span class="variable">@si</span> chark20),<span class="variable">@pi</span> <span class="type">char</span>(<span class="number">20</span>),<span class="variable">@Ji</span> chark20),<span class="variable">@shu</span> <span class="type">int</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SPJ <span class="keyword">values</span>(<span class="variable">@si</span>,<span class="variable">@pi</span>,<span class="variable">@Ji</span>,<span class="variable">@shu</span>)</span><br><span class="line">bdgin tran t1</span><br><span class="line">if <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> p <span class="keyword">where</span> Pno<span class="operator">=</span><span class="variable">@Pi</span>)</span><br><span class="line"><span class="keyword">commit</span> tran t1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">rollback</span> tran t1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 级联</title>
      <link href="/posts/SQLconstraints.html"/>
      <url>/posts/SQLconstraints.html</url>
      
        <content type="html"><![CDATA[<p>SQL级联</p><span id="more"></span><h1 id="主键约束"><a href="#主键约束" class="headerlink" title="主键约束"></a>主键约束</h1><p>在创建表的时候创建主键约束。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> customer(</span><br><span class="line">customerld <span class="type">int</span> <span class="keyword">identity</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">primary</span> key,  <span class="comment">--创建主键约</span></span><br><span class="line">CustomerName nvarchar(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span>)</span><br></pre></td></tr></table></figure><p>在已存在的表上创建主键约</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> person</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> PK_Employee_Id  <span class="comment">--约束名称</span></span><br><span class="line"><span class="keyword">primary</span> key(personld) <span class="comment">--personld 字段名</span></span><br></pre></td></tr></table></figure><h1 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h1><p>创建表的时候创建外</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> orders (</span><br><span class="line">orderld <span class="type">int</span> <span class="keyword">identity</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">primary</span> key,</span><br><span class="line">customerld <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">foreign</span> key <span class="keyword">references</span> customer(customerid)</span><br><span class="line"><span class="comment">--约束类型-外键引用表(例名)</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>在已存在的表中添加一个外键</p><p>假设上面的代码去掉了添加外键行,那么可以书写代码如下:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> orders</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> FK_Orders_Customerld</span><br><span class="line"><span class="keyword">foreign</span> key(customerid)  <span class="keyword">references</span> customer(customerld)</span><br><span class="line"><span class="comment">--外键约束, 外键列名, 被引用列名</span></span><br></pre></td></tr></table></figure><h1 id="级联动"><a href="#级联动" class="headerlink" title="级联动"></a>级联动</h1><h2 id="语法-CHECK约束语法-如果此时视-添加一条不满足的记录-将报如下错误"><a href="#语法-CHECK约束语法-如果此时视-添加一条不满足的记录-将报如下错误" class="headerlink" title="语法# CHECK约束语法- 如果此时视,添加一条不满足的记录,将报如下错误:"></a>语法<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> orders</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> FK_Orders_Customerld  <span class="comment">--添加约束 名称</span></span><br><span class="line"><span class="keyword">foreign</span> key (customerid) <span class="keyword">references</span> customer(customerld)</span><br><span class="line"><span class="comment">--外揵约束, 外键列名 被引用 列名</span></span><br><span class="line"><span class="keyword">on</span> <span class="keyword">update</span> <span class="keyword">no</span> action <span class="comment">--默认 修改时不级联更新子表</span></span><br><span class="line"><span class="keyword">on</span> <span class="keyword">delete</span> cascade   <span class="comment">--删除时級联删除依赖行</span></span><br></pre></td></tr></table></figure><br># CHECK约束<br>语法<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> Account</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> CN_AccountAge</span><br><span class="line"><span class="keyword">check</span> (Account_Age<span class="operator">&gt;</span><span class="number">18</span>)</span><br><span class="line"><span class="comment">--插入年龄必须大于18</span></span><br></pre></td></tr></table></figure><br>- 如果此时视,添加一条不满足的记录,将报如下错误:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Account <span class="keyword">values</span> (<span class="number">22</span>,<span class="string">&#x27;洪&#x27;</span>,<span class="string">&#x27;17&#x27;</span>)</span><br></pre></td></tr></table></figure></h2><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> Aocount</span><br><span class="line"><span class="keyword">WITH</span> NOCHECK</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> CN_AccountAge18</span><br><span class="line"><span class="keyword">check</span></span><br><span class="line">(Account_Age<span class="operator">&gt;</span><span class="number">18</span>)</span><br><span class="line"><span class="comment">--插入年龄心须大于18</span></span><br></pre></td></tr></table></figure></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span> tran</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> s <span class="keyword">with</span>(holdlock) <span class="comment">--holdlock人为加锁</span></span><br><span class="line"><span class="keyword">where</span> 学号<span class="operator">=</span><span class="string">&#x27;001&#x27;</span></span><br><span class="line">waitfor delay<span class="string">&#x27;00 00:35&#x27;</span> <span class="comment">--等待秒</span></span><br><span class="line"><span class="keyword">commit</span> tran</span><br><span class="line"><span class="keyword">update</span> s <span class="keyword">set</span> 姓名<span class="operator">=</span><span class="string">&#x27;平安夜&#x27;</span></span><br><span class="line"><span class="keyword">where</span>  学号<span class="operator">=</span><span class="string">&#x27;001&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BaiduPCS-Go</title>
      <link href="/posts/BaiduPCS-Go.html"/>
      <url>/posts/BaiduPCS-Go.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>BaiduPCS-Go 为仿 Linux shell文件处理命令的百度网盘命令行客户端</p></blockquote><span id="more"></span><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ul><li><a href="https://github.com/iikira/BaiduPCS-Go/releases">Github Release</a>选择自己系统平台版本</li><li>参考项目 <a href="https://github.com/iikira/BaiduPCS-Go/wiki">wiki</a> 安装即可</li></ul><h1 id="运行登录"><a href="#运行登录" class="headerlink" title="运行登录"></a>运行登录</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd BaiduPCS-Go</span><br><span class="line">./BaiduPCS-Go</span><br><span class="line">login</span><br></pre></td></tr></table></figure><h1 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d 文件名</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSH 的使用</title>
      <link href="/posts/SSH.html"/>
      <url>/posts/SSH.html</url>
      
        <content type="html"><![CDATA[<p>SSH的简单运用</p><span id="more"></span><h1 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h1><p>SSH 登录远程主机 host</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@host</span><br></pre></td></tr></table></figure><ul><li>本地用户名与远程用户名一致，登录时可以省略用户名。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh host</span><br></pre></td></tr></table></figure><ul><li>SSH 的默认端口是22，也就是说，你的登录请求会送进远程主机的22端口。使用p参数，可以修改这个端口。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2222 root@host</span><br></pre></td></tr></table></figure><h1 id="公钥登录"><a href="#公钥登录" class="headerlink" title="公钥登录"></a>公钥登录</h1><p>ssh-keygen 生成公钥</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><ul><li>运行结束以后，在<code>$HOME/.ssh/</code>目录下，会新生成两个文件 <code>id_rsa.pub</code>和<code>id_rsa</code>。前者是你的公钥，后者是你的私钥。</li><li>将公钥传送到远程主机 host 上面</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id user@host</span><br></pre></td></tr></table></figure><ul><li>如果还是不行，就打开远程主机的<code>/etc/ssh/sshd_config</code>这个文件，检查下面几行前面”#”注释是否取掉。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">AuthorizedKeysFile .ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>重启远程主机的 ssh 服务</p><ul><li>Ubuntu系统</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service ssh restart</span><br></pre></td></tr></table></figure><ul><li>Debian 系统</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/ssh restart</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Termux </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 约束</title>
      <link href="/posts/SQLconstraint.html"/>
      <url>/posts/SQLconstraint.html</url>
      
        <content type="html"><![CDATA[<p>SQL：约束</p><span id="more"></span><h1 id="UNIQUE-约束"><a href="#UNIQUE-约束" class="headerlink" title="UNIQUE 约束"></a>UNIQUE 约束</h1><p>各约束意义</p><ul><li><code>UNIQUE</code>约束唯一标识数据库表中的每条记录。</li><li><code>UNIQUE</code>和<code>PRIMARY KEY</code>约束均为列或列集合提供了唯一性的保证。</li><li><code>PRIMARY KEY</code>约束拥有自动定义的 UNIQUE 约束。</li><li>请注意，每个表可以有多个 UNIQUE 约束，但是每个表只能有一个 PRIMARY KEY 约束。</li></ul><h2 id="CREATE-TABLE-时的-UNIQUE-约束"><a href="#CREATE-TABLE-时的-UNIQUE-约束" class="headerlink" title="CREATE TABLE 时的 UNIQUE 约束"></a>CREATE TABLE 时的 UNIQUE 约束</h2><ul><li>在 “Persons” 表创建时在 “P_Id” 列上创建 UNIQUE 约束</li><li>MySQL</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">UNIQUE</span> (P_Id)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>SQL Server&#x2F;Oracle&#x2F;MS Access</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="命名-UNIQUE-约束，并定义多个列的-UNIQUE-约束"><a href="#命名-UNIQUE-约束，并定义多个列的-UNIQUE-约束" class="headerlink" title="命名 UNIQUE 约束，并定义多个列的 UNIQUE 约束"></a>命名 UNIQUE 约束，并定义多个列的 UNIQUE 约束</h2><ul><li>MySQL&#x2F;SQL Server&#x2F;Oracle&#x2F;MS Access</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> uc_PersonID <span class="keyword">UNIQUE</span> (P_Id,LastName)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="ALTER-TABLE-时的-UNIQUE-约束"><a href="#ALTER-TABLE-时的-UNIQUE-约束" class="headerlink" title="ALTER TABLE 时的 UNIQUE 约束"></a>ALTER TABLE 时的 UNIQUE 约束</h2><p>语法</p><ul><li>当表已被创建时，如需在 “P_Id” 列创建 UNIQUE 约束</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">UNIQUE</span> (P_Id)</span><br></pre></td></tr></table></figure><h2 id="如需命名-UNIQUE-约束，并添加-UNIQUE-约束，"><a href="#如需命名-UNIQUE-约束，并添加-UNIQUE-约束，" class="headerlink" title="如需命名 UNIQUE 约束，并添加 UNIQUE 约束，"></a>如需命名 UNIQUE 约束，并添加 UNIQUE 约束，</h2><p>语法</p><p>MySQL &#x2F; SQL Server &#x2F; Oracle &#x2F; MS Access：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> uc_PersonID <span class="keyword">UNIQUE</span> (P_Id,LastName)</span><br></pre></td></tr></table></figure><h2 id="撤销-UNIQUE-约束"><a href="#撤销-UNIQUE-约束" class="headerlink" title="撤销 UNIQUE 约束"></a>撤销 UNIQUE 约束</h2><p>撤销 UNIQUE 约束<br>MySQL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">DROP</span> INDEX uc_PersonID</span><br></pre></td></tr></table></figure><p>SQL Server &#x2F; Oracle &#x2F; MS Access：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> uc_PersonID</span><br></pre></td></tr></table></figure><h1 id="PRIMARY-KEY-约束"><a href="#PRIMARY-KEY-约束" class="headerlink" title="PRIMARY KEY 约束"></a>PRIMARY KEY 约束</h1><p>PRIMARY KEY 约束唯一标识数据库表中的每条记录。</p><ul><li>主键必须包含唯一的值。</li><li>主键列不能包含 NULL 值。</li><li>每个表都应该有一个主键，并且每个表只能有一个主键。</li></ul><h2 id="CREATE-TABLE-时的-PRIMARY-KEY-约束"><a href="#CREATE-TABLE-时的-PRIMARY-KEY-约束" class="headerlink" title="CREATE TABLE 时的 PRIMARY KEY 约束"></a>CREATE TABLE 时的 PRIMARY KEY 约束</h2><p>下面的 SQL 在 “Persons” 表创建时在 “P_Id” 列上创建 PRIMARY KEY 约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (P_Id)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>SQL Server &#x2F; Oracle &#x2F; MS Access</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>如需命名 PRIMARY KEY 约束，并定义多个列的 PRIMARY KEY 约束</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> pk_PersonID <span class="keyword">PRIMARY</span> KEY (P_Id,LastName)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>注释：在上面的实例中，只有一个主键 PRIMARY KEY（pk_PersonID）。然而，pk_PersonID 的值是由两个列（P_Id 和 LastName）组成的。</li></ul><h2 id="ALTER-TABLE-时的-PRIMARY-KEY-约束"><a href="#ALTER-TABLE-时的-PRIMARY-KEY-约束" class="headerlink" title="ALTER TABLE 时的 PRIMARY KEY 约束"></a>ALTER TABLE 时的 PRIMARY KEY 约束</h2><ul><li>当表已被创建时，如需在 “P_Id” 列创建 PRIMARY KEY 约束</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">PRIMARY</span> KEY (P_Id)</span><br></pre></td></tr></table></figure><ul><li>如需命名 PRIMARY KEY 约束，并定义多个列的 PRIMARY KEY 约束</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> pk_PersonID <span class="keyword">PRIMARY</span> KEY (P_Id,LastName)</span><br></pre></td></tr></table></figure><p>注释：如果您使用 ALTER TABLE 语句添加主键，必须把主键列声明为不包含 NULL 值（在表首次创建时）。</p><h2 id="撤销-PRIMARY-KEY-约束"><a href="#撤销-PRIMARY-KEY-约束" class="headerlink" title="撤销 PRIMARY KEY 约束"></a>撤销 PRIMARY KEY 约束</h2><p>MySQL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PRIMARY</span> KEY</span><br></pre></td></tr></table></figure><p>SQL Server &#x2F; Oracle &#x2F; MS Access</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> pk_PersonID</span><br></pre></td></tr></table></figure><h1 id="FOREIGN-KEY-约束"><a href="#FOREIGN-KEY-约束" class="headerlink" title="FOREIGN KEY 约束"></a>FOREIGN KEY 约束</h1><p>一个表中的 FOREIGN KEY 指向另一个表中的 PRIMARY KEY。</p><h2 id="解释外键"><a href="#解释外键" class="headerlink" title="解释外键"></a>解释外键</h2><table><thead><tr><th align="left">P_Id</th><th align="left">LastName</th><th align="left">FirstName</th><th align="left">Address</th><th align="left">City</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">Hansen</td><td align="left">Ola</td><td align="left">Timoteivn</td><td align="left">10</td></tr><tr><td align="left">2</td><td align="left">Svendson</td><td align="left">Tove</td><td align="left">Borgvn</td><td align="left">23</td></tr><tr><td align="left">3</td><td align="left">Pettersen</td><td align="left">Kari</td><td align="left">Storgt</td><td align="left">20</td></tr></tbody></table><p>“Orders” </p><table><thead><tr><th align="left">O_Id</th><th align="left">OrderNo</th><th align="left">P_Id</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">77895</td><td align="left">3</td></tr><tr><td align="left">2</td><td align="left">44678</td><td align="left">3</td></tr><tr><td align="left">3</td><td align="left">22456</td><td align="left">2</td></tr><tr><td align="left">4</td><td align="left">24562</td><td align="left">1</td></tr></tbody></table><ul><li>请注意，”Orders” 表中的 “P_Id” 列指向 “Persons” 表中的 “P_Id” 列。</li><li>“Persons” 表中的 “P_Id” 列是 “Persons” 表中的 PRIMARY KEY。</li><li>“Orders” 表中的 “P_Id” 列是 “Orders” 表中的 FOREIGN KEY。</li></ul><h2 id="FOREIGN-KEY-约束用于预防破坏表之间连接的行为。"><a href="#FOREIGN-KEY-约束用于预防破坏表之间连接的行为。" class="headerlink" title="FOREIGN KEY 约束用于预防破坏表之间连接的行为。"></a>FOREIGN KEY 约束用于预防破坏表之间连接的行为。</h2><p>作用: FOREIGN KEY 约束也能防止非法数据插入外键列，因为它必须是它指向的那个表中的值之一。</p><ul><li>CREATE TABLE 时的 FOREIGN KEY 约束<br>下面的 SQL 在 “Orders” 表创建时在 “P_Id” 列上创建 FOREIGN KEY 约束：</li></ul><p>MySQL：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line">(</span><br><span class="line">O_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">OrderNo <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">P_Id <span class="type">int</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (O_Id),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (P_Id) <span class="keyword">REFERENCES</span> Persons(P_Id)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>SQL Server &#x2F; Oracle &#x2F; MS Access：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line">(</span><br><span class="line">O_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">OrderNo <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">FOREIGN</span> KEY <span class="keyword">REFERENCES</span> Persons(P_Id)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>如需命名 FOREIGN KEY 约束，并定义多个列的 FOREIGN KEY 约束</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line">(</span><br><span class="line">O_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">OrderNo <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">P_Id <span class="type">int</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (O_Id),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_PerOrders <span class="keyword">FOREIGN</span> KEY (P_Id)</span><br><span class="line"><span class="keyword">REFERENCES</span> Persons(P_Id)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>ALTER TABLE 时的 FOREIGN KEY 约束</p><ul><li>当 “Orders” 表已被创建时，如需在 “P_Id” 列创建 FOREIGN KEY 约束</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">FOREIGN</span> KEY (P_Id)</span><br><span class="line"><span class="keyword">REFERENCES</span> Persons(P_Id)</span><br></pre></td></tr></table></figure><ul><li>如需命名 FOREIGN KEY 约束，并定义多个列的 FOREIGN KEY 约束</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> fk_PerOrders</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (P_Id)</span><br><span class="line"><span class="keyword">REFERENCES</span> Persons(P_Id)</span><br></pre></td></tr></table></figure><h2 id="撤销-FOREIGN-KEY-约束"><a href="#撤销-FOREIGN-KEY-约束" class="headerlink" title="撤销 FOREIGN KEY 约束"></a>撤销 FOREIGN KEY 约束</h2><p>撤销 FOREIGN KEY 约束：</p><ul><li>MySQL</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">FOREIGN</span> KEY fk_PerOrders</span><br></pre></td></tr></table></figure><ul><li>SQL Server &#x2F; Oracle &#x2F; MS Access<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> fk_PerOrders</span><br></pre></td></tr></table></figure></li></ul><h1 id="CHECK-约束"><a href="#CHECK-约束" class="headerlink" title="CHECK 约束"></a>CHECK 约束</h1><p>范围及作用</p><ul><li>CHECK 约束用于限制列中的值的范围。</li><li>如果对单个列定义 CHECK 约束，那么该列只允许特定的值。</li><li>如果对一个表定义 CHECK 约束，那么此约束会基于行中其他列的值在特定的列中对值进行限制。</li></ul><p>CREATE TABLE 时的 CHECK 约束</p><ul><li><p>下面的 SQL 在 “Persons” 表创建时在 “P_Id” 列上创建 CHECK 约束。CHECK 约束规定 “P_Id” 列必须只包含大于 0 的整数。</p></li><li><p>MySQL</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">CHECK</span> (P_Id<span class="operator">&gt;</span><span class="number">0</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>SQL Server &#x2F; Oracle &#x2F; MS Access：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">CHECK</span> (P_Id<span class="operator">&gt;</span><span class="number">0</span>),</span><br><span class="line">LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>如需命名 CHECK 约束，并定义多个列的 CHECK 约束</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> chk_Person <span class="keyword">CHECK</span> (P_Id<span class="operator">&gt;</span><span class="number">0</span> <span class="keyword">AND</span> City<span class="operator">=</span><span class="string">&#x27;Sandnes&#x27;</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>ALTER TABLE 时的 CHECK 约束</p><ul><li>当表已被创建时，如需在 “P_Id” 列创建 CHECK 约束，请使用下面的 SQL</li></ul><p>MySQL &#x2F; SQL Server &#x2F; Oracle &#x2F; MS Access:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CHECK</span> (P_Id<span class="operator">&gt;</span><span class="number">0</span>)</span><br></pre></td></tr></table></figure><ul><li>如需命名 CHECK 约束，并定义多个列的 CHECK 约束</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> chk_Person <span class="keyword">CHECK</span> (P_Id<span class="operator">&gt;</span><span class="number">0</span> <span class="keyword">AND</span> City<span class="operator">=</span><span class="string">&#x27;Sandnes&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="撤销-CHECK-约束"><a href="#撤销-CHECK-约束" class="headerlink" title="撤销 CHECK 约束"></a>撤销 CHECK 约束</h2><p>撤销 CHECK 约束<br>SQL Server &#x2F; Oracle &#x2F; MS Access：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> chk_Person</span><br></pre></td></tr></table></figure><p>MySQL：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">CHECK</span> chk_Person</span><br></pre></td></tr></table></figure><h1 id="SQL-DEFAULT-约束"><a href="#SQL-DEFAULT-约束" class="headerlink" title="SQL DEFAULT 约束"></a>SQL DEFAULT 约束</h1><p>作用</p><ul><li>DEFAULT 约束用于向列中插入默认值。</li><li>如果没有规定其他的值，那么会将默认值添加到所有的新记录。</li></ul><p>CREATE TABLE 时的 DEFAULT 约束<br>下面的 SQL 在 “Persons” 表创建时在 “City” 列上创建 DEFAULT 约束：<br>My SQL &#x2F; SQL Server &#x2F; Oracle &#x2F; MS Access</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;Sandnes&#x27;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>通过使用类似 GETDATE() 这样的函数，DEFAULT 约束也可以用于插入系统值：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line">(</span><br><span class="line">O_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">OrderNo <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">P_Id <span class="type">int</span>,</span><br><span class="line">OrderDate <span class="type">date</span> <span class="keyword">DEFAULT</span> GETDATE()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>ALTER TABLE 时的 DEFAULT 约束</p><ul><li>当表已被创建时，如需在 “City” 列创建 DEFAULT 约束</li><li>MySQL</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ALTER</span> City <span class="keyword">SET</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;SANDNES&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>SQL Server &#x2F; MS Access</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> City <span class="keyword">SET</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;SANDNES&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>Oracle</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">MODIFY City <span class="keyword">DEFAULT</span> <span class="string">&#x27;SANDNES&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="撤销-DEFAULT-约束"><a href="#撤销-DEFAULT-约束" class="headerlink" title="撤销 DEFAULT 约束"></a>撤销 DEFAULT 约束</h2><p>撤销 DEFAULT 约束</p><ul><li>MySQL</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ALTER</span> City <span class="keyword">DROP</span> <span class="keyword">DEFAULT</span></span><br></pre></td></tr></table></figure><ul><li>SQL Server &#x2F; Oracle &#x2F; MS Access</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> City <span class="keyword">DROP</span> <span class="keyword">DEFAULT</span></span><br></pre></td></tr></table></figure><hr><p><strong>来源</strong></p><ul><li><a href="http://www.runoob.com/">菜鸟教材</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10 开热点给手机科学上网</title>
      <link href="/posts/Win10-Share-WiFI.html"/>
      <url>/posts/Win10-Share-WiFI.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>在 Windows 10 中使用 “飞机” 工具共享热点给手机实现手机科学上网,解决刷机后开机登录 Google 账号等问题。</p></blockquote><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><h2 id="电脑端"><a href="#电脑端" class="headerlink" title="电脑端"></a>电脑端</h2><ol><li>右键飞机托盘图标 –&gt; 选项设置 –&gt; 勾选 <code>允许来自局域网连接</code></li><li>CMD –&gt; 输入 <code>ipconfig</code> 获取 <code>无线的IPV4地址</code></li><li>正常开启热点<span id="more"></span></li></ol><h2 id="手机端"><a href="#手机端" class="headerlink" title="手机端"></a>手机端</h2><ol><li>长按连接的 WiFi 名,点修改网络</li><li>显示高级选项</li><li>代理</li><li>手动</li><li>服务器主机IP输入刚刚获取的 <code>IPV4地址</code>, 端口 <code>1080</code></li><li>保存</li></ol><hr><h1 id="跳过谷歌验证"><a href="#跳过谷歌验证" class="headerlink" title="跳过谷歌验证"></a>跳过谷歌验证</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>即上述 Windows 10 开热点的方法</p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb shell settings put secure user_setup_complete 1</span><br><span class="line">adb shell settings put global device_provisioned 1</span><br></pre></td></tr></table></figure><h2 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h2><p>开机前不插入 SIM 卡,开机后不连接 WIFI,在开机导向时可以有选择跳过登录 Google 账号</p><h2 id="方法四"><a href="#方法四" class="headerlink" title="方法四"></a>方法四</h2><p>顺时针方向，从左上角开始,连点屏幕四角</p>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 基础命令</title>
      <link href="/posts/Linux-Commands.html"/>
      <url>/posts/Linux-Commands.html</url>
      
        <content type="html"><![CDATA[<p>Linux 基础命令</p><span id="more"></span><h1 id="目录操作命令"><a href="#目录操作命令" class="headerlink" title="目录操作命令"></a>目录操作命令</h1><h2 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">命令英文原意：list</span><br><span class="line">命令所在路径：/bin/ls</span><br><span class="line">执行权限：所有用户</span><br><span class="line">功能描述：显示目录文件</span><br><span class="line"><span class="built_in">ls</span> <span class="comment"># 显示当前目录下文件</span></span><br><span class="line"><span class="built_in">ls</span> 目录名 <span class="comment"># 显示指定目录下文件</span></span><br><span class="line"><span class="built_in">ls</span> -l <span class="comment"># 长格式显示目录文件</span></span><br><span class="line"><span class="built_in">ls</span> -l 文件名 <span class="comment"># 长格式显示指定文件</span></span><br><span class="line"><span class="built_in">ls</span> -a <span class="comment"># 显示所有文件(包含隐藏文件)</span></span><br><span class="line"><span class="built_in">ls</span> -al <span class="comment"># 长格式显示当前目录下所有文件)</span></span><br><span class="line"><span class="built_in">ls</span> -h <span class="comment"># 文件大小显示为常见大小单位 B KB MB ...</span></span><br><span class="line"><span class="built_in">ls</span> -d <span class="comment"># 显示目录本身，而不是里面的子文件</span></span><br></pre></td></tr></table></figure><h2 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">命令英文原意：change directory</span><br><span class="line">命令所在路径：shell内置命令</span><br><span class="line">执行权限：所有用户</span><br><span class="line">功能描述：切换所在目录</span><br><span class="line"><span class="built_in">cd</span> /usr/local/src 切换到指定路径(使用绝对路径方式)</span><br><span class="line"><span class="built_in">cd</span> ~ <span class="comment"># 进入当前用户的家目录</span></span><br><span class="line"><span class="built_in">cd</span> - <span class="comment"># 进入上次目录</span></span><br><span class="line"><span class="built_in">cd</span> .. <span class="comment"># 进入上一级目录</span></span><br><span class="line"><span class="built_in">cd</span> . <span class="comment"># 进入当前目录</span></span><br><span class="line">绝对路径：<span class="built_in">cd</span> ../usr/local 参照当前所在目录，进行查找。一定要先确定当前所在目录。</span><br><span class="line">相对路径：<span class="built_in">cd</span> /usr/local 从根目录开始指定，一级一级递归查找。</span><br><span class="line">在任何目录下，都能进入指定位置。</span><br></pre></td></tr></table></figure><h2 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">命令英文原意：<span class="built_in">print</span> working directory</span><br><span class="line">命令所在路径：/bin/pwd</span><br><span class="line">执行权限：所有用户</span><br><span class="line">功能描述：显示当前所在目录(当前工作目录)</span><br></pre></td></tr></table></figure><h2 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">命令英文原意：make directories</span><br><span class="line">命令所在路径：/bin/mkdir</span><br><span class="line">执行权限：所有用户</span><br><span class="line">功能描述：建立目录</span><br><span class="line">mkdir test  # 创建名为test的目录</span><br><span class="line">mkdir -p test1/test2/test3 #递归创建</span><br></pre></td></tr></table></figure><h2 id="rmdir"><a href="#rmdir" class="headerlink" title="rmdir"></a>rmdir</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">命令英文原意：remove empty directories</span><br><span class="line">命令所在路径：/bin/rmdir</span><br><span class="line">执行权限：所有用户</span><br><span class="line">功能描述：删除目录 (只能删除空目录)</span><br></pre></td></tr></table></figure><h1 id="文件操作命令"><a href="#文件操作命令" class="headerlink" title="文件操作命令"></a>文件操作命令</h1><h2 id="touch"><a href="#touch" class="headerlink" title="touch"></a>touch</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">命令所在路径：/bin/touch</span><br><span class="line">执行权限：所有用户</span><br><span class="line">功能描述：创建空文件 或 修改文件时间</span><br><span class="line"><span class="built_in">touch</span> test.py <span class="comment"># 创建空文件，如果文件存在，则修改文件创建时间</span></span><br></pre></td></tr></table></figure><h2 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">命令英文原意：remove</span><br><span class="line">命令所在路径：/bin/rm</span><br><span class="line">执行权限：所有用户</span><br><span class="line">功能描述：删除</span><br><span class="line"><span class="built_in">rm</span> 文件名 <span class="comment"># 删除文件</span></span><br><span class="line"><span class="built_in">rm</span> -r 目录名 <span class="comment"># 递归删除文件和目录</span></span><br><span class="line"><span class="built_in">rm</span> -f 文件名 <span class="comment"># 强制删除</span></span><br><span class="line"><span class="built_in">rm</span> -rf 目录名 <span class="comment"># 强制删除目录和文件</span></span><br></pre></td></tr></table></figure><h2 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">命令所在路径：/bin/cat</span><br><span class="line">执行权限：所有用户</span><br><span class="line">功能描述：查看文件内容，从头到尾的内容。</span><br><span class="line"><span class="built_in">cat</span> 文件名  <span class="comment"># 查看文件内容内容</span></span><br><span class="line"><span class="built_in">cat</span> -n 文件名 <span class="comment"># 查看文件内容，并列出行号</span></span><br></pre></td></tr></table></figure><h2 id="more"><a href="#more" class="headerlink" title="more"></a>more</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">命令所在路径：/bin/more</span><br><span class="line">执行权限：所有用户</span><br><span class="line">功能描述：分屏显示文件内容</span><br><span class="line">more 文件名    分屏显示文件内容</span><br><span class="line">向上翻页  空格键</span><br><span class="line">向下翻页  b键</span><br><span class="line">退出查看  q键</span><br></pre></td></tr></table></figure><h2 id="head"><a href="#head" class="headerlink" title="head"></a>head</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">命令所在路径：/usr/bin/head</span><br><span class="line">执行权限：所有用户</span><br><span class="line">功能描述：显示文件头</span><br><span class="line">head 文件名 # 显示文件头几行(默认显示10行)</span><br><span class="line">head -n 20 文件名 # 显示文件前20行</span><br><span class="line">head -n -20 文件名 # 显示文件最后20行</span><br><span class="line">ctrl + c # 强制终止查看模式</span><br><span class="line">ctrl + l  # 清屏</span><br></pre></td></tr></table></figure><h2 id="ln"><a href="#ln" class="headerlink" title="ln"></a>ln</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">命令英文原意：<span class="built_in">link</span></span><br><span class="line">命令所在路径：/bin/ln</span><br><span class="line">执行权限：所有用户</span><br><span class="line">功能描述：链接文件</span><br><span class="line">等同于Windows中的快捷方式</span><br><span class="line">新建的链接，占用不同的硬盘位置</span><br><span class="line">修改一个文件，两边都会改变</span><br><span class="line">删除源文件，软连接文件打不开</span><br><span class="line"><span class="built_in">ln</span> -s 源文件 目标文件 <span class="comment"># 创建链接文件(文件名都必须写绝对路径)</span></span><br></pre></td></tr></table></figure><h1 id="文件和目录都能操作的命令"><a href="#文件和目录都能操作的命令" class="headerlink" title="文件和目录都能操作的命令"></a>文件和目录都能操作的命令</h1><h2 id="rm-1"><a href="#rm-1" class="headerlink" title="rm"></a>rm</h2><p>删除文件或目录</p><h2 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">命令英文原意：copy</span><br><span class="line">命令所在路径：/bin/cp</span><br><span class="line">执行权限：所有用户</span><br><span class="line">功能描述：复制文件或目录</span><br><span class="line"><span class="built_in">cp</span> 源文件 目标位置  <span class="comment"># 复制</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> 源文件 目标位置/目标名称  <span class="comment"># 复制并改名</span></span><br><span class="line"><span class="built_in">cp</span> -r <span class="comment"># 复制目录</span></span><br><span class="line"><span class="built_in">cp</span> -p <span class="comment"># 连带文件属性一起复制</span></span><br><span class="line"><span class="built_in">cp</span> -d <span class="comment"># 若源文件是链接文件，则复制链接属性</span></span><br><span class="line"><span class="built_in">cp</span> -a <span class="comment"># 相当于 cp -pdr</span></span><br></pre></td></tr></table></figure><h2 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">命令英文原意：move</span><br><span class="line">命令所在路径：/bin/mv</span><br><span class="line">执行权限：所有用户</span><br><span class="line"><span class="built_in">mv</span> 源文件 目标位置</span><br><span class="line"><span class="built_in">mv</span> /root/test /tmp/  </span><br><span class="line"><span class="comment"># 将/root/下的test文件移动到/tmp/目录下</span></span><br><span class="line"><span class="built_in">mv</span> /root/test /root/newtest   </span><br><span class="line"><span class="comment"># 将/root/下的test文件改名为newtest</span></span><br></pre></td></tr></table></figure><h1 id="挂载命令"><a href="#挂载命令" class="headerlink" title="挂载命令"></a>挂载命令</h1><h2 id="mount"><a href="#mount" class="headerlink" title="mount"></a>mount</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">命令所在路径：/bin/mount</span><br><span class="line">执行权限：所有用户</span><br><span class="line">功能描述：挂载</span><br><span class="line">linux所有存储设备都必须挂载使用，包括硬盘</span><br></pre></td></tr></table></figure><h2 id="光盘挂载"><a href="#光盘挂载" class="headerlink" title="光盘挂载"></a>光盘挂载</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/dev/sda1 # 第一个scsi硬盘的第一分区</span><br><span class="line">/dev/cdrom  # 光盘</span><br><span class="line">/dev/hdc  # fIDE硬盘 centos 5.5</span><br><span class="line">/dev/sr0  # 光盘      centos 6.x</span><br><span class="line">mount -t 文件系统 设备描述文件 挂载点（已经存在空目录）</span><br><span class="line">mount -t iso9660 /dev/cdrom /mnt/cdrom</span><br></pre></td></tr></table></figure><h2 id="光盘卸载"><a href="#光盘卸载" class="headerlink" title="光盘卸载"></a>光盘卸载</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">umount /dev/cdrom</span><br><span class="line">umount /mnt/cdrom      注意：退出挂载目录，才能卸载</span><br><span class="line">fdisk -l 查看设备名</span><br><span class="line">mount -t vfat /dev/sdb1 /mnt/usb</span><br></pre></td></tr></table></figure><h1 id="网络命令"><a href="#网络命令" class="headerlink" title="网络命令"></a>网络命令</h1><h2 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">命令所在路径：/bin/ping</span><br><span class="line">执行权限：所有用户</span><br><span class="line">功能描述：测试网络畅通性</span><br><span class="line">ping -c 次数 ip # 探测网络通畅</span><br></pre></td></tr></table></figure><h2 id="ifconfig"><a href="#ifconfig" class="headerlink" title="ifconfig"></a>ifconfig</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">命令英文原意：interface configure</span><br><span class="line">命令所在路径：/sbin/ifconfig</span><br><span class="line">执行权限：root</span><br><span class="line">功能描述：查询本机网络信息</span><br></pre></td></tr></table></figure><h1 id="Linux-系统分类"><a href="#Linux-系统分类" class="headerlink" title="Linux 系统分类"></a>Linux 系统分类</h1><ol><li>RedHat 系列：Redhat、Centos、Fedora 等<ul><li>RPM (Red Hat系)：CentOS、Fedora</li></ul></li><li>Debian 系列：Debian、Ubuntu 等<ul><li>Dpkg (Debian系)：Ubuntu LinuxMint</li></ul></li><li>ArchLinux<ul><li>ArchLinux、Manjaro、Antergos 等.</li></ul></li></ol><h2 id="软件包管理工具"><a href="#软件包管理工具" class="headerlink" title="软件包管理工具"></a>软件包管理工具</h2><h3 id="Debian-系列"><a href="#Debian-系列" class="headerlink" title="Debian 系列"></a>Debian 系列</h3><ol><li>常见的安装包格式 deb 包，安装 deb 包的命令是<code>dpkg -选项 -xxx.deb</code></li></ol><ul><li>选项<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-i：安装软件包</span><br><span class="line">-r：删除软件包</span><br><span class="line">-P：删除软件包的同时删除其配置文件</span><br><span class="line">-L：显示于软件包关联的文件</span><br><span class="line">-l：显示已安装软件包列表</span><br><span class="line">--unpack：解开软件包</span><br><span class="line">-c：显示软件包内文件列表</span><br><span class="line">--confiugre：配置软件包</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>包管理工具 apt-get</li><li>支持 tar 包</li></ol><ul><li>dpkg 实例<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i package.deb <span class="comment">#安装包</span></span><br><span class="line">dpkg -r package <span class="comment">#删除包</span></span><br><span class="line">dpkg -P package <span class="comment">#删除包（包括配置文件）</span></span><br><span class="line">dpkg -L package <span class="comment">#列出与该包关联的文件</span></span><br><span class="line">dpkg -l package <span class="comment">#显示该包的版本</span></span><br><span class="line">dpkg --unpack package.deb  <span class="comment">#解开deb包的内容</span></span><br><span class="line">dpkg -S keyword <span class="comment">#搜索所属的包内容</span></span><br><span class="line">dpkg -l <span class="comment">#列出当前已安装的包</span></span><br><span class="line">dpkg -c package.deb#列出deb包的内容</span><br><span class="line">dpkg --configure package#配置包</span><br></pre></td></tr></table></figure></li><li>apt 包管理<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get (选项)(参数)</span><br></pre></td></tr></table></figure></li><li>实例<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apt-get update #更新源</span><br><span class="line">apt-get upgrade #更新所有已安装的软件包</span><br><span class="line">apt-get install packagename #安装软件包</span><br><span class="line">apt-get remove packagename #卸载软件包(保留配置文件)</span><br><span class="line">apt-get –purge remove packagename # 卸载软件包(删除配置文件)</span><br><span class="line">apt-get autoclean apt #删除你已经删掉的软件</span><br><span class="line">apt-get dist-upgrade #将系统升级到新版本</span><br><span class="line">apt-get autoclean #清除已经卸载的软件包的.deb文件</span><br></pre></td></tr></table></figure></li></ul><h2 id="RedHat-系列"><a href="#RedHat-系列" class="headerlink" title="RedHat 系列"></a>RedHat 系列</h2><ol><li>常见的安装包格式 rpm 包，安装rpm包的命令是&#96;rpm -参数 [-rpm包]</li></ol><ul><li>参数<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-a：查询所有套件；</span><br><span class="line">-b&lt;完成阶段&gt;&lt;套件档&gt;+或-t &lt;完成阶段&gt;&lt;套件档&gt;+：设置包装套件的完成阶段，并指定套件档的文件名称；</span><br><span class="line">-c：只列出组态配置文件，本参数需配合&quot;-l&quot;参数使用；</span><br><span class="line">-d：只列出文本文件，本参数需配合&quot;-l&quot;参数使用；</span><br><span class="line">-e&lt;套件档&gt;或--erase&lt;套件档&gt;：删除指定的套件；</span><br><span class="line">-f&lt;文件&gt;+：查询拥有指定文件的套件；</span><br><span class="line">-h或--hash：套件安装时列出标记；</span><br><span class="line">-i：显示套件的相关信息；</span><br><span class="line">-i&lt;套件档&gt;或--install&lt;套件档&gt;：安装指定的套件档；</span><br><span class="line">-l：显示套件的文件列表；</span><br><span class="line">-p&lt;套件档&gt;+：查询指定的RPM套件档；</span><br><span class="line">-q：使用询问模式，当遇到任何问题时，rpm指令会先询问用户；</span><br><span class="line">-R：显示套件的关联性信息；</span><br><span class="line">-s：显示文件状态，本参数需配合&quot;-l&quot;参数使用；</span><br><span class="line">-U&lt;套件档&gt;或--upgrade&lt;套件档&gt;：升级指定的套件档；</span><br><span class="line">-v：显示指令执行过程；</span><br><span class="line">-vv：详细显示指令执行过程，便于排错。</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>包管理工具<code>yum -选项 -参数</code></li></ol><ul><li>选项<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-h：显示帮助信息；</span><br><span class="line">-y：对所有的提问都回答“yes”；</span><br><span class="line">-c：指定配置文件；</span><br><span class="line">-q：安静模式；</span><br><span class="line">-v：详细模式；</span><br><span class="line">-d：设置调试等级（0-10）；</span><br><span class="line">-e：设置错误等级（0-10）；</span><br><span class="line">-R：设置yum处理一个命令的最大等待时间；</span><br><span class="line">-C：完全从缓存中运行，而不去下载或者更新任何头文件。</span><br></pre></td></tr></table></figure></li><li>参数<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">install：安装rpm软件包；</span><br><span class="line">update：更新rpm软件包；</span><br><span class="line">check-update：检查是否有可用的更新rpm软件包；</span><br><span class="line">remove：删除指定的rpm软件包；</span><br><span class="line">list：显示软件包的信息；</span><br><span class="line">search：检查软件包的信息；</span><br><span class="line">info：显示指定的rpm软件包的描述信息和概要信息；</span><br><span class="line">clean：清理yum过期的缓存；</span><br><span class="line">shell：进入yum的shell提示符；</span><br><span class="line">resolvedep：显示rpm软件包的依赖关系；</span><br><span class="line">localinstall：安装本地的rpm软件包；</span><br><span class="line">localupdate：显示本地rpm软件包进行更新；</span><br><span class="line">deplist：显示rpm软件包的所有依赖关系。</span><br></pre></td></tr></table></figure></li></ul><ol start="3"><li>支持 tar 包</li></ol><ul><li>yum 实例</li></ul><ul><li>安装<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install #全部安装</span><br><span class="line">yum install package1 #安装指定的安装包package1</span><br><span class="line">yum groupinsall group1 #安装程序组group1</span><br></pre></td></tr></table></figure></li><li>更新和升级<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum update #全部更新</span><br><span class="line">yum update package1 #更新指定程序包package1</span><br><span class="line">yum check-update #检查可更新的程序</span><br><span class="line">yum upgrade package1 #升级指定程序包package1</span><br><span class="line">yum groupupdate group1#升级程序组group1</span><br></pre></td></tr></table></figure></li><li>查找和显示<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum info package1 #显示安装包信息package1</span><br><span class="line">yum list #显示所有已经安装和可以安装的程序包</span><br><span class="line">yum list package1 #显示指定程序包安装情况package1</span><br><span class="line">yum groupinfo group1#显示程序组group1信息yum search string 根据关键字string查找安装包</span><br></pre></td></tr></table></figure></li><li>删除程序<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum remove &amp;#124; erase package1  #删除程序包package1</span><br><span class="line">yum groupremove group1  #删除程序组group1</span><br><span class="line">yum deplist package1  #查看程序package1依赖情况</span><br></pre></td></tr></table></figure></li><li>清除缓存<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum clean packages #清除缓存目录下的软件包</span><br><span class="line">yum clean headers #清除缓存目录下的 headers</span><br><span class="line">yum clean oldheaders #清除缓存目录下旧的 headers</span><br></pre></td></tr></table></figure><strong>参考</strong></li><li><a href="http://man.linuxde.net/">Linux命令</a></li></ul><h1 id="查询命令"><a href="#查询命令" class="headerlink" title="查询命令"></a>查询命令</h1><h2 id="find"><a href="#find" class="headerlink" title="find"></a>find</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">find [搜索范围] [搜索文件]`</span><br><span class="line">find / -name install.log</span><br><span class="line">避免大范围搜索,会非常耗费系统资源</span><br><span class="line">find是在系统当中搜索符合条件的文件名,如果需要匹配 使用通配符匹配,通配符是完全匹配。</span><br><span class="line"></span><br><span class="line">find /root -iname installlog #不区分大小写</span><br><span class="line">find /root -user root #按照所有者搜索</span><br><span class="line">find/root -nouser #查找没有所有者的文件</span><br></pre></td></tr></table></figure><ol><li>find &#x2F;var&#x2F;log&#x2F; -mtime +10 #查找10天前修改的文件</li></ol><table><thead><tr><th align="left">-10</th><th align="left">10天内修改文件</th></tr></thead><tbody><tr><td align="left">10</td><td align="left">10天当天修改的文件</td></tr><tr><td align="left">+10</td><td align="left">10天前修改的文件</td></tr><tr><td align="left">atime</td><td align="left">文件访问时间</td></tr></tbody></table><ol start="2"><li>find . -size #查找文件大小是25KB的文件</li></ol><table><thead><tr><th align="left">-25k</th><th align="left">小于25KB的文件</th></tr></thead><tbody><tr><td align="left">25k</td><td align="left">等于25KB的文件</td></tr><tr><td align="left">+25k</td><td align="left">大于25KB的文件</td></tr></tbody></table><ol start="3"><li>find -inum 262422 #查找 节点是262422的文件</li><li>find &#x2F;etc -size +20k -a -size -50k #查找&#x2F;etc&#x2F;目录下,大于20KB并且小于50KB的文件</li></ol><ul><li>a and逻辑与,两个条件都满足 or 逻辑或,两个条件满足一个即可</li></ul><ol start="5"><li>find &#x2F;etc-size +20k-a-size-50k -exec ls-lh {} 1; #查找&#x2F;etc&#x2F;目录下,大于20KB并且小于50KB的文件,并显示详细信  #-exec&#x2F;-ok命令() 对搜索结果执行操</li></ol><h2 id="搜索字符串命令grep"><a href="#搜索字符串命令grep" class="headerlink" title="搜索字符串命令grep"></a>搜索字符串命令grep</h2><ul><li>grep [选项]字符串文件名<br>在文件当中匹配符合条件的字符串<br>选项: <code>-i</code> 忽略大小写 <code>-v</code>排除指定字符串</li></ul><h2 id="find命令与grep命令的区别"><a href="#find命令与grep命令的区别" class="headerlink" title="find命令与grep命令的区别"></a>find命令与grep命令的区别</h2><ul><li>find命令:在系统当中搜索符合条件的文件名,如果需要匹配 使用通配符匹配,通配符是完全匹配。</li><li>grep命令:在文件当中搜索符合条件的字符串,如果需要匹配 使用正则表达式进行匹配,正则表达式时包含匹配</li></ul><h1 id="man-命令"><a href="#man-命令" class="headerlink" title="man 命令"></a>man 命令</h1><p>man 命令 #获取指定命令的帮助<br>man ls  #查看ls的帮助</p><ul><li>查看命令拥有那个级别的帮助<br>man -f 命令 相当于 whatis 命令</li></ul><p>举例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">man -5 passwd</span><br><span class="line">man -4 null</span><br><span class="line">man -8 ifconfig</span><br></pre></td></tr></table></figure><ul><li>shell 内部命令帮助<br>help shell 内部命令 #获取shell内部命令的帮助</li></ul><p>例如:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">whereis cd #确定是否是shell内部命令</span><br><span class="line">help cd #获取内部命令帮助</span><br></pre></td></tr></table></figure><h2 id="详细命令帮助info-info命令"><a href="#详细命令帮助info-info命令" class="headerlink" title="详细命令帮助info info命令"></a>详细命令帮助info info命令</h2><p>回车|进入子帮助页面(带有<code>*</code>号标记)</p><p>|:—:|:—:|<br>|u|进入上层页面|<br>|n|进入下一个帮助小节|<br>|p|进入上一个帮助小节|<br>|q|退出|</p><h1 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h1><h2 id="zip格式压缩"><a href="#zip格式压缩" class="headerlink" title="zip格式压缩"></a>zip格式压缩</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zip 压缩文件名  源文件 #压缩文件</span><br><span class="line">zip -r 压缩文件名 源目录  #压缩目录</span><br></pre></td></tr></table></figure><h2 id="gzip格式压缩"><a href="#gzip格式压缩" class="headerlink" title="gzip格式压缩"></a>gzip格式压缩</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gzip 源文件  #压缩为.gz格式的压缩文件.源文件会消失</span><br><span class="line">gzip -c 源文件&gt;压缩文件 # 压缩为.gzi格式,源文件保留</span><br></pre></td></tr></table></figure><h2 id="gz格式解压缩"><a href="#gz格式解压缩" class="headerlink" title="gz格式解压缩"></a>gz格式解压缩</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gzip -d 压缩文件 #解压缩文件</span><br><span class="line">gunzip 压缩文件  #解压缩文件</span><br></pre></td></tr></table></figure><h2 id="bz2格式压缩"><a href="#bz2格式压缩" class="headerlink" title="bz2格式压缩"></a>bz2格式压缩</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bzip2 源文件 #压缩为.bz2格式.不保留源文件</span><br><span class="line">bzip2 -k 源文件 #压缩之后保留源文件</span><br><span class="line">注意: bzip2命令不能压缩目录</span><br></pre></td></tr></table></figure><h1 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h1><h2 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -cvf 打包文件名 源文件</span><br><span class="line">选项: -c打包</span><br><span class="line">-v显示过程</span><br><span class="line">-f指定打包后的文件名</span><br></pre></td></tr></table></figure><h1 id="解打包命令"><a href="#解打包命令" class="headerlink" title="解打包命令"></a>解打包命令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf 打包文件名</span><br><span class="line">选项:</span><br><span class="line">-x解打包</span><br></pre></td></tr></table></figure><h2 id="tar-gz压缩格式"><a href="#tar-gz压缩格式" class="headerlink" title="tar.gz压缩格式"></a>tar.gz压缩格式</h2><p>其实.tar.gz格式是先打包为.tar格式,再压缩为.gz格式</p><ol><li>tar -zcvf 压缩包名tar.gz 源文件</li></ol><ul><li>选项: <code>-z</code>压缩为.tar.gz格式</li></ul><ol start="2"><li>tar -zxvf 压缩包名tar.gz</li></ol><ul><li>选项:<code>-x</code> 解压缩.tar.gz格式</li></ul><h2 id="tar-bz2压缩格式"><a href="#tar-bz2压缩格式" class="headerlink" title="tar.bz2压缩格式"></a>tar.bz2压缩格式</h2><p>:1. tar -jcvf压缩包名.tar.bz2 源文件</p><ul><li>选项:<code>-z</code>压缩为.tar.bz2格式</li></ul><ol start="2"><li>tar -jxvf 压缩包名·tar.bz2</li></ol><ul><li>选项: <code>-x</code>解压缩.tar.bz2格式</li></ul><h1 id="shell命令"><a href="#shell命令" class="headerlink" title="shell命令"></a>shell命令</h1><h2 id="shutdown命令"><a href="#shutdown命令" class="headerlink" title="shutdown命令"></a>shutdown命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">shutdown [选项] 时间</span><br><span class="line">选项:</span><br><span class="line">-c 取消前一个关机命令</span><br><span class="line">-h 关机  </span><br><span class="line">-r 重启</span><br></pre></td></tr></table></figure><h2 id="其他关机命令"><a href="#其他关机命令" class="headerlink" title="其他关机命令"></a>其他关机命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">halt</span><br><span class="line">poweroff</span><br><span class="line">init 0</span><br><span class="line">重启命令</span><br><span class="line">reboot</span><br><span class="line">init 6</span><br><span class="line"></span><br><span class="line">系统运行级别</span><br><span class="line">查看系统运行级别</span><br><span class="line">cat /etc/inittab</span><br><span class="line">程序员之路: Linux关机与重启</span><br><span class="line">退出登录</span><br><span class="line">logout 切记,一般服务器只允许少量用户连接, 如果不正常退出会占用用户id</span><br></pre></td></tr></table></figure><ul><li>查询当前登录和过去登录的用户信息<br>last last #命令默认是读取&#x2F;var&#x2F;log&#x2F;wtmp文件数据</li></ul><p>命令输出 -用户名 登录终端 登录IP 登录时间 退出时间(在线时间)</p><h2 id="echo输出命令"><a href="#echo输出命令" class="headerlink" title="echo输出命令"></a>echo输出命令</h2><p>echo [选项] [输出内容]</p><ul><li>选项: -e 支持反斜线控制的字符转换</li></ul><table><thead><tr><th align="left">控制字符</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">\a</td><td align="left">输出警告音</td></tr><tr><td align="left">\b</td><td align="left">退格键，也就是向左删除键</td></tr><tr><td align="left">\n</td><td align="left">换行键</td></tr><tr><td align="left">\r</td><td align="left">回车键</td></tr><tr><td align="left">\t</td><td align="left">制表键，也就是Tab键</td></tr><tr><td align="left">\v</td><td align="left">垂直制表键</td></tr><tr><td align="left">\Onnn</td><td align="left">按照八进制ASCII码表输出字符。其中0表示数字0，nnn是三位八进制数</td></tr><tr><td align="left">\xhh</td><td align="left">按照16进制ASCII码表输出字符。其中hh是两位16进制数</td></tr></tbody></table><h2 id="脚本执行"><a href="#脚本执行" class="headerlink" title="脚本执行"></a>脚本执行</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">赋予执行权限,直接运行</span><br><span class="line">chmod 755 hello.sh</span><br><span class="line">/hello.sh</span><br><span class="line">bash hello.sh</span><br></pre></td></tr></table></figure><h1 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h1><ul><li>查看与设定别名</li></ul><ol><li>alias #查看系统中所有的命令别名</li><li>alias 别名&#x3D;”原命令” #设定命令别名</li></ol><h2 id="别名永久生效与删除别名"><a href="#别名永久生效与删除别名" class="headerlink" title="别名永久生效与删除别名"></a>别名永久生效与删除别名</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /.bashrc #写入环境变量配置文件</span><br><span class="line">unalias 别名 #删除别名</span><br></pre></td></tr></table></figure><h2 id="shell常用快捷键"><a href="#shell常用快捷键" class="headerlink" title="shell常用快捷键"></a>shell常用快捷键</h2><table><thead><tr><th align="center">ctrl+c</th><th align="center">强制终止当前命令</th></tr></thead><tbody><tr><td align="center">ctrl+l</td><td align="center">清屏</td></tr><tr><td align="center">crtl+a</td><td align="center">光标移动到命令行首</td></tr><tr><td align="center">ctrl+e</td><td align="center">光标移动到命令行尾</td></tr><tr><td align="center">ctrl+u</td><td align="center">从光标所在位置删除到行首</td></tr><tr><td align="center">ctrl+z</td><td align="center">把命令放入后台</td></tr><tr><td align="center">ctrl+r</td><td align="center">在历史命令中搜</td></tr></tbody></table><h2 id="历史命令"><a href="#历史命令" class="headerlink" title="历史命令"></a>历史命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">history [选项] [历史命令保存文件]</span><br><span class="line">选项:</span><br><span class="line">-c:清空历史命令</span><br><span class="line">w:把缓存中的历史命令写入历史命令保存文件~/.bash.history</span><br></pre></td></tr></table></figure><h1 id="输出重定向"><a href="#输出重定向" class="headerlink" title="输出重定向"></a>输出重定向</h1><table><thead><tr><th align="left">类型</th><th align="left">符号</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">标准输出重定向</td><td align="left">命令&gt;文件</td><td align="left">以覆盖的方式,把命令的正确输出 输出到指定的文件或设备当中</td></tr><tr><td align="left">空</td><td align="left">命令&gt;&gt;文件</td><td align="left">以追加的方式,把命令的正确输出! 输出到指定的文件或设备当中</td></tr><tr><td align="left">准错误输出重定向</td><td align="left">错误命令2&gt;&gt;文件</td><td align="left">以覆盖的方式,把命令的错误输出 输出到指定的文件或设备当中。</td></tr></tbody></table><h1 id="多命令顺序执行"><a href="#多命令顺序执行" class="headerlink" title="多命令顺序执行"></a>多命令顺序执行</h1><table><thead><tr><th align="left">多命令执行符</th><th align="left">格式</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">:</td><td align="left">命令1:命令2</td><td align="left">多个命顺序执行,命令之间没有逻辑关系</td></tr><tr><td align="left">&amp;&amp;</td><td align="left">命令1&amp;&amp;命令2</td><td align="left">逻辑与当命令1正确执行,则命令2才会执行,1不正确，2不执行</td></tr><tr><td align="left">丨丨</td><td align="left">命令1丨丨命令2</td><td align="left">逻辑或，命令1不正确，2才执行，命令1正确，2不会执行</td></tr></tbody></table><h1 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h1><table><thead><tr><th align="left">通配符</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">?</td><td align="left">匹配一个任意字符</td></tr><tr><td align="left">*</td><td align="left">匹配0或任意多个任意符，也可以是匹配任何内容</td></tr><tr><td align="left">[]</td><td align="left">匹配括号中的任意一个字符</td></tr><tr><td align="left">[-]</td><td align="left">匹配括号中任意一个字符，-代表一个范围。［a-z］小写字母表</td></tr><tr><td align="left">[^]</td><td align="left">逻辑非，表示匹配不是括号中的一个字符.［^0-9］不是数字的字符</td></tr></tbody></table><h1 id="Bash中其他特殊符号"><a href="#Bash中其他特殊符号" class="headerlink" title="Bash中其他特殊符号"></a>Bash中其他特殊符号</h1><table><thead><tr><th align="left">符号</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">‘’</td><td align="left">单引号。在单引号中所有的特俗符合，如“$”和“&#96;”（反引号）都没特俗意义</td></tr><tr><td align="left">“”</td><td align="left">双引号,在双引号中特殊符号都没有特殊含义,但是“S” 、“.”和“&quot;是例外. 拥有“调用变量的值”、“引用命令”和“转义符”的特殊含义</td></tr><tr><td align="left">`&#96;</td><td align="left">反引号。反引号括起来的都是系统命令，在bash中会先执行和$()作用一样。不过推荐使用$(), 因为反引号非常容易看错</td></tr><tr><td align="left">$()</td><td align="left">和反引号作用一样，用来引用系统命令</td></tr><tr><td align="left">#</td><td align="left">shell中#开头的行代表注释</td></tr><tr><td align="left">$</td><td align="left">用于调用变量的值，如要调用变量name的值时，需要用$name的方式得到变量的值</td></tr><tr><td align="left"><code>\</code></td><td align="left">转义符，跟在\后面的特俗符号失去特俗含义，变为普通字符，。如$将输出$符号，而不是变量引用</td></tr></tbody></table><h1 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h1><h2 id="df-参数-查看磁盘分区使用状况"><a href="#df-参数-查看磁盘分区使用状况" class="headerlink" title="df [参数] 查看磁盘分区使用状况"></a>df [参数] 查看磁盘分区使用状况</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-l仅显示本地磁盘(默认)</span><br><span class="line">-a显示所有文件系统的磁盘使用情况,包含比如/proc/</span><br><span class="line">-h以1024进制计算最合适的单位显示磁盘容量</span><br><span class="line">-H以1000进制计算最合适的单位显示磁盘容量</span><br><span class="line">-T显示磁盘分区类型</span><br><span class="line">-t显示指定类型文件系统的磁盘分区</span><br><span class="line">-x不显示指定类型文件系统的磁盘分</span><br><span class="line">- du统计磁盘上的文件大小</span><br><span class="line">-b以byte为单位统计文件</span><br><span class="line">-k以KB为单位统计文件</span><br><span class="line">-m以MB为单位统计文件</span><br><span class="line">-h按照1024进制以最适合的单位统计文件</span><br><span class="line">-H按照1000进制以最适合的单位统计文件</span><br><span class="line">-s指定统计目标</span><br></pre></td></tr></table></figure><h1 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h1><h2 id="rw-r–r–"><a href="#rw-r–r–" class="headerlink" title="-rw-r–r–"></a>-rw-r–r–</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">文件类型(-文件d目录1软链接文件)</span><br><span class="line">rw- u所有者 r-- g所属组 r-- o其他人</span><br><span class="line">r 读  w 写 x 执行</span><br></pre></td></tr></table></figure><h2 id="chmod-命令"><a href="#chmod-命令" class="headerlink" title="chmod 命令"></a>chmod 命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod [选项] 模式 文件名</span><br><span class="line">选项 -R递归 模式 [ugoa][+-=][rwx]</span><br><span class="line">[mode=421]</span><br></pre></td></tr></table></figure><h2 id="修改权限"><a href="#修改权限" class="headerlink" title="修改权限"></a>修改权限</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod u+x cangls.av</span><br><span class="line">chmod g+w,o+w furong.av</span><br><span class="line">chmod a=rwx fengjie.av</span><br></pre></td></tr></table></figure><h2 id="权限的数字表示"><a href="#权限的数字表示" class="headerlink" title="权限的数字表示"></a>权限的数字表示</h2><p>r—4 w—2 x—1 rwxr-xr-x — 755</p><h2 id="权限对文件的作用"><a href="#权限对文件的作用" class="headerlink" title="权限对文件的作用"></a>权限对文件的作用</h2><ol><li>r:读取文件内容(cat more head tail)</li><li>w:编辑、新增、修改文件内容( vi echo ) 但是不包含删除文件</li><li>x:可执行</li></ol><h2 id="权限对目录的作用"><a href="#权限对目录的作用" class="headerlink" title="权限对目录的作用"></a>权限对目录的作用</h2><ol><li>r:可以查询目录下文件名 (ls)</li><li>w:具有修改目录结构的权限。如新建文件和目录,删除此目录下文件和目录,重命名此目录下文件和目录,剪切(touch rm mv cp)</li><li>x:可以进入目录 (cd)</li><li>对文件来讲: 最高权限是 x</li><li>对目录来讲:最高权限是 w</li></ol><h2 id="修改文件的所有者"><a href="#修改文件的所有者" class="headerlink" title="修改文件的所有者"></a>修改文件的所有者</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown 用户名 文件名</span><br><span class="line">例如: chown ds h.c</span><br></pre></td></tr></table></figure><h2 id="修改文件的所属组"><a href="#修改文件的所属组" class="headerlink" title="修改文件的所属组"></a>修改文件的所属组</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chgrp 组名 文件名</span><br><span class="line">例如: chgrp group1 h.c</span><br></pre></td></tr></table></figure><h2 id="查看默认权限的命令"><a href="#查看默认权限的命令" class="headerlink" title="查看默认权限的命令"></a>查看默认权限的命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">umask查看默认权限</span><br><span class="line">0022  第一位0 :文件特殊权限 022 :文件默认权限</span><br></pre></td></tr></table></figure><blockquote><p>文件的默认权限 文件默认不能建立为执行文件,必须手工赋予执行权限 所以文件默认权限最大为666 默认权限需要换算成字母再相减 建立文件之后的默认权限,为666减去umask</p></blockquote><p>例如:</p><p>文件默认最大权限666 umask值022</p><p>-rw-rw-rw- 减去 —- w–w-等于 -rw-r-r-</p><p>例如: 文件默认最大权限666 umask值033</p><p>-rw-rw-rw- 减去 —- wx-wx 等于 -rw-r-r</p><blockquote><p>目录的默认权限 目录默认权限最大为777 默认权限需要换算成字母再相减 建立文件之后的默认权限,为777减去umask值</p></blockquote><p>例如:</p><p>目录默认最大权限为777 umask值022</p><p>-rwxrwxrwx 减去 —-w–w- 等于 -rwxr-xr-x</p><h2 id="修改umask"><a href="#修改umask" class="headerlink" title="修改umask"></a>修改umask</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">临时修改 umask 0002</span><br><span class="line">永久修改  vi/etc/profile</span><br></pre></td></tr></table></figure><h1 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h1><ul><li>查看所有进程<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ps aux #查看系统中所有进程,使用BSD操作系统格式</span><br><span class="line">ps -le #查看系统中所有进程,使用Linux标准命令格式</span><br><span class="line">选项</span><br><span class="line">a:显示一个终端的所有进程,除了会话引线</span><br><span class="line">-u:显示进程的归属用户及内存的使用情况</span><br><span class="line">-x:显示没有控制终端的进程</span><br><span class="line">-l:长格式显示,显示更加详细的信息</span><br><span class="line">-e:显示所有进程,和-A作用一致</span><br><span class="line">- ps命令的输出</span><br><span class="line">USER:该进程是由哪个用户产生的</span><br><span class="line">PID:进程的ID号;</span><br><span class="line">%CPU:该进程占用CPU资源的百分比,占用越高,进程越耗费资源;</span><br><span class="line">%MEM:该进程占用物理内存的百分比,占用越高,进程越耗费资源</span><br><span class="line">VSZZ:该进程占用虚拟内存的大小,单位KB:</span><br><span class="line">Rss:该进程占用实际物理内存的大小,单位KB:</span><br><span class="line">TTY:该进程是在哪个终端中运行的,其中tty1-tty7代表本地控制台 终端, tty1-tty6是本地的字符界面终端, 255代表虚拟终端。 tty7是图形终端. pts/0</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">STAT :进程状态,常见的状态有</span><br><span class="line">R:运行 S:睡眠 T:停止状态 -s:包含子进程 +:位于后台</span><br><span class="line">START:该进程的启动时间</span><br><span class="line">TIME:该进程占用CPU的运算时间, 不是系统时间</span><br><span class="line">COMMAND:产生此进程的命令名</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Termux 安装 R</title>
      <link href="/posts/Termux-R.html"/>
      <url>/posts/Termux-R.html</url>
      
        <content type="html"><![CDATA[<p>Termux 安装 R</p><span id="more"></span><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><p>建立 storage</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termux-setup-storage</span><br></pre></td></tr></table></figure><p>添加镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> EDITOR=vi</span><br><span class="line">apt edit-sources</span><br></pre></td></tr></table></figure><p>进入之后输入 i 进入编辑模式。</p><ul><li>添加如下源</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deb [trusted=<span class="built_in">yes</span>] https://its-pointless.github.io/files/ termux extras</span><br></pre></td></tr></table></figure><p>环境更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get upgrade</span><br></pre></td></tr></table></figure><p>安装 R</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install r-cran</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Termux </tag>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ADB 与 Fastboot 常用命令</title>
      <link href="/posts/Adb.html"/>
      <url>/posts/Adb.html</url>
      
        <content type="html"><![CDATA[<p>Adb 与 Fastboot 常用命令</p><span id="more"></span><h1 id="ADB"><a href="#ADB" class="headerlink" title="ADB"></a>ADB</h1><h2 id="刷机命令"><a href="#刷机命令" class="headerlink" title="刷机命令"></a>刷机命令</h2><table><thead><tr><th align="left">解释</th><th align="left">命令</th></tr></thead><tbody><tr><td align="left">启动</td><td align="left">adb server,adb start-server</td></tr><tr><td align="left">停止</td><td align="left">adb server,adb kill-server</td></tr><tr><td align="left">查看连接状态</td><td align="left">adb devices</td></tr><tr><td align="left">重启命令</td><td align="left">adb reboot</td></tr><tr><td align="left">重启到Rec</td><td align="left">adb reboot recovery</td></tr><tr><td align="left">重启到Fastboot</td><td align="left">adb reboot bootloader</td></tr><tr><td align="left">推送ROM包</td><td align="left">adb sideload &lt;Rom包&gt;</td></tr></tbody></table><h2 id="错误提示"><a href="#错误提示" class="headerlink" title="错误提示"></a>错误提示</h2><ol><li><code>offline</code> 设备未连接成功或无响应；</li><li><code>device</code> 设备已连接；</li><li><code>no device</code> 没有设备&#x2F;模拟器连接；</li><li><code>List of devices attached</code> 设备&#x2F;模拟器未连接到 adb 或无响应</li></ol><h2 id="安装卸载"><a href="#安装卸载" class="headerlink" title="安装卸载"></a>安装卸载</h2><table><thead><tr><th align="left">解释</th><th align="left">命令</th></tr></thead><tbody><tr><td align="left">安装</td><td align="left">adb install <package></td></tr><tr><td align="left">卸载</td><td align="left">adb uninstall <package></td></tr><tr><td align="left">保留数据卸载</td><td align="left">adb uninstall -k <package></td></tr></tbody></table><h2 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h2><table><thead><tr><th align="left">解释</th><th align="left">命令</th></tr></thead><tbody><tr><td align="left">复制设备到电脑</td><td align="left">adb pull &lt;设备文件路径&gt; &lt;电脑目录&gt; 例如：adb pull &#x2F;sdcard&#x2F;1.txt E:|</td></tr><tr><td align="left">复制电脑到设备</td><td align="left">abd pull &lt;电脑文件路径&gt; &lt;设备目录&gt; 例如：adb pull E:\1.txt &#x2F;sdcard&#x2F;</td></tr></tbody></table><h2 id="查看手机信息"><a href="#查看手机信息" class="headerlink" title="查看手机信息"></a>查看手机信息</h2><table><thead><tr><th align="left">解释</th><th align="left">命令</th></tr></thead><tbody><tr><td align="left">查看设备型号</td><td align="left">adb shell getprop ro.product.model</td></tr><tr><td align="left">获取IMEI</td><td align="left">adb shell [回车] su [回车] service call iphonesubinfo 1</td></tr><tr><td align="left">获取手机程序包名</td><td align="left">adb shell pm list packages</td></tr><tr><td align="left">获取序列号</td><td align="left">adb get-serialno</td></tr><tr><td align="left">查看所有应用列表</td><td align="left">adb shell pm list packages</td></tr><tr><td align="left">查看系统应用列表</td><td align="left">db shell pm list packages -s</td></tr><tr><td align="left">查看第三方应用列表</td><td align="left">adb shell pm list packages -3</td></tr></tbody></table><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><table><thead><tr><th align="left">解释</th><th align="left">命令</th></tr></thead><tbody><tr><td align="left">查看log</td><td align="left">adb logcat</td></tr><tr><td align="left">终止adb服务进程</td><td align="left">adb kill-server</td></tr><tr><td align="left">重启adb服务进程</td><td align="left">adb start-server</td></tr><tr><td align="left">获取机器MAC地址</td><td align="left">adb shell  cat &#x2F;sys&#x2F;class&#x2F;net&#x2F;wlan0&#x2F;address</td></tr><tr><td align="left">获取CPU序列号</td><td align="left">adb shell cat &#x2F;proc&#x2F;cpuinfo</td></tr><tr><td align="left">安装APK</td><td align="left">adb install <apkfile></td></tr><tr><td align="left">卸载APK</td><td align="left">adb uninstall <package></td></tr><tr><td align="left">查看设备cpu和内存占用情况</td><td align="left">adb shell top</td></tr><tr><td align="left">查询各进程内存使用情况</td><td align="left">adb shell procrank</td></tr><tr><td align="left">查看wifi密码</td><td align="left">adb shell cat &#x2F;data&#x2F;misc&#x2F;wifi&#x2F;*.conf</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb install &lt;参数&gt; &lt;apk_path&gt;</span><br></pre></td></tr></table></figure><ul><li><code>-l</code> 将应用安装到保护目录 &#x2F;mnt&#x2F;asec</li><li><code>-r</code> 允许覆盖安装；</li><li><code>-t</code> 允许安装 AndroidManifest.xml 里 application 指定 android:testOnly&#x3D;”true” 的应用</li><li><code>-s</code> 将应用安装到 sdcard</li><li><code>-d</code> 允许降级覆盖安装</li><li><code>-g</code> 授予所有运行时权限</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb uninstall -k &lt;PackageName&gt;</span><br></pre></td></tr></table></figure><ul><li><code>-k</code> 卸载应用但保留数据和缓存目录,可选，</li></ul><h1 id="Fastboot"><a href="#Fastboot" class="headerlink" title="Fastboot"></a>Fastboot</h1><table><thead><tr><th align="left">解释</th><th align="left">命令</th></tr></thead><tbody><tr><td align="left">查看连接状态</td><td align="left">fastboot devices</td></tr><tr><td align="left">解锁</td><td align="left">fastboot flashing unlock OR fastboot oem unlock</td></tr><tr><td align="left">上锁</td><td align="left">fastboot flashing lock OR fastboot oem lock</td></tr><tr><td align="left">重启</td><td align="left">fastboot reboot</td></tr><tr><td align="left">重启到Fastboot</td><td align="left">fastboot reboot-bootloader</td></tr><tr><td align="left">清除分区数据</td><td align="left">fastboot erase &lt;boot&#x2F;system&#x2F;data&#x2F;cache&#x2F;userdata&#x2F;recovery&gt;</td></tr><tr><td align="left">清除分区(四清)</td><td align="left">fastboot erase system -w</td></tr><tr><td align="left">格式化分区数据</td><td align="left">fastboot format &lt;boot&#x2F;system&#x2F;data&#x2F;cache&#x2F;userdata&#x2F;recovery&gt;</td></tr><tr><td align="left">烧写分区</td><td align="left">fastboot flash &lt; boot&#x2F;system &#x2F;recovery&#x2F;radio&#x2F;bootloader&#x2F; splash1&#x2F;&gt; &lt;*.img&gt;</td></tr></tbody></table><h2 id="系统分区"><a href="#系统分区" class="headerlink" title="系统分区"></a>系统分区</h2><p>Via: <a href="https://segmentfault.com/a/1190000021601415">Android 分区</a></p><table><thead><tr><th align="left">分区</th><th align="left">介绍</th></tr></thead><tbody><tr><td align="left">boot</td><td align="left">包含通过 mkbootimg 组合在一起的kernel镜像和 ramdisk。使能system-as-root后，该分区仅存放kernel镜像</td></tr><tr><td align="left">system</td><td align="left">主要包含 Android 框架。使能system-as-root后，该分区会包含原始 system.img 和 ramdisk.img 的合并内容</td></tr><tr><td align="left">recovery</td><td align="left">用于存储在 OTA 升级时使用的recovery系统。如果设备支持A&#x2F;B更新，OTA升级可以通过ramdisk执行，该分区可以不需要</td></tr><tr><td align="left">cache</td><td align="left">用于存储临时数据，OTA升级包也会下载到这个分区。如果设备使用 A&#x2F;B 更新，则可以不要此分区</td></tr><tr><td align="left">misc</td><td align="left">分区供recovery使用，存储空间不能小于 4KB</td></tr><tr><td align="left">userdata</td><td align="left">存储用户安装的应用和数据</td></tr><tr><td align="left">metadata</td><td align="left">如果设备被加密，则需要使用该分区，分区的存储空间不能小于 16MB</td></tr><tr><td align="left">vendor</td><td align="left">包含所有不可分发给 Android 开源项目 (AOSP) 的二进制文件。如果没有专有信息，可以不要该分区</td></tr><tr><td align="left">radio</td><td align="left">包含无线装置映像。只有包含无线装置的设备才需要此分区</td></tr><tr><td align="left">tos</td><td align="left">用于存储 Trusty 操作系统的二进制映像文件，仅在设备包含 Trusty 时使用</td></tr><tr><td align="left">product</td><td align="left">用于存放产品专用的配置和应用，以便OEM定制自己的系统。Android 9 及更高版本支持该分区。product分区是对system分区的扩展，必须同时升级这两个分区</td></tr><tr><td align="left">odm</td><td align="left">用于ODM自定义自己的板级支持包。Android 10 开始支持该分区。odm分区是对vendor分区的扩展，必须同时升级这两个分区</td></tr></tbody></table><h2 id="常用-Fastboot-命令"><a href="#常用-Fastboot-命令" class="headerlink" title="常用 Fastboot 命令"></a>常用 Fastboot 命令</h2><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>A&#x2F;B 分区设备无 Recovery 分区,不能使用 <code>fastboot flash recovery</code></p><h3 id="刷入临时-TWRP"><a href="#刷入临时-TWRP" class="headerlink" title="刷入临时 TWRP"></a>刷入临时 TWRP</h3><figure class="highlight sh"><figcaption><span>bootloader 下</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastboot boot twrp.img</span><br></pre></td></tr></table></figure><h3 id="输入镜像"><a href="#输入镜像" class="headerlink" title="输入镜像"></a>输入镜像</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fastboot flash recovery recovery.img</span><br><span class="line">fastboot flash system system.img</span><br><span class="line">fastboot flash boot boot.img</span><br><span class="line">fastboot reboot</span><br></pre></td></tr></table></figure><h1 id="bootloader-识别不到设备"><a href="#bootloader-识别不到设备" class="headerlink" title="bootloader 识别不到设备"></a>bootloader 识别不到设备</h1><p>安装 <a href="./posts/UsbDriver.html">Google USB Driver</a> 即可解决。</p>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> Android </tag>
            
            <tag> ADB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL EXISTS</title>
      <link href="/posts/SQL-Exists.html"/>
      <url>/posts/SQL-Exists.html</url>
      
        <content type="html"><![CDATA[<p>SQL 中 EXISTS</p><span id="more"></span><h1 id="三点概念"><a href="#三点概念" class="headerlink" title="三点概念"></a>三点概念</h1><p>概念</p><ul><li><code>EXISTS</code> 子查询找到的提交</li><li><code>NOT EXISTS </code>子查询中 找不到的提交</li></ul><p>说明</p><ul><li>不要去翻译为存在和不存在，把脑袋搞晕。</li><li><code>exists</code>代表存在量词<code>ョ</code>，该查询结果没有值，只有逻辑值真true和逻辑假false两个值。<ul><li>建立程序循环的概念，这是一个动态的查询过程。如 FOR循环.</li><li><code>Exists</code>执行的流程<code>Exists</code>首先执行外层查询，再执行内存查询,与<code>IN</code>相反。 流程为首先取出外层中的第一元组，再执行内层查询，将外层表的第一元组代入,若内层查询为真，即有结果时。返回外层表中的第一元 组，接着取出第二元组，执行相同的算法。一直到扫描完外层整表。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i <span class="operator">=</span><span class="number">0</span>;  i<span class="operator">&lt;&gt;</span>EOFout;i<span class="operator">+</span><span class="operator">+</span>)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j <span class="operator">=</span> <span class="number">0</span> ; j<span class="operator">&lt;</span>EOFint,j<span class="operator">+</span><span class="operator">+</span>)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><p>表<br>学生表student (Sno,Sname)</p><p>课程表course (Cno,Cname)</p><p>选课表SC(Sno,Cno)</p><p>要求查询出 ：选修了全部课程的学生姓名</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>思路一<br>首先学生的选课信息存在于SC表中， 要想知道某个学生是否选修了全部课程，至少我们需要知道一共有几门课程，这是首要的条件。其次，学生选修了与否，我们又要扫描SC全表，统计出选修了所有课程的学生号，最后在STUDENT表中根据学生号打出姓名 。</p><ul><li><p>语句如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> Sname <span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> Sno <span class="keyword">IN</span></span><br><span class="line">(<span class="keyword">select</span> Sno <span class="keyword">from</span> SC</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Sno</span><br><span class="line"> <span class="operator">/</span><span class="operator">/</span>根据Sno分组，统计每个学生选修了几门课程。如果等于course的总数，就是我们要找的Sno</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">=</span> (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> course ))</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>统计course中共有几门课程</span><br></pre></td></tr></table></figure><p>另一种思路：</p></li><li><p>引入：将题目换为 查找学号为 00003 没有选修的科目</p><ul><li>思路：我们可以将已知学号代入，把每一个科目代入（循环），这将形成<code>1*count(*)</code>种组合。将这组成作为条件，一一与SC表种进行比对，找不到匹配的我们提交.<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> Cname <span class="keyword">from</span> course  <span class="keyword">where</span></span><br><span class="line"><span class="keyword">not</span> <span class="keyword">exists</span>  <span class="operator">/</span><span class="operator">/</span>找不到的组合，提交course</span><br><span class="line">(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> SC <span class="keyword">where</span> course.cno <span class="operator">=</span> cno <span class="keyword">and</span> sno <span class="operator">=</span> <span class="string">&#x27;&#x27;</span><span class="number">00002</span><span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>在SC中匹配</span><br></pre></td></tr></table></figure></li></ul></li><li><p>查找没有 没有选修科目的学生姓名</p><ul><li><p>思路：</p><ul><li>学号未知,科目未知，说明有两个未知变量。应该有两个EXISTS。我们可以扫描student 和 course共有 s * c 中组合，将这些组合与SC的每一项进行匹配，注意s*c组合已经包含所有可能。如果全部找到 ，就说明已经选修了全部课程。找不到就说明有课程没选修 。再将没选修的的提交给上一exists 循环 。若上一exists 不存在的再提交给外循环。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> Sname <span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">NOT</span> <span class="keyword">exists</span>        <span class="operator">/</span><span class="operator">/</span></span><br><span class="line">(<span class="keyword">select</span>  <span class="operator">*</span> <span class="keyword">from</span> course</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">NOT</span> <span class="keyword">exists</span>      <span class="operator">/</span><span class="operator">/</span>不存在的提交给course</span><br><span class="line">(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> SC <span class="keyword">where</span></span><br><span class="line">Sno <span class="operator">=</span> student.sno  <span class="keyword">and</span> cno <span class="operator">=</span> Course.Cno))   <span class="operator">/</span><span class="operator">/</span> 代入两个未知变量</span><br></pre></td></tr></table></figure></li></ul></li><li><p>选修了全部课程的学生姓名.<br>将这组成作为条件，一一与SC表种进行比对，找不到匹配的我们提交 。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> Cname <span class="keyword">from</span> course <span class="keyword">where</span></span><br><span class="line"><span class="keyword">not</span> <span class="keyword">exists</span>  <span class="operator">/</span><span class="operator">/</span>找不到的组合，提交course</span><br><span class="line">(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> SC <span class="keyword">where</span> course.cno <span class="operator">=</span> cno <span class="keyword">and</span> sno <span class="operator">=</span> <span class="string">&#x27;&#x27;</span><span class="number">00003</span><span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>在SC中匹配</span><br></pre></td></tr></table></figure></li><li><p>查找没有选修科目的学生姓名</p><ul><li>思路：1. 学号未知 科目未知 说明有两个未知变量。2. 应该有两个<code>EXISTS</code>。我们可以扫描<code>student</code>和<code>course</code>共有<code>s*c</code>中组合，将这些组合与SC的每一项进行匹配，注意s*c组合已经包含所有可能。如果全部找到 ，就说明已经选修了全部课程。找不到就说明有课程没选修 。再将没选修的的提交给上一exists 循环 。若上一exists 不存在的再提交给外循环。</li></ul></li><li><p>查询选修了全部课程的学生姓名。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Sname</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span></span><br><span class="line">（<span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> Course</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span></span><br><span class="line">(<span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> Sno<span class="operator">=</span> Student.Sno</span><br><span class="line"><span class="keyword">AND</span> Cno<span class="operator">=</span> Course.Cno）</span><br></pre></td></tr></table></figure></li><li><p>查询所有选修了001课程的学生名单</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sname</span><br><span class="line"><span class="keyword">from</span> student a</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">exists</span> (</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> sc b</span><br><span class="line"><span class="keyword">where</span> a.sno<span class="operator">=</span>b.sno <span class="keyword">and</span> cno<span class="operator">=</span><span class="string">&#x27;001&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>查询没有选修了001课程的学生名单</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sname</span><br><span class="line"><span class="keyword">from</span> student a</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span> (</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> sc b</span><br><span class="line"><span class="keyword">where</span> a.sno<span class="operator">=</span>b.sno <span class="keyword">and</span> cno<span class="operator">=</span><span class="string">&#x27;001&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>查询选修了所有课程的学生名单。</p></li></ul><p>由于SQL中没有全称量词，可以这样理解：查询这样的学生，没有一门课程他没有选</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sname</span><br><span class="line"><span class="keyword">from</span> student a</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span> (</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> course b</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span> (</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> sc c</span><br><span class="line"><span class="keyword">where</span> a.sno<span class="operator">=</span>c.sno <span class="keyword">and</span> c.cno<span class="operator">=</span>b.cno))</span><br></pre></td></tr></table></figure><p>注意：SQL没有蕴涵谓词，可以使用等价变换进行转换<code>p→q ≡ ┑p∨q</code></p><ul><li>查询至少选修了学生95002选修的全部课程的学生名单。</li></ul><p>将查询进行变换： p表示的谓词：95002选修了课程y</p><p>q表示的谓词：学生x选修了课程y</p><p>该查询转换为：( y)p→q</p><p>进一步转换：( y)p→q ≡</p><p>┑(ョy( ┑(p→q))) ≡ ┑(ョy( ┑(┑p∨q)))</p><p>≡ ┑ョy(p∧q) 德模根定律</p><p>它所表达的含义为：不存在这样的课程y，95002选修了y而x没有选，SQL语句如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sname,sno</span><br><span class="line"><span class="keyword">from</span> student a</span><br><span class="line"><span class="keyword">where</span> sno <span class="operator">&lt;&gt;</span> <span class="string">&#x27;95002&#x27;</span> <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span> (</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> sc b</span><br><span class="line"><span class="keyword">where</span> sno<span class="operator">=</span><span class="string">&#x27;95002&#x27;</span> <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span> (</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> sc c</span><br><span class="line"><span class="keyword">where</span> a.sno<span class="operator">=</span>c.sno <span class="keyword">and</span> c.cno<span class="operator">=</span>b.cno))</span><br></pre></td></tr></table></figure></li></ul><p><a href="http://www.cnblogs.com/losesea/archive/2012/06/14/2549023.html">参考：</a></p>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git Push 错误解决方法</title>
      <link href="/posts/Git-error.html"/>
      <url>/posts/Git-error.html</url>
      
        <content type="html"><![CDATA[<p>git push用法和常见问题分析</p><span id="more"></span><h1 id="Git-push"><a href="#Git-push" class="headerlink" title="Git push"></a>Git push</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git push origin test:master</span><br><span class="line">// 提交本地test分支作为远程的master分支</span><br><span class="line">git push origin test:test</span><br><span class="line">// 提交本地test分支作为远程的test分支</span><br></pre></td></tr></table></figure><p>如果想删除远程的分支呢？类似于上面，如果:左边的分支为空，那么将删除:右边的远程的分支。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git push origin :test</span><br><span class="line">// 刚提交到远程的test将被删除，但是本地还会保存的，不用担心</span><br></pre></td></tr></table></figure><p>举个例子:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git push origin  :origin/Android_HK_K501_77-W916</span><br><span class="line">//由于:前面为空所以本来在服务器上面存在的分支origin/Android_HK_K501_77-W916和Android_HK_K501_77-W916</span><br><span class="line">现在就只有一个了,因为分支origin/Android_HK_K501_77-W916被删除了,但是本地的还在</span><br><span class="line"> git push ssh://git@dev.lemote.com/rt4ls.git master</span><br><span class="line"> // 把本地仓库提交到远程仓库的master分支中</span><br><span class="line">git remote add origin ssh://git@dev.lemote.com/rt4ls.git</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>这两个操作是等价的，第二个操作的第一行的意思是添加一个标记，让origin指向ssh:&#x2F;&#x2F;<a href="mailto:&#103;&#x69;&#x74;&#x40;&#x64;&#101;&#118;&#46;&#108;&#101;&#109;&#x6f;&#x74;&#x65;&#46;&#x63;&#x6f;&#x6d;">&#103;&#x69;&#x74;&#x40;&#x64;&#101;&#118;&#46;&#108;&#101;&#109;&#x6f;&#x74;&#x65;&#46;&#x63;&#x6f;&#x6d;</a>&#x2F;rt4ls.git，也就是说你操 作origin的时候，实际上就是在操作ssh:&#x2F;&#x2F;<a href="mailto:&#x67;&#105;&#116;&#x40;&#100;&#x65;&#x76;&#46;&#108;&#x65;&#x6d;&#x6f;&#116;&#x65;&#x2e;&#x63;&#111;&#109;">&#x67;&#105;&#116;&#x40;&#100;&#x65;&#x76;&#46;&#108;&#x65;&#x6d;&#x6f;&#116;&#x65;&#x2e;&#x63;&#111;&#109;</a>&#x2F;rt4ls.git。origin在这里完全可以理解为后者 的别名。</p><pre><code>注意：需要说明的是，默认情况下这条语句等价于提交本地的master仓库到远程仓库，并作为远程的master分支。如果想把本地的某个分支test提交到远程仓库，并作为远程仓库的master分支，或者作为另外一个名叫test的分支，那么可以这么做。</code></pre><h1 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误:"></a>常见错误:</h1><ul><li>1.error:failed to push some refs to …</li></ul><p>当要push代码到git时，出现提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">error:failed to push some refs to ...</span><br><span class="line">Dealing with “non-fast-forward” errors</span><br><span class="line">From time to time you may encounter this error while pushing:</span><br><span class="line">git push origin master</span><br><span class="line"></span><br><span class="line">To ../remote/</span><br><span class="line"></span><br><span class="line"> ! [rejected]        master -&gt; master (non-fast forward)</span><br><span class="line"></span><br><span class="line">error: failed to push some refs to &#x27;../remote/&#x27;</span><br><span class="line"></span><br><span class="line">To prevent you from losing history, non-fast-forward updates were rejected</span><br><span class="line"></span><br><span class="line">Merge the remote changes before pushing again.  See the &#x27;non-fast forward&#x27;</span><br><span class="line"></span><br><span class="line">section of &#x27;git push --help&#x27; for details.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>问题（Non-fast-forward）的出现原因在于：git仓库中已经有一部分代码，所以它不允许你直接把你的代码覆盖上去。于是你有2个选择方式：</p><p>强推，即利用强覆盖方式用你本地的代码替代git仓库内的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -f</span><br></pre></td></tr></table></figure><ul><li><ol start="2"><li>先把git的东西fetch到你本地然后merge后再push<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git fetch</span><br><span class="line">git merge</span><br></pre></td></tr></table></figure>这2句命令等价于<code>git pull</code></li></ol></li></ul><p>可是，这时候又出现了如下的问题：</p><p>上面出现的 [branch “master”]是需要明确(.git&#x2F;config)如下的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[branch &quot;master&quot;]</span><br><span class="line"></span><br><span class="line">    remote = origin</span><br><span class="line"></span><br><span class="line">    merge = refs/heads/master</span><br></pre></td></tr></table></figure><p>这等于告诉git2件事:</p><ul><li>1，当你处于master branch, 默认的remote就是origin。</li><li>2，当你在master branch上使用git pull时，没有指定remote和branch，那么git就会采用默认的remote（也就是origin）来merge在master branch上所有的改变</li></ul><p>如果不想或者不会编辑config文件的话，可以在bash上输入如下命令行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config branch.master.remote origin</span><br><span class="line">git config branch.master.merge refs/heads/master</span><br></pre></td></tr></table></figure><p>之后再重新git pull下。最后git push你的代码.</p><p><strong>参考</strong></p><ul><li><a href="http://www.cnblogs.com/renkangke/archive/2013/05/31/conquerAndroid.html">CSDN-Renkangke</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Termux </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 上机实验题</title>
      <link href="/posts/SQLexam.html"/>
      <url>/posts/SQLexam.html</url>
      
        <content type="html"><![CDATA[<p>SQL 上机习题与练习</p><span id="more"></span><h1 id="实验一-SQL-SERVER-2008的基本知识与操作"><a href="#实验一-SQL-SERVER-2008的基本知识与操作" class="headerlink" title="实验一   SQL SERVER 2008的基本知识与操作"></a>实验一   SQL SERVER 2008的基本知识与操作</h1><p>实验日期：</p><h2 id="实验目标："><a href="#实验目标：" class="headerlink" title="实验目标："></a>实验目标：</h2><p>（1）以SQL Server2008为实验平台掌握SQL Server服务器的注册、启动、暂停、查看与设置服务器的属性等操作；</p><p>（2）了解SQL Server Management Studio的功能</p><p>（3）学习SQL Server2008所提供的系统数据库；</p><p>（4）学习利用SQL Server Management Studio创建数据库。掌握数据库中这主数据文件、辅助数据文件、日志文件三类文件的作用；</p><p>（5）学习利用SQL Server Management Studio数据库中创建表；创建表的字段、字段的数据类型、设置表的主键；</p><p>（6）学习利用SQL Server Management Studio修改数据库中表的数据，删除表的数据、向表中插入数据；</p><p>（7）利用SQL Server Management Studio删除数据库中的表；</p><p>（8）利用SQL Server Management Studio删除数据库、分离数据库、附加数据库库。</p><h2 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h2><p>SQL Server 2008将数据保存在数据库中，并为用户提供了访问这些数据的接口。对数据库的基本操作包括创建、查看、修改和删除数据库等。在学习这些操作之前，先来了解一下数据库文件和SQL Server系统数据库。</p><h3 id="1-数据库文件"><a href="#1-数据库文件" class="headerlink" title="1.数据库文件"></a>1.数据库文件</h3><p>在SQL Server中数据库文件是存储数据的文件，其可以分为三类。</p><p>主数据文件：扩展名是.mdf，它包含数据库的启动信息以及数据库数据，每个数据库只能包含一个主数据文件。在SQL Server中数据的存储单位是页。</p><p>辅助数据文件：扩展名是.ndf,因为有些数据库可能非常大，用一个主数据文件可能放不下，因此就需要有一个多个辅助数据文件存储这些数据，可以和主数据文件放在相同的位置也可以存放在不同的位置。</p><p>日志文件：用来记录页的分配和释放以及对数据库数据的修改操作，扩展名为.ldf,包含用于恢复数据库的日志信息。每个数据库必须至少有一个日志文件，也可以有多个。</p><p>创建数据库时，一个数据库至少包含一个主数据文件和一个或多个日志文件，还可能包含一些辅助数据文件。这些文件默认的位置为：\program files\Microsoft SQL Server\MSSQL\Data文件夹。</p><h3 id="2-SQL-Server系统数据库"><a href="#2-SQL-Server系统数据库" class="headerlink" title="2.SQL Server系统数据库"></a>2.SQL Server系统数据库</h3><p>在 SQL Server 2008有两类数据库：系统数据库和用户数据库。系统数据库存储有关SQL Server 的系统信息，它们是SQL Server 2008管理数据库的依据。如果系统数据库遭到破坏，那么SQL Server将不能正常启动。在安装了SQL Server 2008的系统共中将创建4个可见系统数据库。</p><h4 id="（1）master数据库"><a href="#（1）master数据库" class="headerlink" title="（1）master数据库"></a>（1）master数据库</h4><p>master数据库是SQL Server中最重要的数据库，它是SQL Server的核心数据库，如果该数据库被损坏，SQL Server将无法正常工作，master数据库中包含所有的登录名或用户ID所属的角色、服务器中的数据库的名称及相关的信息、数据库的位置、SQL Server如何初始化四个方面的重要信息。</p><h4 id="（2）model数据库"><a href="#（2）model数据库" class="headerlink" title="（2）model数据库"></a>（2）model数据库</h4><p>用户创建数据库时是以一套预定义的标准为模型。例如，若希望所有的数据库都有确定的初始大小，或者都有特定的信息集，那么可以吧这些信息放在model数据库中，以model数据库作为其他数据库的模板数据库。如果想要使用所有的数据库都有一个特定的表，可以把该表放在model数据库里。model数据库是tempdb数据库的基础。对model数据库的任何改动都将反映在tempdb数据库中，所以，在决定对model数据库有所改变时，必须预先考虑好。</p><h4 id="（3）msdb数据库"><a href="#（3）msdb数据库" class="headerlink" title="（3）msdb数据库"></a>（3）msdb数据库</h4><p>msdb数据库给SQL Server代理提供必要的信息来运行作业，其供SQL Server 2008代理程序调度警报作业以及记录操作时使用。</p><h4 id="（4）tempdb数据库"><a href="#（4）tempdb数据库" class="headerlink" title="（4）tempdb数据库"></a>（4）tempdb数据库</h4><p>tempdb数据库用作系统的临时存储空间，其主要作用是存储用户建立的临时表和临时存储过程，存储用户说明的全局变量值，为数据排序创建临时表，存储用户利用游标说明所筛选出来的数据。</p><h3 id="3-创建数据库"><a href="#3-创建数据库" class="headerlink" title="3.创建数据库"></a>3.创建数据库</h3><p>选择开始菜单中→程序→【Management SQL Server 2008】→【SQL Server Management Studio】命令，打开【SQL Server Management Studio】窗口，并使用Windows或 SQL Server身份验证建立连接。</p><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fq55rpftisj20id0crq4i.jpg"></p><p>图1.1 新建数据库</p><p>在【对象资源管理器】窗口中展开服务器，然后选择【数据库】节点。右键单击【数据库】节点，从弹出来的快捷菜单中选择【新建数据库】命令。执行上述操作后，会弹出【新建数据库】对话框。在对话框、左侧有3个选项，分别是【常规】、【选项】和【文件组】。完成这三个选项中的设置会后，就完成了数据库的创建工作，在【数据库名称】文本框中输入要新建数据库的名称。例如，这里以“Students”。<br>【数据库文件】列表中包括两行，一行是数据库文件，而另一行是日志文件。通过单击下面的【添加】、【删除】按钮添加或删除数据库文件，如图1.1。</p><p>【逻辑名称】指定该文件的文件名。</p><p>【文件类型】用于区别当前文件是数据文件还是日志文件。</p><p>【文件组】显示当前数据库文件所属的文件组。一个数据只能存在一个文件组里。</p><p>【初始大小】指定该文件的初始容量。默认值为3MB.日志默认值为1MB。</p><p>【自动增长】用于设置文件的容量不够用时，文件根据何中增长方式自动增长。</p><p>完成以上操作后，单击【确定】按钮关闭【新建数据库】对话框。至此“新建的数据”数据库创建成功。新建的数据库可以再【对象资源管理器】窗口看到，如下图1.2所示。</p><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fq55qxojyqj20bu090di5.jpg"></p><p>图1.2建好后的数据库Students</p><h3 id="4-修改数据库"><a href="#4-修改数据库" class="headerlink" title="4.修改数据库"></a>4.修改数据库</h3><p>建立一个数据库之后，可以根据需要对该数据库的结构进行修改。</p><p>启动SSMS，在“对象资源管理器”窗格中展开数据库节点，右击要修改的数据库名称，在弹出的快捷菜单中选择“属性”命令，打开“数据库属性”对话框。可以通过修改数据库属性来修改数据库。修改数据库的操作包括增减数据库文件、修改文件属性（包括数据库的名称、大小和属性）、修改数据库选项等。</p><h3 id="5-删除数据库"><a href="#5-删除数据库" class="headerlink" title="5.删除数据库"></a>5.删除数据库</h3><p>为了减少系统资源的消耗，对于不再需要的用户创建数据库，应当把它从数据库服务器中删除，从而将其所占的磁盘空间全部释放掉。<br>删除数据库的具体操作如下：</p><p>启动SSMS，在“对象资源管理器”窗格中展开数据库节点，右击要删除的数据库名称，在弹出的快捷菜单中选择“删除”命令，打开“删除对象”对话框，单击“确定”按钮，数据库就被删除。</p><h4 id="1-分离和附件数据库"><a href="#1-分离和附件数据库" class="headerlink" title="1.分离和附件数据库"></a>1.分离和附件数据库</h4><p>当数据库需要从一台计算机移到另一台计算机，或者需要从一个物理磁盘移到另一个物理磁盘时，常要进行数据库的附加与分离操作。<br>附加数据库是指将当前数据库以外的数据库附加到当前数据库服务器中。<br>附加数据库的具体操作如下：</p><p>启动SSMS，在“对象资源管理器”窗格中右击“数据库”节点在快捷菜单中选择“附加”命令，打开“附加数据库”对话框，如图1.3所示，单击“添加”按钮，打开“定位数据库文件”对话框，选择要附加的数据库主数据文件（.mdf），单击“确定”按钮，返回上述“附加数据库”对话框，单击“确定”按钮，完成数据库的附加操作。</p><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fq55sk9nhsj209v0b541h.jpg"></p><p>图1.3 附加数据库</p><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fq55tj2m36j20bq0as41r.jpg"></p><p>图1.4 分离数据库</p><p>分离数据库就是讲数据库从SQLserver2008服务器中卸载，但依然保存数据库的数据文件和日志文件。需要时，分离的数据库，可以重新附加到SQL server2008服务器中。</p><p>分离数据库的具体操作如下：</p><p>启动SSMS，在“对象资源管理器”窗格中展开数据库节点，右击要分离的数据库名称，在弹出的快捷菜单中单击“任务”→“分离”命令，如图1.4所示，打开“分离数据库”对话框，单击“确定”按钮，实现数据库的分离。</p><h2 id="简答题："><a href="#简答题：" class="headerlink" title="简答题："></a>简答题：</h2><p>（1）打开SQL Server Management Studio时，怎样进行数据库的登录认证？</p><p>答：</p><ol><li>打开 SQL Server Management Studio，以 Windows身份认证方式登录</li><li>在对象资源管理器下，右键 Security &#x3D;&#x3D;&gt; Logins &#x3D;&#x3D;&gt; New Login </li><li>点击图片中的Logins </li><li>会显示SQL server 的所有用户</li></ol><p>（2）对象资源管理器的作用是什么？<br>答：“对象资源管理器”是服务器中所有数据库对象的树视图。此树视图可以包括SQL Server Database Engine、Reporting Services、Analysis Services、Integration Services和SQL Server Mobile的数据库。对象资源管理器包括与其链接的所有服务器的信息。</p><h1 id="实验二-管理数据库操作"><a href="#实验二-管理数据库操作" class="headerlink" title="实验二   管理数据库操作"></a>实验二   管理数据库操作</h1><p>实验日期：</p><h2 id="实验目标：-1"><a href="#实验目标：-1" class="headerlink" title="实验目标："></a>实验目标：</h2><p>（1）熟练掌握用SQL语句创建数据库的方法。</p><p>（2）熟练掌握数据库属性的设置。</p><p>（3）掌握数据库的修改和删除方法。</p><h2 id="实验内容："><a href="#实验内容：" class="headerlink" title="实验内容："></a>实验内容：</h2><p>（1）利用SQL Server Management Studio创建一个”SM”的数据库，初始大小为3MB,最大为50MB，数据库自动增长，增长方式按10%；日志文件初始大小为2MB，最大值不受限制，按1MB增长。</p><p>（2）通过SQL语句创建一个名为“学籍”的数据库，指定主文件名为“学籍_data”，存储路径为“d:\example\学籍_data.mdf”，该数据文件的初始大小为10MB，最大为100MB，增长方式按10MB增长；指定主日志文件名为“学籍_log”，存储路径为“d:\example\学籍_log.ldf”，该日志文件初始大小为20MB，最大为200MB，按10MB增长。</p><p>①在工具栏单击“新建查询”按钮，打开代码编辑器，输入如下SQL语句。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">Create</span> database 学籍</span><br><span class="line">   <span class="keyword">On</span>  <span class="keyword">primary</span></span><br><span class="line">(name<span class="operator">=</span>学籍_data,</span><br><span class="line">Filename<span class="operator">=</span>’d:\example\学籍_data.mdf’,</span><br><span class="line">Size<span class="operator">=</span><span class="number">10</span>,</span><br><span class="line">Maxsize<span class="operator">=</span><span class="number">100</span>,</span><br><span class="line">Filegrowth<span class="operator">=</span><span class="number">10</span>)</span><br><span class="line">Log <span class="keyword">on</span></span><br><span class="line">(name<span class="operator">=</span>学籍_log,</span><br><span class="line">Filename<span class="operator">=</span>’d:\example\学籍_log.ldf’,</span><br><span class="line">Size<span class="operator">=</span><span class="number">20</span>,</span><br><span class="line">Maxsize<span class="operator">=</span><span class="number">200</span>,</span><br><span class="line">Filegrowth<span class="operator">=</span><span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>请执行该语句，即可创建“学籍”数据库。</p><p>② 使用对象资源管理器，可以修改“学籍”数据库。选择“学籍”数据库的节点，点击右键，在弹出的快捷菜单中选择“属性”命令，打开“数据库属性”对话框，即可进行数据库的修改操作。</p><p>③ 使用”SQL”语句，在“学籍”数据库中添加一个数据文件“学籍_data1”，指定其初始大小为4MB，最大不受限制，增长方式按10%增长。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Alter</span> database 学籍</span><br><span class="line"><span class="keyword">Add</span> file</span><br><span class="line">(name<span class="operator">=</span>’学籍_data1’,</span><br><span class="line">Filename<span class="operator">=</span>’d:\example\学籍_data1.mdf’,</span><br><span class="line">Size<span class="operator">=</span><span class="number">4</span>,</span><br><span class="line">Maxsize<span class="operator">=</span>unlimited,</span><br><span class="line">Filegrowth<span class="operator">=</span><span class="number">10</span><span class="operator">%</span>)</span><br><span class="line">Go</span><br></pre></td></tr></table></figure><p>④使用SQL语句删除“学籍”数据库。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Drop</span> database 学籍</span><br><span class="line">GO</span><br></pre></td></tr></table></figure><p>提示：当数据库正在参与复制是不能删除，当数据库正在被复制时不能删除，当有用户正在使用数据库时不能删除。</p><h2 id="简答题：-1"><a href="#简答题：-1" class="headerlink" title="简答题："></a>简答题：</h2><p>（1）SQL Server2008中的数据库能否只包含数据文件？</p><h1 id="实验三-用T-SQL创建与修改表的操作"><a href="#实验三-用T-SQL创建与修改表的操作" class="headerlink" title="实验三   用T-SQL创建与修改表的操作"></a>实验三   用T-SQL创建与修改表的操作</h1><p>实验日期：</p><h2 id="实验目标：-2"><a href="#实验目标：-2" class="headerlink" title="实验目标："></a>实验目标：</h2><p>（1）熟练掌握各种数据类型。</p><p>（2）熟练运用T-SQL（Transact-SQL）语句正确创建表。</p><p>（3）掌握常用的数据完整性约束。</p><h2 id="实验内容：-1"><a href="#实验内容：-1" class="headerlink" title="实验内容："></a>实验内容：</h2><p>（1）创建“学籍”数据库，在该数据库中创建Student表。<br>表3.1 Student表的结构</p><table><thead><tr><th align="center">列名</th><th align="center">数据类型</th><th align="center">长度</th><th align="center">字段说明</th><th align="center">能否为空</th><th align="center">是否主键</th></tr></thead><tbody><tr><td align="center">Sno</td><td align="center">CHAR</td><td align="center">10</td><td align="center">学号</td><td align="center">否</td><td align="center">是</td></tr><tr><td align="center">Sname</td><td align="center">CHAR</td><td align="center">10</td><td align="center">姓名</td><td align="center">是</td><td align="center">否</td></tr><tr><td align="center">Ssex</td><td align="center">CHAR</td><td align="center">2</td><td align="center">性别</td><td align="center">是</td><td align="center">否</td></tr><tr><td align="center">Sage</td><td align="center"></td><td align="center">TINYINT</td><td align="center">年龄</td><td align="center">是</td><td align="center">否</td></tr><tr><td align="center">Sdept</td><td align="center">CHAR</td><td align="center">10</td><td align="center">系</td><td align="center">是</td><td align="center">否</td></tr></tbody></table><p>利用T-SQL命令创建Student表，表的结构如表3.1所示。<br>代码如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span>  <span class="keyword">TABLE</span>  Student</span><br><span class="line">( Sno  <span class="type">CHAR</span>(<span class="number">10</span>)  <span class="keyword">primary</span> key,</span><br><span class="line"> Sname  <span class="type">CHAR</span>(<span class="number">10</span>),</span><br><span class="line"> Ssex  <span class="type">CHAR</span>(<span class="number">2</span>) <span class="keyword">check</span> (Ssex <span class="keyword">in</span> (‘男’,’女’)),</span><br><span class="line"> Sage  TINYINT,</span><br><span class="line"> Sdept  <span class="type">CHAR</span>(<span class="number">10</span>)</span><br><span class="line">  )</span><br></pre></td></tr></table></figure><p>（2）利用T-SQL命令创建Course表，表的结构如表3.2所示。</p><p>表3.2 Course表的结构</p><table><thead><tr><th align="center">列名</th><th align="center">数据类型</th><th align="center">长度</th><th align="center">字段说明</th><th align="center">能否为空</th><th align="center">是否主键</th></tr></thead><tbody><tr><td align="center">Cno</td><td align="center">CHAR</td><td align="center">5</td><td align="center">课程号</td><td align="center">否</td><td align="center">是</td></tr><tr><td align="center">Cname</td><td align="center">CHAR</td><td align="center">10</td><td align="center">课程名</td><td align="center">否</td><td align="center">否</td></tr><tr><td align="center">Credits</td><td align="center">TINYINT</td><td align="center"></td><td align="center">学分</td><td align="center">是</td><td align="center">否</td></tr><tr><td align="center">PCno</td><td align="center">CHAR</td><td align="center">5</td><td align="center">先修课程号</td><td align="center">是</td><td align="center">否</td></tr></tbody></table><p>代码如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Course (</span><br><span class="line">Cno     <span class="type">char</span>(<span class="number">5</span>)  <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">Cname   <span class="type">char</span>(<span class="number">10</span>)  <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> PCno    <span class="type">char</span>(<span class="number">5</span>),</span><br><span class="line">Credit  tinyint  <span class="keyword">CHECK</span> (Credit <span class="operator">&gt;</span> <span class="number">0</span>),</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY(Cno),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (PCno) <span class="keyword">REFERENCES</span> Course(Cno),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>（3）为已经创建了的Student表创建一个约束，规定在Student表中，如果学生没有提供所在系，就写入默认值“计算机系”。df_dept为该约束的名。<br>代码如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Alter</span> <span class="keyword">table</span> Student</span><br><span class="line"><span class="keyword">Add</span> <span class="keyword">constraint</span> df_dept</span><br><span class="line"><span class="keyword">Default</span>  ‘计算机系’  <span class="keyword">for</span>  Sdept</span><br></pre></td></tr></table></figure><p>（4）利用T-SQL命令创建SC表，表的结构如表3.3所示。<br>表3.3  SC表的结构</p><table><thead><tr><th align="center">列名</th><th align="center">数据类型</th><th align="center">长度</th><th align="center">字段说明</th><th align="center">能否为空</th><th align="center">是否主键</th></tr></thead><tbody><tr><td align="center">Sno</td><td align="center">CHAR</td><td align="center">10</td><td align="center">学号</td><td align="center">否</td><td align="center">是</td></tr><tr><td align="center">Cno</td><td align="center">CHAR</td><td align="center">5</td><td align="center">课程号</td><td align="center">否</td><td align="center">是</td></tr><tr><td align="center">Grade</td><td align="center">TINYINT</td><td align="center"></td><td align="center">成绩</td><td align="center">是</td><td align="center">否</td></tr></tbody></table><p>代码如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span>  <span class="keyword">TABLE</span>  SC(</span><br><span class="line">Sno <span class="type">char</span>(<span class="number">10</span>) <span class="keyword">FOREIGN</span> KEY(Sno) <span class="keyword">REFERENCES</span> Student(Sno) <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE,</span><br><span class="line">Cno <span class="type">char</span>(<span class="number">5</span>)  <span class="keyword">FOREIGN</span> KEY(Cno) <span class="keyword">REFERENCES</span> Course(Cno),</span><br><span class="line">Grade tinyint <span class="keyword">CHECK</span>(grade<span class="operator">&lt;=</span><span class="number">100</span> <span class="keyword">and</span> grade<span class="operator">&gt;=</span><span class="number">0</span>),</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY(Sno,Cno)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>执行并思考Sno char(10) FOREIGN KEY(Sno) REFERENCES Student(Sno) ON DELETE CASCADE语句中ON DELETE CASCADE的含义与作用。</p><h2 id="问答题"><a href="#问答题" class="headerlink" title="问答题"></a>问答题</h2><p>（1）T-SQL支持的数据类型有哪些？</p><p>答：整数数据类型，浮点数据类型，字符型数据类型，日期和时间数据类型。</p><p>（2）Tinyint数据类型定义的数据的取值范围是多少？</p><p>存储0~255之间的整数</p><p>（3）写出创建以下表3.4-3.6所示的表结构的SQL语句，要求在定义表的同时定义数据的完整性约束。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Create</span> <span class="keyword">table</span> 图书表(  </span><br><span class="line">书号 <span class="type">nchar</span>(<span class="number">6</span>) <span class="keyword">primary</span> key,   </span><br><span class="line">书名 nvarchar(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span>,   </span><br><span class="line">第一作者 <span class="type">char</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="keyword">null</span>,   </span><br><span class="line">出版日期 smalldatetime,   </span><br><span class="line">价格：<span class="type">numeric</span>(<span class="number">4</span>,<span class="number">1</span>) )</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Create</span> <span class="keyword">table</span> 书店表(    </span><br><span class="line">书店编号 <span class="type">nchar</span>(<span class="number">6</span>) <span class="keyword">primary</span> key,   </span><br><span class="line">店名 nvarchar(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span>,    </span><br><span class="line">电话<span class="type">char</span>(<span class="number">8</span>) <span class="keyword">check</span>(电话 <span class="keyword">like</span>   ‘[<span class="number">0</span><span class="number">-9</span>][<span class="number">0</span><span class="number">-9</span>][<span class="number">0</span><span class="number">-9</span>][<span class="number">0</span><span class="number">-9</span>][<span class="number">0</span><span class="number">-9</span>][<span class="number">0</span><span class="number">-9</span>][<span class="number">0</span><span class="number">-9</span>] [<span class="number">0</span><span class="number">-9</span>]’),   </span><br><span class="line">地址 <span class="type">varchar</span>(<span class="number">40</span>),   </span><br><span class="line">邮政编码 <span class="type">char</span>(<span class="number">6</span>) ) </span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Create</span> <span class="keyword">table</span> 图书销售表(   </span><br><span class="line">书号 <span class="type">nchar</span>(<span class="number">6</span>) <span class="keyword">not</span> <span class="keyword">null</span>,    </span><br><span class="line">书店编号 <span class="type">nchar</span>(<span class="number">6</span>) <span class="keyword">not</span> <span class="keyword">null</span>,    </span><br><span class="line">销售日期 smalldatetime <span class="keyword">no</span> tnull,</span><br><span class="line">销售数量 smalldatetime <span class="keyword">check</span>(</span><br><span class="line">销售数量 <span class="operator">&gt;=</span> <span class="number">1</span>) )</span><br></pre></td></tr></table></figure><p>表3.4 图书表</p><table><thead><tr><th align="center">列名</th><th align="center">数据类型</th><th align="center">约束</th></tr></thead><tbody><tr><td align="center">书号</td><td align="center">统一字符编码定长类型，长度为6</td><td align="center">主键</td></tr><tr><td align="center">书名</td><td align="center">统一字符编码可变长类型，长度为30</td><td align="center">非空</td></tr><tr><td align="center">第一作者</td><td align="center">普通编码定长字符，长度为10</td><td align="center">非空</td></tr><tr><td align="center">出版日期</td><td align="center">小日期时间型</td><td align="center">非空</td></tr><tr><td align="center">价格</td><td align="center">定点小数，小数部分1位，整数部分3位</td><td align="center"></td></tr></tbody></table><p>表3.5 书店表</p><table><thead><tr><th align="center">列名</th><th align="center">数据类型</th><th align="center">约束</th></tr></thead><tbody><tr><td align="center">书店编号</td><td align="center">统一字符编码定长类型，长度为6</td><td align="center">主键</td></tr><tr><td align="center">店名</td><td align="center">字符编码可变长类型，长度为30</td><td align="center">非空</td></tr><tr><td align="center">电话</td><td align="center">普通编码定长字符类型，长度为8</td><td align="center"></td></tr><tr><td align="center">地址</td><td align="center">普通编码可变长字符类型，长度40</td><td align="center"></td></tr><tr><td align="center">邮政编码</td><td align="center">普通编码定长字符类型，长度6</td><td align="center"></td></tr></tbody></table><p>表3.6 销售表</p><table><thead><tr><th align="center">列名</th><th align="center">数据类型</th><th align="center">约束</th></tr></thead><tbody><tr><td align="center">书号</td><td align="center">统一字符编码定长类型，长度为6</td><td align="center">主键，外键</td></tr><tr><td align="center">书店编号</td><td align="center">统一字符编码定长类型，长度为6</td><td align="center">主键，外键</td></tr><tr><td align="center">销售日期</td><td align="center">小日期时间型</td><td align="center">主键</td></tr><tr><td align="center">销售数量</td><td align="center">小整型</td><td align="center"></td></tr><tr><td align="center">邮政编码</td><td align="center">普通编码定长字符类型，长度6</td><td align="center"></td></tr></tbody></table><p>（4）删除“销售表”中的“邮政编码”列；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 书店表 <span class="keyword">Drop</span> <span class="keyword">column</span> 邮政编码</span><br></pre></td></tr></table></figure><p>（5）将“销售表”中的“销售数量”列的数据类型改为整型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 图书销售表 <span class="keyword">Alter</span> <span class="keyword">column</span> 销售数量 <span class="type">int</span> </span><br></pre></td></tr></table></figure><h1 id="实验四-数据查询的操作（一）"><a href="#实验四-数据查询的操作（一）" class="headerlink" title="实验四   数据查询的操作（一）"></a>实验四   数据查询的操作（一）</h1><p>实验日期：</p><h2 id="实验目标：-3"><a href="#实验目标：-3" class="headerlink" title="实验目标："></a>实验目标：</h2><p>（1）掌握SELECT子句以及WHERE子句的使用方法。</p><p>（2）学会应用ORDER BY子句。</p><p>（3）掌握5种基本的聚合函数。</p><p>（4）学会分组统计和二次查询。</p><p>（5）学会数据的导入与导出的方法。</p><h2 id="实验内容：-2"><a href="#实验内容：-2" class="headerlink" title="实验内容："></a>实验内容：</h2><p>在SELECT语句中使用WHERE子句，在WHERE子句后跟一个条件式，就可以查询满足条件的行。<br>WHERE子句的格式：WHERE〈条件〉。<br>表4.1 常用的查询条件</p><table><thead><tr><th align="center">查询条件</th><th align="center">运算符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">比较</td><td align="center">&#x3D;、&lt;、&lt;&#x3D;、&gt;、&gt;&#x3D;、&lt;&gt;、!&#x3D;、!&lt;、!&gt;</td><td align="center"></td></tr><tr><td align="center">范围谓词</td><td align="center">BETWEEN   AND 、NOT  BETWEEN  AND</td><td align="center">介于二者之间（包括两端）、不介于二者之间</td></tr><tr><td align="center">集合谓词</td><td align="center">IN 、 NOT  IN</td><td align="center">在集合中、不在集合中</td></tr><tr><td align="center">字符匹配谓词</td><td align="center">LIKE、NOT LIKE</td><td align="center">匹配、不匹配</td></tr><tr><td align="center">空值</td><td align="center">IS NULL 、IS NOT NULL</td><td align="center">是空值、不是空值</td></tr><tr><td align="center">逻辑运算</td><td align="center">NOT、AND、OR</td><td align="center">逻辑非、逻辑与、逻辑或</td></tr></tbody></table><p>打开对象资源管理器，创建一个名为”lianxi1”的数据库，在该数据库中导入以下的仓库表4.2和职工表4.3。<br>表4.2 仓库表</p><table><thead><tr><th align="center">仓库号</th><th align="center">城市</th><th align="center">面积</th></tr></thead><tbody><tr><td align="center">WH1</td><td align="center">北京</td><td align="center">370</td></tr><tr><td align="center">WH2</td><td align="center">上海</td><td align="center">500</td></tr><tr><td align="center">WH3</td><td align="center">广州</td><td align="center">200</td></tr><tr><td align="center">WH4</td><td align="center">广州</td><td align="center">300</td></tr><tr><td align="center">WH5</td><td align="center">天津</td><td align="center">340</td></tr><tr><td align="center">WH6</td><td align="center">上海</td><td align="center">350</td></tr><tr><td align="center">WH7</td><td align="center">上海</td><td align="center">600</td></tr><tr><td align="center">WH8</td><td align="center">天津</td><td align="center">300</td></tr></tbody></table><p>注意：面积以平方为单位。</p><p>表4.3 职工表</p><table><thead><tr><th align="center">职工号</th><th align="center">姓名</th><th align="center">仓库号</th><th align="center">月工资</th><th align="center">性别</th></tr></thead><tbody><tr><td align="center">E1</td><td align="center">朱迪</td><td align="center">WH2</td><td align="center">2220</td><td align="center">女</td></tr><tr><td align="center">E2</td><td align="center">牛丽丽</td><td align="center">WH1</td><td align="center">1810</td><td align="center">女</td></tr><tr><td align="center">E4</td><td align="center">李安</td><td align="center">WH2</td><td align="center">1850</td><td align="center">男</td></tr><tr><td align="center">E5</td><td align="center">王进步</td><td align="center">WH3</td><td align="center">1530</td><td align="center">男</td></tr><tr><td align="center">E6</td><td align="center">李光铭</td><td align="center">WH1</td><td align="center">1550</td><td align="center">男</td></tr><tr><td align="center">E7</td><td align="center">赵芙蓉</td><td align="center">WH4</td><td align="center">2300</td><td align="center">女</td></tr><tr><td align="center">E8</td><td align="center">刘山</td><td align="center">WH4</td><td align="center">2000</td><td align="center">男</td></tr><tr><td align="center">E9</td><td align="center">张尚琳</td><td align="center">WH5</td><td align="center">2050</td><td align="center">女</td></tr><tr><td align="center">E10</td><td align="center">王玛丽</td><td align="center">WH5</td><td align="center">1900</td><td align="center">女</td></tr><tr><td align="center">E11</td><td align="center">胡尼克</td><td align="center">WH6</td><td align="center">2100</td><td align="center">男</td></tr><tr><td align="center">E12</td><td align="center">古梅</td><td align="center">WH7</td><td align="center">1700</td><td align="center">女</td></tr><tr><td align="center">E15</td><td align="center">胡俊</td><td align="center">WH5</td><td align="center">1780</td><td align="center">男</td></tr><tr><td align="center">E16</td><td align="center">胡轩</td><td align="center">WH1</td><td align="center">1600</td><td align="center">男</td></tr></tbody></table><p>用SQL语句完成以下的练习题：<br>1.从职工关系中检索所有工资值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 月工资</span><br><span class="line"><span class="keyword">from</span> zg</span><br></pre></td></tr></table></figure><ol start="2"><li><p>   检索仓库关系中的所有元组。</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> ck</span><br></pre></td></tr></table></figure></li><li><p>   检索工资多于2000元的职工对应的职工号，姓名。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  职工号,月工资 </span><br><span class="line"><span class="keyword">from</span> zg </span><br><span class="line"><span class="keyword">where</span> 月工资<span class="operator">&gt;</span><span class="number">2000</span></span><br></pre></td></tr></table></figure></li><li><p>   检索哪些仓库的面积在400到550平方之间，列出仓库号和所在的城市。</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 仓库号,城市 </span><br><span class="line"><span class="keyword">from</span> ck </span><br><span class="line"><span class="keyword">where</span> 面积<span class="operator">&lt;=</span><span class="number">550</span> </span><br><span class="line"><span class="keyword">and</span> 面积<span class="operator">&gt;=</span><span class="number">400</span></span><br></pre></td></tr></table></figure></li><li><p>   检索出有广州哪些仓库，列出仓库号。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 仓库号</span><br><span class="line"><span class="keyword">from</span> ck </span><br><span class="line"><span class="keyword">where</span> 城市<span class="operator">=</span><span class="string">&#x27;广州&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>   检索出所在城市为广州的仓库的个数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(仓库号)</span><br><span class="line"><span class="keyword">from</span> ck </span><br><span class="line"><span class="keyword">where</span> 城市<span class="operator">=</span><span class="string">&#x27;广州&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>   检索出所有职工的平均工资。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(月工资) </span><br><span class="line"><span class="keyword">from</span> zg</span><br></pre></td></tr></table></figure></li><li><p>   检索出在WH5仓库工作的职工的人数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(职工号) </span><br><span class="line"><span class="keyword">from</span> zg </span><br><span class="line"><span class="keyword">where</span> 仓库号<span class="operator">=</span><span class="string">&#x27;WH5&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>   检索出职工表的所有的仓库号，去掉重复值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> 仓库号 <span class="keyword">from</span> zg</span><br></pre></td></tr></table></figure></li><li><p>   检索出每个仓库的人数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 仓库号,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 人数 </span><br><span class="line"><span class="keyword">from</span> zg </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 仓库号</span><br></pre></td></tr></table></figure></li><li><p>   检索出上海的仓库有哪些，列出仓库号、面积。查询结果按面积降序排列。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 仓库号,面积 </span><br><span class="line"><span class="keyword">from</span> ck </span><br><span class="line"><span class="keyword">where</span> 城市<span class="operator">=</span><span class="string">&#x27;上海&#x27;</span> </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 面积</span><br></pre></td></tr></table></figure></li><li><p>   检索出哪些仓库女职工的人数达到了3人。</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 仓库号,<span class="built_in">count</span>(职工号)人数</span><br><span class="line"><span class="keyword">from</span> zg </span><br><span class="line"><span class="keyword">where</span> 性别<span class="operator">=</span><span class="string">&#x27;女&#x27;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 仓库号 </span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(职工号)<span class="operator">&gt;</span><span class="number">3</span></span><br></pre></td></tr></table></figure></li><li><p>   检索出所有姓胡的职工的职工号、姓名、性别、工资。查询结果按性别排降序、工资排升序。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 职工号,姓名,性别,月工资</span><br><span class="line"><span class="keyword">from</span> zg</span><br><span class="line"><span class="keyword">where</span> 姓名 <span class="keyword">like</span><span class="string">&#x27;胡%&#x27;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 性别 <span class="keyword">desc</span>,月工资 <span class="keyword">asc</span></span><br></pre></td></tr></table></figure></li><li><p>   检索出职工“王玛丽”的年工资。</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 月工资<span class="operator">*</span><span class="number">12</span> <span class="keyword">as</span> 年薪</span><br><span class="line"><span class="keyword">from</span> zg</span><br><span class="line"><span class="keyword">where</span> 姓名<span class="operator">=</span><span class="string">&#x27;王玛丽&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>   检索出“WH1”和“WH2”两个仓库工作的职工的基本信息。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> zg</span><br><span class="line"><span class="keyword">where</span> 仓库号<span class="operator">=</span><span class="string">&#x27;WH1&#x27;</span><span class="keyword">or</span> 仓库号<span class="operator">=</span><span class="string">&#x27;WH2&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>   检索出年工资在24000以上的职工的姓名，年工资值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 姓名</span><br><span class="line"><span class="keyword">from</span> zg</span><br><span class="line"><span class="keyword">where</span> 月工资<span class="operator">*</span><span class="number">12</span><span class="operator">&gt;</span><span class="number">24000</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="问答题："><a href="#问答题：" class="headerlink" title="问答题："></a>问答题：</h2><p>（1）WHERE子句与HAVING子句有和不同？</p><p>答：Where子句–指定查询条件，having短语—选择出只有满足指定条件的组.</p><p>where 子句的作用是在对查询结果进行分组前，将不符合where条件的行去掉，即在分组之前过滤数据，条件中不能包含聚组函数，使用where条件显示特定的行。</p><p>  having 子句的作用是筛选满足条件的组，即在分组之后过滤数据，条件中经常包含聚组函数，使用having 条件显示特定的组，也可以使用多个分组标准进行分组。</p><p>（2）在WHERE子句中可以使用的运算符有哪些？WHERE子句中能不能使用聚集函数？</p><p>答：in，not in；字符匹配：like，not like；空值：is null，is not null；多重条件：and，or。<br>Where子句中不能使用聚集函数。</p><p>不能使用聚集函数 </p><h1 id="实验五-数据查询的操作（二）"><a href="#实验五-数据查询的操作（二）" class="headerlink" title="实验五   数据查询的操作（二）"></a>实验五   数据查询的操作（二）</h1><p>实验日期：</p><h2 id="实验目标：-4"><a href="#实验目标：-4" class="headerlink" title="实验目标："></a>实验目标：</h2><p>（1）熟练掌握基本的连接操作，掌握内连接与外连接的方法，学会应用自身连接。</p><p>（2）熟练掌握不相关子查询。</p><p>（3）掌握相关子查询。</p><p>（4）学会给表命别名。</p><p>（5）学会数据的导入与导出的方法。</p><h3 id="实验内容：-3"><a href="#实验内容：-3" class="headerlink" title="实验内容："></a>实验内容：</h3><p>打开对象资源管理器，创建一个名为”lianxi2”的数据库，在该数据库中导入以下的仓库表5.1、职工表5.2、订购表5.3和供应商表5.4。</p><p>表5.1仓库表</p><table><thead><tr><th align="center">仓库号</th><th align="center">城市</th><th align="center">面积</th></tr></thead><tbody><tr><td align="center">WH1</td><td align="center">北京</td><td align="center">3700</td></tr><tr><td align="center">WH2</td><td align="center">上海</td><td align="center">5000</td></tr><tr><td align="center">WH3</td><td align="center">广州</td><td align="center">2000</td></tr><tr><td align="center">WH4</td><td align="center">武汉</td><td align="center">4000</td></tr><tr><td align="center">WH5</td><td align="center">上海</td><td align="center">4560</td></tr><tr><td align="center">WH6</td><td align="center">广州</td><td align="center">6700</td></tr><tr><td align="center">WH7</td><td align="center">珠海</td><td align="center">4800</td></tr></tbody></table><p>表5.2职工表</p><table><thead><tr><th align="center">仓库号</th><th align="center">职工号</th><th align="center">月工资</th></tr></thead><tbody><tr><td align="center">WH2</td><td align="center">E1</td><td align="center">2220</td></tr><tr><td align="center">WH1</td><td align="center">E2</td><td align="center">2210</td></tr><tr><td align="center">WH2</td><td align="center">E3</td><td align="center">4050</td></tr><tr><td align="center">WH3</td><td align="center">E4</td><td align="center">3230</td></tr><tr><td align="center">WH1</td><td align="center">E5</td><td align="center">3250</td></tr><tr><td align="center">WH1</td><td align="center">E6</td><td align="center">2300</td></tr><tr><td align="center">WH4</td><td align="center">E7</td><td align="center">5000</td></tr><tr><td align="center">WH5</td><td align="center">E8</td><td align="center">4000</td></tr><tr><td align="center">WH5</td><td align="center">E9</td><td align="center">3400</td></tr><tr><td align="center">WH6</td><td align="center">E10</td><td align="center">3800</td></tr></tbody></table><p>表5.3 订购表</p><table><thead><tr><th align="center">职工号</th><th align="center">供应商号</th><th align="center">订购单号</th><th align="center">订购日期</th></tr></thead><tbody><tr><td align="center">E3</td><td align="center">S7</td><td align="center">OR091204</td><td align="center">2009-12-4</td></tr><tr><td align="center">E1</td><td align="center">S4</td><td align="center">OR090101</td><td align="center">2009-4-1</td></tr><tr><td align="center">E7</td><td align="center">S4</td><td align="center">OR100402</td><td align="center">2010-4-2</td></tr><tr><td align="center">E6</td><td align="center">S6</td><td align="center">OR100121</td><td align="center">2010-1-21</td></tr><tr><td align="center">E3</td><td align="center">S4</td><td align="center">OR091115</td><td align="center">2009-11-15</td></tr><tr><td align="center">E1</td><td align="center">S6</td><td align="center">OR060201</td><td align="center">2006-2-1</td></tr><tr><td align="center">E3</td><td align="center">S6</td><td align="center">OR100312</td><td align="center">2010-3-12</td></tr><tr><td align="center">E3</td><td align="center">S3</td><td align="center">OR090302</td><td align="center">2009-3-2</td></tr><tr><td align="center">E8</td><td align="center">S7</td><td align="center">OR100928</td><td align="center">2010-9-28</td></tr><tr><td align="center">E6</td><td align="center">S7</td><td align="center">OR100712</td><td align="center">2010-7-12</td></tr><tr><td align="center">E5</td><td align="center">S3</td><td align="center">OR100507</td><td align="center">2010-5-7</td></tr></tbody></table><p>表5.4 供应商表</p><table><thead><tr><th align="center">供应商号</th><th align="center">供应商名</th><th align="center">地址</th></tr></thead><tbody><tr><td align="center">S3</td><td align="center">振华电子厂</td><td align="center">西安</td></tr><tr><td align="center">S4</td><td align="center">华通电子公司</td><td align="center">北京</td></tr><tr><td align="center">S6</td><td align="center">607厂</td><td align="center">郑州</td></tr><tr><td align="center">S7</td><td align="center">爱华电子厂</td><td align="center">北京</td></tr></tbody></table><p>用SQL语句完成以下的练习题：</p><ol><li><p>   查询每个城市的仓库总面积。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 城市,<span class="built_in">sum</span>(面积) <span class="keyword">as</span> 总面积</span><br><span class="line"><span class="keyword">from</span> ck</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 城市</span><br></pre></td></tr></table></figure></li><li><p>   查询每个仓库的职工人数，如果该仓库没有职工，也要列出人数为0。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 仓库号,<span class="built_in">count</span>(职工号) <span class="keyword">as</span> 职工人数</span><br><span class="line"><span class="keyword">from</span> zg</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 仓库号</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(职工号)<span class="operator">&gt;=</span><span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ck.仓库号,<span class="built_in">count</span>(职工号)<span class="keyword">as</span> 职工人数</span><br><span class="line"><span class="keyword">from</span> ck <span class="keyword">left</span> <span class="keyword">join</span> zg <span class="keyword">on</span> ck.仓库号<span class="operator">=</span>zg.仓库号</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> ck.仓库号</span><br></pre></td></tr></table></figure></li><li><p>   查询在上海工作的职工有多少个。</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 城市,<span class="built_in">count</span>(职工号) <span class="keyword">as</span> 上海职工数</span><br><span class="line"><span class="keyword">from</span> ck,zg</span><br><span class="line"><span class="keyword">where</span> ck.仓库号<span class="operator">=</span>zg.仓库号</span><br><span class="line"><span class="keyword">and</span> </span><br><span class="line">ck.城市<span class="operator">=</span><span class="string">&#x27;上海&#x27;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 城市</span><br></pre></td></tr></table></figure></li><li><p>   查询哪些职工在上海工作，列出他们的职工号，仓库号。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 职工号,zg.仓库号</span><br><span class="line"><span class="keyword">from</span> ck,zg</span><br><span class="line"><span class="keyword">where</span> ck.城市<span class="operator">=</span><span class="string">&#x27;上海&#x27;</span> </span><br><span class="line"><span class="keyword">and</span> </span><br><span class="line">ck.仓库号<span class="operator">=</span>zg.仓库号</span><br></pre></td></tr></table></figure></li><li><p>   查询与E3号职工有订购业务联系的供应商号，供应商名。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> dg.供应商号,gys.供应商名</span><br><span class="line"><span class="keyword">from</span> dg,gys</span><br><span class="line"><span class="keyword">where</span> 职工号<span class="operator">=</span><span class="string">&#x27;E3&#x27;</span> <span class="keyword">and</span> dg.供应商号<span class="operator">=</span>gys.供应商号</span><br></pre></td></tr></table></figure></li><li><p>   查询哪些职工与爱华电子厂有订购业务联系，列出他们的职工号，仓库号。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> zg.职工号,zg.仓库号</span><br><span class="line"><span class="keyword">from</span> zg,gy</span><br><span class="line"><span class="keyword">where</span> gy.供应商名<span class="operator">=</span><span class="string">&#x27;爱华电子厂&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> zg.职工号,zg.仓库号</span><br><span class="line"><span class="keyword">from</span> dg <span class="keyword">join</span> gys <span class="keyword">on</span> dg.供应商号<span class="operator">=</span>gys.供应商号</span><br><span class="line"><span class="keyword">join</span> zg <span class="keyword">on</span> zg.职工号<span class="operator">=</span>dg.职工号</span><br><span class="line"><span class="keyword">where</span> 供应商名<span class="operator">=</span><span class="string">&#x27;爱华电子厂&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>   查询每个供应商的订购单数目，列出供应商号和他们的订购单数目。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> dg.供应商号,<span class="built_in">count</span>(dg.订购单号) <span class="keyword">as</span> 订购单数目</span><br><span class="line"><span class="keyword">from</span> dg,gy</span><br><span class="line"><span class="keyword">where</span> gy.供应商号<span class="operator">=</span>dg.供应商号</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> gy.供应商名,dg.供应商号</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> dg.供应商号,<span class="built_in">count</span>(订购单号) 订购单数目</span><br><span class="line"><span class="keyword">from</span> dg <span class="keyword">join</span> gys <span class="keyword">on</span> dg.供应商号<span class="operator">=</span>gys.供应商号</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> dg.供应商号</span><br></pre></td></tr></table></figure></li><li><p>   查询工资在3000元以上，并在北京或上海工作的职工，列出他们的职工号和工资。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> zg.职工号,zg.月工资</span><br><span class="line"><span class="keyword">from</span> zg,ck</span><br><span class="line"><span class="keyword">where</span> (ck.城市<span class="operator">=</span><span class="string">&#x27;北京&#x27;</span> <span class="keyword">or</span> ck.城市<span class="operator">=</span><span class="string">&#x27;上海&#x27;</span>)</span><br><span class="line"><span class="keyword">and</span> zg.月工资<span class="operator">&gt;</span><span class="number">3000</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 职工号,月工资</span><br><span class="line"><span class="keyword">from</span> ck <span class="keyword">join</span> zg <span class="keyword">on</span> ck.仓库号<span class="operator">=</span>zg.仓库号</span><br><span class="line"><span class="keyword">where</span> (城市<span class="operator">=</span><span class="string">&#x27;北京&#x27;</span><span class="keyword">or</span> 城市<span class="operator">=</span><span class="string">&#x27;上海&#x27;</span>) <span class="keyword">and</span> 月工资<span class="operator">&gt;</span><span class="number">3000</span></span><br></pre></td></tr></table></figure></li><li><p>   查询与供应商为S3的供应商有业务联系的职工他们的职工号、订购单号、仓库号、城市。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> dg.职工号,dg.订购单号,ck.仓库号,ck.城市</span><br><span class="line"><span class="keyword">from</span> gys <span class="keyword">join</span> dg <span class="keyword">on</span> gys.供应商号<span class="operator">=</span>dg.供应商号</span><br><span class="line"><span class="keyword">join</span> zg <span class="keyword">on</span> dg.职工号<span class="operator">=</span>zg.职工号</span><br><span class="line"><span class="keyword">join</span> ck <span class="keyword">on</span> zg.仓库号<span class="operator">=</span>ck.仓库号</span><br><span class="line"><span class="keyword">where</span> gys.供应商号<span class="operator">=</span><span class="string">&#x27;S3&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>   查询出哪些仓库没有分配职工。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ck.仓库号</span><br><span class="line"><span class="keyword">from</span> ck <span class="keyword">left</span> <span class="keyword">join</span> zg <span class="keyword">on</span> ck.仓库号<span class="operator">=</span>zg.仓库号</span><br><span class="line"><span class="keyword">where</span> zg.职工号 <span class="keyword">is</span> <span class="keyword">null</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ck.仓库号,<span class="built_in">count</span>(zg.仓库号) 人数</span><br><span class="line"><span class="keyword">from</span> ck <span class="keyword">left</span> <span class="keyword">join</span> zg <span class="keyword">on</span> zg.仓库号 <span class="operator">=</span> ck.仓库号</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> ck.仓库号</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(zg.仓库号)<span class="operator">=</span><span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 仓库号</span><br><span class="line"><span class="keyword">from</span> ck</span><br><span class="line"><span class="keyword">where</span> 仓库号 <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> 仓库号 <span class="keyword">from</span> zg)</span><br></pre></td></tr></table></figure></li><li><p>   查询出哪些职工的工资高于全体职工平均工资。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 职工号</span><br><span class="line"><span class="keyword">from</span> zg</span><br><span class="line"><span class="keyword">where</span> 月工资<span class="operator">&gt;</span>(<span class="keyword">select</span> <span class="built_in">avg</span>(月工资) <span class="keyword">from</span> zg )</span><br></pre></td></tr></table></figure></li><li><p>   查询出哪些职工的工资高于他所在仓库的职工的平均工资。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 职工号</span><br><span class="line"><span class="keyword">from</span> zg <span class="keyword">join</span> </span><br><span class="line">(<span class="keyword">select</span> 仓库号 <span class="built_in">avg</span>(月工资) <span class="keyword">as</span> 平均工资</span><br><span class="line"><span class="keyword">from</span> zg <span class="keyword">group</span> <span class="keyword">by</span> 仓库号) <span class="keyword">as</span> a <span class="keyword">on</span> zg.仓库号<span class="operator">=</span>ck.职工号</span><br><span class="line"><span class="keyword">where</span> zg.月工资<span class="operator">&gt;</span>a.<span class="built_in">avg</span>(月工资)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 职工号</span><br><span class="line"><span class="keyword">from</span> zg a</span><br><span class="line"><span class="keyword">where</span> 月工资<span class="operator">&gt;</span>(<span class="keyword">select</span> <span class="built_in">avg</span>(月工资) </span><br><span class="line"><span class="keyword">from</span> zg b</span><br><span class="line"><span class="keyword">where</span> b.仓库号<span class="operator">=</span>a.仓库号)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 职工号</span><br><span class="line"><span class="keyword">from</span> zg <span class="keyword">as</span> a <span class="keyword">join</span></span><br><span class="line">(<span class="keyword">select</span> 仓库号,<span class="built_in">avg</span>(月工资) <span class="keyword">as</span> 平均工资 </span><br><span class="line"><span class="keyword">from</span> zg <span class="keyword">group</span> <span class="keyword">by</span> 仓库号)</span><br><span class="line"><span class="keyword">as</span> b <span class="keyword">on</span> a.仓库号<span class="operator">=</span>b.仓库号</span><br><span class="line"><span class="keyword">where</span> a.月工资<span class="operator">&gt;</span> b.平均工资</span><br></pre></td></tr></table></figure></li><li><p>   求出哪个职工所发出的订购单最多。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  top <span class="number">1</span> 职工号,<span class="built_in">count</span>(订购单号) <span class="keyword">as</span> 订购单数</span><br><span class="line"><span class="keyword">from</span> dg</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 职工号</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 订购单数 <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 职工号</span><br><span class="line"><span class="keyword">from</span> dg</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 职工号</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(订购单号)<span class="operator">=</span></span><br><span class="line">(<span class="keyword">select</span> top <span class="number">1</span> <span class="built_in">count</span>(订购单号) <span class="keyword">as</span> 订单数</span><br><span class="line"><span class="keyword">from</span> dg</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 职工号</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 订单数 <span class="keyword">desc</span>)</span><br></pre></td></tr></table></figure></li></ol><h1 id="实验六-数据查询的操作（三）"><a href="#实验六-数据查询的操作（三）" class="headerlink" title="实验六   数据查询的操作（三）"></a>实验六   数据查询的操作（三）</h1><p>实验日期：</p><h2 id="实验目标：-5"><a href="#实验目标：-5" class="headerlink" title="实验目标："></a>实验目标：</h2><p>（1）熟练掌握基本的连接操作，掌握内连接与外连接的方法，学会应用自身连接。</p><p>（2）熟练掌握不相关子查询。</p><p>（3）掌握相关子查询。</p><p>（4）学会给表命别名。</p><p>（5）学会在FROM子句中派生关系，构造查询。</p><h2 id="实验内容：-4"><a href="#实验内容：-4" class="headerlink" title="实验内容："></a>实验内容：</h2><p>假设“教学管理”数据库中有4个基本表（关系）：</p><p>学生关系：学生（学号，姓名，性别，所在系）</p><p>课程关系：课程（课程号，课程名，开课学期，教师号）</p><p>选课关系：选课（学号，课程号，成绩）</p><p>教师关系：教师（教师号，姓名，职称，部门）</p><p>每个关系的当前值分别如表所示。</p><p>打开对象资源管理器，创建一个名为”教学管理”的数据库，在该数据库中导入以下的</p><p>表6.1—6.4。</p><p>表6.1 学生关系</p><table><thead><tr><th align="center">学号</th><th align="center">姓名</th><th align="center">性别</th><th align="left">年龄</th><th align="center">所在系</th></tr></thead><tbody><tr><td align="center">S101101</td><td align="center">陈名军</td><td align="center">男</td><td align="left">18</td><td align="center">计算机系</td></tr><tr><td align="center">S101102</td><td align="center">吴小晴</td><td align="center">女</td><td align="left">19</td><td align="center">计算机系</td></tr><tr><td align="center">S101103</td><td align="center">王明燕</td><td align="center">女</td><td align="left">19</td><td align="center">计算机系</td></tr><tr><td align="center">S101104</td><td align="center">严利</td><td align="center">男</td><td align="left">20</td><td align="center">计算机系</td></tr><tr><td align="center">S101105</td><td align="center">朱欣</td><td align="center">男</td><td align="left">20</td><td align="center">计算机系</td></tr><tr><td align="center">S101201</td><td align="center">李国庆</td><td align="center">男</td><td align="left">21</td><td align="center">信息系</td></tr><tr><td align="center">S101202</td><td align="center">李祥</td><td align="center">男</td><td align="left">21</td><td align="center">信息系</td></tr><tr><td align="center">S101203</td><td align="center">孙渝研</td><td align="center">男</td><td align="left">20</td><td align="center">信息系</td></tr><tr><td align="center">S101204</td><td align="center">赵艳</td><td align="center">女</td><td align="left">18</td><td align="center">信息系</td></tr><tr><td align="center">S101205</td><td align="center">刘唯</td><td align="center">女</td><td align="left">19</td><td align="center">信息系</td></tr><tr><td align="center">S101206</td><td align="center">林玉霞</td><td align="center">女</td><td align="left">20</td><td align="center">信息系</td></tr><tr><td align="center">S101207</td><td align="center">王江</td><td align="center">男</td><td align="left">21</td><td align="center">信息系</td></tr><tr><td align="center">S101301</td><td align="center">王成</td><td align="center">男</td><td align="left">20</td><td align="center">会计系</td></tr><tr><td align="center">S101302</td><td align="center">张平安</td><td align="center">男</td><td align="left">18</td><td align="center">会计系</td></tr><tr><td align="center">S101401</td><td align="center">钟琴</td><td align="center">女</td><td align="left">19</td><td align="center">会计系</td></tr><tr><td align="center">S101402</td><td align="center">吴娟娟</td><td align="center">女</td><td align="left">21</td><td align="center">会计系</td></tr><tr><td align="center">S101403</td><td align="center">李月</td><td align="center">女</td><td align="left">22</td><td align="center">会计系</td></tr><tr><td align="center">S101404</td><td align="center">陈名军</td><td align="center">男</td><td align="left">23</td><td align="center">会计系</td></tr><tr><td align="center">S101405</td><td align="center">赵艳</td><td align="center">女</td><td align="left">21</td><td align="center">会计系</td></tr></tbody></table><p>表6.2课程关系</p><table><thead><tr><th align="center">课程号</th><th align="center">课程名</th><th align="center">开课学期</th><th align="center">学分</th><th align="center">教师号</th></tr></thead><tbody><tr><td align="center">101</td><td align="center">计算机基础</td><td align="center">1</td><td align="center">3</td><td align="center">T1</td></tr><tr><td align="center">102</td><td align="center">体育</td><td align="center">2</td><td align="center">4</td><td align="center">T2</td></tr><tr><td align="center">201</td><td align="center">英语</td><td align="center">1</td><td align="center">4</td><td align="center">T3</td></tr><tr><td align="center">202</td><td align="center">大学语文</td><td align="center">3</td><td align="center">4</td><td align="center">T4</td></tr><tr><td align="center">305</td><td align="center">操作系统</td><td align="center">4</td><td align="center">4</td><td align="center">T5</td></tr><tr><td align="center">304</td><td align="center">计算机原理</td><td align="center">4</td><td align="center">4</td><td align="center">T5</td></tr><tr><td align="center">301</td><td align="center">计算机网络</td><td align="center">3</td><td align="center">3</td><td align="center">T6</td></tr><tr><td align="center">302</td><td align="center">电子技术</td><td align="center">3</td><td align="center">4</td><td align="center">T6</td></tr><tr><td align="center">303</td><td align="center">数据库应用</td><td align="center">4</td><td align="center">3</td><td align="center">T7</td></tr></tbody></table><p>表6.3 选课关系</p><table><thead><tr><th align="center">学号</th><th align="center">课程号</th><th align="center">成绩</th></tr></thead><tbody><tr><td align="center">S101101</td><td align="center">101</td><td align="center">60</td></tr><tr><td align="center">S101101</td><td align="center">102</td><td align="center">83</td></tr><tr><td align="center">S101101</td><td align="center">201</td><td align="center">78</td></tr><tr><td align="center">S101101</td><td align="center">305</td><td align="center">79</td></tr><tr><td align="center">S101101</td><td align="center">202</td><td align="center">87</td></tr><tr><td align="center">S101101</td><td align="center">304</td><td align="center">89</td></tr><tr><td align="center">S101101</td><td align="center">303</td><td align="center">64</td></tr><tr><td align="center">S101101</td><td align="center">302</td><td align="center">90</td></tr><tr><td align="center">S101102</td><td align="center">101</td><td align="center">84</td></tr><tr><td align="center">S101101</td><td align="center">301</td><td align="center">83</td></tr><tr><td align="center">S101102</td><td align="center">102</td><td align="center">75</td></tr><tr><td align="center">S101102</td><td align="center">202</td><td align="center">86</td></tr><tr><td align="center">S101102</td><td align="center">303</td><td align="center">67</td></tr><tr><td align="center">S101201</td><td align="center">101</td><td align="center">78</td></tr><tr><td align="center">S101201</td><td align="center">102</td><td align="center">72</td></tr><tr><td align="center">S101201</td><td align="center">303</td><td align="center">76</td></tr><tr><td align="center">S101201</td><td align="center">201</td><td align="center">50</td></tr><tr><td align="center">S101301</td><td align="center">101</td><td align="center">90</td></tr><tr><td align="center">S101302</td><td align="center">101</td><td align="center">90</td></tr><tr><td align="center">S101302</td><td align="center">303</td><td align="center">83</td></tr></tbody></table><p>表6.4教师表</p><table><thead><tr><th align="center">教师号</th><th align="center">姓名</th><th align="center">职称</th><th align="center">部门</th></tr></thead><tbody><tr><td align="center">T1</td><td align="center">胡美丽</td><td align="center">讲师</td><td align="center">公共教学</td></tr><tr><td align="center">T2</td><td align="center">王珊珊</td><td align="center">讲师</td><td align="center">公共教学</td></tr><tr><td align="center">T3</td><td align="center">王新</td><td align="center">讲师</td><td align="center">公共教学</td></tr><tr><td align="center">T4</td><td align="center">李再敏</td><td align="center">副教授</td><td align="center">公共教学</td></tr><tr><td align="center">T5</td><td align="center">李红玉</td><td align="center">教授</td><td align="center">计算机系</td></tr><tr><td align="center">T6</td><td align="center">周进</td><td align="center">助教</td><td align="center">计算机系</td></tr><tr><td align="center">T7</td><td align="center">张丽丽</td><td align="center">助教</td><td align="center">计算机系</td></tr><tr><td align="center">T8</td><td align="center">王晓舟</td><td align="center">副教授</td><td align="center">计算机系</td></tr><tr><td align="center">T9</td><td align="center">周樱</td><td align="center">讲师</td><td align="center">信息系</td></tr></tbody></table><ol><li><p>查询“101”课程成绩比“102”课程成绩高的所有学生的学号。<br>提示：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.学号</span><br><span class="line"><span class="keyword">From</span> (<span class="keyword">select</span> 学号,成绩 <span class="keyword">from</span> xkgx <span class="keyword">where</span> 课程号<span class="operator">=</span><span class="string">&#x27;101&#x27;</span>) a,</span><br><span class="line">(<span class="keyword">select</span> 学号,成绩</span><br><span class="line"><span class="keyword">from</span> xkgx <span class="keyword">where</span> 课程号<span class="operator">=</span><span class="string">&#x27;102&#x27;</span>) b</span><br><span class="line"><span class="keyword">where</span> a.成绩<span class="operator">&gt;</span>b.成绩 <span class="keyword">and</span> a.学号<span class="operator">=</span>b.学号</span><br></pre></td></tr></table></figure><p>自然连接：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.学号</span><br><span class="line"><span class="keyword">from</span> xkgx a <span class="keyword">join</span> xkgx b <span class="keyword">on</span> a.学号<span class="operator">=</span>b.学号</span><br><span class="line"><span class="keyword">where</span> a.课程号<span class="operator">=</span><span class="string">&#x27;101&#x27;</span> <span class="keyword">and</span> b.课程号<span class="operator">=</span><span class="string">&#x27;102&#x27;</span> </span><br><span class="line"><span class="keyword">and</span> a.成绩<span class="operator">&gt;</span>b.成绩</span><br></pre></td></tr></table></figure></li><li><p>查询全部选修课程表中所有课的同学的学号、姓名。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 学号,姓名</span><br><span class="line"><span class="keyword">from</span> xsgx</span><br><span class="line"><span class="keyword">where</span> 学号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 学号 <span class="keyword">from</span> xkgx <span class="keyword">group</span> <span class="keyword">by</span> 学号 </span><br><span class="line"> <span class="keyword">having</span> <span class="built_in">count</span>(课程号)<span class="operator">=</span></span><br><span class="line">(<span class="keyword">select</span> <span class="built_in">count</span>(课程号) <span class="keyword">from</span> kcgx))</span><br></pre></td></tr></table></figure></li><li><p>查询哪些老师没有教授任何课程。列出老师的全部列。（<code>not in</code>和<code>not EXISTS</code>两种方式实现）。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> js</span><br><span class="line"><span class="keyword">where</span> 教师号 <span class="keyword">not</span> <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 教师号 <span class="keyword">from</span> xkgx <span class="keyword">join</span> kcgx <span class="keyword">on</span> </span><br><span class="line">xkgx.课程号<span class="operator">=</span>kcgx.课程号)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> js</span><br><span class="line"><span class="keyword">where</span> 教师号 <span class="keyword">not</span> <span class="keyword">in</span> </span><br><span class="line">(<span class="keyword">select</span> 教师号 <span class="keyword">from</span> kcgx </span><br><span class="line"><span class="keyword">where</span> kcgx.教师号<span class="operator">=</span>jsgx.教师号)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> js</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span></span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">distinct</span> js.教师号  </span><br><span class="line"><span class="keyword">from</span> kcgx </span><br><span class="line"><span class="keyword">where</span> kcgx.教师号<span class="operator">=</span>js.教师号)</span><br></pre></td></tr></table></figure></li><li><p>查询出只选修了一门课程的学生的学号和姓名。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> xsgx.学号,xsgx.姓名</span><br><span class="line"><span class="keyword">from</span> xsgx</span><br><span class="line"><span class="keyword">where</span> xsgx.学号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> xkgx.学号 <span class="keyword">from</span> xkgx </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> xkgx.学号 </span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(xkgx.课程号)<span class="operator">=</span><span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> xsgx.学号,姓名</span><br><span class="line"><span class="keyword">from</span> xsgx <span class="keyword">join</span> xkgx <span class="keyword">on</span> xsgx.学号<span class="operator">=</span>xkgxx.学号</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> xsgx.学号,xsgx.姓名</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(xkgx.课程号)<span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>查询张丽丽老师教过的学生的学号、姓名。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> xsgx.学号,xsgx.姓名</span><br><span class="line"><span class="keyword">from</span> xsgx</span><br><span class="line"><span class="keyword">where</span> kcgx.课程号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 课程号 <span class="keyword">from</span> xkgx</span><br><span class="line"><span class="keyword">where</span> kcgx.教师号 <span class="keyword">in</span>(</span><br><span class="line"><span class="keyword">select</span> js.教师号</span><br><span class="line"><span class="keyword">from</span> js</span><br><span class="line"><span class="keyword">where</span> js.姓名<span class="operator">=</span><span class="string">&#x27;张丽丽&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> xsgx.学号,xsgx.姓名</span><br><span class="line"><span class="keyword">from</span> xsgx,kcgx,xkgx,js</span><br><span class="line"><span class="keyword">where</span> xsgx.学号<span class="operator">=</span>xkgx.学号 </span><br><span class="line"><span class="keyword">and</span> </span><br><span class="line">kcgx.课程号<span class="operator">=</span>xkgx.课程号 </span><br><span class="line"><span class="keyword">and</span></span><br><span class="line">js.教师号<span class="operator">=</span>kcgx.教师号</span><br><span class="line"><span class="keyword">and</span> </span><br><span class="line">js.姓名<span class="operator">=</span><span class="string">&#x27;张丽丽&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sxgx.学号,s.姓名</span><br><span class="line"><span class="keyword">from</span> js <span class="keyword">join</span> kcgx <span class="keyword">on</span> js.教师号<span class="operator">=</span>kcgx.教师号</span><br><span class="line"><span class="keyword">join</span> xkgx <span class="keyword">on</span> kcgx.课程号<span class="operator">=</span>xkgx.课程号</span><br><span class="line"><span class="keyword">join</span> xsgx <span class="keyword">on</span> xkgx.学号<span class="operator">=</span>xsgx.学号</span><br><span class="line"><span class="keyword">where</span> t.姓名<span class="operator">=</span><span class="string">&#x27;张丽丽&#x27;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> xsgx.学号,xsgx.姓名</span><br></pre></td></tr></table></figure></li><li><p>查询相同姓名的学生，列出相同的姓名及相应的同名人数。（有几个学生同名）<br>提示：考虑按姓名分组，分组内元组的个数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> xsgx</span><br><span class="line"><span class="keyword">where</span> 姓名 <span class="keyword">in</span>(<span class="keyword">select</span> 姓名 <span class="keyword">from</span> xsgx</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 姓名</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>)<span class="operator">&gt;</span><span class="number">1</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>查询每门功成绩最好的前两名。</p></li></ol><p>提示：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> t1.学号,t1.课程号,成绩</span><br><span class="line"><span class="keyword">FROM</span> 选课 t1</span><br><span class="line"><span class="keyword">WHERE</span> 成绩 <span class="keyword">IN</span> (<span class="keyword">SELECT</span> TOP <span class="number">2</span> 成绩</span><br><span class="line"><span class="keyword">FROM</span> 选课</span><br><span class="line"><span class="keyword">WHERE</span> 课程号<span class="operator">=</span> t1.课程号</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 成绩 <span class="keyword">DESC</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> t1.学号,t1.课程号,成绩</span><br><span class="line"><span class="keyword">FROM</span> xkgx t1</span><br><span class="line"><span class="keyword">WHERE</span> 成绩 <span class="keyword">IN</span> (<span class="keyword">SELECT</span> TOP <span class="number">2</span> 成绩</span><br><span class="line"><span class="keyword">FROM</span> xkgx</span><br><span class="line"><span class="keyword">WHERE</span> 课程号<span class="operator">=</span> t1.课程号</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 成绩 <span class="keyword">DESC</span>)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 课程号 <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure><p>这道题每次父亲查询都提供课程号的值给子查询，其子查询的功能就是计算父查询对应课程的前两名。</p><ol start="8"><li>查询学过“101”并且也学过编号“102”课程的同学的学号、姓名。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> xsgx.学号,xsgx.姓名</span><br><span class="line"><span class="keyword">from</span> xsgx</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> xkgx.学号</span><br><span class="line"><span class="keyword">where</span> 学号 <span class="keyword">in</span> (<span class="keyword">select</span> 学号 <span class="keyword">from</span> xkgx</span><br><span class="line"><span class="keyword">where</span> 课程号<span class="operator">=</span><span class="string">&#x27;101&#x27;</span>)</span><br><span class="line"><span class="keyword">and</span> 学号 <span class="keyword">in</span> (<span class="keyword">select</span> 学号 <span class="keyword">from</span> xkgx</span><br><span class="line"><span class="keyword">where</span> 课程号<span class="operator">=</span><span class="string">&#x27;102&#x27;</span>)</span><br></pre></td></tr></table></figure>9.查询没有选修课程表中所有课的同学的学号、姓名。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> xsgx.学号,xsgx.姓名</span><br><span class="line"><span class="keyword">from</span> xsgx</span><br><span class="line"><span class="keyword">where</span> 学号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 学号 <span class="keyword">from</span> xkgx </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 学号</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(课程号)<span class="operator">&lt;</span>(<span class="keyword">select</span> <span class="built_in">count</span>(课程号) <span class="keyword">from</span> kcgx))</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> xsgx.学号,xsgx.姓名</span><br><span class="line"><span class="keyword">from</span> xsgx <span class="keyword">join</span> xkgx <span class="keyword">on</span> xsgx.学号<span class="operator">=</span>xkgx.学号</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> xsgx.学号,xkgx.姓名</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(kcgs.课程号)<span class="operator">&lt;</span></span><br><span class="line">(<span class="keyword">select</span> <span class="built_in">count</span> (课程号) <span class="keyword">from</span> kcgx )</span><br></pre></td></tr></table></figure>或者<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> kcgx.学号,xsgx.姓名</span><br><span class="line"><span class="keyword">from</span> xkgx <span class="keyword">join</span> xsgx <span class="keyword">on</span> xkgx.学号<span class="operator">=</span>xsgx.学号</span><br><span class="line"><span class="keyword">where</span> xkgx.学号 <span class="keyword">not</span> <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 学号 <span class="keyword">from</span> xkgx</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 学号</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(课程号) <span class="operator">=</span></span><br><span class="line">(<span class="keyword">select</span> <span class="built_in">count</span> (课程号) <span class="keyword">from</span> kcgx))</span><br></pre></td></tr></table></figure>10.查询全部学生都选修过的课程对应的课程号和课程名。<br>提示：<br>意味着该课程的选课人数与学生总人数相等。考虑按课程号分组，查询哪个分组中学号的个数与学生个数相等，得到这样的分组它的课程号。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> kcgx.课程号,kcgx.课程名</span><br><span class="line"><span class="keyword">from</span> kcgx</span><br><span class="line"><span class="keyword">where</span> 课程号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 课程号 <span class="keyword">from</span> xkgx </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 课程号 </span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(学号)<span class="operator">=</span></span><br><span class="line">(<span class="keyword">select</span> <span class="built_in">count</span>(学号) <span class="keyword">from</span> xsgx))</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 课程名,课程号</span><br><span class="line"><span class="keyword">from</span> kcgx</span><br><span class="line"><span class="keyword">where</span> kcgx.课程号 <span class="keyword">in</span> (<span class="keyword">select</span> 课程号</span><br><span class="line"><span class="keyword">from</span> xkgx</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 课程号</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(学号) <span class="operator">=</span></span><br><span class="line">(<span class="keyword">select</span> <span class="built_in">count</span>(学号)<span class="keyword">from</span> xsgx))</span><br></pre></td></tr></table></figure></li></ol><p>11.查询没学过“李红玉”老师讲授的任一门课程的学生姓名。（not in不相关即可实现）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 姓名</span><br><span class="line"><span class="keyword">from</span> xsgx</span><br><span class="line"><span class="keyword">where</span> 学号 <span class="keyword">not</span> <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 学号 <span class="keyword">from</span> xkgx,js,kcgx </span><br><span class="line"><span class="keyword">where</span> xkgx.课程号<span class="operator">=</span>kcgx.课程号 </span><br><span class="line"><span class="keyword">and</span></span><br><span class="line">kcgx.教师号<span class="operator">=</span>js.教师号 </span><br><span class="line"><span class="keyword">and</span> </span><br><span class="line">js.姓名<span class="operator">=</span><span class="string">&#x27;李红玉&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 姓名</span><br><span class="line"><span class="keyword">from</span> xsgx</span><br><span class="line"><span class="keyword">where</span> 学号 <span class="keyword">not</span> <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 学号 <span class="keyword">from</span> xkgx </span><br><span class="line"><span class="keyword">join</span> kcgx <span class="keyword">on</span> xkgx.课程号<span class="operator">=</span>kcgx.课程号</span><br><span class="line"><span class="keyword">join</span> t <span class="keyword">on</span> kcgx.教师号<span class="operator">=</span>xkgx.教师号</span><br><span class="line"><span class="keyword">where</span> 姓名<span class="operator">=</span><span class="string">&#x27;李红玉&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="实验七-视图与索引"><a href="#实验七-视图与索引" class="headerlink" title="实验七   视图与索引"></a>实验七   视图与索引</h1><p>实验日期：</p><h2 id="实验目标：-6"><a href="#实验目标：-6" class="headerlink" title="实验目标："></a>实验目标：</h2><p>（1）掌握创建视图、删除视图；</p><p>（2）查询视图。</p><p>（3）更新视图、修改视图对应的数据。</p><p>（4）理解索引的概念和索引的作用，学会使用索引。</p><p>（5）了解聚簇索引和非聚簇索引。</p><h2 id="实验内容：-5"><a href="#实验内容：-5" class="headerlink" title="实验内容："></a>实验内容：</h2><p>假设“学生选课”数据库中有3个基本表（关系）：</p><p>学生关系：学生（学号，姓名，性别，所在系）</p><p>课程关系：课程（课程号，课程名，开课学期，教师号）</p><p>选课关系：选课（学号，课程号，成绩）</p><p>每个关系的当前值分别如表所示。</p><p>打开对象资源管理器，创建一个名为”学生选课”的数据库，在该数据库中导入以下的</p><p>表7.1—7.3。<br>表7.1 学生关系</p><table><thead><tr><th align="center">学号</th><th align="center">姓名</th><th align="center">性别</th><th align="center">年龄</th><th align="center">所在系</th></tr></thead><tbody><tr><td align="center">S101101</td><td align="center">陈名军</td><td align="center">男</td><td align="center">18</td><td align="center">计算机系</td></tr><tr><td align="center">S101102</td><td align="center">吴小晴</td><td align="center">女</td><td align="center">19</td><td align="center">计算机系</td></tr><tr><td align="center">S101103</td><td align="center">王明燕</td><td align="center">女</td><td align="center">19</td><td align="center">计算机系</td></tr><tr><td align="center">S101104</td><td align="center">严利</td><td align="center">男</td><td align="center">20</td><td align="center">计算机系</td></tr><tr><td align="center">S101105</td><td align="center">朱欣</td><td align="center">男</td><td align="center">20</td><td align="center">计算机系</td></tr><tr><td align="center">S101201</td><td align="center">李国庆</td><td align="center">男</td><td align="center">21</td><td align="center">信息系</td></tr><tr><td align="center">S101202</td><td align="center">李祥</td><td align="center">男</td><td align="center">21</td><td align="center">信息系</td></tr><tr><td align="center">S101203</td><td align="center">孙渝研</td><td align="center">男</td><td align="center">20</td><td align="center">信息系</td></tr><tr><td align="center">S101204</td><td align="center">赵艳</td><td align="center">女</td><td align="center">18</td><td align="center">信息系</td></tr><tr><td align="center">S101205</td><td align="center">刘唯</td><td align="center">女</td><td align="center">19</td><td align="center">信息系</td></tr><tr><td align="center">S101206</td><td align="center">林玉霞</td><td align="center">女</td><td align="center">20</td><td align="center">信息系</td></tr><tr><td align="center">S101207</td><td align="center">王江</td><td align="center">男</td><td align="center">21</td><td align="center">信息系</td></tr><tr><td align="center">S101301</td><td align="center">王成</td><td align="center">男</td><td align="center">20</td><td align="center">会计系</td></tr><tr><td align="center">S101302</td><td align="center">张平安</td><td align="center">男</td><td align="center">18</td><td align="center">会计系</td></tr><tr><td align="center">S101401</td><td align="center">钟琴</td><td align="center">女</td><td align="center">19</td><td align="center">会计系</td></tr><tr><td align="center">S101402</td><td align="center">吴娟娟</td><td align="center">女</td><td align="center">21</td><td align="center">会计系</td></tr><tr><td align="center">S101403</td><td align="center">李月</td><td align="center">女</td><td align="center">22</td><td align="center">会计系</td></tr><tr><td align="center">S101404</td><td align="center">陈名军</td><td align="center">男</td><td align="center">23</td><td align="center">会计系</td></tr><tr><td align="center">S101405</td><td align="center">赵艳</td><td align="center">女</td><td align="center">21</td><td align="center">会计系</td></tr></tbody></table><p>表7.2课程关系</p><table><thead><tr><th align="center">课程号</th><th align="center">课程名</th><th align="center">开课学期</th><th align="center">学分</th><th align="center">教师号</th></tr></thead><tbody><tr><td align="center">101</td><td align="center">计算机基础</td><td align="center">1</td><td align="center">3</td><td align="center">T1</td></tr><tr><td align="center">102</td><td align="center">体育</td><td align="center">2</td><td align="center">4</td><td align="center">T2</td></tr><tr><td align="center">201</td><td align="center">英语</td><td align="center">1</td><td align="center">4</td><td align="center">T3</td></tr><tr><td align="center">202</td><td align="center">大学语文</td><td align="center">3</td><td align="center">4</td><td align="center">T4</td></tr><tr><td align="center">305</td><td align="center">操作系统</td><td align="center">4</td><td align="center">4</td><td align="center">T5</td></tr><tr><td align="center">304</td><td align="center">计算机原理</td><td align="center">4</td><td align="center">4</td><td align="center">T5</td></tr><tr><td align="center">301</td><td align="center">计算机网络</td><td align="center">3</td><td align="center">3</td><td align="center">T6</td></tr><tr><td align="center">302</td><td align="center">电子技术</td><td align="center">3</td><td align="center">4</td><td align="center">T6</td></tr><tr><td align="center">303</td><td align="center">数据库应用</td><td align="center">4</td><td align="center">3</td><td align="center">T7</td></tr></tbody></table><p>表7.3 选课关系</p><table><thead><tr><th align="center">学号</th><th align="center">课程号</th><th align="center">成绩</th></tr></thead><tbody><tr><td align="center">S101101</td><td align="center">102</td><td align="center">83</td></tr><tr><td align="center">S101101</td><td align="center">101</td><td align="center">60</td></tr><tr><td align="center">S101101</td><td align="center">201</td><td align="center">78</td></tr><tr><td align="center">S101101</td><td align="center">202</td><td align="center">87</td></tr><tr><td align="center">S101101</td><td align="center">305</td><td align="center">79</td></tr><tr><td align="center">S101101</td><td align="center">304</td><td align="center">89</td></tr><tr><td align="center">S101101</td><td align="center">303</td><td align="center">64</td></tr><tr><td align="center">S101101</td><td align="center">302</td><td align="center">90</td></tr><tr><td align="center">S101101</td><td align="center">301</td><td align="center">83</td></tr><tr><td align="center">S101102</td><td align="center">101</td><td align="center">84</td></tr><tr><td align="center">S101102</td><td align="center">102</td><td align="center">75</td></tr><tr><td align="center">S101102</td><td align="center">202</td><td align="center">86</td></tr><tr><td align="center">S101102</td><td align="center">303</td><td align="center">67</td></tr><tr><td align="center">S101201</td><td align="center">101</td><td align="center">78</td></tr><tr><td align="center">S101201</td><td align="center">102</td><td align="center">72</td></tr><tr><td align="center">S101201</td><td align="center">303</td><td align="center">76</td></tr><tr><td align="center">S101201</td><td align="center">201</td><td align="center">50</td></tr><tr><td align="center">S101301</td><td align="center">101</td><td align="center">90</td></tr><tr><td align="center">S101302</td><td align="center">101</td><td align="center">90</td></tr><tr><td align="center">S101302</td><td align="center">303</td><td align="center">83</td></tr></tbody></table><p>用学生、课程、选课这三张表，利用SQL语句完成以下练习题。</p><p>（1）创建V1视图，学生的学号、姓名、所在系、课程号、课程名、课程学分的视图。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> V1</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,姓名,所在系,xk.课程号,kc.课程名,学分</span><br><span class="line"><span class="keyword">from</span> xs </span><br><span class="line"><span class="keyword">join</span> xk <span class="keyword">on</span> xs.学号<span class="operator">=</span>xk.学号 </span><br><span class="line"><span class="keyword">join</span> kc <span class="keyword">on</span> xk.课程号<span class="operator">=</span>kc.课程号</span><br></pre></td></tr></table></figure><p>（2）创建V2视图，查个学生的平均成绩的视图，要求列出学生学号及平均成绩。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> V2</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> 学号,<span class="built_in">avg</span>(成绩) <span class="keyword">as</span> 平均成绩</span><br><span class="line"><span class="keyword">from</span> xk</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 学号</span><br></pre></td></tr></table></figure><p>（3）创建V3视图，每个学生的修课学分的视图，要求列出学生学号及总学分。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> V3</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> 学号,<span class="built_in">sum</span>(学分) <span class="keyword">as</span> 总学分</span><br><span class="line"><span class="keyword">from</span> xk <span class="keyword">join</span>  kc <span class="keyword">on</span> xk.课程号<span class="operator">=</span>kc.课程号</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 学号</span><br></pre></td></tr></table></figure><p>（4）上面的视图V3能否对其总学分对应的数据进行修改？</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> V3 <span class="keyword">set</span> 总学分<span class="operator">=</span><span class="number">10</span> <span class="keyword">where</span> 学号<span class="operator">=</span><span class="string">&#x27;S101101&#x27;</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> V3</span><br></pre></td></tr></table></figure><p>对视图或函数 ‘V3’ 的更新或插入失败，因其包含派生域或常量域。</p><p>（5）创建V4视图，计算机系的学生基本信息的视图。该视图能否更新学生的姓名？（无需选课的信息）。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> V4</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> 所在系<span class="operator">=</span><span class="string">&#x27;计算机系&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> V4 <span class="keyword">set</span> 姓名<span class="operator">=</span><span class="string">&#x27;陈大军&#x27;</span> </span><br><span class="line"><span class="keyword">where</span> 姓名<span class="operator">=</span><span class="string">&#x27;陈名军&#x27;</span></span><br></pre></td></tr></table></figure><p>可以更新</p><p>（6）创建V5视图，每个学生获得的最高成绩，要求列出学号和最高成绩</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> V5</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> 学号,<span class="built_in">max</span>(成绩) <span class="keyword">as</span> 最高成绩</span><br><span class="line"><span class="keyword">from</span> xk</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 学号</span><br></pre></td></tr></table></figure><p>（7）借助视图V5，实现该查询，对每个学生找出他获得最高成绩的课程号。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> V5.学号,课程号</span><br><span class="line"><span class="keyword">from</span> V5 <span class="keyword">join</span> xk <span class="keyword">on</span> V5.学号<span class="operator">=</span>xk.学号</span><br><span class="line"><span class="keyword">where</span> 成绩<span class="operator">=</span>top <span class="number">1</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> xk.课程号</span><br></pre></td></tr></table></figure><p>（8）删除视图V1。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> V1</span><br></pre></td></tr></table></figure><p>（9）为学生关系的姓名列创建一个非聚簇索引。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> nonclustered index 非聚簇索引 <span class="keyword">on</span> xs(姓名)</span><br></pre></td></tr></table></figure><p>（10）为课程表的课程名创建一个聚簇索引。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> clustered index 聚簇索引 <span class="keyword">on</span> kc(课程名)</span><br></pre></td></tr></table></figure><h2 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h2><ol><li>视图可以加快数据的查询速度，这句话对吗？为什么？</li></ol><ul><li>不对，因为通过视图查询数据时，比直接针对基本表查询数据多了一个转换过程，即从外模式到模式的转换。</li></ul><ol start="2"><li>视图可以简化查询，这句话对吗？为什么？</li></ol><ul><li>对，简化操作</li></ul><ol start="3"><li>视图是一个虚表，数据库中只存放视图的定义，而不存放视图包含的数据，这些数据仍存放在原来基本表中。这句话对吗？</li></ol><ul><li>对</li></ul><ol start="4"><li>基本表中的数据如果发生变化，视图中查询出数据也随之变化。这句话对吗？</li></ol><ul><li>对</li></ul><ol start="5"><li>索引是否越多越好？</li></ol><ul><li>否</li><li>索引需要在内存和物理磁盘驱动器上使用更多的存储空间。在执行插入声明的过程中可能会在一定程度上导致系统性能的下降，因为在插入数据的时候是需要根据索引的顺序插入，而不是在第一个可用的位置直接插入数据，这样一来，存在的索引越多将导致插入或者更新声明所需要的时间就越多。</li><li>1)索引影响DML操作,任何DML操作都要更新INDEX, 这是代价。</li><li>2)任何方便都是有代价的，select的时候方便，insert、update、delete的时候就要维护index。</li><li>3)索引多了, 执行计划的制定要费更多的资源。</li><li>4)创建和维护索引是有成本的。</li><li>5)索引能够极大的提高数据检索效率，也能够改善排序分组操作的性能，但是我们不能忽略的 一个问题就  是索引是完全独立于基础数据之外的一部分数据。</li></ul><ol start="6"><li>哪些视图不能更新？</li></ol><ul><li>若视图的属性来自集函数、表达式，则该视图肯定是不可以更新的</li><li>若视图是由两个以上基本表导出的，则次视图不允许更新。– 若视图的字段来自字段表达式或常数，则不允许对此视图执行INSERT和UPDATE操作，但允许执行DELETE操作。</li><li>若视图的字段来自集函数，则此视图不允许更新。</li><li>若视图定义中含有GROUP BY子句，则此视图不允许更新若视图中含有DISTINCT短语，则此视图不允许更新</li><li>若视图定义中有嵌套查询，并且内层查询FROM子句中涉及的表也是导出该视图的基本表，则此视图不允许更新。</li><li>一个不允许更新的视图上定义的视图也不允许更新。</li></ul><ol start="7"><li>聚簇索引和非聚簇索引有何区别，为什么每个表只能有一个聚簇索引？</li></ol><p>答：聚集索引是一种稀疏索引，数据页上一级的索引页存储的是页指针，而不是行指针。而对于非聚集索引，则是密集索引，在数据页的上一级索引页它为每一个数据行存储一条索引记录。一个表只能有一个聚簇索引，因为数据一旦存储，顺序只能有一种。</p><ul><li>聚簇索引</li></ul><p>(1) 一个索引项直接对应实际数据记录的存储页，可谓“直达”</p><p>(2) 主键缺省使用它</p><p>(3) 索引项的排序和数据行的存储排序完全一致，利用这一点，想修改数据的存储顺序，可以通过改变主键的方法（撤销原有主键，另找也能满足主键要求的一个字段或一组字段，重建主键）</p><p>(4) 一个表只能有一个聚簇索引（理由：数据一旦存储，顺序只能有一种）</p><ul><li>非聚簇索引</li></ul><p>(1) 不能“直达”，可能链式地访问多级页表后，才能定位到数据页</p><p>(2)一个表可以有多个非聚簇索引</p><ul><li>聚簇索引的顺序就是数据的物理存储顺序，而对非聚簇索引的解释是:索引顺序与数据物理排列顺序无关。正式因为如此，所以一个表最多只能有一个聚簇索引。</li></ul><h1 id="实验八-数据操作"><a href="#实验八-数据操作" class="headerlink" title="实验八   数据操作"></a>实验八   数据操作</h1><p>实验日期：</p><h2 id="实验目标：-7"><a href="#实验目标：-7" class="headerlink" title="实验目标："></a>实验目标：</h2><p>（1）掌握插入数据到表中。</p><p>（2）掌握删除表中的数据。</p><p>（3）掌握修改表中的数据。</p><h2 id="实验内容：-6"><a href="#实验内容：-6" class="headerlink" title="实验内容："></a>实验内容：</h2><p>建立一个名叫“仓库职工”的数据库，接下来请利用实验五的数据，将表中的数据导入到“仓库职工”数据库中。用T-SQL语句完成以下练习题。</p><ol><li>查询每个城市的仓库的总面积，将查询的结果插入到新表t1中，该表需要自己创建。<br>创建表t1的代码如下：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Create</span> <span class="keyword">table</span> t1</span><br><span class="line">(cityname <span class="type">char</span>(<span class="number">20</span>),</span><br><span class="line">Sumarea <span class="type">int</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>运行代码创建了表t1。<br>接下来向t1中插入数据，其中数据为某个子查询的结果。代码提示如下：</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Insert</span> <span class="keyword">into</span> t1</span><br><span class="line"><span class="keyword">Select</span> 城市,<span class="built_in">sum</span>(面积)</span><br><span class="line"><span class="keyword">From</span> 仓库</span><br><span class="line"><span class="keyword">Group</span> <span class="keyword">by</span> 城市</span><br></pre></td></tr></table></figure><ol start="2"><li>插入一个新的供应商元组（S9，智通公司，沈阳）<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 供应商表</span><br><span class="line"><span class="keyword">values</span> (<span class="string">&#x27;S9&#x27;</span>,<span class="string">&#x27;智通公司&#x27;</span>,<span class="string">&#x27;沈阳&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li>北京的所有仓库增加100M2的面积。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">update</span> ck <span class="keyword">set</span> 面积<span class="operator">=</span>面积<span class="operator">+</span><span class="number">100</span> <span class="keyword">where</span> 城市<span class="operator">=</span><span class="string">&#x27;北京&#x27;</span></span><br></pre></td></tr></table></figure></li><li>给低于所有职工平均工资的职工提高5%（注意要用0.05表示5%）的工资。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> 职工表</span><br><span class="line"><span class="keyword">set</span> 月工资<span class="operator">=</span>月工资<span class="operator">*</span>(<span class="number">1</span><span class="operator">+</span><span class="number">0.005</span>)</span><br><span class="line"><span class="keyword">where</span> 月工资<span class="operator">&lt;</span></span><br><span class="line">(<span class="keyword">select</span> <span class="built_in">avg</span>(月工资) <span class="keyword">from</span> 职工表)</span><br></pre></td></tr></table></figure></li><li>给北京的职工加900元工资。（相关子查询，不相关子查询，多表三种方法实现 ）。</li></ol><ul><li>用相关子查询实现的代码如下：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Update</span> 职工</span><br><span class="line"><span class="keyword">Set</span> 月工资<span class="operator">=</span>月工资<span class="operator">+</span><span class="number">900</span></span><br><span class="line"><span class="keyword">Where</span> ‘北京’<span class="operator">=</span>(<span class="keyword">select</span>  城市</span><br><span class="line"><span class="keyword">From</span> 仓库</span><br><span class="line"><span class="keyword">Where</span> 仓库.仓库号<span class="operator">=</span>职工.仓库号)</span><br></pre></td></tr></table></figure></li><li>用不相关子查询实现的代码如下：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Update</span> 职工</span><br><span class="line"><span class="keyword">Set</span> 月工资<span class="operator">=</span>月工资<span class="operator">+</span><span class="number">900</span></span><br><span class="line"><span class="keyword">Where</span> 仓库号<span class="operator">=</span>(<span class="keyword">select</span>  仓库号</span><br><span class="line"><span class="keyword">From</span> 仓库</span><br><span class="line"><span class="keyword">Where</span> 城市<span class="operator">=</span>’北京’)</span><br></pre></td></tr></table></figure>6．删除目前没有任何订购单的供应商。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span>  <span class="keyword">from</span>  供应商表</span><br><span class="line"><span class="keyword">where</span> 供应商号 <span class="keyword">not</span> <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 供应商号 <span class="keyword">from</span> 订购表)</span><br></pre></td></tr></table></figure>7．删除由在上海仓库工作的职工发出的所有订购单。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 订购表</span><br><span class="line"><span class="keyword">where</span> 职工号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> 职工号 <span class="keyword">from</span> 职工表 <span class="keyword">where</span> 仓库号 <span class="keyword">in</span></span><br><span class="line">( <span class="keyword">select</span> 仓库号 <span class="keyword">from</span> 仓库表 <span class="keyword">where</span> 城市<span class="operator">=</span><span class="string">&#x27;上海&#x27;</span>))</span><br></pre></td></tr></table></figure></li></ul><h1 id="实验九-流程控制语句（选做）"><a href="#实验九-流程控制语句（选做）" class="headerlink" title="实验九   流程控制语句（选做）"></a>实验九   流程控制语句（选做）</h1><p>实验日期：</p><h2 id="实验目标：-8"><a href="#实验目标：-8" class="headerlink" title="实验目标："></a>实验目标：</h2><ul><li>（1）掌握流程控制关键字。</li><li>（2）查询流程控制关键字的使用方法。<br>实验内容：<br>流程控制语句是指那些用来控制程序执行和流程分支的语句，在SQL Server 2008中，流程控制语句用来控制SQL语句、语句块或者存储过程的执行流程。</li></ul><p>Transact-SQL 语言使用的流程控制命令与常见的程序设计语言类似，主要有以下几种控制命令。</p><p>假设有“学生选课”的数据库，数据如实验七。</p><p>（1）使用IF…ELSE 语句<br><code>IF...ELSE</code>语句是条件判断语句，其中，<code>ELSE子句</code>是可选的，最简单的IF语句没有ELSE子句部分。IF…ELSE语句用来判断当某一条件成立时执行某段程序，条件不成立时执行另一段程序。SQL Server允许嵌套使用IF…ELSE语句，而且嵌套层数没有限制。<br>IF…ELSE语句的语法形式为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">IF <span class="operator">&lt;</span>布尔表达式<span class="operator">&gt;</span></span><br><span class="line">           <span class="operator">&lt;</span><span class="keyword">SQL</span>语句<span class="operator">&gt;</span><span class="operator">|</span><span class="operator">&lt;</span>语句块<span class="operator">&gt;</span></span><br><span class="line">     [<span class="keyword">ELSE</span></span><br><span class="line">          <span class="operator">&lt;</span><span class="keyword">SQL</span>语句<span class="operator">&gt;</span><span class="operator">|</span><span class="operator">&lt;</span>语句块<span class="operator">&gt;</span>]</span><br></pre></td></tr></table></figure><p>例 在Student表中查询是否有‘张力’这个学生。如果有，则显示这个学生的姓名和系，否则显示没有此人。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">USE 学生选课</span><br><span class="line">GO</span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@message</span> <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">IF <span class="keyword">EXISTS</span>(<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Student <span class="keyword">WHERE</span> SNAME<span class="operator">=</span><span class="string">&#x27;张力&#x27;</span>)</span><br><span class="line">    <span class="keyword">SELECT</span> SNAME,SDEPT <span class="keyword">FROM</span> Student <span class="keyword">WHERE</span> SNAME<span class="operator">=</span><span class="string">&#x27;张力&#x27;</span></span><br><span class="line"><span class="keyword">ELSE</span>  </span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SET</span> <span class="variable">@message</span><span class="operator">=</span><span class="string">&#x27;没有此人&#x27;</span></span><br><span class="line">    PRINT <span class="variable">@message</span></span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><p>例 在SC表中查询是否有成绩大于90分的学生，有则输出有学生的成绩高于90分，否则输出没有学生的成绩高于90分。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE STUDENTS</span><br><span class="line">GO</span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@message</span> <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">IF <span class="keyword">EXISTS</span>(<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SC <span class="keyword">WHERE</span> GRADE<span class="operator">&gt;</span><span class="number">90</span>)</span><br><span class="line">    PRINT <span class="string">&#x27;有学生的成绩高于90分&#x27;</span></span><br><span class="line"><span class="keyword">ELSE</span>  </span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SET</span> <span class="variable">@message</span><span class="operator">=</span><span class="string">&#x27;抱歉，没有学生的成绩高于90分&#x27;</span>               PRINT <span class="variable">@message</span></span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><p>（2）使用<code>BEGIN...END</code> 语句<br>在控制流程中需要执行两条或两条以上的语句，应该将这些语句定义为一个语句块（称为复合语句）。BEGIN和END必须成对实现。<br>语法格式：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"> <span class="operator">&lt;</span><span class="keyword">SQL</span>语句<span class="operator">&gt;</span><span class="operator">|</span><span class="operator">&lt;</span>语句块<span class="operator">&gt;</span></span><br><span class="line"> <span class="keyword">END</span></span><br></pre></td></tr></table></figure><p>（3）使用CASE语句<br>CASE结构提供比<code>IF……ELSE</code>结构更多的选择和判断的机会。使用CASE表达式可以很方便的实现多重选择的情况，从而可以避免编写多重的IF……ELSE嵌套循环。CASE语句按照使用形式不同，可以分为简单CASE语句和搜索CASE语句，它们的语法形式分别为：<br>1.简单CASE函数：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CASE</span> <span class="operator">&lt;</span>表达式<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="operator">&lt;</span>表达式<span class="operator">&gt;</span> <span class="keyword">THEN</span> <span class="operator">&lt;</span>表达式<span class="operator">&gt;</span></span><br><span class="line">…</span><br><span class="line"><span class="keyword">WHEN</span> <span class="operator">&lt;</span>表达式<span class="operator">&gt;</span> <span class="keyword">THEN</span> <span class="operator">&lt;</span>表达式<span class="operator">&gt;</span></span><br><span class="line">[<span class="keyword">ELSE</span> <span class="operator">&lt;</span>表达式<span class="operator">&gt;</span>]</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><p>例 从学生表Student中，选取SNO，SSEX，如果SSEX为“男”则输出“M”，如果为“女”输出“F”。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO,SSEX<span class="operator">=</span></span><br><span class="line"><span class="keyword">CASE</span> SSEX</span><br><span class="line"> <span class="keyword">WHEN</span> <span class="string">&#x27;男&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;M&#x27;</span></span><br><span class="line"> <span class="keyword">WHEN</span> <span class="string">&#x27;女&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;F&#x27;</span></span><br><span class="line">  <span class="keyword">END</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br></pre></td></tr></table></figure><p>运行结果如图8.10所示。<br>2.CASE搜索函数：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CASE</span></span><br><span class="line">   <span class="keyword">WHEN</span> <span class="operator">&lt;</span>条件表达式<span class="operator">&gt;</span> <span class="keyword">THEN</span> <span class="operator">&lt;</span>表达式<span class="operator">&gt;</span></span><br><span class="line">…</span><br><span class="line"><span class="keyword">WHEN</span> <span class="operator">&lt;</span>条件表达式<span class="operator">&gt;</span>                                      </span><br><span class="line"><span class="keyword">THEN</span> <span class="operator">&lt;</span>表达式<span class="operator">&gt;</span>                                  </span><br><span class="line">   [<span class="keyword">ELSE</span> <span class="operator">&lt;</span>表达式<span class="operator">&gt;</span>]</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><p>例 从SC表中查询所有同学选课成绩情况，凡成绩为空者输出“未考”、小于60分输出“不及格”、60分至70分输出“及格”、70分至90分输出“良好”、大于或等于90分时输出“优秀”。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO,CNO,GRADE,</span><br><span class="line">GRADE<span class="operator">=</span><span class="keyword">CASE</span>  </span><br><span class="line">  <span class="keyword">WHEN</span> GRADE <span class="keyword">IS</span> <span class="keyword">NULL</span> <span class="keyword">THEN</span> <span class="string">&#x27;未考&#x27;</span></span><br><span class="line">  <span class="keyword">WHEN</span> GRADE<span class="operator">&lt;</span><span class="number">60</span> <span class="keyword">THEN</span> <span class="string">&#x27;不及格&#x27;</span></span><br><span class="line">  <span class="keyword">WHEN</span> GRADE<span class="operator">&gt;=</span><span class="number">60</span> <span class="keyword">AND</span> GRADE<span class="operator">&lt;</span><span class="number">70</span> <span class="keyword">THEN</span> <span class="string">&#x27;及格&#x27;</span></span><br><span class="line"> <span class="keyword">WHEN</span> GRADE<span class="operator">&gt;=</span><span class="number">70</span> <span class="keyword">AND</span> GRADE<span class="operator">&lt;</span><span class="number">90</span> <span class="keyword">THEN</span> <span class="string">&#x27;良好&#x27;</span></span><br><span class="line">  <span class="keyword">WHEN</span> GRADE<span class="operator">&gt;=</span><span class="number">90</span> <span class="keyword">THEN</span> <span class="string">&#x27;优秀&#x27;</span></span><br><span class="line">      <span class="keyword">END</span></span><br><span class="line"><span class="keyword">FROM</span> SC</span><br></pre></td></tr></table></figure><p>（4）使用循环：<code>WHILE语句</code><br>WHILE语句用来处理循环。在条件为<code>TRUE</code>的时候，重复执行一条或一个包含多条T-SQL语句的语句块，直到条件表达式为FALSE时退出循环体.<br>其语法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">WHILE <span class="operator">&lt;</span>条件表达式<span class="operator">&gt;</span></span><br><span class="line"> [<span class="keyword">BEGIN</span>]</span><br><span class="line">    <span class="operator">&lt;</span>程序块<span class="operator">&gt;</span></span><br><span class="line">     [BREAK]</span><br><span class="line">   [CONTINUE]</span><br><span class="line">    [程序块]</span><br><span class="line"> [<span class="keyword">END</span>]</span><br></pre></td></tr></table></figure><p>说明：CONTINUE 命令可以让程序跳过CONTINUE 命令之后的语句，回到WHILE 循环的第一行，继续进行下一次循环。BREAK 命令则让程序完全跳出循环，结束WHILE 命令的执行。<code>WHILE </code>语句也可以嵌套。<br>例 编程求1到100的和。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="variable">@i</span> <span class="type">int</span></span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@sum</span> <span class="type">int</span></span><br><span class="line"><span class="keyword">set</span> <span class="variable">@i</span><span class="operator">=</span><span class="number">1</span></span><br><span class="line"><span class="keyword">set</span> <span class="variable">@sum</span> <span class="operator">=</span><span class="number">0</span></span><br><span class="line">while <span class="variable">@i</span><span class="operator">&lt;=</span><span class="number">100</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">set</span> <span class="variable">@sum</span> <span class="operator">=</span><span class="variable">@sum</span><span class="operator">+</span><span class="variable">@i</span></span><br><span class="line">    <span class="keyword">set</span> <span class="variable">@i</span><span class="operator">=</span><span class="variable">@i</span><span class="operator">+</span><span class="number">1</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">select</span> <span class="variable">@sum</span> <span class="keyword">as</span> 合计 ,<span class="variable">@i</span> <span class="keyword">as</span> 循环数  </span><br></pre></td></tr></table></figure><p>图9.1运行结果如图9.1所示。</p><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fq5dx9sxmlj203o01uq2q.jpg"></p><p>请读下列程序并回答下列程序的功能。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@i</span> <span class="type">INT</span></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@i</span> <span class="operator">=</span> <span class="number">1</span></span><br><span class="line">WHILE (<span class="variable">@i</span> <span class="operator">&lt;</span> <span class="number">11</span>)    </span><br><span class="line">  <span class="keyword">BEGIN</span>                      </span><br><span class="line">    IF(<span class="variable">@i</span> <span class="operator">&lt;</span> <span class="number">5</span>)            </span><br><span class="line">    <span class="keyword">BEGIN</span>               </span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@i</span> <span class="operator">=</span> <span class="variable">@i</span> <span class="operator">+</span> <span class="number">1</span>                                  </span><br><span class="line">CONTINUE</span><br><span class="line">    <span class="keyword">END</span>       </span><br><span class="line">    PRINT <span class="variable">@i</span></span><br><span class="line">    <span class="keyword">SET</span> <span class="variable">@i</span> <span class="operator">=</span> <span class="variable">@i</span> <span class="operator">+</span> <span class="number">1</span></span><br><span class="line">  <span class="keyword">END</span></span><br></pre></td></tr></table></figure><p>（5）使用GOTO 语句<br><code>GOTO</code>：可以将执行流程改变到由标签指定的位置。系统跳过GOTO关键字之后的语句，并在GOTO 语句中指定的标签处继续执行操作。<br>语法：<br>GOTO  标识符<br>求1＋2＋3＋…＋10的总和。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@S</span> <span class="type">SMALLINT</span>,<span class="variable">@I</span> <span class="type">SMALLINT</span></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@I</span><span class="operator">=</span><span class="number">1</span></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@S</span><span class="operator">=</span><span class="number">0</span></span><br><span class="line">BEG:</span><br><span class="line">IF (<span class="variable">@I</span><span class="operator">&lt;=</span><span class="number">10</span>)</span><br><span class="line">   <span class="keyword">BEGIN</span></span><br><span class="line">       <span class="keyword">SET</span> <span class="variable">@S</span><span class="operator">=</span><span class="variable">@S</span><span class="operator">+</span><span class="variable">@I</span></span><br><span class="line">       <span class="keyword">SET</span> <span class="variable">@I</span><span class="operator">=</span><span class="variable">@I</span><span class="operator">+</span><span class="number">1</span></span><br><span class="line">       GOTO BEG</span><br><span class="line">   <span class="keyword">END</span></span><br><span class="line">PRINT <span class="variable">@S</span></span><br></pre></td></tr></table></figure><p>运行结果如图9.2所示。</p><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fq5dzhztndj204t01la9t.jpg"></p><p>（6）调度执行：WAIT  FOR<br>该语句可以指定它以后的语句在某个时间间隔之后执行，或未来的某一时间执行。<br>语法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WAIT  <span class="keyword">FOR</span>&#123;DELAY <span class="string">&#x27;time&#x27;</span><span class="operator">|</span><span class="type">TIME</span> <span class="string">&#x27;time&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><p>参数含义：<br><code>DELAY  &#39;time&#39;</code>是指定SQL Server 等待的时间间隔，最长可达24小时。<br><code>TIME  &#39;time&#39;</code>是指定SQL Server等待到某一时刻。<br>例 若变量<code>“@等待”</code>的值等于“间隔”，查询Studnet表是在等待2分钟后执行，否则在下午2:10执行。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @等待 <span class="type">CHAR</span>(<span class="number">10</span>)</span><br><span class="line"><span class="keyword">SET</span> @等待<span class="operator">=</span> <span class="string">&#x27;间隔&#x27;</span></span><br><span class="line">IF @等待<span class="operator">=</span> <span class="string">&#x27;间隔&#x27;</span></span><br><span class="line"><span class="keyword">BEGIN</span>  </span><br><span class="line">WAITFOR DELAY <span class="string">&#x27;00:02:00&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> STUDENT</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">ELSE</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">WAITFOR <span class="type">TIME</span> <span class="string">&#x27;14:10:00&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> STUDENT</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h1 id="实验十-SQL-SERVER事务设计（选做）"><a href="#实验十-SQL-SERVER事务设计（选做）" class="headerlink" title="实验十  SQL SERVER事务设计（选做）"></a>实验十  SQL SERVER事务设计（选做）</h1><p>实验时间：</p><h2 id="实验目的："><a href="#实验目的：" class="headerlink" title="实验目的："></a>实验目的：</h2><ul><li>（1）通过实验理解事务的概念、特性，掌握事务的设计思想和事务创建、执行的方法；</li><li>（2）掌握事务的提交COMMIT；</li><li>（3）掌握事务的回滚ROLLBACK；</li><li>（4）了解事务的锁。</li></ul><h2 id="实验内容：-7"><a href="#实验内容：-7" class="headerlink" title="实验内容："></a>实验内容：</h2><p>创建一个名为“仓库职工”的数据库，导入以下的四张表到该数据库中，完成以下各题<br>仓库表</p><table><thead><tr><th align="center">仓库号</th><th align="left">城市</th><th align="center">面积</th></tr></thead><tbody><tr><td align="center">WH1</td><td align="left">北京</td><td align="center">370</td></tr><tr><td align="center">WH2</td><td align="left">上海</td><td align="center">500</td></tr><tr><td align="center">WH3</td><td align="left">广州</td><td align="center">200</td></tr><tr><td align="center">WH4</td><td align="left">武汉</td><td align="center">400</td></tr></tbody></table><p>职工表</p><table><thead><tr><th align="center">仓库号</th><th align="center">职工号</th><th align="center">工资</th></tr></thead><tbody><tr><td align="center">WH2</td><td align="center">E1</td><td align="center">1220</td></tr><tr><td align="center">WH1</td><td align="center">E2</td><td align="center">1210</td></tr><tr><td align="center">WH2</td><td align="center">E3</td><td align="center">1250</td></tr><tr><td align="center">WH3</td><td align="center">E4</td><td align="center">1230</td></tr><tr><td align="center">WH1</td><td align="center">E5</td><td align="center">1250</td></tr><tr><td align="center">WH3</td><td align="center">E6</td><td align="center">2000</td></tr><tr><td align="center">WH1</td><td align="center">E7</td><td align="center">2080</td></tr></tbody></table><p>订购表</p><table><thead><tr><th align="center">职工号</th><th align="center">供应商号</th><th align="center">订购单号</th><th align="center">订购日期</th></tr></thead><tbody><tr><td align="center">E3</td><td align="center">S7</td><td align="center">OR67</td><td align="center">2009-12-4</td></tr><tr><td align="center">E1</td><td align="center">S4</td><td align="center">OR73</td><td align="center">2009-4-1</td></tr><tr><td align="center">E7</td><td align="center">S4</td><td align="center">OR76</td><td align="center">2009-4-2</td></tr><tr><td align="center">E6</td><td align="center">S6</td><td align="center">OR77</td><td align="center">2009-1-21</td></tr><tr><td align="center">E3</td><td align="center">S4</td><td align="center">OR79</td><td align="center">2009-11-15</td></tr><tr><td align="center">E1</td><td align="center">S6</td><td align="center">OR80</td><td align="center">2009-2-1</td></tr><tr><td align="center">E3</td><td align="center">S6</td><td align="center">OR90</td><td align="center">2009-3-12</td></tr><tr><td align="center">E3</td><td align="center">S3</td><td align="center">OR91</td><td align="center">2009-3-2</td></tr></tbody></table><p>供应商表</p><table><thead><tr><th align="center">供应商号</th><th align="center">供应商名</th><th align="center">地址</th></tr></thead><tbody><tr><td align="center">S3</td><td align="center">振华电子厂</td><td align="center">西安</td></tr><tr><td align="center">S4</td><td align="center">华通电子公司</td><td align="center">北京</td></tr><tr><td align="center">S6</td><td align="center">607厂</td><td align="center">郑州</td></tr><tr><td align="center">S7</td><td align="center">爱华电子厂</td><td align="center">北京</td></tr><tr><td align="center">S8</td><td align="center">胖熊公司</td><td align="center">广州</td></tr><tr><td align="center">S9</td><td align="center">巧姑娘日化</td><td align="center">北京</td></tr></tbody></table><ol><li>   创建事务,并执行。功能为实现广州的职工加10%的工资.<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Begin</span> transaction</span><br><span class="line">Use cangku</span><br><span class="line">Go</span><br><span class="line"><span class="keyword">Update</span> 职工    <span class="keyword">set</span> 工资<span class="operator">=</span>工资<span class="operator">*</span><span class="number">1.1</span></span><br><span class="line"><span class="keyword">From</span> 职工,仓库       </span><br><span class="line"><span class="keyword">Where</span> 职工.仓库号<span class="operator">=</span>仓库.仓库号   <span class="keyword">and</span>  城市<span class="operator">=</span>’广州’</span><br><span class="line">Go</span><br><span class="line"><span class="keyword">Commit</span></span><br><span class="line">Go</span><br></pre></td></tr></table></figure>（2）在select 语句中加锁，悲观锁定职工表。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Begin</span> transaction</span><br><span class="line"><span class="keyword">Select</span>  <span class="operator">*</span> <span class="keyword">From</span>职工表<span class="keyword">with</span>(xlock)</span><br><span class="line"><span class="keyword">Insert</span> <span class="keyword">into</span> 职工表(仓库号,职工号)  <span class="keyword">values</span>(‘WH2’,’E10’)</span><br><span class="line"><span class="keyword">Update</span>  职工表  <span class="keyword">set</span> 工资<span class="operator">=</span><span class="number">2980</span></span><br><span class="line"><span class="keyword">Where</span> 仓库号<span class="operator">=</span>‘WH2’ <span class="keyword">and</span> 职工号<span class="operator">=</span>‘E10’</span><br><span class="line"><span class="keyword">Commit</span> transaction</span><br></pre></td></tr></table></figure>（3）使用HOLDLOCK对供应商表加共享锁。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Begin</span> transaction t2</span><br><span class="line"><span class="keyword">Select</span>  供应商号  <span class="keyword">From</span>  供应商表<span class="keyword">with</span>(holdlock)</span><br><span class="line"><span class="keyword">Select</span>  <span class="built_in">count</span>(供应商号)  <span class="keyword">From</span>  供应商表</span><br><span class="line"><span class="keyword">Commit</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="思考题："><a href="#思考题：" class="headerlink" title="思考题："></a>思考题：</h2><ol><li>什么是事务？事务和程序是一个概念吗？</li></ol><p>事务是由一系列访问和更新操作组成的程序执行单元</p><p>事务是应用程序中一系列严密的操作，所有操作必须成功完成，否则在每个操作中所作的所有更改都会被撤消。也就是事务具有原子性，一个事务中的一系列的操作要么全部成功，要么一个都不做。</p><p>不是同一概念<br> <br>2. 解释语句rollback和commit的作用。</p><p>Commit是提交事务，即提交某个事务的所有的操作；具体地说，就是将事务中所有对数据库的更新写回到磁盘上的物理数据库中去，事务正常结束。</p><p>Rollback表示回滚，即将事务运行的过程中发生了某种故障，事务不能继续执行，系统将事务中对数据库的所有已完成的操作全部撤销，回滚到事务开始的状态。<br>3. 为何使用事务？</p><p>答：通过事务，SQL Server能将逻辑相关的一组操作绑定在一起，以便服务器保持数据的完整性。主要用于一些对操作过程的完整性比较高的程序。比如银行系统，用户在转账的过程中程序出现错误，但是这个转账操作没有完成。那么这个操作就被退回。</p><ol start="4"><li>乐观锁和悲观锁的优缺点各是什么？</li></ol><p>答：<br>乐观锁:<br>优势是:乐观锁机制避免了长事务中的数据库加锁解锁开销，大大提升了大并发量下的系统整体性能表现； </p><p>劣势是，只能在提交数据时才发现业务事务将要失败，如果系统的冲突非常的多，而且一旦冲突就要因为重新计算提交而造成较大的代价的话，乐观锁也会带来很大的问题，在某些情况下，发现失败太迟的代价会非常的大。而且乐观锁也无法解决读”脏”数据的问题。</p><p>悲观锁: </p><p>优势是，能避免冲突的发生；</p><p>劣势是，开销较大，而且加锁时间较长，对于并发的访问性支持不好。 </p><h1 id="实验十一-SQL-SERVER的存储过程（选做）"><a href="#实验十一-SQL-SERVER的存储过程（选做）" class="headerlink" title="实验十一  SQL SERVER的存储过程（选做）"></a>实验十一  SQL SERVER的存储过程（选做）</h1><p>实验时间：</p><h2 id="实验目的：-1"><a href="#实验目的：-1" class="headerlink" title="实验目的："></a>实验目的：</h2><p>（1）掌握存储过程的定义；<br>（2）掌握存储过程的有点；<br>（3）掌握定义带输入与输出参数的存储过程；<br>（4）调用存储过程。<br>（5）删除存储过程</p><h2 id="实验内容：-8"><a href="#实验内容：-8" class="headerlink" title="实验内容："></a>实验内容：</h2><p>注意：这次实验的示例数据库为学生选课数据库，请运行例题中的代码。</p><p>存储过程（procedure）类似于C语言中的函数，JAVA的方法。它可以重复调用。当存储过程执行一次后，可以将语句缓存中，这样下次执行的时候直接使用缓存中的语句。这样就可以提高存储过程的性能。<br>存储过程是一组编译在单个执行计划中的Transact-SQL语句，将一些固定的操作集中起来交给SQL Server数据库服务器完成，以实现某个任务。</p><h3 id="存储过程的优点："><a href="#存储过程的优点：" class="headerlink" title="存储过程的优点："></a>存储过程的优点：</h3><p>（1）与其他应用程序共享应用程序逻辑，因而确保了数据访问和修改的一致性。</p><p>（2）防止数据库中表的细节暴露给用户。</p><p>（3）提供安全机制。</p><p>（4）改进性能。</p><p>（5）减少网络流量。</p><h4 id="1．存储过程的分类"><a href="#1．存储过程的分类" class="headerlink" title="1．存储过程的分类"></a>1．存储过程的分类</h4><p>（1) 用户定义的存储过程</p><p>用户定义的<code>Transact-SQL</code>存储过程中包含一组<code>Transact-SQL</code> 语句集合，可以接受和返回用户提供的参数。</p><p>（2）扩展存储过程</p><p>扩展存储过程是指<code>Microsoft SQL Server</code>的实例可以动态加载和运行的 DLL，是由用户使用编程语言（例如C）创建的自己的外部例程，扩展存储过程一般使用<code>sp_</code>或<code>xp_</code>前缀。</p><p>（3）系统存储过程</p><p>由系统提供的存储过程，可以作为命令执行各种操作。系统存储过程定义在系统数据库master中，其前缀是sp_，例如常用的显示系统信息的sp_help存储过程。</p><h4 id="2．如何创建存储过程"><a href="#2．如何创建存储过程" class="headerlink" title="2．如何创建存储过程"></a>2．如何创建存储过程</h4><p>创建简单的存储过程的语法:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span>  PROC[EDURE]  存储过程名</span><br><span class="line">[<span class="keyword">WITH</span>  ENCRYPTION]</span><br><span class="line">[<span class="keyword">WITH</span>  RECOMPILE]</span><br><span class="line"><span class="keyword">AS</span></span><br></pre></td></tr></table></figure><p>SQL语句<br>说明：<code>WITH  ENCRYPTION</code>–对存储过程进行加密，加密的存储过程用sp_helptext查看不到存储过程的原码；<code>WITH  RECOMPILE</code>–对存储过程重新编译。<br>执行存储过程的语法：<br>EXEC 存储过程名<br>例 创建一个名为GetInfo存储过程，用于获取所有学生信息。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> GetInfo</span><br><span class="line"><span class="keyword">AS</span>  </span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Student</span><br><span class="line">执行存储过程：</span><br><span class="line"><span class="keyword">EXEC</span> GetInfo</span><br></pre></td></tr></table></figure><p>接下来学习编写带参数的存储过程。上例中的存储过程可以获取所有学生信息，如果要获取指定学生的信息怎么做？这里就需要创建带参数的存储过程。</p><p>存储过程的参数分两种：输入参数和输出参数。输入参数用于向存储过程传入值，类似C语言的按值传递；输出参数用于在调用存储过程后返回结果，类似C语言的按引用传递；</p><p>带参数的存储过程的语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span>  PROC[EDURE]  存储过程名</span><br><span class="line">@参数<span class="number">1</span>  数据类型 <span class="operator">=</span> 默认值[OUTPUT],</span><br><span class="line">  …,</span><br><span class="line">@参数n  数据类型 <span class="operator">=</span> 默认值 [OUTPUT]</span><br><span class="line"><span class="keyword">AS</span></span><br></pre></td></tr></table></figure><p> SQL语句</p><p>例 创建一个带输入参数的存储过程，要求用于获取指定学生的信息。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> StuInfo</span><br><span class="line"><span class="variable">@name</span> <span class="type">CHAR</span>(<span class="number">10</span>)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">   <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> STUDENT <span class="keyword">WHERE</span> SNAME<span class="operator">=</span><span class="variable">@name</span></span><br><span class="line">执行存储过程</span><br><span class="line"><span class="keyword">EXEC</span> StuInfo <span class="variable">@name</span><span class="operator">=</span><span class="string">&#x27;李晨&#x27;</span></span><br><span class="line">或按位置传递参数值</span><br><span class="line"><span class="keyword">EXEC</span> StuInfo <span class="string">&#x27;李晨&#x27;</span></span><br></pre></td></tr></table></figure><p>执行完毕的结果如图11.1所示：</p><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fq5e0nh2yvj20730213yc.jpg"></p><p>图11.1执行存储过程结果<br>例 创建一个带输入和输出参数的存储过程GetScore，获取指定课程的平均成绩、最高成绩、最低成绩，并返回结果。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> GetScore</span><br><span class="line"><span class="variable">@kcID</span> <span class="type">CHAR</span>(<span class="number">10</span>),<span class="variable">@AVGScore</span> <span class="type">INT</span> OUTPUT,</span><br><span class="line"><span class="variable">@MAXScore</span> <span class="type">INT</span> OUTPUT,<span class="variable">@MINScore</span> <span class="type">INT</span> OUTPUT</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span>    <span class="variable">@AVGScore</span><span class="operator">=</span><span class="built_in">AVG</span>(Grade),<span class="variable">@MAXScore</span><span class="operator">=</span><span class="built_in">MAX</span>(Grade),<span class="variable">@MINScore</span><span class="operator">=</span><span class="built_in">MIN</span>(Grade)</span><br><span class="line"> <span class="keyword">FROM</span> SC</span><br><span class="line"> <span class="keyword">WHERE</span> Cno<span class="operator">=</span><span class="variable">@kcID</span></span><br><span class="line"> <span class="keyword">SELECT</span>  <span class="variable">@AVGScore</span> <span class="keyword">as</span> 平均成绩,<span class="variable">@MAXScore</span> <span class="keyword">as</span> 最高成绩,<span class="variable">@MINScore</span> <span class="keyword">as</span> 最低成绩</span><br><span class="line">执行存储过程</span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@kcID</span> <span class="type">CHAR</span>(<span class="number">10</span>),<span class="variable">@AVGScore</span> <span class="type">INT</span>,<span class="variable">@MAXScore</span> <span class="type">INT</span>,<span class="variable">@MINScore</span> <span class="type">INT</span></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@kcID</span><span class="operator">=</span><span class="string">&#x27;C001&#x27;</span></span><br><span class="line"><span class="keyword">EXEC</span> GetScore <span class="variable">@kcID</span>,<span class="variable">@AVGScore</span>,<span class="variable">@MAXScore</span>,<span class="variable">@MINScore</span></span><br></pre></td></tr></table></figure><p>执行完毕的结果如图8.20所示：</p><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fq5e29ufetj206u023mwz.jpg"></p><p>图11.2 执行存储过程结果<br>3．查看存储过程<br>在SQL Server中，根据不同需要，可以使用<code>sp_helptext、sp_help</code>、<code>sp_depends</code>系统存储过程来查看用户自定义函数的不同信息。<br>例29. 查看Students数据库中存储过程GetInfo信息。<br>代码如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXEC</span> sp_helptext GetInfo</span><br><span class="line"><span class="keyword">EXEC</span> sp_help GetInfo</span><br><span class="line"><span class="keyword">EXEC</span> sp_depends GetInfo</span><br></pre></td></tr></table></figure><p>运行后得到存储过程的定义、参数和依赖信息。<br>4．存储过程的修改<br>修改存储过程是由ALTER语句来完成的，其语法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">PROCEDURE</span> procedure_name</span><br><span class="line">[<span class="keyword">WITH</span> ENCRYPTION]</span><br><span class="line">[<span class="keyword">WITH</span> RECOMPILE]</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">Sql_statement</span><br></pre></td></tr></table></figure><p>例 修改存储过程StuInfo，根据用户提供的系名进行统计这个系的人数，并要求加密。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">PROCEDURE</span> StuInfo</span><br><span class="line"><span class="variable">@dept</span> <span class="type">CHAR</span>(<span class="number">10</span>),</span><br><span class="line"><span class="variable">@num</span> <span class="type">INT</span> OUTPUT</span><br><span class="line"><span class="keyword">WITH</span> ENCRYPTION</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@num</span><span class="operator">=</span><span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> Student <span class="keyword">WHERE</span> SDEPT<span class="operator">=</span><span class="variable">@dept</span></span><br><span class="line">PRINT <span class="variable">@num</span></span><br></pre></td></tr></table></figure><p>执行存储过程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@dept</span> <span class="type">CHAR</span>(<span class="number">10</span>),<span class="variable">@num</span> <span class="type">INT</span></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@dept</span><span class="operator">=</span><span class="string">&#x27;CS&#x27;</span></span><br><span class="line"><span class="keyword">EXEC</span> StuInfo <span class="variable">@dept</span>,<span class="variable">@num</span></span><br></pre></td></tr></table></figure><p>5．存储过程的删除</p><p>存储过程的删除是通过DROP语句来实现的。</p><p>例31. 使用Transact-SQL语句来删除存储过程StuInfo。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> StuInfo</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 美化</title>
      <link href="/posts/Ubuntu-Theme.html"/>
      <url>/posts/Ubuntu-Theme.html</url>
      
        <content type="html"><![CDATA[<p>Ubuntu美化</p><span id="more"></span><h1 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h1><p>unity-tweak-tool</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install unity-tweak-tool</span><br></pre></td></tr></table></figure><p>Flatabulous 主题</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> add-apt-repository ppa:noobslab/themes</span><br><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="built_in">sudo</span> apt-get install flatabulous-theme</span><br></pre></td></tr></table></figure><p>配套的图标</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> add-apt-repository ppa:noobslab/icons</span><br><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="built_in">sudo</span> apt-get install ultra-flat-icons</span><br></pre></td></tr></table></figure><h1 id="oh-my-zsh"><a href="#oh-my-zsh" class="headerlink" title="oh-my-zsh"></a>oh-my-zsh</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</span><br><span class="line">chsh -s zsh</span><br></pre></td></tr></table></figure><h2 id="问题错误"><a href="#问题错误" class="headerlink" title="问题错误"></a>问题错误</h2><p>agnoster 主题不正常</p><ul><li><p>修改字体即可</p></li><li><p>错误提示</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zsh compinit: insecure directories, run compaudit <span class="keyword">for</span> list.</span><br><span class="line">Ignore insecure directories and <span class="built_in">continue</span> [y] or abort compinit [n]?</span><br></pre></td></tr></table></figure><ul><li>解决方法</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">compaudit</span><br><span class="line">//会显示如下内容</span><br><span class="line">There are insecure directories:</span><br><span class="line">  usr/local/share/zsh/site-functions</span><br><span class="line">//</span><br><span class="line">cd cd /usr/local/share/zsh</span><br><span class="line">sudo chown -R root:root ./site-functions</span><br><span class="line">cd /usr/local/share/</span><br><span class="line">sudo chmod -R 755 zsh</span><br><span class="line">sudo chown -R root:staff zsh</span><br></pre></td></tr></table></figure><hr><p><strong>参考</strong></p><ul><li><a href="https://stackoverflow.com/questions/13762280/zsh-compinit-insecure-directories">zsh compinit: insecure directories</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 下 Node.Js 安装与版本升级</title>
      <link href="/posts/Ubuntu-Nodejs.html"/>
      <url>/posts/Ubuntu-Nodejs.html</url>
      
        <content type="html"><![CDATA[<p>Ubuntu 下 nodejs 安装与版本升级</p><span id="more"></span><h2 id="在Github上获取-Node-Js-源码"><a href="#在Github上获取-Node-Js-源码" class="headerlink" title="在Github上获取 Node.Js 源码"></a>在Github上获取 Node.Js 源码</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> git <span class="built_in">clone</span> https://github.com/nodejs/node.git　nodejs</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod -R 755 node</span><br><span class="line">//修改目录权限</span><br><span class="line">cd node</span><br><span class="line">//进入node目录</span><br><span class="line">sudo ./configure</span><br><span class="line">使用 ./configure 创建编译文件</span><br><span class="line">sudo make</span><br><span class="line">//下一步，可能时间有点长，耐心等待</span><br><span class="line">sudo make install</span><br><span class="line">$ node -v</span><br></pre></td></tr></table></figure><ul><li>如果 Node 不是最新的，Node 有一个模块叫 Npm，是专门用来管理 Node.Js的版本的。使用 npm安装 Npm 模块</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> npm install -g n</span><br></pre></td></tr></table></figure><ul><li>然后，升级node.js到最新稳定版</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> n stable</span><br></pre></td></tr></table></figure><ul><li>旧版本的 npm，也可以很容易地通过 npm 命令来升级，命令如下：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> npm install npm -g</span><br></pre></td></tr></table></figure><h2 id="将-Node-和-Npm-设置为全局"><a href="#将-Node-和-Npm-设置为全局" class="headerlink" title="将 Node 和 Npm 设置为全局"></a>将 Node 和 Npm 设置为全局</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> /opt/nodejs/bin/node(安装目录) /usr/local/bin/node</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> /opt/nodejs/bin/npm（安装目录） /usr/local/bin/npm</span><br></pre></td></tr></table></figure><h2 id="几个-Npm-常用命令"><a href="#几个-Npm-常用命令" class="headerlink" title="几个 Npm 常用命令"></a>几个 Npm 常用命令</h2><table><thead><tr><th align="left">命令</th><th align="left">解析</th></tr></thead><tbody><tr><td align="left">npm -v</td><td align="left">显示版本，检查npm 是否正确安装</td></tr><tr><td align="left">npm install -g express</td><td align="left">全局安装express模块</td></tr><tr><td align="left">npm list</td><td align="left">列出已安装模块</td></tr><tr><td align="left">npm show express</td><td align="left">显示模块详情</td></tr><tr><td align="left">npm update</td><td align="left">升级当前目录下的项目的所有模块</td></tr><tr><td align="left">npm update express</td><td align="left">升级当前目录下的项目的指定模块</td></tr><tr><td align="left">npm update -g express</td><td align="left">升级全局安装的express模块</td></tr><tr><td align="left">npm uninstall express</td><td align="left">删除指定的模块</td></tr></tbody></table><hr><p><strong>参考</strong></p><ul><li><a href="https://blog.csdn.net/lss_csdn/article/details/52165652"><br>ubuntu下nodejs安装与版本升级</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Node.Js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim 基础</title>
      <link href="/posts/Vim.html"/>
      <url>/posts/Vim.html</url>
      
        <content type="html"><![CDATA[<p>Vim 基础</p><span id="more"></span><h1 id="Vim-基础"><a href="#Vim-基础" class="headerlink" title="Vim 基础"></a>Vim 基础</h1><p>指令图<br><img src="https://i.loli.net/2018/04/06/5ac73a8e7333f.png" alt="指令图"></p><p>Vim（ViImproved）编辑器是vi的扩展版，比vi功能更加强大，是功能强大的跨平台文本文件编辑工具，可以利用它可以建立、修改文本文件等。Vim有三种操作模式，分别称为 编辑模式、插入模式 和 命令模式，当运行Vim时，首会进入命令模式。</p><h1 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h1><p>Vim命令模式下可以进行很多操作，例如光标跳动到指定的单词、行；复制、删除某行甚至很多行以及全文都可以，反正功能真的太强大了，以下就作出详解：</p><h2 id="小范围"><a href="#小范围" class="headerlink" title="小范围"></a>小范围</h2><ol><li>如果键盘上有上、下、左、右箭头的导航键，就由这些键来完成光标的移动。另外，可以用下面的键完成同样的 按字符移动 功能：</li></ol><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">k</td><td align="left">向上移动</td></tr><tr><td align="left">j</td><td align="left">向下移动</td></tr><tr><td align="left">h</td><td align="left">向左移动</td></tr><tr><td align="left">l</td><td align="left">向右移动</td></tr><tr><td align="left">30j</td><td align="left">向下移动30行</td></tr><tr><td align="left">0</td><td align="left">到行首</td></tr><tr><td align="left">^</td><td align="left">到行首第一个字符，如果前面有空格的话</td></tr><tr><td align="left">$</td><td align="left">到行尾</td></tr><tr><td align="left">gg</td><td align="left">快速到文件头</td></tr><tr><td align="left">G</td><td align="left">快速到文件尾</td></tr><tr><td align="left">100G</td><td align="left">跳转到第100行</td></tr></tbody></table><hr><h2 id="稍大范围移动光标的命令"><a href="#稍大范围移动光标的命令" class="headerlink" title="稍大范围移动光标的命令"></a>稍大范围移动光标的命令</h2><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">ctrl+f</td><td align="left">向文件尾部翻一屏</td></tr><tr><td align="left">ctrl+b</td><td align="left">向文件首部翻一屏</td></tr><tr><td align="left">ctrl+d</td><td align="left">向文件尾部翻半屏</td></tr><tr><td align="left">ctrl+u</td><td align="left">向文件首部翻半屏</td></tr></tbody></table><hr><h2 id="指定某行大范围移动"><a href="#指定某行大范围移动" class="headerlink" title="指定某行大范围移动"></a>指定某行大范围移动</h2><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">G</td><td align="left">光标跳到文件尾行</td></tr><tr><td align="left">gg</td><td align="left">光标跳到文件首行</td></tr><tr><td align="left">#G</td><td align="left">“#”指数字，输入随意一个数字就会调到指定的行数</td></tr></tbody></table><hr><h2 id="跳转字母"><a href="#跳转字母" class="headerlink" title="跳转字母"></a>跳转字母</h2><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">H</td><td align="left">光标跳到当前一页的首行的第一个字母</td></tr><tr><td align="left">M</td><td align="left">光标跳到当前一页的中间行的第一个字母</td></tr><tr><td align="left">L</td><td align="left">光标跳到当前一页的尾行的第一个字母</td></tr></tbody></table><hr><p>H M L 命令还可以加数字。如<code>2H</code>表示将光标移到屏幕的第2行；3M 表示将光标移动到中间行的上面第三行；3L 表示将光标移到屏幕的倒数第3行。</p><h2 id="行内移动"><a href="#行内移动" class="headerlink" title="行内移动"></a>行内移动</h2><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">w</td><td align="left">右移光标到下一个字的开头</td></tr><tr><td align="left">e</td><td align="left">右移光标到一个字的末尾</td></tr><tr><td align="left">b</td><td align="left">左移光标到前一个字的开头</td></tr><tr><td align="left">^</td><td align="left">移动光标，到本行的第一个非空字符</td></tr><tr><td align="left">$</td><td align="left">右移光标，到本行的末尾</td></tr><tr><td align="left">0</td><td align="left">数字０，左移光标到本行的开始</td></tr></tbody></table><hr><h1 id="搜索匹配"><a href="#搜索匹配" class="headerlink" title="搜索匹配"></a>搜索匹配</h1><p>vim除了在命令模式下进行光标移动外，还提供了强大的字符串搜索功能。要查找文件中指定字或短语出现的位置，可以用Vim直接进行搜索，而不必以手工方式进行。</p><h2 id="搜索方法"><a href="#搜索方法" class="headerlink" title="搜索方法"></a>搜索方法</h2><p>键入字符 <code>/</code> 后面跟以要搜索的字符串，然后按回车键。编辑程序执行正向搜索（即朝文件末尾方向），并在找到指定字符串后，将光标停到该字符串的开头；键入 n 命令可以继续执行搜索，找出这一字符串下次出现的位置。用字符 <code>?</code> 取代 <code>/</code> ，可以实现反向搜索（朝文件开头方向）例如：</p><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">&#x2F;root</td><td align="left">正向搜索字符串root</td></tr><tr><td align="left">n</td><td align="left">继续搜索，找出root下次出现在的位置</td></tr><tr><td align="left">N</td><td align="left">继续搜索，找出root上次出现在的位置</td></tr><tr><td align="left">?root</td><td align="left">反向搜索字符串root</td></tr></tbody></table><hr><h1 id="字符编辑、替换"><a href="#字符编辑、替换" class="headerlink" title="字符编辑、替换"></a>字符编辑、替换</h1><p>Vim常规的删除命令是d、x(前者删除行后者删除字符),结合Vim的其他特性可以实现基础的删除功能。将光标定位于文件内指定位置后，可以用其他字符来替换光标所指向的字符，或从当前光标位置删除一个或多个字符或一行、多行。例如：</p><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">x</td><td align="left">删除光标处的字符</td></tr><tr><td align="left">#x</td><td align="left">删除光标处起始的#个字符</td></tr><tr><td align="left">xp</td><td align="left">交换光标所在处的字符及其后面字符的位置</td></tr><tr><td align="left">~</td><td align="left">转换大小写</td></tr><tr><td align="left">J</td><td align="left">删除当前行后的换行符</td></tr><tr><td align="left">r</td><td align="left">替换光标所在处的字符</td></tr><tr><td align="left">R</td><td align="left">切换成REPLACE模式</td></tr></tbody></table><h1 id="复制、粘贴、剪切、删除"><a href="#复制、粘贴、剪切、删除" class="headerlink" title="复制、粘贴、剪切、删除"></a>复制、粘贴、剪切、删除</h1><h2 id="黏贴"><a href="#黏贴" class="headerlink" title="黏贴"></a>黏贴</h2><p>从正文中删除的内容（如字符、字或行）并没有真正丢失，而是被剪切并复制到了一个内存缓冲区中。用户可将其粘贴到正文中的指定位置。完成这一操作的命令是：</p><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">p</td><td align="left">粘贴复制或剪切的内容</td></tr><tr><td align="left">p</td><td align="left">小写字母 p，将缓冲区的内容粘贴到光标的后面</td></tr><tr><td align="left">P</td><td align="left">大写字母 P，将缓冲区的内容粘贴到光标的前面</td></tr><tr><td align="left">3p</td><td align="left">将复制或剪切的内容粘贴三次</td></tr></tbody></table><hr><h2 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h2><p>有时需要复制一段正文到新位置，同时保留原有位置的内容。这种情况下，首先应当把指定内容复制（而不是剪切）到内存缓冲区。完成这一操作的命令是：</p><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">y</td><td align="left">复制整行；同时y后面还可以和w,e,b,$,^,等符号连用，例如：yw表示复制光标所在处的一个单词</td></tr><tr><td align="left">10yy</td><td align="left">向下复制10行</td></tr><tr><td align="left">yw</td><td align="left">复制光标开始的一个单词</td></tr><tr><td align="left">y$</td><td align="left">复制光标到行尾</td></tr><tr><td align="left">yfB</td><td align="left">复制光标到第一个大写B中间的内容</td></tr><tr><td align="left">y2fB</td><td align="left">复制光标到第二个大写B中间的内容</td></tr><tr><td align="left">yy</td><td align="left">复制行</td></tr><tr><td align="left">#yy</td><td align="left">“#”表示数字也就是复制几行</td></tr><tr><td align="left">#”tyy</td><td align="left">“#”表示任何数，“t“表示T这个寄容器，linux中有36个剪寄容器，即a-z，0-9；复制行数可以选择放到任何这36个寄容器上；粘贴的话”tp表示将t寄存器内容粘贴到文件中。</td></tr></tbody></table><h2 id="剪切"><a href="#剪切" class="headerlink" title="剪切"></a>剪切</h2><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">x</td><td align="left">向剪切一个一个字符，如果是在行尾，则为向前剪切</td></tr><tr><td align="left">3x</td><td align="left">剪切三个</td></tr><tr><td align="left">xp</td><td align="left">非行尾交换两个字符，如从bs变成sb</td></tr></tbody></table><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><p>删除的内容会放到剪贴板，按 p 即可粘贴到其他地方</p><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">dd</td><td align="left">删除一行</td></tr><tr><td align="left">%d</td><td align="left">删除全文</td></tr><tr><td align="left">200dd</td><td align="left">删除200行</td></tr><tr><td align="left">dw</td><td align="left">删除一个单词 （最喜欢啦）</td></tr><tr><td align="left">df”</td><td align="left">删除到出现的第一个双引</td></tr></tbody></table><h2 id="撤销和重复"><a href="#撤销和重复" class="headerlink" title="撤销和重复"></a>撤销和重复</h2><p>在编辑文档的过程中，为消除某个错误的编辑命令造成的后果，可以用撤消命令。另外，如果用户希望在新的光标位置重复前面执行过的编辑命令，可用重复命令。</p><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">u</td><td align="left">撤消前一条命令的结果，可以和数字连用</td></tr><tr><td align="left">.</td><td align="left">重复最后一条修改正文的命令</td></tr></tbody></table><hr><h1 id="插入模式-Insert-（编辑模式）"><a href="#插入模式-Insert-（编辑模式）" class="headerlink" title="插入模式(Insert)（编辑模式）"></a>插入模式(Insert)（编辑模式）</h1><ul><li>进入插入模式<br>在编辑模式下正确定位光标之后，可用以下命令切换到插入模式：</li></ul><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">i</td><td align="left">在光标左侧插入正文</td></tr><tr><td align="left">a</td><td align="left">在光标右侧插入正文</td></tr><tr><td align="left">o</td><td align="left">在光标所在行的下一行增添新行</td></tr><tr><td align="left">I</td><td align="left">在光标所在行的末尾插入</td></tr><tr><td align="left">A</td><td align="left">在光标所在行的末尾插入</td></tr><tr><td align="left">O</td><td align="left">在光标所在行的上一行增添新行</td></tr></tbody></table><ul><li>退出插入模式<br>退出插入模式的方法是，按 <code>ESC</code> 退出插入模式之后，将会进入编辑模式 。</li></ul><h1 id="扩展命令模式-extended-command"><a href="#扩展命令模式-extended-command" class="headerlink" title="扩展命令模式(extended command )"></a>扩展命令模式(extended command )</h1><p>在 Vim 的命令模式下，可以使用复杂的命令。在命令模式下按 <code>shift+ ：</code>并显示冒号，此时已进入命令模式。命令模式又称末行模式，用户输入的内容均显示在屏幕的最后一行，按回车键，Vim 执行命令。</p><h2 id="打开、保存、退出"><a href="#打开、保存、退出" class="headerlink" title="打开、保存、退出"></a>打开、保存、退出</h2><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">：！file</td><td align="left">在打开的vim中，如果想看一个文件可以：！后面跟文件</td></tr><tr><td align="left">：r！file</td><td align="left">将打开的文件读入到vim中</td></tr><tr><td align="left">：w</td><td align="left">file将当前文件另存为</td></tr></tbody></table><hr><h2 id="字符串搜索"><a href="#字符串搜索" class="headerlink" title="字符串搜索"></a>字符串搜索</h2><p>如果希望进行正向搜索，将待搜索的字符串置于两个 &#x2F; 之间；如果希望反向搜索，则将字符串放在两个 ? 之间。</p><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">n</td><td align="left">查找下一个匹配</td></tr><tr><td align="left">N</td><td align="left">查找上一个匹配</td></tr><tr><td align="left">2n</td><td align="left">查找下面第二个匹配</td></tr><tr><td align="left">:&#x2F;root&#x2F;</td><td align="left">正向搜索，将光标移到下一个包含字符串 root 的行</td></tr><tr><td align="left">:?root?</td><td align="left">反向搜索，将光标移到上一个包含字符串 root 的行</td></tr><tr><td align="left">:&#x2F;root&#x2F;w file</td><td align="left">正向搜索，并将第一个包含字符串 root的行写入 file 文件</td></tr><tr><td align="left">&#x2F;str1&#x2F;,str2&#x2F;w file</td><td align="left">正向搜索，并将包含字符串 str1 的行至包含字符串 str2 的行写</td></tr></tbody></table><hr><h2 id="正文替换"><a href="#正文替换" class="headerlink" title="正文替换"></a>正文替换</h2><p>利用 <code>：s</code> 命令可以实现字符串的替换。具体的用法包括：</p><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">:%s&#x2F;str1&#x2F;str2&#x2F;</td><td align="left">用字符串 str2 替换行中首次出现的字符串 str1</td></tr><tr><td align="left">:s&#x2F;str1&#x2F;str2&#x2F;</td><td align="left">用字符串 str2 替换行中所有出现的字符串 str1</td></tr><tr><td align="left"><code>:.,$ s/str1/str2/g</code></td><td align="left">用字符串 str2 替换正文当前行到末尾所有出现的字符串 str1</td></tr><tr><td align="left">:1,$ s&#x2F;str1&#x2F;str2&#x2F;g</td><td align="left">用字符串 str2 替换正文中所有出现的字符串 str1</td></tr><tr><td align="left">:g&#x2F;str1&#x2F;s&#x2F;&#x2F;str2&#x2F;g</td><td align="left">功能同上</td></tr><tr><td align="left">:m,ns&#x2F;str1&#x2F;str2&#x2F;g</td><td align="left">将从m行到n行的str1替换成str2</td></tr></tbody></table><hr><ul><li>从上述例子中可以总结这些：</li><li><code>g</code> 放在命令末尾，表示对搜索字符串的每次出现进行替换,不止匹配每行中的第一次出现；不加 <code>g</code>，表示只对搜索字符串的首次出现进行替换；<code>g</code> 放在命令开头，表示对正文中所有包含搜索字符串的行进行替换操作</li><li>表示后面跟着一串替换的命令</li><li>表示替换范围是所有行，即全文</li></ul><h1 id="分屏管理"><a href="#分屏管理" class="headerlink" title="分屏管理"></a>分屏管理</h1><p>普通的Vim模式，打开一个Vim程序只能查看一个文件，如果想同时查看多个文件，就需要用到Vim分屏与标签页功能。</p><h2 id="多文件分割"><a href="#多文件分割" class="headerlink" title="多文件分割"></a>多文件分割</h2><ul><li>vim -o|-O FILE1 FILE2 …<ul><li>-o：水平分割</li><li>-O：垂直分割</li></ul></li></ul><h2 id="单文件窗口分割："><a href="#单文件窗口分割：" class="headerlink" title="单文件窗口分割："></a>单文件窗口分割：</h2><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">Ctrl+w,s</td><td align="left">水平分割</td></tr><tr><td align="left">Ctrl+w,v</td><td align="left">垂直分割</td></tr><tr><td align="left">Ctrl+w,q</td><td align="left">取消相邻窗口</td></tr><tr><td align="left">Ctrl+w,o</td><td align="left">取消全部相邻窗口</td></tr><tr><td align="left">wqall</td><td align="left">退出</td></tr></tbody></table><hr><p><strong>Via</strong></p><ul><li><a href="http://blog.51cto.com/19940919/1953791">Vimi基础</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Termux 安装 Openjdk</title>
      <link href="/posts/Termux-Openjdk.html"/>
      <url>/posts/Termux-Openjdk.html</url>
      
        <content type="html"><![CDATA[<p>Termux 安装 Openjdk</p><span id="more"></span><h1 id="下载-Openjdk"><a href="#下载-Openjdk" class="headerlink" title="下载 Openjdk"></a>下载 Openjdk</h1><p>JDK1.8</p><ul><li><a href="https://drive.google.com/file/d/1PdNqmLrhFlBoRlpCW-mC6CHbVS_Lva9D/view?usp=drivesdk">aarch64谷歌云盘</a></li><li><a href="https://pan.baidu.com/s/14T-2L2j3gZaxfbwkZxJxqg">aarch64百度云盘密码:ryea</a></li></ul><p>JDK1.9</p><ul><li><del><a href="https://mega.nz/#!aZgwVQpD!o8qNcQmObEEKn7qb5MZaDKbT3PUCAoCLwbHtAjDIKho">aarch64下载</a></del></li></ul><h1 id="安装-Openjdk"><a href="#安装-Openjdk" class="headerlink" title="安装 Openjdk"></a>安装 Openjdk</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> storage/downloads</span><br><span class="line">dpkg -i openjdk9_9.2017.8.20_aarch64.deb</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2018/04/01/9zmkW9.png"></p>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Termux </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 中 .deb 相关</title>
      <link href="/posts/Linux-Deb.html"/>
      <url>/posts/Linux-Deb.html</url>
      
        <content type="html"><![CDATA[<p>Lineu中 <code>.deb</code> 包的使用，修改。</p><span id="more"></span><h1 id="为何物"><a href="#为何物" class="headerlink" title="为何物"></a>为何物</h1><p>.deb 是 Unix系统(其实主要是Linux)下的安装包，基于 <code>tar</code> 包，因此本身会记录文件的权限(读&#x2F;写&#x2F;可执行)以及所有者&#x2F;用户组。</p><h1 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h1><h2 id="制作-deb包"><a href="#制作-deb包" class="headerlink" title="制作.deb包"></a>制作.deb包</h2><ul><li>原理</li></ul><ol><li>deb包通常包含两部分：控制信息(DEBIAN目录)、安装内容(模拟”&#x2F;“目录)</li><li>通过解开已有的 deb 包看其中内容<ul><li>释放安装内容到dirname目录中 <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -X xxx.deb <span class="built_in">dirname</span></span><br></pre></td></tr></table></figure></li><li>释放控制信息到当前目录下的DEBIAN子目录中 <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -e xxx.deb</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install dh-make checkinstall</span><br></pre></td></tr></table></figure><h2 id="下载软件源码包"><a href="#下载软件源码包" class="headerlink" title="下载软件源码包"></a>下载软件源码包</h2><ul><li>使用checkinstall方法创建deb包<ul><li>checkinstall 不仅可以生成 deb 包，还可以生成 rpm 包，使用简单。<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar xvjf fceu-0.98.12.src.tar.bz2 <span class="comment"># 解包</span></span><br><span class="line"><span class="built_in">cd</span> fceu;./configure;make <span class="comment"># 编译</span></span><br><span class="line">checkinstall -D -install=no --pkgversion=0.98 --pkgname=fceuxy make install</span><br><span class="line"><span class="comment"># 制作deb包 此时当前目录下生成了deb包。</span></span><br></pre></td></tr></table></figure></li></ul></li><li>使用dpkg方法创建deb包<ul><li>dpkg是最基本的制作deb包的方法，推荐使用<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar xvjf fceu-0.98.12.src.tar.bz2 <span class="comment"># 解包</span></span><br><span class="line"><span class="built_in">mv</span> fceu fceu-0.98 <span class="comment"># 改目录名为 包名-版本号</span></span><br><span class="line"><span class="built_in">cd</span> fceu-0.98</span><br><span class="line">dh_make -f ../fceu-0.98.12.src.tar.bz2</span><br><span class="line"><span class="comment"># 生成制作deb包所需的默认信息</span></span><br></pre></td></tr></table></figure>此时当前目录下生成了debian目录，此时通常修改两个文件： 1. 修改debian&#x2F;control文件，配置你的信息，具体字段见参考资料部分 2. 修改debian&#x2F;rules脚本，它决定编译参数(也可以不改)<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:::bash</span><br><span class="line">dpkg-buildpackage -rfakeroot</span><br></pre></td></tr></table></figure>此时可以看到，上层目录中已建立了deb包。</li></ul></li></ul><h2 id="修改已有deb包"><a href="#修改已有deb包" class="headerlink" title="修改已有deb包"></a>修改已有deb包</h2><ul><li>自己创建deb所需目录结构(控制信息和安装内容)，然后打包，一般使用这种方法来修改已有的deb包，而不是新建deb包，命令如下：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="built_in">test</span></span><br><span class="line">dpkg -X xxx.deb <span class="built_in">test</span> <span class="comment"># 解包安装内容</span></span><br><span class="line"><span class="built_in">cd</span> <span class="built_in">test</span></span><br><span class="line">dpkg -e ../xxx.deb <span class="comment"># 解包控制信息</span></span><br></pre></td></tr></table></figure></li><li>修改DEBIAN目录下的内容，然后重新打包：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ../</span><br><span class="line">dpkg -b <span class="built_in">test</span> xxx_new.deb <span class="comment"># 重新打包</span></span><br></pre></td></tr></table></figure></li><li>修改DEBIAN目录下的内容，然后重新打包：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ../</span><br><span class="line">dpkg -b test xxx_new.deb # 重新打包</span><br></pre></td></tr></table></figure></li></ul><h1 id="deb包常用命令"><a href="#deb包常用命令" class="headerlink" title="deb包常用命令"></a>deb包常用命令</h1><ul><li><p>查看deb包含有哪些文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dpkg -c xxx.deb <span class="comment"># 安装前根据deb文件查看</span></span><br><span class="line">dpkg -L debname <span class="comment"># 安装后根据包名查看</span></span><br></pre></td></tr></table></figure></li><li><p>查看某个文件属于哪个deb包</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -S filefullpath</span><br></pre></td></tr></table></figure></li><li><p>根据软件包名模糊检索</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dpkg -l|grep xxx</span><br><span class="line"><span class="comment"># 在已安装的软件包列表中搜索</span></span><br><span class="line">apt-cache search xxx</span><br><span class="line"><span class="comment"># 在源中的所有软件包列表中搜索</span></span><br></pre></td></tr></table></figure></li><li><p>下载源码包</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get <span class="built_in">source</span> packagename</span><br></pre></td></tr></table></figure></li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ul><li>安装deb包<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i xxx.deb</span><br></pre></td></tr></table></figure></li></ul><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><ul><li><p>卸载deb包</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -r debname</span><br></pre></td></tr></table></figure></li><li><p>完全卸载deb包（包含配置文件)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -P debname</span><br></pre></td></tr></table></figure></li></ul><hr><p><strong>Via</strong></p><ul><li><a href="http://yysfire.github.io/linux/building-deb-package-from-source-and-modify-deb-package.html">从源代码制作deb包的两种方法以及修改已有deb包</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oh-My-zsh 主题</title>
      <link href="/posts/Oh-My-ZSH-Theme.html"/>
      <url>/posts/Oh-My-ZSH-Theme.html</url>
      
        <content type="html"><![CDATA[<p>自定义主题shell提示符.</p><span id="more"></span><h1 id="修改oh-my-zsh主题"><a href="#修改oh-my-zsh主题" class="headerlink" title="修改oh-my-zsh主题"></a>修改oh-my-zsh主题</h1><h2 id="主题目录"><a href="#主题目录" class="headerlink" title="主题目录"></a>主题目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.oh-my-zsh/themes</span><br><span class="line">vim theme-name</span><br></pre></td></tr></table></figure><h2 id="主题提示符"><a href="#主题提示符" class="headerlink" title="主题提示符"></a>主题提示符</h2><table><thead><tr><th align="center">代码</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">%T</td><td align="center">系统时间(时：分)</td></tr><tr><td align="center">%*</td><td align="center">系统时间(时：分：秒)</td></tr><tr><td align="center">%D</td><td align="center">系统日期(年-月-日)</td></tr><tr><td align="center">%n</td><td align="center">你的用户名</td></tr><tr><td align="center">%B - %b</td><td align="center">开始到结束使用粗体打印</td></tr><tr><td align="center">%U - %u</td><td align="center">开始到结束使用下划线打印</td></tr><tr><td align="center">%d</td><td align="center">你目前的工作目录</td></tr><tr><td align="center">%~</td><td align="center">你目前的工作目录相对于～的相对路径</td></tr><tr><td align="center">%M</td><td align="center">计算机的主机名</td></tr><tr><td align="center">%m</td><td align="center">计算机的主机名(在第一个句号之前截断)</td></tr><tr><td align="center">%l</td><td align="center">你当前的tty</td></tr><tr><td align="center">%n</td><td align="center">登录名</td></tr></tbody></table><h2 id="顏色語法"><a href="#顏色語法" class="headerlink" title="顏色語法"></a>顏色語法</h2><ol><li>“%{$fg[cyan]%}XXX”</li><li>“%{$fg[yellow]%}和%{$reset_color%}”</li><li>上面是一对的中间夹的文字会用 yellow 颜色显示，颜色要用小写。</li></ol><h1 id="事例"><a href="#事例" class="headerlink" title="事例"></a>事例</h1><ul><li>Before<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PROMPT=&quot;</span><br><span class="line">%&#123;$terminfo[bold]$fg[blue]%&#125;#%&#123;$reset_color%&#125; \</span><br><span class="line">%(#,%&#123;$bg[yellow]%&#125;%&#123;$fg[black]%&#125;%n%&#123;$reset_color%&#125;,%&#123;$fg[cyan]%&#125;%n) \</span><br><span class="line">%&#123;$fg[white]%&#125;@ \</span><br><span class="line">%&#123;$fg[green]%&#125;%m \</span><br><span class="line">%&#123;$fg[white]%&#125;in \</span><br><span class="line">%&#123;$terminfo[bold]$fg[yellow]%&#125;%~%&#123;$reset_color%&#125;\</span><br><span class="line">$&#123;hg_info&#125;\</span><br><span class="line">$&#123;git_info&#125;\</span><br><span class="line"> \</span><br><span class="line">%&#123;$fg[white]%&#125;[%*] $exit_code</span><br><span class="line">%&#123;$terminfo[bold]$fg[red]%&#125;$ %&#123;$reset_color%&#125;&quot;</span><br></pre></td></tr></table></figure></li><li>Affter<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">PROMPT=&quot;%&#123;$terminfo[bold]$fg[blue]%&#125;#%&#123;$reset_color%&#125; \</span><br><span class="line">%(#,%&#123;$bg[yellow]%&#125;%&#123;$fg[black]%&#125;%n%&#123;$reset_color%&#125;,%&#123;$fg[cyan]%&#125;% Vitan) \</span><br><span class="line">%&#123;$fg[white]%&#125;@ \</span><br><span class="line">%&#123;$fg[green]%&#125;% OnePlus \</span><br><span class="line">%&#123;$fg[white]%&#125;in \</span><br><span class="line">%&#123;$terminfo[bold]$fg[yellow]%&#125;%~%&#123;$reset_color%&#125;\</span><br><span class="line">$&#123;hg_info&#125;\</span><br><span class="line">$&#123;git_info&#125;\</span><br><span class="line">\</span><br><span class="line">%&#123;$fg[white]%&#125; [%*] $exit_code</span><br><span class="line">%&#123;$terminfo[bold]$fg[red]%&#125;➜ %&#123;$reset_color%&#125;&quot;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分屏&amp;游戏</title>
      <link href="/posts/Termux-game-tools.html"/>
      <url>/posts/Termux-game-tools.html</url>
      
        <content type="html"><![CDATA[<p>分屏与游戏。</p><span id="more"></span><h1 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h1><p>月球车</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install moon-buggy</span><br></pre></td></tr></table></figure><ul><li>Start:<code>moon-buggy</code></li></ul><p>fortz</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install fortz</span><br></pre></td></tr></table></figure><ul><li>start: <code>zgames</code></li></ul><h1 id="tmux-分屏"><a href="#tmux-分屏" class="headerlink" title="tmux 分屏"></a>tmux 分屏</h1><ul><li>在ubuntu系统中使用 <code>sudo apt-get install tmux</code> </li><li>ArchLinux <code>yacman -S tmux</code></li><li>Termux安装：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install tumx</span><br></pre></td></tr></table></figure></li></ul><p>tmux主要包括以下几个模块</p><table><thead><tr><th align="center">名词</th><th align="center">含义</th><th align="left">解析</th></tr></thead><tbody><tr><td align="center">session</td><td align="center">会话</td><td align="left">一个服务器可以包含多个会话</td></tr><tr><td align="center">window</td><td align="center">窗口</td><td align="left">一个会话可以包含多个窗口</td></tr><tr><td align="center">pane</td><td align="center">面板</td><td align="left">一个窗口可以包含多个面板[强悍的分屏]</td></tr></tbody></table><ul><li>输入命令 tmux 使用工具</li></ul><table><thead><tr><th align="left">命令</th><th align="left">分屏状态</th></tr></thead><tbody><tr><td align="left">Ctrl+b ?</td><td align="left">显示快捷键帮助</td></tr><tr><td align="left">Ctrl+b C-o</td><td align="left">调换窗口位置，类似与vim 里的C-w</td></tr><tr><td align="left">Ctrl+b 空格键</td><td align="left">采用下一个内置布局</td></tr><tr><td align="left">Ctrl+b !</td><td align="left">把当前窗口变为新窗口</td></tr><tr><td align="left">Ctrl+b “</td><td align="left">横向分隔窗口</td></tr><tr><td align="left">Ctrl+b %</td><td align="left">纵向分隔窗口</td></tr><tr><td align="left">Ctrl+b q</td><td align="left">显示分隔窗口的编号</td></tr><tr><td align="left">Ctrl+b o</td><td align="left">跳到下一个分隔窗口</td></tr><tr><td align="left">Ctrl+b 上下键</td><td align="left">上一个及下一个分隔窗口</td></tr><tr><td align="left">Ctrl+b C-方向键</td><td align="left">调整分隔窗口大小</td></tr><tr><td align="left">Ctrl+b c</td><td align="left">创建新窗口</td></tr><tr><td align="left">Ctrl+b 0~9</td><td align="left">选择几号窗口</td></tr><tr><td align="left">Ctrl+b c</td><td align="left">创建新窗口</td></tr><tr><td align="left">Ctrl+b n</td><td align="left">选择下一个窗口</td></tr><tr><td align="left">Ctrl+b l</td><td align="left">切换到最后使用的窗口</td></tr><tr><td align="left">Ctrl+b p</td><td align="left">选择前一个窗口</td></tr><tr><td align="left">Ctrl+b w</td><td align="left">以菜单方式显示及选择窗口</td></tr><tr><td align="left">Ctrl+b t</td><td align="left">显示时钟</td></tr><tr><td align="left">Ctrl+b ;</td><td align="left">切换到最后一个使用的面板</td></tr><tr><td align="left">Ctrl+b x</td><td align="left">关闭面板</td></tr><tr><td align="left">Ctrl+b &amp;</td><td align="left">关闭窗口</td></tr><tr><td align="left">Ctrl+b s</td><td align="left">以菜单方式显示和选择会话</td></tr><tr><td align="left">Ctrl+b d</td><td align="left">退出tumx，并保存当前会话，这时，tmux仍在后台运行，可以通过tmux attach进入 到指定的会话</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 表格</title>
      <link href="/posts/Markdown-table.html"/>
      <url>/posts/Markdown-table.html</url>
      
        <content type="html"><![CDATA[<p>Markdown 建表格。</p><span id="more"></span><h1 id="单元格和表头"><a href="#单元格和表头" class="headerlink" title="单元格和表头"></a>单元格和表头</h1><h2 id="表头和其他行"><a href="#表头和其他行" class="headerlink" title="表头和其他行"></a>表头和其他行</h2><ul><li><p>使用<code>|</code>来分隔不同的单元格，使用 <code>- </code>来分隔表头和其他行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name| ge</span><br><span class="line">----|---</span><br><span class="line">LearnShare|12</span><br><span class="line">Mike|32</span><br></pre></td></tr></table></figure><table><thead><tr><th>name</th><th>age</th></tr></thead><tbody><tr><td>LearnShare</td><td>12</td></tr><tr><td>Mike</td><td>32</td></tr></tbody></table></li><li><p>为了美观，可以使用空格对齐不同行的单元格，并在左右两侧都使用 | 来标记单元格边界：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|name|age|</span><br><span class="line">|----------|---|</span><br><span class="line">|LearnShare|12|</span><br><span class="line">|Mike|32|</span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th>name</th><th>age</th></tr></thead><tbody><tr><td>LearnShare</td><td>12</td></tr><tr><td>Mike</td><td>32</td></tr></tbody></table><ul><li>为了使 Markdown 更清晰，<code>|</code> 和<code>-</code>两侧需要至少有一个空格（最左侧和最右侧的 | 外就不需要了）。</li></ul><h2 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h2><p>在表头下方的分隔线标记中加入<code>:</code>，即可标记下方单元格内容的对齐方式：</p><ul><li><code>:--- </code>代表左对齐</li><li><code>:--: </code>代表居中对齐</li><li><code>---: </code>代表右对齐</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| left | center | right |</span><br><span class="line">| :--- | :----: | ----: |</span><br><span class="line">| aaaa | bbbbbb | ccccc |</span><br><span class="line">| a    | b      | c     |</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">left</th><th align="center">center</th><th align="right">right</th></tr></thead><tbody><tr><td align="left">aaaa</td><td align="center">bbbbbb</td><td align="right">ccccc</td></tr><tr><td align="left">a</td><td align="center">b</td><td align="right">c</td></tr></tbody></table><hr><p>如果不使用对齐标记，单元格中的内容默认左对齐；表头单元格中的内容会一直居中对齐（不同的实现可能会有不同表现）。</p><h2 id="插入其他内容"><a href="#插入其他内容" class="headerlink" title="插入其他内容"></a>插入其他内容</h2><p>表格中可以插入其他 Markdown 中的行内标记：</p>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Termux </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL Select 语句</title>
      <link href="/posts/SQL-Select.html"/>
      <url>/posts/SQL-Select.html</url>
      
        <content type="html"><![CDATA[<p>SELECT 语句用于从数据库中选取数据。结果被存储在一个结果表中，称为结果集。</p><span id="more"></span><h1 id="SELECT语法"><a href="#SELECT语法" class="headerlink" title="SELECT语法"></a>SELECT语法</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name,column_name</span><br><span class="line"><span class="keyword">FROM</span> table_name;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> table_name;</span><br></pre></td></tr></table></figure><p>SELECT Column 实例<br>下面的 SQL 语句从 “Websites” 表中选取 “name” 和 “country” 列：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name,country <span class="keyword">FROM</span> Websites;</span><br></pre></td></tr></table></figure><h1 id="SQL-SELECT-DISTINCT-语句"><a href="#SQL-SELECT-DISTINCT-语句" class="headerlink" title="SQL SELECT DISTINCT 语句"></a>SQL SELECT DISTINCT 语句</h1><p>在表中，一个列可能会包含多个重复值，有时您也许希望仅仅列出不同（distinct）的值。DISTINCT 关键词用于返回唯一不同的值。</p><p>SELECT DISTINCT 语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> column_name,column_name</span><br><span class="line"><span class="keyword">FROM</span> table_name;</span><br></pre></td></tr></table></figure><p>SELECT DISTINCT 实例<br>下面的 SQL 语句仅从 “Websites” 表的 “country” 列中选取唯一不同的值，也就是去掉 “country” 列重复值：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> country <span class="keyword">FROM</span> Websites</span><br></pre></td></tr></table></figure><h1 id="SQL-WHERE-子句"><a href="#SQL-WHERE-子句" class="headerlink" title="SQL WHERE 子句"></a>SQL WHERE 子句</h1><p>WHERE 子句用于提取那些满足指定标准的记录。</p><p>SQL WHERE 语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name,column_name</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> column_name operator <span class="keyword">value</span>;</span><br></pre></td></tr></table></figure><p>WHERE 子句实例<br>下面的 SQL 语句从 “Websites” 表中选取国家为 “CN” 的所有网站：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Websites <span class="keyword">WHERE</span> country<span class="operator">=</span><span class="string">&#x27;CN&#x27;</span>;</span><br></pre></td></tr></table></figure><p>WHERE 子句中的运算符<br>下面的运算符可以在 WHERE 子句中使用：</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">&#x3D;</td><td align="left">等于</td></tr><tr><td align="left">&lt;&gt;</td><td align="left">不等于 注释:在SQL的一些版本中该操作符可被写成!&#x3D;</td></tr><tr><td align="left">&gt;</td><td align="left">大于</td></tr><tr><td align="left">&lt;</td><td align="left">小于</td></tr><tr><td align="left">&gt;&#x3D;</td><td align="left">大于等于</td></tr><tr><td align="left">&lt;&#x3D;</td><td align="left">小于等于</td></tr><tr><td align="left">BETWEEN</td><td align="left">在某个范围内</td></tr><tr><td align="left">LIKE</td><td align="left">搜索某种模式</td></tr><tr><td align="left">IN</td><td align="left">指定针对某个列的多个可能值</td></tr></tbody></table><h1 id="SQL-AND-OR-运算符"><a href="#SQL-AND-OR-运算符" class="headerlink" title="SQL AND &amp; OR 运算符"></a>SQL AND &amp; OR 运算符</h1><p>AND &amp; OR 运算符用于基于一个以上的条件对记录进行过滤。<br>AND &amp; OR 运算符</p><ol><li>如果第一个条件和第二个条件都成立，则 AND 运算符显示一条记录。</li><li>如果第一个条件和第二个条件中只要有一个成立，则 OR 运算符显示一条记录。</li></ol><p>从 “Websites” 表中选取国家为 “CN” 且alexa排名大于 “50” 的所有网站：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Websites</span><br><span class="line"><span class="keyword">WHERE</span> country<span class="operator">=</span><span class="string">&#x27;CN&#x27;</span></span><br><span class="line"><span class="keyword">AND</span> alexa <span class="operator">&gt;</span> <span class="number">50</span>;</span><br></pre></td></tr></table></figure><p>从 “Websites” 表中选取国家为 “USA” 或者 “CN” 的所有客户：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Websites</span><br><span class="line"><span class="keyword">WHERE</span> country<span class="operator">=</span><span class="string">&#x27;USA&#x27;</span></span><br><span class="line"><span class="keyword">OR</span> country<span class="operator">=</span><span class="string">&#x27;CN&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="SQL-ORDER-BY-关键字"><a href="#SQL-ORDER-BY-关键字" class="headerlink" title="SQL ORDER BY 关键字"></a>SQL ORDER BY 关键字</h1><p>ORDER BY 关键字用于对结果集按照一个列或者多个列进行排序。</p><p>ORDER BY 关键字默认按照升序对记录进行排序。如果需要按照降序对记录进行排序，可以使用 DESC 关键字。</p><p>SQL ORDER BY 语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name,column_name</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> column_name,column_name <span class="keyword">ASC</span><span class="operator">|</span><span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>从 “Websites” 表中选取所有网站，并按照 “alexa” 列排序：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Websites</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> alexa;</span><br></pre></td></tr></table></figure><p>ORDER BY DESC 实例<br>下面的 SQL 语句从 “Websites” 表中选取所有网站，并按照 “alexa” 列降序排序：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Websites</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> alexa <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>ORDER BY 多列<br>下面的 SQL 语句从 “Websites” 表中选取所有网站，并按照 “country” 和 “alexa” 列排序：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Websites</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> country,alexa;</span><br></pre></td></tr></table></figure><h1 id="SQL-INSERT-INTO-语句"><a href="#SQL-INSERT-INTO-语句" class="headerlink" title="SQL INSERT INTO 语句"></a>SQL INSERT INTO 语句</h1><p>INSERT INTO 语句用于向表中插入新记录。</p><p>SQL INSERT INTO 语法<br>INSERT INTO 语句可以有两种编写形式。</p><ol><li>第一种形式无需指定要插入数据的列名，只需提供被插入的值即可：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name</span><br><span class="line"><span class="keyword">VALUES</span> (value1,value2,value3,...);</span><br></pre></td></tr></table></figure></li><li>需要指定列名及被插入的值：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name (column1,column2,column3,...)</span><br><span class="line"><span class="keyword">VALUES</span> (value1,value2,value3,...);</span><br></pre></td></tr></table></figure></li></ol><p>INSERT INTO 实例<br>假设我们要向 “Websites” 表中插入一个新行。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Websites (name, url, alexa, country)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">&#x27;百度&#x27;</span>,<span class="string">&#x27;https://www.baidu.com/&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;CN&#x27;</span>);</span><br></pre></td></tr></table></figure><p>在指定的列插入数据<br>下面的 SQL 语句将插入一个新行，但是只在 “name”、”url” 和 “country” 列插入数据（id 字段会自动更新）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Websites (name, url, country)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">&#x27;stackoverflow&#x27;</span>, <span class="string">&#x27;http://stackoverflow.com/&#x27;</span>, <span class="string">&#x27;IND&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="SQL-LIKE-操作符"><a href="#SQL-LIKE-操作符" class="headerlink" title="SQL LIKE 操作符"></a>SQL LIKE 操作符</h1><p>LIKE 操作符用于在 WHERE 子句中搜索列中的指定模式。</p><p>SQL LIKE 语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> column_name <span class="keyword">LIKE</span> <span class="keyword">pattern</span>;</span><br></pre></td></tr></table></figure><p>SQL LIKE 操作符实例<br>下面的 SQL 语句选取 name 以字母 “G” 开始的所有客户：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Websites</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">LIKE</span> <span class="string">&#x27;G%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>提示：”%” 符号用于在模式的前后定义通配符（缺省字母）。您将在下一章中学习更多有关通配符的知识。</p><p>选取 name 以字母 “k” 结尾的所有客户：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Websites</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">LIKE</span> <span class="string">&#x27;%k&#x27;</span>;</span><br></pre></td></tr></table></figure><p>通过使用 NOT 关键字，您可以选取不匹配模式的记录。</p><p>下面的 SQL 语句选取 name 不包含模式 “oo” 的所有客户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Websites</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">NOT</span> <span class="keyword">LIKE</span> <span class="string">&#x27;%oo%&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="SQL-连接-JOIN"><a href="#SQL-连接-JOIN" class="headerlink" title="SQL 连接(JOIN)"></a>SQL 连接(JOIN)</h1><p>SQL join 用于把来自两个或多个表的行结合起来。<br>SQL JOIN 子句用于把来自两个或多个表的行结合起来，基于这些表之间的共同字段。</p><p>最常见的 JOIN 类型：SQL INNER JOIN（简单的 JOIN）。 SQL INNER JOIN 从多个表中返回满足 JOIN 条件的所有行。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Websites.id, Websites.name, access_log.count, access_log.date</span><br><span class="line"><span class="keyword">FROM</span> Websites</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> access_log</span><br><span class="line"><span class="keyword">ON</span> Websites.id<span class="operator">=</span>access_log.site_id;</span><br></pre></td></tr></table></figure><h2 id="不同的-SQL-JOIN"><a href="#不同的-SQL-JOIN" class="headerlink" title="不同的 SQL JOIN"></a>不同的 SQL JOIN</h2><p>JOIN 类型：</p><ol><li>INNER JOIN：如果表中有至少一个匹配，则返回行</li><li>LEFT JOIN：即使右表中没有匹配，也从左表返回所有的行</li><li>RIGHT JOIN：即使左表中没有匹配，也从右表返回所有的行</li><li>FULL JOIN：只要其中一个表中存在匹配，则返回行</li></ol><p>SQL INNER JOIN 语法,INNER JOIN 与 JOIN 是相同的。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table1</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> table2</span><br><span class="line"><span class="keyword">ON</span> table1.column_name<span class="operator">=</span>table2.column_name;</span><br></pre></td></tr></table></figure><p>或：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table1</span><br><span class="line"><span class="keyword">JOIN</span> table2</span><br><span class="line"><span class="keyword">ON</span> table1.column_name<span class="operator">=</span>table2.column_name;</span><br></pre></td></tr></table></figure><h2 id="LEFT-JOIN"><a href="#LEFT-JOIN" class="headerlink" title="LEFT JOIN"></a>LEFT JOIN</h2><p>LEFT JOIN 关键字从左表（table1）返回所有的行，即使右表（table2）中没有匹配。如果右表中没有匹配，则结果为 NULL。</p><p>SQL LEFT JOIN 语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table1</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> table2</span><br><span class="line"><span class="keyword">ON</span> table1.column_name<span class="operator">=</span>table2.column_name;</span><br></pre></td></tr></table></figure><p>或：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table1</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> table2</span><br><span class="line"><span class="keyword">ON</span> table1.column_name<span class="operator">=</span>table2.column_name;</span><br></pre></td></tr></table></figure><h2 id="SQL-RIGHT-JOIN"><a href="#SQL-RIGHT-JOIN" class="headerlink" title="SQL RIGHT JOIN"></a>SQL RIGHT JOIN</h2><p>RIGHT JOIN 关键字从右表（table2）返回所有的行，即使左表（table1）中没有匹配。如果左表中没有匹配，则结果为 NULL。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table1</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> table2</span><br><span class="line"><span class="keyword">ON</span> table1.column_name<span class="operator">=</span>table2.column_name;</span><br></pre></td></tr></table></figure><p>或：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table1</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> table2</span><br><span class="line"><span class="keyword">ON</span> table1.column_name<span class="operator">=</span>table2.column_name;</span><br></pre></td></tr></table></figure><h2 id="FULL-OUTER-JOIN-关键字"><a href="#FULL-OUTER-JOIN-关键字" class="headerlink" title="FULL OUTER JOIN 关键字"></a>FULL OUTER JOIN 关键字</h2><p>FULL OUTER JOIN 关键字只要左表（table1）和右表（table2）其中一个表中存在匹配，则返回行.<br>FULL OUTER JOIN 关键字结合了 LEFT JOIN 和 RIGHT JOIN 的结果。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SQL</span> <span class="keyword">FULL</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> 语法</span><br><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table1</span><br><span class="line"><span class="keyword">FULL</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> table2</span><br><span class="line"><span class="keyword">ON</span> table1.column_name<span class="operator">=</span>table2.column_name;</span><br></pre></td></tr></table></figure><h1 id="SQL-UNION-操作符"><a href="#SQL-UNION-操作符" class="headerlink" title="SQL UNION 操作符"></a>SQL UNION 操作符</h1><p>SQL UNION 操作符合并两个或多个 SELECT 语句的结果。</p><p>UNION 操作符用于合并两个或多个 SELECT 语句的结果集。</p><p>请注意，UNION 内部的每个 SELECT 语句必须拥有相同数量的列。列也必须拥有相似的数据类型。同时，每个 SELECT 语句中的列的顺序必须相同。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table1</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table2;</span><br></pre></td></tr></table></figure><p>注释：默认地，UNION 操作符选取不同的值。如果允许重复的值，请使用 UNION ALL。</p><p>SQL UNION ALL 语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table1</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table2;</span><br></pre></td></tr></table></figure><p>注释：UNION 结果集中的列名总是等于 UNION 中第一个 SELECT 语句中的列名。</p><p>带有 WHERE 的 SQL UNION ALL<br>下面的 SQL 语句使用 UNION ALL 从 “Websites” 和 “apps” 表中选取所有的中国(CN)的数据（也有重复的值）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> country, name <span class="keyword">FROM</span> Websites</span><br><span class="line"><span class="keyword">WHERE</span> country<span class="operator">=</span><span class="string">&#x27;CN&#x27;</span></span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> country, app_name <span class="keyword">FROM</span> apps</span><br><span class="line"><span class="keyword">WHERE</span> country<span class="operator">=</span><span class="string">&#x27;CN&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> country;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 经典语句</title>
      <link href="/posts/SQL-Command.html"/>
      <url>/posts/SQL-Command.html</url>
      
        <content type="html"><![CDATA[<p>经典SQL语句大全</p><span id="more"></span><h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><p>创建数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE database<span class="operator">-</span>name</span><br></pre></td></tr></table></figure><p>删除数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> database dbname</span><br></pre></td></tr></table></figure><h2 id="备份sql-server"><a href="#备份sql-server" class="headerlink" title="备份sql server"></a>备份sql server</h2><p>创建备份数据的 device</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">USE master</span><br><span class="line"><span class="keyword">EXEC</span> sp_addumpdevice <span class="string">&#x27;disk&#x27;</span>, <span class="string">&#x27;testBack&#x27;</span>, <span class="string">&#x27;c:\mssql7backup\MyNwind_1.dat&#x27;</span></span><br></pre></td></tr></table></figure><p>开始备份<br> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BACKUP DATABASE pubs <span class="keyword">TO</span> testBack</span><br><span class="line">创建新表</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tabname(col1 type1 [<span class="keyword">not</span> <span class="keyword">null</span>] [<span class="keyword">primary</span> key],col2 type2 [<span class="keyword">not</span> <span class="keyword">null</span>],..)</span><br></pre></td></tr></table></figure></p><h2 id="根据已有的表创建新表："><a href="#根据已有的表创建新表：" class="headerlink" title="根据已有的表创建新表："></a>根据已有的表创建新表：</h2><blockquote><p>A：create table tab_new like tab_old (使用旧表创建新表)<br>B：create table tab_new as select col1,col2… from tab_old definition only</p></blockquote><p>删除新表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> tabname</span><br></pre></td></tr></table></figure><p>增加一个列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Alter</span> <span class="keyword">table</span> tabname <span class="keyword">add</span> <span class="keyword">column</span> col type</span><br></pre></td></tr></table></figure><p>注：列增加后将不能删除。DB2中列加上后数据类型也不能改变，唯一能改变的是增加varchar类型的长度。</p><p>添加主键</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Alter</span> <span class="keyword">table</span> tabname <span class="keyword">add</span> <span class="keyword">primary</span> key(col)</span><br></pre></td></tr></table></figure><p>说明：删除主键： Alter table tabname drop primary key(col)</p><p>创建索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> [<span class="keyword">unique</span>] index idxname <span class="keyword">on</span> tabname(col….)</span><br></pre></td></tr></table></figure><p>删除索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> index idxname</span><br></pre></td></tr></table></figure><p>注：索引是不可更改的，想更改必须删除重新建。</p><p>创建视图</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> viewname <span class="keyword">as</span> <span class="keyword">select</span> statement</span><br></pre></td></tr></table></figure><p>删除视图</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> viewname</span><br></pre></td></tr></table></figure><h2 id="几个简单的基本的-SQL-语句"><a href="#几个简单的基本的-SQL-语句" class="headerlink" title="几个简单的基本的 SQL 语句"></a>几个简单的基本的 SQL 语句</h2><p>语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">选择：<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table1 <span class="keyword">where</span> 范围</span><br><span class="line">插入：<span class="keyword">insert</span> <span class="keyword">into</span> table1(field1,field2) <span class="keyword">values</span>(value1,value2)</span><br><span class="line">删除：<span class="keyword">delete</span> <span class="keyword">from</span> table1 <span class="keyword">where</span> 范围</span><br><span class="line">更新：<span class="keyword">update</span> table1 <span class="keyword">set</span> field1<span class="operator">=</span>value1 <span class="keyword">where</span> 范围</span><br><span class="line">查找：<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table1 <span class="keyword">where</span> field1 <span class="keyword">like</span> ’<span class="operator">%</span>value1<span class="operator">%</span>’ <span class="comment">---like的语法很精妙，查资料!</span></span><br><span class="line">排序：<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table1 <span class="keyword">order</span> <span class="keyword">by</span> field1,field2 [<span class="keyword">desc</span>]</span><br><span class="line">总数：<span class="keyword">select</span> count <span class="keyword">as</span> totalcount <span class="keyword">from</span> table1</span><br><span class="line">求和：<span class="keyword">select</span> <span class="built_in">sum</span>(field1) <span class="keyword">as</span> sumvalue <span class="keyword">from</span> table1</span><br><span class="line">平均：<span class="keyword">select</span> <span class="built_in">avg</span>(field1) <span class="keyword">as</span> avgvalue <span class="keyword">from</span> table1</span><br><span class="line">最大：<span class="keyword">select</span> <span class="built_in">max</span>(field1) <span class="keyword">as</span> maxvalue <span class="keyword">from</span> table1</span><br><span class="line">最小：<span class="keyword">select</span> <span class="built_in">min</span>(field1) <span class="keyword">as</span> minvalue <span class="keyword">from</span> table1</span><br></pre></td></tr></table></figure><h2 id="几个高级查询运算词"><a href="#几个高级查询运算词" class="headerlink" title="几个高级查询运算词"></a>几个高级查询运算词</h2><p>UNION 运算符通过组合其他两个结果表（例如 TABLE1 和 TABLE2）并消去表中任何重复行而派生出一个结果表。当 ALL 随 UNION 一起使用时（即 UNION ALL），不消除重复行。两种情况下，派生表的每一行不是来自 TABLE1 就是来自 TABLE2。</p><p>EXCEPT 运算符通过包括所有在 TABLE1 中但不在 TABLE2 中的行并消除所有重复行而派生出一个结果表。当 ALL 随 EXCEPT 一起使用时 (EXCEPT ALL)，不消除重复行。</p><p><code>INTERSECT </code> 运算符通过只包括 TABLE1 和 TABLE2 中都有的行并消除所有重复行而派生出一个结果表。当 ALL 随 INTERSECT 一起使用时 (INTERSECT ALL)，不消除重复行。</p><p>注：使用运算词的几个查询结果行必须是一致的。</p><h2 id="使用外连接"><a href="#使用外连接" class="headerlink" title="使用外连接"></a>使用外连接</h2><p>left （outer） join</p><ul><li>左外连接（左连接）：结果集几包括连接表的匹配行，也包括左连接表的所有行。</li><li>SQL: select a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a &#x3D; b.c</li></ul><p>right （outer） join<br>右外连接(右连接)：结果集既包括连接表的匹配连接行，也包括右连接表的所有行。</p><p>full&#x2F;cross （outer） join<br>全外连接：不仅包括符号连接表的匹配行，还包括两个连接表中的所有记录。</p><h2 id="分组-Group-by"><a href="#分组-Group-by" class="headerlink" title="分组:Group by"></a>分组:Group by</h2><p>一张表，一旦分组完成后，查询后只能得到组相关的信息。</p><p>组相关的信息<br>统计信息） count,sum,max,min,avg  分组的标准)SQLServer中分组时：不能以text,ntext,image类型的字段作为分组依据,在selecte统计函数中的字段，不能和普通的字段放在一起对数据库进行操作</p><p>分离数据库<br>sp_detach_db; 附加数据库：sp_attach_db 后接表明，附加需要完整的路径名</p><p>如何修改数据: 库的名称</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sp_renamedb <span class="string">&#x27;old_name&#x27;</span>, <span class="string">&#x27;new_name&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="提升"><a href="#提升" class="headerlink" title="提升"></a>提升</h1><p>复制表(只复制结构,源表名：a 新表名：b)</p><ul><li>法一：<code>select * into b from a where 1&lt;&gt;1</code>（仅用于SQlServer）</li><li>法二：<code>select top 0 * into b from a</code></li></ul><p>拷贝表(拷贝数据,源表名：a 目标表名：b)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> b(a, b, c) <span class="keyword">select</span> d,e,f <span class="keyword">from</span> b</span><br></pre></td></tr></table></figure><p>跨数据库之间表的拷贝(具体数据使用绝对路径)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> b(a, b, c) <span class="keyword">select</span> d,e,f <span class="keyword">from</span> b <span class="keyword">in</span> ‘具体数据库’ <span class="keyword">where</span> 条件</span><br></pre></td></tr></table></figure><ul><li>例子：..from b in ‘“&amp;Server.MapPath(“.”)&amp;”\data.mdb” &amp;”‘ where..</li></ul><p>子查询(表名1：a 表名2：b)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a,b,c <span class="keyword">from</span> a <span class="keyword">where</span> a <span class="keyword">IN</span> (<span class="keyword">select</span> d <span class="keyword">from</span> b )</span><br></pre></td></tr></table></figure><ul><li>或者<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a,b,c <span class="keyword">from</span> a <span class="keyword">where</span> a <span class="keyword">IN</span> (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure></li></ul><p>显示文章、提交人和最后回复时间</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.title,a.username,b.adddate <span class="keyword">from</span> <span class="keyword">table</span> a,(<span class="keyword">select</span> <span class="built_in">max</span>(adddate) adddate <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> table.title<span class="operator">=</span>a.title) b</span><br></pre></td></tr></table></figure><p>外连接查询(表名1：a 表名2：b)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.a, a.b, a.c, b.c, b.d, b.f <span class="keyword">from</span> a <span class="keyword">LEFT</span> <span class="keyword">OUT</span> <span class="keyword">JOIN</span> b <span class="keyword">ON</span> a.a <span class="operator">=</span> b.c</span><br></pre></td></tr></table></figure><h2 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h2><p>在线视图查询(表名1：a )</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">SELECT</span> a,b,c <span class="keyword">FROM</span> a) T <span class="keyword">where</span> t.a <span class="operator">&gt;</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>between的用法,between限制查询数据范围时包括了边界值,not between不包括</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table1 <span class="keyword">where</span> <span class="type">time</span> <span class="keyword">between</span> time1 <span class="keyword">and</span> time2</span><br><span class="line"><span class="keyword">select</span> a,b,c, <span class="keyword">from</span> table1 <span class="keyword">where</span> a <span class="keyword">not</span> <span class="keyword">between</span> 数值<span class="number">1</span> <span class="keyword">and</span> 数值<span class="number">2</span></span><br></pre></td></tr></table></figure><p>in 的使用方法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table1 <span class="keyword">where</span> a [<span class="keyword">not</span>] <span class="keyword">in</span> (‘值<span class="number">1</span>’,’值<span class="number">2</span>’,’值<span class="number">4</span>’,’值<span class="number">6</span>’)</span><br></pre></td></tr></table></figure><p>两张关联表，删除主表中已经在副表中没有的信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> table1 <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span> ( <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table2 <span class="keyword">where</span> table1.field1<span class="operator">=</span>table2.field1 )</span><br></pre></td></tr></table></figure><p>四表联查问题</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> a <span class="keyword">left</span> <span class="keyword">inner</span> <span class="keyword">join</span> b <span class="keyword">on</span> a.a<span class="operator">=</span>b.b <span class="keyword">right</span> <span class="keyword">inner</span> <span class="keyword">join</span> c <span class="keyword">on</span> a.a<span class="operator">=</span>c.c <span class="keyword">inner</span> <span class="keyword">join</span> d <span class="keyword">on</span> a.a<span class="operator">=</span>d.d <span class="keyword">where</span> .....</span><br></pre></td></tr></table></figure><p>日程安排提前五分钟提醒</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SQL</span>: <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 日程安排 <span class="keyword">where</span> datediff(<span class="string">&#x27;minute&#x27;</span>,f开始时间,getdate())<span class="operator">&gt;</span><span class="number">5</span></span><br></pre></td></tr></table></figure><p>一条sql 语句搞定数据库分页</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> top <span class="number">10</span> b.<span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> top <span class="number">20</span> 主键字段,排序字段 <span class="keyword">from</span> 表名 <span class="keyword">order</span> <span class="keyword">by</span> 排序字段 <span class="keyword">desc</span>) a,表名 b <span class="keyword">where</span> b.主键字段 <span class="operator">=</span> a.主键字段 <span class="keyword">order</span> <span class="keyword">by</span> a.排序字段</span><br></pre></td></tr></table></figure><ul><li>具体实现：</li><li>关于数据库分页</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="variable">@start</span> <span class="type">int</span>,<span class="variable">@end</span> <span class="type">int</span></span><br><span class="line"><span class="variable">@sql</span>  nvarchar(<span class="number">600</span>)</span><br><span class="line"><span class="keyword">set</span> <span class="variable">@sql</span><span class="operator">=</span>’<span class="keyword">select</span> top’<span class="operator">+</span>str(<span class="variable">@end</span><span class="operator">-</span><span class="variable">@start</span><span class="operator">+</span><span class="number">1</span>)<span class="operator">+</span>’<span class="operator">+</span><span class="keyword">from</span> T <span class="keyword">where</span> rid <span class="keyword">not</span> <span class="keyword">in</span>(<span class="keyword">select</span> top’<span class="operator">+</span>str(<span class="variable">@str</span><span class="number">-1</span>)<span class="operator">+</span>’Rid <span class="keyword">from</span> T <span class="keyword">where</span> Rid<span class="operator">&gt;</span><span class="number">-1</span>)’</span><br><span class="line"><span class="keyword">exec</span> sp_executesql <span class="variable">@sql</span></span><br></pre></td></tr></table></figure><ul><li>注意：在top后不能直接跟一个变量，所以在实际应用中只有这样的进行特殊的处理。Rid为一个标识列，如果top后还有具体的字段，这样做是非常有好处的。因为这样可以避免 top的字段如果是逻辑索引的，查询的结果后实际表中的不一致（逻辑索引中的数据有可能和数据表中的不一致，而查询时如果处在索引则首先查询索引）</li></ul><h2 id="第三部分"><a href="#第三部分" class="headerlink" title="第三部分"></a>第三部分</h2><p>前10条记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> top <span class="number">10</span> <span class="operator">*</span> form table1 <span class="keyword">where</span> 范围</span><br></pre></td></tr></table></figure><p>选择在每一组b值相同的数据中对应的a最大的记录的所有信息(类似这样的用法可以用于论坛每月排行榜,每月热销产品分析,按科目成绩排名,等等.)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a,b,c <span class="keyword">from</span> tablename ta <span class="keyword">where</span> a<span class="operator">=</span>(<span class="keyword">select</span> <span class="built_in">max</span>(a) <span class="keyword">from</span> tablename tb <span class="keyword">where</span> tb.b<span class="operator">=</span>ta.b)</span><br></pre></td></tr></table></figure><p>包括所有在 TableA 中但不在 TableB和TableC 中的行并消除所有重复行而派生出一个结果表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">select</span> a <span class="keyword">from</span> tableA ) <span class="keyword">except</span> (<span class="keyword">select</span> a <span class="keyword">from</span> tableB) <span class="keyword">except</span> (<span class="keyword">select</span> a <span class="keyword">from</span> tableC)</span><br></pre></td></tr></table></figure><p>随机取出10条数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> top <span class="number">10</span> <span class="operator">*</span> <span class="keyword">from</span> tablename <span class="keyword">order</span> <span class="keyword">by</span> newid()</span><br></pre></td></tr></table></figure><p>随机选择记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> newid()</span><br></pre></td></tr></table></figure><p>删除重复记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tablename <span class="keyword">where</span> id <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="built_in">max</span>(id) <span class="keyword">from</span> tablename <span class="keyword">group</span> <span class="keyword">by</span> col1,col2,...)</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> <span class="operator">*</span> <span class="keyword">into</span> temp <span class="keyword">from</span> tablename</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tablename</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tablename <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> temp</span><br></pre></td></tr></table></figure><ul><li>评价：这种操作牵连大量的数据的移动，这种做法不适合大容量但数据操作</li><li>例如:在一个外部表中导入数据，由于某些原因第一次只导入了一部分，但很难判断具体位置，这样只有在下一次全部导入，这样也就产生好多重复的字段，怎样删除重复字段</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table tablename</span><br></pre></td></tr></table></figure><ul><li>加一个自增列</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add</span>  column_b <span class="type">int</span> <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"> <span class="keyword">delete</span> <span class="keyword">from</span> tablename <span class="keyword">where</span> column_b <span class="keyword">not</span> <span class="keyword">in</span>(</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(column_b)  <span class="keyword">from</span> tablename <span class="keyword">group</span> <span class="keyword">by</span> column1,column2,...)</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename <span class="keyword">drop</span> <span class="keyword">column</span> column_b</span><br></pre></td></tr></table></figure><h2 id="第四部分"><a href="#第四部分" class="headerlink" title="第四部分"></a>第四部分</h2><p>列出数据库里所有的表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> name <span class="keyword">from</span> sysobjects <span class="keyword">where</span> type<span class="operator">=</span><span class="string">&#x27;U&#x27;</span> <span class="operator">/</span><span class="operator">/</span> U代表用户</span><br></pre></td></tr></table></figure><p>列出表里的所有的列名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> name <span class="keyword">from</span> syscolumns <span class="keyword">where</span> id<span class="operator">=</span>object_id(<span class="string">&#x27;TableName&#x27;</span>)</span><br></pre></td></tr></table></figure><p>列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select 中的case</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> type,<span class="built_in">sum</span>(<span class="keyword">case</span> vender <span class="keyword">when</span> <span class="string">&#x27;A&#x27;</span> <span class="keyword">then</span> pcs <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>),<span class="built_in">sum</span>(<span class="keyword">case</span> vender <span class="keyword">when</span> <span class="string">&#x27;C&#x27;</span> <span class="keyword">then</span> pcs <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>),<span class="built_in">sum</span>(<span class="keyword">case</span> vender <span class="keyword">when</span> <span class="string">&#x27;B&#x27;</span> <span class="keyword">then</span> pcs <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">FROM</span> tablename <span class="keyword">group</span> <span class="keyword">by</span> type</span><br></pre></td></tr></table></figure><ul><li>显示结果：<blockquote><p>type vender pcs<br>电脑 A 1<br>电脑 A 1<br>光盘 B 2<br>光盘 A 2<br>手机 B 3<br>手机 C 3</p></blockquote></li></ul><p>初始化表table1</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> table1</span><br></pre></td></tr></table></figure><p>选择从10到15的记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> top <span class="number">5</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> top <span class="number">15</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">order</span> <span class="keyword">by</span> id <span class="keyword">asc</span>) table_别名 <span class="keyword">order</span> <span class="keyword">by</span> id <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><ul><li>技巧</li><li>1&#x3D;1，1&#x3D;2的使用，在SQL语句组合时用的较多</li><li>“where 1&#x3D;1” 是表示选择全部    “where 1&#x3D;2”全部不选，如：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if <span class="variable">@strWhere</span> <span class="operator">!=</span><span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">set</span> <span class="variable">@strSQL</span> <span class="operator">=</span> <span class="string">&#x27;select count(*) as Total from [&#x27;</span> <span class="operator">+</span> <span class="variable">@tblName</span> <span class="operator">+</span> <span class="string">&#x27;] where &#x27;</span> <span class="operator">+</span> <span class="variable">@strWhere</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">set</span> <span class="variable">@strSQL</span> <span class="operator">=</span> <span class="string">&#x27;select count(*) as Total from [&#x27;</span> <span class="operator">+</span> <span class="variable">@tblName</span> <span class="operator">+</span> <span class="string">&#x27;]&#x27;</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>  我们可以直接写成</p><p>  错误！未找到目录项。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="variable">@strSQL</span> <span class="operator">=</span> <span class="string">&#x27;select count(*) as Total from [&#x27;</span> <span class="operator">+</span> <span class="variable">@tblName</span> <span class="operator">+</span> <span class="string">&#x27;] where 1=1 安定 &#x27;</span><span class="operator">+</span> <span class="variable">@strWhere</span> <span class="number">2</span>、收缩数据库</span><br></pre></td></tr></table></figure><h2 id="第五部分"><a href="#第五部分" class="headerlink" title="第五部分"></a>第五部分</h2><ol><li>重建索引<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DBCC REINDEX</span><br><span class="line">DBCC INDEXDEFRAG</span><br></pre></td></tr></table></figure></li><li>收缩数据和日志<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DBCC SHRINKDB</span><br><span class="line">DBCC SHRINKFILE</span><br></pre></td></tr></table></figure></li><li>压缩数据库<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dbcc shrinkdatabase(dbname)</span><br></pre></td></tr></table></figure></li><li>转移数据库  给新用户以已存在用户权限<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exec</span> sp_change_users_login <span class="string">&#x27;update_one&#x27;</span>,<span class="string">&#x27;newname&#x27;</span>,<span class="string">&#x27;oldname&#x27;</span></span><br><span class="line">go</span><br></pre></td></tr></table></figure></li><li>检查备份集<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESTORE VERIFYONLY <span class="keyword">from</span> disk<span class="operator">=</span><span class="string">&#x27;E:\dvbbs.bak&#x27;</span></span><br></pre></td></tr></table></figure></li><li>修复数据库<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> DATABASE [dvbbs] <span class="keyword">SET</span> SINGLE_USER</span><br><span class="line">GO</span><br><span class="line">DBCC CHECKDB(<span class="string">&#x27;dvbbs&#x27;</span>,repair_allow_data_loss) <span class="keyword">WITH</span> TABLOCK</span><br><span class="line">GO</span><br><span class="line"><span class="keyword">ALTER</span> DATABASE [dvbbs] <span class="keyword">SET</span> MULTI_USER</span><br><span class="line">GO</span><br></pre></td></tr></table></figure></li><li>日志清除<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> NOCOUNT <span class="keyword">ON</span></span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@LogicalFileName</span> sysname,</span><br><span class="line"> <span class="variable">@MaxMinutes</span> <span class="type">INT</span>,</span><br><span class="line"> <span class="variable">@NewSize</span> <span class="type">INT</span></span><br><span class="line"></span><br><span class="line">USE tablename <span class="comment">-- 要操作的数据库名</span></span><br><span class="line"><span class="keyword">SELECT</span>  <span class="variable">@LogicalFileName</span> <span class="operator">=</span> <span class="string">&#x27;tablename_log&#x27;</span>, <span class="comment">-- 日志文件名</span></span><br><span class="line"><span class="variable">@MaxMinutes</span> <span class="operator">=</span> <span class="number">10</span>, <span class="comment">-- Limit on time allowed to wrap log.</span></span><br><span class="line"> <span class="variable">@NewSize</span> <span class="operator">=</span> <span class="number">1</span>  <span class="comment">-- 你想设定的日志文件的大小(M)</span></span><br><span class="line">Setup <span class="operator">/</span> initialize</span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@OriginalSize</span> <span class="type">int</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@OriginalSize</span> <span class="operator">=</span> size</span><br><span class="line"> <span class="keyword">FROM</span> sysfiles</span><br><span class="line"> <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="variable">@LogicalFileName</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;Original Size of &#x27;</span> <span class="operator">+</span> db_name() <span class="operator">+</span> <span class="string">&#x27; LOG is &#x27;</span> <span class="operator">+</span></span><br><span class="line"> <span class="keyword">CONVERT</span>(<span class="type">VARCHAR</span>(<span class="number">30</span>),<span class="variable">@OriginalSize</span>) <span class="operator">+</span> <span class="string">&#x27; 8K pages or &#x27;</span> <span class="operator">+</span></span><br><span class="line"> <span class="keyword">CONVERT</span>(<span class="type">VARCHAR</span>(<span class="number">30</span>),(<span class="variable">@OriginalSize</span><span class="operator">*</span><span class="number">8</span><span class="operator">/</span><span class="number">1024</span>)) <span class="operator">+</span> <span class="string">&#x27;MB&#x27;</span></span><br><span class="line"> <span class="keyword">FROM</span> sysfiles</span><br><span class="line"> <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="variable">@LogicalFileName</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> DummyTrans</span><br><span class="line"> (DummyColumn <span class="type">char</span> (<span class="number">8000</span>) <span class="keyword">not</span> <span class="keyword">null</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@Counter</span>    <span class="type">INT</span>,</span><br><span class="line"> <span class="variable">@StartTime</span> DATETIME,</span><br><span class="line"> <span class="variable">@TruncLog</span>   <span class="type">VARCHAR</span>(<span class="number">255</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@StartTime</span> <span class="operator">=</span> GETDATE(),</span><br><span class="line"> <span class="variable">@TruncLog</span> <span class="operator">=</span> <span class="string">&#x27;BACKUP LOG &#x27;</span> <span class="operator">+</span> db_name() <span class="operator">+</span> <span class="string">&#x27; WITH TRUNCATE_ONLY&#x27;</span></span><br><span class="line">DBCC SHRINKFILE (<span class="variable">@LogicalFileName</span>, <span class="variable">@NewSize</span>)</span><br><span class="line"><span class="keyword">EXEC</span> (<span class="variable">@TruncLog</span>)</span><br><span class="line"><span class="comment">-- Wrap the log if necessary.</span></span><br><span class="line">WHILE <span class="variable">@MaxMinutes</span> <span class="operator">&gt;</span> DATEDIFF (mi, <span class="variable">@StartTime</span>, GETDATE()) <span class="comment">-- time has not expired</span></span><br><span class="line"> <span class="keyword">AND</span> <span class="variable">@OriginalSize</span> <span class="operator">=</span> (<span class="keyword">SELECT</span> size <span class="keyword">FROM</span> sysfiles <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="variable">@LogicalFileName</span>)</span><br><span class="line"> <span class="keyword">AND</span> (<span class="variable">@OriginalSize</span> <span class="operator">*</span> <span class="number">8</span> <span class="operator">/</span><span class="number">1024</span>) <span class="operator">&gt;</span> <span class="variable">@NewSize</span></span><br><span class="line"> <span class="keyword">BEGIN</span> <span class="comment">-- Outer loop.</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@Counter</span> <span class="operator">=</span> <span class="number">0</span></span><br><span class="line"> WHILE   ((<span class="variable">@Counter</span> <span class="operator">&lt;</span> <span class="variable">@OriginalSize</span> <span class="operator">/</span> <span class="number">16</span>) <span class="keyword">AND</span> (<span class="variable">@Counter</span> <span class="operator">&lt;</span> <span class="number">50000</span>))</span><br><span class="line"> <span class="keyword">BEGIN</span> <span class="comment">-- update</span></span><br><span class="line"> <span class="keyword">INSERT</span> DummyTrans <span class="keyword">VALUES</span> (<span class="string">&#x27;Fill Log&#x27;</span>) <span class="keyword">DELETE</span> DummyTrans</span><br><span class="line"> <span class="keyword">SELECT</span> <span class="variable">@Counter</span> <span class="operator">=</span> <span class="variable">@Counter</span> <span class="operator">+</span> <span class="number">1</span></span><br><span class="line"> <span class="keyword">END</span></span><br><span class="line"> <span class="keyword">EXEC</span> (<span class="variable">@TruncLog</span>)</span><br><span class="line"> <span class="keyword">END</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;Final Size of &#x27;</span> <span class="operator">+</span> db_name() <span class="operator">+</span> <span class="string">&#x27; LOG is &#x27;</span> <span class="operator">+</span></span><br><span class="line"> <span class="keyword">CONVERT</span>(<span class="type">VARCHAR</span>(<span class="number">30</span>),size) <span class="operator">+</span> <span class="string">&#x27; 8K pages or &#x27;</span> <span class="operator">+</span></span><br><span class="line"> <span class="keyword">CONVERT</span>(<span class="type">VARCHAR</span>(<span class="number">30</span>),(size<span class="operator">*</span><span class="number">8</span><span class="operator">/</span><span class="number">1024</span>)) <span class="operator">+</span> <span class="string">&#x27;MB&#x27;</span></span><br><span class="line"> <span class="keyword">FROM</span> sysfiles</span><br><span class="line"> <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="variable">@LogicalFileName</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> DummyTrans</span><br><span class="line"><span class="keyword">SET</span> NOCOUNT OFF</span><br></pre></td></tr></table></figure></li><li>说明：更改某个表<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exec</span> sp_changeobjectowner <span class="string">&#x27;tablename&#x27;</span>,<span class="string">&#x27;dbo&#x27;</span></span><br></pre></td></tr></table></figure></li><li>存储更改全部表<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> dbo.User_ChangeObjectOwnerBatch</span><br><span class="line"><span class="variable">@OldOwner</span> <span class="keyword">as</span> NVARCHAR(<span class="number">128</span>),</span><br><span class="line"><span class="variable">@NewOwner</span> <span class="keyword">as</span> NVARCHAR(<span class="number">128</span>)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@Name</span>    <span class="keyword">as</span> NVARCHAR(<span class="number">128</span>)</span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@Owner</span>   <span class="keyword">as</span> NVARCHAR(<span class="number">128</span>)</span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@OwnerName</span>   <span class="keyword">as</span> NVARCHAR(<span class="number">128</span>)</span><br><span class="line"><span class="keyword">DECLARE</span> curObject <span class="keyword">CURSOR</span> <span class="keyword">FOR</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;Name&#x27;</span>    <span class="operator">=</span> name,</span><br><span class="line">   <span class="string">&#x27;Owner&#x27;</span>    <span class="operator">=</span> user_name(uid)</span><br><span class="line"><span class="keyword">from</span> sysobjects</span><br><span class="line"><span class="keyword">where</span> user_name(uid)<span class="operator">=</span><span class="variable">@OldOwner</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> name</span><br><span class="line"><span class="keyword">OPEN</span>   curObject</span><br><span class="line"><span class="keyword">FETCH</span> NEXT <span class="keyword">FROM</span> curObject <span class="keyword">INTO</span> <span class="variable">@Name</span>, <span class="variable">@Owner</span></span><br><span class="line">WHILE(@<span class="variable">@FETCH_STATUS</span><span class="operator">=</span><span class="number">0</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">if <span class="variable">@Owner</span><span class="operator">=</span><span class="variable">@OldOwner</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">   <span class="keyword">set</span> <span class="variable">@OwnerName</span> <span class="operator">=</span> <span class="variable">@OldOwner</span> <span class="operator">+</span> <span class="string">&#x27;.&#x27;</span> <span class="operator">+</span> rtrim(<span class="variable">@Name</span>)</span><br><span class="line">   <span class="keyword">exec</span> sp_changeobjectowner <span class="variable">@OwnerName</span>, <span class="variable">@NewOwner</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">-- select @name,@NewOwner,@OldOwner</span></span><br><span class="line"><span class="keyword">FETCH</span> NEXT <span class="keyword">FROM</span> curObject <span class="keyword">INTO</span> <span class="variable">@Name</span>, <span class="variable">@Owner</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">close</span> curObject</span><br><span class="line"><span class="keyword">deallocate</span> curObject</span><br><span class="line">GO</span><br></pre></td></tr></table></figure></li><li>SQL SERVER中直接循环写入数据<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="variable">@i</span> <span class="type">int</span></span><br><span class="line"><span class="keyword">set</span> <span class="variable">@i</span><span class="operator">=</span><span class="number">1</span></span><br><span class="line">while <span class="variable">@i</span><span class="operator">&lt;</span><span class="number">30</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> test (userid) <span class="keyword">values</span>(<span class="variable">@i</span>)</span><br><span class="line">    <span class="keyword">set</span> <span class="variable">@i</span><span class="operator">=</span><span class="variable">@i</span><span class="operator">+</span><span class="number">1</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>案例：有如下表，要求就裱中所有沒有及格的成績，在每次增長0.1的基礎上，使他們剛好及格:</li></ul><table><thead><tr><th align="left">Name</th><th align="left">score</th></tr></thead><tbody><tr><td align="left">Zhangshan</td><td align="left">80</td></tr><tr><td align="left">Lishi</td><td align="left">59</td></tr><tr><td align="left">Wangwu</td><td align="left">50</td></tr><tr><td align="left">Songquan</td><td align="left">69</td></tr></tbody></table><hr><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">while((<span class="keyword">select</span> <span class="built_in">min</span>(score) <span class="keyword">from</span> tb_table)<span class="operator">&lt;</span><span class="number">60</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">update</span> tb_table <span class="keyword">set</span> score <span class="operator">=</span>score<span class="operator">*</span><span class="number">1.01</span></span><br><span class="line"><span class="keyword">where</span> score<span class="operator">&lt;</span><span class="number">60</span></span><br><span class="line">if  (<span class="keyword">select</span> <span class="built_in">min</span>(score) <span class="keyword">from</span> tb_table)<span class="operator">&gt;</span><span class="number">60</span></span><br><span class="line">  break</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">    continue</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h1 id="数据开发-经典"><a href="#数据开发-经典" class="headerlink" title="数据开发-经典"></a>数据开发-经典</h1><ol><li>按姓氏笔画排序:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> <span class="operator">*</span> <span class="keyword">From</span> TableName <span class="keyword">Order</span> <span class="keyword">By</span> CustomerName <span class="keyword">Collate</span> Chinese_PRC_Stroke_ci_as <span class="operator">/</span><span class="operator">/</span>从少到多</span><br></pre></td></tr></table></figure></li><li>数据库加密:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> encrypt(<span class="string">&#x27;原始密码&#x27;</span>)</span><br><span class="line"><span class="keyword">select</span> pwdencrypt(<span class="string">&#x27;原始密码&#x27;</span>)</span><br><span class="line"><span class="keyword">select</span> pwdcompare(<span class="string">&#x27;原始密码&#x27;</span>,<span class="string">&#x27;加密后密码&#x27;</span>) <span class="operator">=</span> <span class="number">1</span><span class="comment">--相同；否则不相同 encrypt(&#x27;原始密码&#x27;)</span></span><br><span class="line"><span class="keyword">select</span> pwdencrypt(<span class="string">&#x27;原始密码&#x27;</span>)</span><br><span class="line"><span class="keyword">select</span> pwdcompare(<span class="string">&#x27;原始密码&#x27;</span>,<span class="string">&#x27;加密后密码&#x27;</span>) <span class="operator">=</span> <span class="number">1</span><span class="comment">--相同；否则不相同</span></span><br></pre></td></tr></table></figure></li><li>取回表中字段:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="variable">@list</span> <span class="type">varchar</span>(<span class="number">1000</span>),</span><br><span class="line"><span class="variable">@sql</span> nvarchar(<span class="number">1000</span>)</span><br><span class="line"><span class="keyword">select</span> <span class="variable">@list</span><span class="operator">=</span><span class="variable">@list</span><span class="operator">+</span><span class="string">&#x27;,&#x27;</span><span class="operator">+</span>b.name <span class="keyword">from</span> sysobjects a,syscolumns b <span class="keyword">where</span> a.id<span class="operator">=</span>b.id <span class="keyword">and</span> a.name<span class="operator">=</span><span class="string">&#x27;表A&#x27;</span></span><br><span class="line"><span class="keyword">set</span> <span class="variable">@sql</span><span class="operator">=</span><span class="string">&#x27;select &#x27;</span><span class="operator">+</span><span class="keyword">right</span>(<span class="variable">@list</span>,len(<span class="variable">@list</span>)<span class="number">-1</span>)<span class="operator">+</span><span class="string">&#x27; from 表A&#x27;</span></span><br><span class="line"><span class="keyword">exec</span> (<span class="variable">@sql</span>)</span><br></pre></td></tr></table></figure></li><li>查看硬盘分区:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXEC</span> master..xp_fixeddrives</span><br></pre></td></tr></table></figure></li><li>比较A,B表是否相等:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if (<span class="keyword">select</span> checksum_agg(binary_checksum(<span class="operator">*</span>)) <span class="keyword">from</span> A)</span><br><span class="line">     <span class="operator">=</span></span><br><span class="line">    (<span class="keyword">select</span> checksum_agg(binary_checksum(<span class="operator">*</span>)) <span class="keyword">from</span> B)</span><br><span class="line">print <span class="string">&#x27;相等&#x27;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">print <span class="string">&#x27;不相等&#x27;</span></span><br></pre></td></tr></table></figure></li><li>杀掉所有的事件探察器进程:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> hcforeach <span class="keyword">CURSOR</span> <span class="keyword">GLOBAL</span> <span class="keyword">FOR</span> <span class="keyword">SELECT</span> <span class="string">&#x27;kill &#x27;</span><span class="operator">+</span>RTRIM(spid) <span class="keyword">FROM</span> master.dbo.sysprocesses</span><br><span class="line"><span class="keyword">WHERE</span> program_name <span class="keyword">IN</span>(<span class="string">&#x27;SQL profiler&#x27;</span>,N<span class="string">&#x27;SQL 事件探查器&#x27;</span>)</span><br><span class="line"><span class="keyword">EXEC</span> sp_msforeach_worker <span class="string">&#x27;?&#x27;</span></span><br></pre></td></tr></table></figure></li><li>记录搜索:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">开头到N条记录</span><br><span class="line">Select Top N * From 表</span><br><span class="line">-------------------------------</span><br><span class="line">N到M条记录(要有主索引ID)</span><br><span class="line">Select Top M-N * From 表 Where ID in (Select Top M ID From 表) Order by ID   Desc</span><br><span class="line">----------------------------------</span><br><span class="line">N到结尾记录</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> Top N <span class="operator">*</span> <span class="keyword">From</span> 表 <span class="keyword">Order</span> <span class="keyword">by</span> ID <span class="keyword">Desc</span></span><br></pre></td></tr></table></figure></li></ol><ul><li><p>案例</p><ul><li>例如1：一张表有一万多条记录，表的第一个字段 RecID 是自增长字段，写一个SQL语句， 找出表的第31到第40个记录。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> top <span class="number">10</span> recid <span class="keyword">from</span> A <span class="keyword">where</span> recid <span class="keyword">not</span>  <span class="keyword">in</span>(<span class="keyword">select</span> top <span class="number">30</span> recid <span class="keyword">from</span> A)</span><br></pre></td></tr></table></figure><p>分析：如果这样写会产生某些问题，如果recid在表中存在逻辑索引。<code> select top 10 recid from A where……</code>是从索引中查找，而后面的<code>select top 30 recid from A</code>则在数据表中查找，这样由于索引中的顺序有可能和数据表中的不一致，这样就导致查询到的不是本来的欲得到的数据。</p></li><li><p>解决方案</p><ul><li>用<code>order by select top 30 recid from A order by ricid </code>如果该字段不是自增长，就会出现问题</li><li>在那个子查询中也加条件：<code>select top 30 recid from A where recid&gt;-1</code></li></ul></li><li><p>例2：查询表中的最后以条记录，并不知道这个表共有多少数据,以及表结构。</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="variable">@s</span> <span class="operator">=</span> <span class="string">&#x27;select top 1 * from T   where pid not in (select top &#x27;</span> <span class="operator">+</span> str(<span class="variable">@count</span><span class="number">-1</span>) <span class="operator">+</span> <span class="string">&#x27; pid  from  T)&#x27;</span></span><br><span class="line">print <span class="variable">@s</span>      <span class="keyword">exec</span>  sp_executesql  <span class="variable">@s</span></span><br></pre></td></tr></table></figure><ol start="9"><li><p>获取当前数据库中的所有用户表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> Name <span class="keyword">from</span> sysobjects <span class="keyword">where</span> xtype<span class="operator">=</span><span class="string">&#x27;u&#x27;</span> <span class="keyword">and</span> status<span class="operator">&gt;=</span><span class="number">0</span></span><br></pre></td></tr></table></figure></li><li><p>获取某一个表的所有字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> name <span class="keyword">from</span> syscolumns <span class="keyword">where</span> id<span class="operator">=</span>object_id(<span class="string">&#x27;表名&#x27;</span>)</span><br><span class="line"><span class="keyword">select</span> name <span class="keyword">from</span> syscolumns <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="keyword">select</span> id <span class="keyword">from</span> sysobjects <span class="keyword">where</span> type <span class="operator">=</span> <span class="string">&#x27;u&#x27;</span> <span class="keyword">and</span> name <span class="operator">=</span> <span class="string">&#x27;表名&#x27;</span>)</span><br></pre></td></tr></table></figure><p>两种方式的效果相同</p></li><li><p>查看与某一个表相关的视图、存储过程、函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.<span class="operator">*</span> <span class="keyword">from</span> sysobjects a, syscomments b <span class="keyword">where</span> a.id <span class="operator">=</span> b.id <span class="keyword">and</span> b.text <span class="keyword">like</span> <span class="string">&#x27;%表名%&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>查看当前数据库中所有存储过程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> name <span class="keyword">as</span> 存储过程名称 <span class="keyword">from</span> sysobjects <span class="keyword">where</span> xtype<span class="operator">=</span><span class="string">&#x27;P&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>查询用户创建的所有数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from master..sysdatabases D where sid not in(select sid from master..syslogins where name=&#x27;sa&#x27;)</span><br></pre></td></tr></table></figure></li></ol><ul><li>或者<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> dbid, name <span class="keyword">AS</span> DB_NAME <span class="keyword">from</span> master..sysdatabases <span class="keyword">where</span> sid <span class="operator">&lt;&gt;</span> <span class="number">0x01</span></span><br></pre></td></tr></table></figure></li></ul><ol start="14"><li>查询某一个表的字段和数据类型<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> column_name,data_type <span class="keyword">from</span> information_schema.columns</span><br><span class="line"><span class="keyword">where</span> table_name <span class="operator">=</span> <span class="string">&#x27;表名&#x27;</span></span><br></pre></td></tr></table></figure></li><li>不同服务器数据库之间的数据操作</li></ol><ul><li><p>创建链接服务器</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exec</span> sp_addlinkedserver   <span class="string">&#x27;ITSV &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;SQLOLEDB &#x27;</span>, <span class="string">&#x27;远程服务器名或ip地址 &#x27;</span></span><br><span class="line"><span class="keyword">exec</span> sp_addlinkedsrvlogin  <span class="string">&#x27;ITSV &#x27;</span>, <span class="string">&#x27;false &#x27;</span>,<span class="keyword">null</span>, <span class="string">&#x27;用户名 &#x27;</span>, <span class="string">&#x27;密码 &#x27;</span></span><br></pre></td></tr></table></figure><ul><li>查询示例</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ITSV.数据库名.dbo.表名</span><br></pre></td></tr></table></figure><ul><li>导入示例</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">into</span> 表 <span class="keyword">from</span> ITSV.数据库名.dbo.表名</span><br></pre></td></tr></table></figure><ul><li>以后不再使用时删除链接服务器</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exec</span> sp_dropserver  <span class="string">&#x27;ITSV &#x27;</span>, <span class="string">&#x27;droplogins &#x27;</span></span><br></pre></td></tr></table></figure><ul><li>连接远程&#x2F;局域网数据(openrowset&#x2F;openquery&#x2F;opendatasource)</li></ul><p>–1、openrowset</p><ul><li>查询示例</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> openrowset( <span class="string">&#x27;SQLOLEDB &#x27;</span>, <span class="string">&#x27;sql服务器名 &#x27;</span>; <span class="string">&#x27;用户名 &#x27;</span>; <span class="string">&#x27;密码 &#x27;</span>,数据库名.dbo.表名)</span><br></pre></td></tr></table></figure><ul><li>生成本地表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">into</span> 表 <span class="keyword">from</span> openrowset( <span class="string">&#x27;SQLOLEDB &#x27;</span>, <span class="string">&#x27;sql服务器名 &#x27;</span>; <span class="string">&#x27;用户名 &#x27;</span>; <span class="string">&#x27;密码 &#x27;</span>,数据库名.dbo.表名)</span><br></pre></td></tr></table></figure><ul><li>把本地表导入远程表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> openrowset( <span class="string">&#x27;SQLOLEDB &#x27;</span>, <span class="string">&#x27;sql服务器名 &#x27;</span>; <span class="string">&#x27;用户名 &#x27;</span>; <span class="string">&#x27;密码 &#x27;</span>,数据库名.dbo.表名)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span><span class="keyword">from</span> 本地表</span><br></pre></td></tr></table></figure><ul><li>更新本地表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> b</span><br><span class="line"><span class="keyword">set</span> b.列A<span class="operator">=</span>a.列A</span><br><span class="line"><span class="keyword">from</span> openrowset( <span class="string">&#x27;SQLOLEDB &#x27;</span>, <span class="string">&#x27;sql服务器名 &#x27;</span>; <span class="string">&#x27;用户名 &#x27;</span>; <span class="string">&#x27;密码 &#x27;</span>,数据库名.dbo.表名)<span class="keyword">as</span> a <span class="keyword">inner</span> <span class="keyword">join</span> 本地表 b</span><br><span class="line"><span class="keyword">on</span> a.column1<span class="operator">=</span>b.column1</span><br></pre></td></tr></table></figure><ul><li>openquery用法需要创建一个连接</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--首先创建一个连接创建链接服务器</span></span><br><span class="line"><span class="keyword">exec</span> sp_addlinkedserver   <span class="string">&#x27;ITSV &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;SQLOLEDB &#x27;</span>, <span class="string">&#x27;远程服务器名或ip地址 &#x27;</span></span><br></pre></td></tr></table></figure><ul><li>查询</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> openquery(ITSV,  <span class="string">&#x27;SELECT *  FROM 数据库.dbo.表名 &#x27;</span>)</span><br></pre></td></tr></table></figure><p>–把本地表导入远程表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> openquery(ITSV,  <span class="string">&#x27;SELECT *  FROM 数据库.dbo.表名 &#x27;</span>)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 本地表</span><br></pre></td></tr></table></figure><ul><li>更新本地表</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">update b</span><br><span class="line">set b.列B=a.列B</span><br><span class="line">FROM openquery(ITSV,  &#x27;SELECT * FROM 数据库.dbo.表名 &#x27;) as a</span><br><span class="line">inner join 本地表 b on a.列A=b.列A</span><br></pre></td></tr></table></figure><ul><li>3、opendatasource&#x2F;openrowset</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>   <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span>   opendatasource( <span class="string">&#x27;SQLOLEDB &#x27;</span>,  <span class="string">&#x27;Data Source=ip/ServerName;User ID=登陆名;Password=密码 &#x27;</span> ).test.dbo.roy_ta</span><br></pre></td></tr></table></figure><ul><li>把本地表导入远程表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> opendatasource( <span class="string">&#x27;SQLOLEDB &#x27;</span>,  <span class="string">&#x27;Data Source=ip/ServerName;User ID=登陆名;Password=密码 &#x27;</span>).数据库.dbo.表名</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 本地表</span><br><span class="line"><span class="keyword">SQL</span> Server基本函数</span><br><span class="line"><span class="keyword">SQL</span> Server基本函数</span><br></pre></td></tr></table></figure></li></ul><h1 id="字符串函数-长度与分析用"><a href="#字符串函数-长度与分析用" class="headerlink" title="字符串函数 长度与分析用"></a>字符串函数 长度与分析用</h1><p>例子</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datalength(Char_expr)</span><br></pre></td></tr></table></figure><p>返回字符串包含字符数,但不包含后面的空格</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">substring</span>(expression,<span class="keyword">start</span>,length)</span><br></pre></td></tr></table></figure><p>取子串，字符串的下标是从“1”，start为起始位置，length为字符串长度，实际应用中以len(expression)取得其长度</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">right</span>(char_expr,int_expr)</span><br></pre></td></tr></table></figure><p>返回字符串右边第int_expr个字符，还用left于之相反</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">isnull( check_expression , replacement_value )</span><br></pre></td></tr></table></figure><p>如果check_expression為空，則返回replacement_value的值，不為空，就返回check_expression字符操作类</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Sp_addtype</span><br><span class="line"><span class="comment">--自定義數據類型</span></span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXEC</span> sp_addtype birthday, datetime, <span class="string">&#x27;NULL&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> nocount &#123;<span class="keyword">on</span><span class="operator">|</span>off&#125;</span><br></pre></td></tr></table></figure><p>使返回的结果中不包含有关受 Transact-SQL 语句影响的行数的信息。如果存储过程中包含的一些语句并不返回许多实际的数据，则该设置由于大量减少了网络流量，因此可显著提高性能。SET NOCOUNT 设置是在执行或运行时设置，而不是在分析时设置。</p><ul><li>SET NOCOUNT 为 ON 时，不返回计数（表示受 Transact-SQL 语句影响的行数）。</li><li>SET NOCOUNT 为 OFF 时，返回计数</li></ul><h1 id="常识"><a href="#常识" class="headerlink" title="常识"></a>常识</h1><p>SQL中<br>1.在SQL查询中：from后最多可以跟多少张表或视图：256<br>2. 在SQL语句中出现 Order by,查询时，先排序，后取<br>3. 在SQL中，一个字段的最大容量是8000，而对于nvarchar(4000),由于nvarchar是Unicode码。</p><h1 id="SQLServer2000同步复制技术实现步骤"><a href="#SQLServer2000同步复制技术实现步骤" class="headerlink" title="SQLServer2000同步复制技术实现步骤"></a>SQLServer2000同步复制技术实现步骤</h1><h2 id="预备工作"><a href="#预备工作" class="headerlink" title="预备工作"></a>预备工作</h2><p>创建一个同名的 windows 用户</p><ol><li>发布服务器,订阅服务器都创建一个同名的windows用户,并设置相同的密码,做为发布快照文件夹的有效访问用户<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">--管理工具</span><br><span class="line">--计算机管理</span><br><span class="line">--用户和组</span><br><span class="line">--右键用户</span><br><span class="line">--新建用户</span><br><span class="line">--建立一个隶属于administrator组的登陆windows的用户（SynUser）</span><br></pre></td></tr></table></figure></li><li>在发布服务器上,新建一个共享目录,做为发布的快照文件的存放目录,操作:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">我的电脑--D:\ 新建一个目录,名为: PUB</span><br><span class="line">--右键这个新建的目录</span><br><span class="line">--属性--共享</span><br><span class="line">--选择&quot;共享该文件夹&quot;</span><br><span class="line">--通过&quot;权限&quot;按纽来设置具体的用户权限,保证第一步中创建的用户(SynUser) 具有对该文件夹的所有权限</span><br><span class="line">--确定</span><br></pre></td></tr></table></figure></li><li>设置SQL代理(SQLSERVERAGENT)服务的启动用户(发布&#x2F;订阅服务器均做此设置)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">开始--程序--管理工具--服务</span><br><span class="line">--右键SQLSERVERAGENT</span><br><span class="line">--属性--登陆--选择&quot;此账户&quot;</span><br><span class="line">--输入或者选择第一步中创建的windows登录用户名（SynUser）</span><br><span class="line">--&quot;密码&quot;中输入该用户的密码</span><br></pre></td></tr></table></figure></li><li>设置SQL Server身份验证模式,解决连接时的权限问题(发布&#x2F;订阅服务器均做此设置)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">企业管理器</span><br><span class="line">--右键SQL实例--属性</span><br><span class="line">--安全性--身份验证</span><br><span class="line">--选择&quot;SQL Server 和 Windows&quot;</span><br><span class="line">--确定</span><br></pre></td></tr></table></figure></li><li>在发布服务器和订阅服务器上互相注册企业管理器  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">--右键SQL Server组</span><br><span class="line">--新建SQL Server注册...</span><br><span class="line">--下一步--可用的服务器中,输入你要注册的远程服务器名 --添加</span><br><span class="line">--下一步--连接使用,选择第二个&quot;SQL Server身份验证&quot;</span><br><span class="line">--下一步--输入用户名和密码（SynUser）</span><br><span class="line">--下一步--选择SQL Server组,也可以创建一个新组</span><br><span class="line">--下一步--完成</span><br></pre></td></tr></table></figure></li><li>对于只能用IP,不能用计算机名的,为其注册服务器别名（此步在实施中没用到）(在连接端配置,比如,在订阅服务器上配置的话,服务器名称中输入的是发布服务器的IP)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">开始--程序--Microsoft SQL Server--客户端网络实用工具</span><br><span class="line">--别名--添加</span><br><span class="line">--网络库选择&quot;tcp/ip&quot;--服务器别名输入SQL服务器名</span><br><span class="line">--连接参数--服务器名称中输入SQL服务器ip地址</span><br><span class="line">--如果你修改了SQL的端口,取消选择&quot;动态决定端口&quot;,并输入对应的端口号</span><br></pre></td></tr></table></figure></li></ol><h2 id="正式配置"><a href="#正式配置" class="headerlink" title="正式配置"></a>正式配置</h2><h3 id="配置发布服务器"><a href="#配置发布服务器" class="headerlink" title="配置发布服务器"></a>配置发布服务器</h3><p>打开企业管理器，在发布服务器（B、C、D）上执行以下步骤:</p><ol><li>从[工具]下拉菜单的[复制]子菜单中选择[配置发布、订阅服务器和分发]出现配置发布和分发向导</li><li>[下一步] 选择分发服务器 可以选择把发布服务器自己作为分发服务器或者其他sql的服务器（选择自己）</li><li>[下一步] 设置快照文件夹 采用默认\servername\Pub</li><li>[下一步] 自定义配置</li></ol><p>可以选择:是,让我设置分发数据库属性启用发布服务器或设置发布设置<br>否,使用下列默认设置（推荐）</p><ol start="5"><li>[下一步] 设置分发数据库名称和位置 采用默认值</li><li>[下一步] 启用发布服务器 选择作为发布的服务器</li><li>[下一步] 选择需要发布的数据库和发布类型</li><li>[下一步] 选择注册订阅服务器</li><li>[下一步] 完成配置</li></ol><h3 id="创建出版物"><a href="#创建出版物" class="headerlink" title="创建出版物"></a>创建出版物</h3><p>发布服务器B、C、D上</p><ol><li>从[工具]菜单的[复制]子菜单中选择[创建和管理发布]命令</li><li>选择要创建出版物的数据库，然后单击[创建发布]</li><li>在[创建发布向导]的提示对话框中单击[下一步]系统就会弹出一个对话框。对话框上的内容是复制的三个类型。我们现在选第一个也就是默认的快照发布(其他两个大家可以去看看帮助)</li><li>单击[下一步]系统要求指定可以订阅该发布的数据库服务器类型,</li></ol><p>SQLSERVER允许在不同的数据库如 orACLE或ACCESS之间进行数据复制。<br>但是在这里我们选择运行”SQL SERVER 2000”的数据库服务器</p><ol start="5"><li>单击[下一步]系统就弹出一个定义文章的对话框也就是选择要出版的表</li></ol><p>注意: 如果前面选择了事务发布 则再这一步中只能选择带有主键的表</p><ol start="6"><li>选择发布名称和描述</li><li>自定义发布属性 向导提供的选择:</li></ol><ul><li>是 我将自定义数据筛选,启用匿名订阅和或其他自定义属性</li><li>否 根据指定方式创建发布 （建议采用自定义的方式）</li></ul><ol start="8"><li>[下一步] 选择筛选发布的方式</li><li>[下一步] 可以选择是否允许匿名订阅</li></ol><p>如果选择署名订阅,则需要在发布服务器上添加订阅服务器</p><ol><li>[工具]-&gt;[复制]-&gt;[配置发布、订阅服务器和分发的属性]-&gt;[订阅服务器] 中添加</li></ol><ul><li>否则在订阅服务器上请求订阅时会出现的提示:改发布不允许匿名订阅</li></ul><p>如果仍然需要匿名订阅则用以下解决办法<br>[企业管理器]-&gt;[复制]-&gt;[发布内容]-&gt;[属性]-&gt;[订阅选项] 选择允许匿名请求订阅</p><p>如果选择匿名订阅,则配置订阅服务器时不会出现以上提示<br>[下一步] 设置快照 代理程序调度</p><p>[下一步] 完成配置</p><p>当完成出版物的创建后创建出版物的数据库也就变成了一个共享数据库</p><p>有数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">srv1.库名..author有字段:id,name,phone,</span><br><span class="line">srv2.库名..author有字段:id,name,telphone,adress</span><br></pre></td></tr></table></figure><p>要求：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">srv1.库名..author增加记录则srv1.库名..author记录增加</span><br><span class="line"></span><br><span class="line">rv1.库名..author的phone字段更新，则srv1.库名..author对应字段t&gt;elphone更新</span><br><span class="line">*/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="大致的处理步"><a href="#大致的处理步" class="headerlink" title="大致的处理步"></a>大致的处理步</h2><p>创建连接服务器</p><ol><li>在 srv1 上创建连接服务器,以便在 srv1 中操作 srv2,实现同步<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exec</span> sp_addlinkedserver <span class="string">&#x27;srv2&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;SQLOLEDB&#x27;</span>,<span class="string">&#x27;srv2的sql实例名或ip&#x27;</span></span><br><span class="line"><span class="keyword">exec</span> sp_addlinkedsrvlogin <span class="string">&#x27;srv2&#x27;</span>,<span class="string">&#x27;false&#x27;</span>,<span class="keyword">null</span>,<span class="string">&#x27;用户名&#x27;</span>,<span class="string">&#x27;密码&#x27;</span></span><br><span class="line">go</span><br></pre></td></tr></table></figure></li><li>在 srv1 和 srv2 这两台电脑中,启动 msdtc(分布式事务处理服务),并且设置为自动启动</li></ol><p>我的电脑–控制面板–管理工具–服务–右键 Distributed Transaction Coordinator–属性–启动–并将启动类型设置为自动启动<br>go</p><ul><li>然后创建一个作业定时调用上面的同步处理存储过程就行了</li></ul><p>企业管理器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">--管理</span><br><span class="line">--SQL Server代理</span><br><span class="line">--右键作业</span><br><span class="line">--新建作业</span><br><span class="line">--&quot;常规&quot;项中输入作业名称</span><br><span class="line">--&quot;步骤&quot;项</span><br><span class="line">--新建</span><br><span class="line">--&quot;步骤名&quot;中输入步骤名</span><br><span class="line">--&quot;类型&quot;中选择&quot;Transact-SQL 脚本(TSQL)&quot;</span><br><span class="line">--&quot;数据库&quot;选择执行命令的数据库</span><br><span class="line">--&quot;命令&quot;中输入要执行的语句: exec p_process</span><br><span class="line">--确定</span><br><span class="line">--&quot;调度&quot;项</span><br><span class="line">--新建调度</span><br><span class="line">--&quot;名称&quot;中输入调度名称</span><br><span class="line">--&quot;调度类型&quot;中选择你的作业执行安排</span><br><span class="line">--如果选择&quot;反复出现&quot;</span><br><span class="line">--点&quot;更改&quot;来设置你的时间安排</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后将SQL Agent服务启动,并设置为自动启动,否则你的作业不会被执行</p><ul><li><p>设置方法:</p><p> 我的电脑–控制面板–管理工具–服务–右键 SQLSERVERAGENT–属性–启动类型–选择”自动启动”–确定.</p></li></ul><p>-3.实现同步处理的方法2,定时同步</p><ul><li><p>在srv1中创建如下的同步处理存储过程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">create proc p_process</span><br><span class="line">as</span><br><span class="line">````</span><br><span class="line">- 更新修改过的数据</span><br><span class="line">```sql</span><br><span class="line">update b set name=i.name,telphone=i.telphone</span><br><span class="line">from srv2.库名.dbo.author b,author i</span><br><span class="line">where b.id=i.id and</span><br><span class="line">(b.name &lt;&gt; i.name or b.telphone &lt;&gt; i.telphone)</span><br></pre></td></tr></table></figure></li><li><p>插入新增的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> srv2.库名.dbo.author(id,name,telphone)</span><br><span class="line"><span class="keyword">select</span> id,name,telphone <span class="keyword">from</span> author i</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> srv2.库名.dbo.author <span class="keyword">where</span> id<span class="operator">=</span>i.id)</span><br></pre></td></tr></table></figure><ul><li>删除已经删除的数据(如果需要的话)<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> b</span><br><span class="line"><span class="keyword">from</span> srv2.库名.dbo.author b</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> author <span class="keyword">where</span> id<span class="operator">=</span>b.id)</span><br><span class="line">go</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 变量类型</title>
      <link href="/posts/Java-variable-types.html"/>
      <url>/posts/Java-variable-types.html</url>
      
        <content type="html"><![CDATA[<p>Java 变量类型</p><span id="more"></span><h1 id="Java变量类型"><a href="#Java变量类型" class="headerlink" title="Java变量类型"></a>Java变量类型</h1><p>在Java语言中，所有的变量在使用前必须声明。声明变量的基本格式如下：</p><blockquote><p>type identifier [ &#x3D; value][, identifier [&#x3D; value] …] ;<br>格式说明：type为Java数据类型。identifier是变量名。可以使用逗号隔开来声明多个同类型变量。</p></blockquote><h2 id="以下列出了一些变量的声明实例。注意有些包含了初始化过程。-Java语言支持的变量类型有-类变量：独立于方法之外的变量，用-static-修饰。-实例变量：独立于方法之外的变量，不过没有-static-修饰。-局部变量：类的方法中的变量。-实例-Java-局部变量-局部变量声明在方法、构造方法或者语句块中；-局部变量在方法、构造方法、或者语句块被执行的时候创建，当它们执行完成后，变量将会被销毁；-访问修饰符不能用于局部变量；-局部变量只在声明它的方法、构造方法或者语句块中可见；-局部变量是在栈上分配的。-局部变量没有默认值，所以局部变量被声明后，必须经过初始化，才可以使用。"><a href="#以下列出了一些变量的声明实例。注意有些包含了初始化过程。-Java语言支持的变量类型有-类变量：独立于方法之外的变量，用-static-修饰。-实例变量：独立于方法之外的变量，不过没有-static-修饰。-局部变量：类的方法中的变量。-实例-Java-局部变量-局部变量声明在方法、构造方法或者语句块中；-局部变量在方法、构造方法、或者语句块被执行的时候创建，当它们执行完成后，变量将会被销毁；-访问修饰符不能用于局部变量；-局部变量只在声明它的方法、构造方法或者语句块中可见；-局部变量是在栈上分配的。-局部变量没有默认值，所以局部变量被声明后，必须经过初始化，才可以使用。" class="headerlink" title="以下列出了一些变量的声明实例。注意有些包含了初始化过程。# Java语言支持的变量类型有- 类变量：独立于方法之外的变量，用 static 修饰。- 实例变量：独立于方法之外的变量，不过没有 static 修饰。- 局部变量：类的方法中的变量。- 实例# Java 局部变量- 局部变量声明在方法、构造方法或者语句块中；- 局部变量在方法、构造方法、或者语句块被执行的时候创建，当它们执行完成后，变量将会被销毁；- 访问修饰符不能用于局部变量；- 局部变量只在声明它的方法、构造方法或者语句块中可见；- 局部变量是在栈上分配的。- 局部变量没有默认值，所以局部变量被声明后，必须经过初始化，才可以使用。"></a>以下列出了一些变量的声明实例。注意有些包含了初始化过程。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a, b, c;         <span class="comment">// 声明三个int型整数：a、 b、c</span></span><br><span class="line"><span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">3</span>, e = <span class="number">4</span>, f = <span class="number">5</span>; <span class="comment">// 声明三个整数并赋予初值</span></span><br><span class="line"><span class="type">byte</span> <span class="variable">z</span> <span class="operator">=</span> <span class="number">22</span>;         <span class="comment">// 声明并初始化 z</span></span><br><span class="line"><span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;runoob&quot;</span>;  <span class="comment">// 声明并初始化字符串 s</span></span><br><span class="line"><span class="type">double</span> <span class="variable">pi</span> <span class="operator">=</span> <span class="number">3.14159</span>; <span class="comment">// 声明了双精度浮点型变量 pi</span></span><br><span class="line"><span class="type">char</span> <span class="variable">x</span> <span class="operator">=</span> <span class="string">&#x27;x&#x27;</span>;        <span class="comment">// 声明变量 x 的值是字符 &#x27;x&#x27;。</span></span><br></pre></td></tr></table></figure><br># Java语言支持的变量类型有<br>- 类变量：独立于方法之外的变量，用 static 修饰。<br>- 实例变量：独立于方法之外的变量，不过没有 static 修饰。<br>- 局部变量：类的方法中的变量。<br>- 实例<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Variable</span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> allClicks=<span class="number">0</span>;    <span class="comment">// 类变量</span></span><br><span class="line"></span><br><span class="line">    String str=<span class="string">&quot;hello world&quot;</span>;  <span class="comment">// 实例变量</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">method</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>;  <span class="comment">// 局部变量</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br># Java 局部变量<br>- 局部变量声明在方法、构造方法或者语句块中；<br>- 局部变量在方法、构造方法、或者语句块被执行的时候创建，当它们执行完成后，变量将会被销毁；<br>- 访问修饰符不能用于局部变量；<br>- 局部变量只在声明它的方法、构造方法或者语句块中可见；<br>- 局部变量是在栈上分配的。<br>- 局部变量没有默认值，所以局部变量被声明后，必须经过初始化，才可以使用。</h2><p>实例 1</p><p>在以下实例中age是一个局部变量。定义在pupAge()方法中，它的作用域就限制在这个方法中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.runoob.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pupAge</span><span class="params">()</span>&#123;</span><br><span class="line">      <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">      age = age + <span class="number">7</span>;</span><br><span class="line">      System.out.println(<span class="string">&quot;小狗的年龄是: &quot;</span> + age);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span>&#123;</span><br><span class="line">      <span class="type">Test</span> <span class="variable">test</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line">      test.pupAge();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上实例编译运行结果如下:</p><blockquote><p>小狗的年龄是: 7</p></blockquote><p>实例 2</p><p>在下面的例子中 age 变量没有初始化，所以在编译时会出错：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.runoob.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pupAge</span><span class="params">()</span>&#123;</span><br><span class="line">      <span class="type">int</span> age;</span><br><span class="line">      age = age + <span class="number">7</span>;</span><br><span class="line">      System.out.println(<span class="string">&quot;小狗的年龄是 : &quot;</span> + age);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span>&#123;</span><br><span class="line">      <span class="type">Test</span> <span class="variable">test</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line">      test.pupAge();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上实例编译运行结果如下:</p><blockquote><p>Test.java:4:variable number might not have been initialized<br>age &#x3D; age + 7;<br>        ^<br>1 error</p></blockquote><h1 id="实例变量"><a href="#实例变量" class="headerlink" title="实例变量"></a>实例变量</h1><ul><li>实例变量声明在一个类中，但在方法、构造方法和语句块之外；</li><li>当一个对象被实例化之后，每个实例变量的值就跟着确定；</li><li>实例变量在对象创建的时候创建，在对象被销毁的时候销毁；</li><li>实例变量的值应该至少被一个方法、构造方法或者语句块引用，使得外部能够通过这些方式获取实例变量信息；</li><li>实例变量可以声明在使用前或者使用后；</li><li>访问修饰符可以修饰实例变量；</li><li>实例变量对于类中的方法、构造方法或者语句块是可见的。一般情况下应该把实例变量设为私有。通过使用访问修饰符可以使实例变量对子类可见；</li><li>实例变量具有默认值。数值型变量的默认值是0，布尔型变量的默认值是false，引用类型变量的默认值是null。变量的值可以在声明时指定，也可以在构造方法中指定；</li><li>实例变量可以直接通过变量名访问。但在静态方法以及其他类中，就应该使用完全限定名：ObejectReference.VariableName。</li></ul><p>实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Employee.java 文件代码：</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Employee</span>&#123;</span><br><span class="line">   <span class="comment">// 这个实例变量对子类可见</span></span><br><span class="line">   <span class="keyword">public</span> String name;</span><br><span class="line">   <span class="comment">// 私有变量，仅在该类可见</span></span><br><span class="line">   <span class="keyword">private</span> <span class="type">double</span> salary;</span><br><span class="line">   <span class="comment">//在构造器中对name赋值</span></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">Employee</span> <span class="params">(String empName)</span>&#123;</span><br><span class="line">      name = empName;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//设定salary的值</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSalary</span><span class="params">(<span class="type">double</span> empSal)</span>&#123;</span><br><span class="line">      salary = empSal;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// 打印信息</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printEmp</span><span class="params">()</span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;名字 : &quot;</span> + name );</span><br><span class="line">      System.out.println(<span class="string">&quot;薪水 : &quot;</span> + salary);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span>&#123;</span><br><span class="line">      <span class="type">Employee</span> <span class="variable">empOne</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="string">&quot;RUNOOB&quot;</span>);</span><br><span class="line">      empOne.setSalary(<span class="number">1000</span>);</span><br><span class="line">      empOne.printEmp();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上实例编译运行结果如下:</p><blockquote><p>$ javac Employee.java<br>$ java Employee<br>名字 : RUNOOB<br>薪水 : 1000.0</p></blockquote><h1 id="类变量（静态变量）"><a href="#类变量（静态变量）" class="headerlink" title="类变量（静态变量）"></a>类变量（静态变量）</h1><ul><li>类变量也称为静态变量，在类中以static关键字声明，但必须在方法构造方法和语句块之外。</li><li>无论一个类创建了多少个对象，类只拥有类变量的一份拷贝。</li><li>静态变量除了被声明为常量外很少使用。常量是指声明为public&#x2F;private，final和static类型的变量。常量初始化后不可改变。</li><li>静态变量储存在静态存储区。经常被声明为常量，很少单独使用static声明变量。</li><li>静态变量在程序开始时创建，在程序结束时销毁。</li><li>与实例变量具有相似的可见性。但为了对类的使用者可见，大多数静态变量声明为public类型。</li><li>默认值和实例变量相似。数值型变量默认值是0，布尔型默认值是false，引用类型默认值是null。变量的值可以在声明的时候指定，也可以在构造方法中指定。此外，静态变量还可以在静态语句块中初始化。</li><li>静态变量可以通过：ClassName.VariableName的方式访问。</li><li>类变量被声明为public static final类型时，类变量名称一般建议使用大写字母。如果静态变量不是public和final类型，其命名方式与实例变量以及局部变量的命名方式一致。</li></ul><p>实例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Employee.java 文件代码：</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Employee</span> &#123;</span><br><span class="line">    <span class="comment">//salary是静态的私有变量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">double</span> salary;</span><br><span class="line">    <span class="comment">// DEPARTMENT是一个常量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DEPARTMENT</span> <span class="operator">=</span> <span class="string">&quot;开发人员&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span>&#123;</span><br><span class="line">    salary = <span class="number">10000</span>;</span><br><span class="line">        System.out.println(DEPARTMENT+<span class="string">&quot;平均工资:&quot;</span>+salary);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上实例编译运行结果如下:</p><blockquote><p>开发人员平均工资:10000.0</p></blockquote><p>注意：如果其他类想要访问该变量，可以这样访问：Employee.DEPARTMENT。</p>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 基本数据类型</title>
      <link href="/posts/Java-basic-datatypes.html"/>
      <url>/posts/Java-basic-datatypes.html</url>
      
        <content type="html"><![CDATA[<p>Java基本数据类型。</p><span id="more"></span><h1 id="Java-的两大数据类型"><a href="#Java-的两大数据类型" class="headerlink" title="Java 的两大数据类型:"></a>Java 的两大数据类型:</h1><ul><li>内置数据类型</li><li>引用数据类型</li></ul><h1 id="内置数据类型"><a href="#内置数据类型" class="headerlink" title="内置数据类型"></a><strong>内置数据类型</strong></h1><p>Java语言提供了八种基本类型。六种数字类型（四个整数型，两个浮点型），一种字符类型，还有一种布尔型。</p><h2 id="byte："><a href="#byte：" class="headerlink" title="byte："></a><strong>byte：</strong></h2><ul><li>byte 数据类型是8位、有符号的，以二进制补码表示的整数；</li><li>最小值是<code> -128（-2^7</code>；</li><li>最大值是<code> 127（2^7-1)</code>；</li><li>默认值是<code> 0</code>；</li><li>byte 类型用在大型数组中节约空间，主要代替整数，因为 byte 变量占用的空间只有 int 类型的四分之一；</li><li>例子：byte a &#x3D; 100，byte b &#x3D; -50。</li></ul><h2 id="short："><a href="#short：" class="headerlink" title="short："></a><strong>short：</strong></h2><ul><li>short 数据类型是 16 位、有符号的以二进制补码表示的整数</li><li>最小值是<code> -32768（-2^15）</code>；</li><li>最大值是<code> 32767（2^15 - 1)</code>；</li><li>Short 数据类型也可以像 byte 那样节省空间。一个short变量是int型变量所占空间的二分之一；</li><li>默认值是<code> 0</code>；</li><li>例子：short s &#x3D; 1000，short r &#x3D; -20000。</li></ul><h2 id="int："><a href="#int：" class="headerlink" title="int："></a><strong>int：</strong></h2><ul><li>int 数据类型是32位、有符号的以二进制补码表示的整数；</li><li>最小值是<code> -2,147,483,648（-2^31）</code>；</li><li>最大值是<code>2,147,483,647（2^31 - 1)</code>；</li><li>一般地整型变量默认为 int 类型；</li><li>默认值是 <code>0</code> ；</li><li>例子：int a &#x3D; 100000, int b &#x3D; -200000。</li></ul><h2 id="long："><a href="#long：" class="headerlink" title="long："></a><strong>long：</strong></h2><ul><li>long 数据类型是 64 位、有符号的以二进制补码表示的整数；</li><li>最小值是<code> -9,223,372,036,854,775,808（-2^63）</code>；</li><li>最大值是<code>9,223,372,036,854,775,807（2^63 -1)</code>；</li><li>这种类型主要使用在需要比较大整数的系统上；</li><li>默认值是 <code>0L</code>；</li><li>例子： long a &#x3D; 100000L，Long b &#x3D; -200000L。</li><li>“L”理论上不分大小写，但是若写成”l”容易与数字”1”混淆，不容易分辩。所以最好大写。</li></ul><h2 id="float："><a href="#float：" class="headerlink" title="float："></a><strong>float：</strong></h2><ul><li>float 数据类型是单精度、32位、符合IEEE 754标准的浮点数；</li><li>float 在储存大型浮点数组的时候可节省内存空间；</li><li>默认值是<code> 0.0f</code>；</li><li>浮点数不能用来表示精确的值，如货币；<br>例子：float f1 &#x3D; 234.5f。</li></ul><h2 id="double："><a href="#double：" class="headerlink" title="double："></a><strong>double：</strong></h2><ul><li>double 数据类型是双精度、64 位、符合IEEE 754标准的浮点数；</li><li>浮点数的默认类型为double类型；</li><li>double类型同样不能表示精确的值，如货币；</li><li>默认值是<code> 0.0d</code>；</li><li>例子：double d1 &#x3D; 123.4。</li></ul><h2 id="boolean"><a href="#boolean" class="headerlink" title="boolean:"></a><strong>boolean:</strong></h2><ul><li>boolean数据类型表示一位的信息；</li><li>只有两个取值：<code>true</code> 和 <code>false</code>；</li><li>这种类型只作为一种标志来记录 true&#x2F;false 情况；</li><li>默认值是 false；<br>例子：boolean one &#x3D; true。</li></ul><h2 id="char："><a href="#char：" class="headerlink" title="char："></a><strong>char：</strong></h2><ul><li>char类型是一个单一的 16 位 Unicode 字符；</li><li>最小值是<code> \u0000</code>（即为0）&#96;；</li><li>最大值是<code> \uffff</code>（即为65,535）；</li><li>char 数据类型可以储存任何字符；</li><li>例子：char letter &#x3D; ‘A’;。</li></ul><h1 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a><strong>引用类型</strong></h1><ul><li>在Java中，引用类型的变量非常类似于C&#x2F;C++的指针。引用类型指向一个对象，指向对象的变量是引用变量。这些变量在声明时被指定为一个特定的类型，比如 Employee、Puppy 等。变量一旦声明后，类型就不能被改变了。</li><li>对象、数组都是引用数据类型。</li><li>所有引用类型的默认值都是null。</li><li>一个引用变量可以用来引用任何与之兼容的类型。</li><li>例子：Site site &#x3D; new Site(“Runoob”)。</li></ul><h1 id="Java-常量"><a href="#Java-常量" class="headerlink" title="Java 常量"></a><strong>Java 常量</strong></h1><ul><li><p>常量在程序运行时是不能被修改的。</p></li><li><p>在 Java 中使用 final 关键字来修饰常量，声明方式和变量类似：<br>final double PI &#x3D; 3.1415927;</p></li><li><p>虽然常量名也可以用小写，但为了便于识别，通常使用大写字母表示常量。</p></li><li><p>字面量可以赋给任何内置类型的变量。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">68</span>;</span><br><span class="line"><span class="type">char</span> <span class="variable">a</span> <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span></span><br></pre></td></tr></table></figure><p>byte、int、long、和short都可以用十进制、16进制以及8进制的方式来表示。</p></li></ul><p>当使用常量的时候，前缀 0 表示 8 进制，而前缀 0x 代表 16 进制, 例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">decimal</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">octal</span> <span class="operator">=</span> <span class="number">0144</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">hexa</span> <span class="operator">=</span>  <span class="number">0x64</span>;</span><br></pre></td></tr></table></figure><p>和其他语言一样，Java的字符串常量也是包含在两个引号之间的字符序列。下面是字符串型字面量的例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;Hello World&quot;</span></span><br><span class="line"><span class="string">&quot;two\nlines&quot;</span></span><br><span class="line"><span class="string">&quot;\&quot;This is in quotes\&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>字符串常量和字符常量都可以包含任何Unicode字符。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> <span class="variable">a</span> <span class="operator">=</span> <span class="string">&#x27;\u0001&#x27;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">a</span> <span class="operator">=</span> <span class="string">&quot;\u0001&quot;</span>;</span><br></pre></td></tr></table></figure><h1 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a><strong>自动类型转换</strong></h1><p>整型、实型（常量）、字符型数据可以混合运算。运算中，不同类型的数据先转化为同一类型，然后进行运算。</p><p>转换从低级到高级。</p><blockquote><p>低  ————————————&gt;  高<br>byte,short,char—&gt; int —&gt; long—&gt; float —&gt; double</p></blockquote><p>数据类型转换必须满足如下规则：</p><ul><li><ol><li>不能对boolean类型进行类型转换。</li></ol></li><li><ol start="2"><li>不能把对象类型转换成不相关类的对象。</li></ol></li><li><ol start="3"><li>在把容量大的类型转换为容量小的类型时必须使用强制类型转换。</li></ol></li><li><ol start="4"><li>转换过程中可能导致溢出或损失精度，例如：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">128</span>;</span><br><span class="line"><span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> (<span class="type">byte</span>)i;</span><br><span class="line">因为 <span class="type">byte</span> 类型是 <span class="number">8</span> 位，最大值为<span class="number">127</span>，所以当 <span class="type">int</span> 强制转换为 <span class="type">byte</span> 类型时，值 <span class="number">128</span> 时候就会导致溢出。</span><br></pre></td></tr></table></figure></li></ol></li><li><ol start="5"><li>浮点数到整数的转换是通过舍弃小数得到，而不是四舍五入，例如：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="type">int</span>)<span class="number">23.7</span> == <span class="number">23</span>;</span><br><span class="line">(<span class="type">int</span>)-<span class="number">45.89f</span> == -<span class="number">45</span></span><br></pre></td></tr></table></figure></li></ol></li></ul><h1 id="自动类型转换-1"><a href="#自动类型转换-1" class="headerlink" title="自动类型转换"></a><strong>自动类型转换</strong></h1><p>必须满足转换前的数据类型的位数要低于转换后的数据类型，例如: short数据类型的位数为16位，就可以自动转换位数为32的int类型，同样float数据类型的位数为32，可以自动转换为64位的double类型。</p><p>实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ZiDongLeiZhuan</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">            <span class="type">char</span> c1=<span class="string">&#x27;a&#x27;</span>;<span class="comment">//定义一个char类型</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">i1</span> <span class="operator">=</span> c1;<span class="comment">//char自动类型转换为int</span></span><br><span class="line">            System.out.println(<span class="string">&quot;char自动类型转换为int后的值等于&quot;</span>+i1);</span><br><span class="line">            <span class="type">char</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>;<span class="comment">//定义一个char类型</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> c2+<span class="number">1</span>;<span class="comment">//char 类型和 int 类型计算</span></span><br><span class="line">            System.out.println(<span class="string">&quot;char类型和int计算后的值等于&quot;</span>+i2);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果为:</p><blockquote><p>char自动类型转换为int后的值等于97<br>char类型和int计算后的值等于66</p></blockquote><p>解析：c1的值为字符’a’,查ascii码表可知对应的int类型值为97，’A’对应值为65，所以i2&#x3D;65+1&#x3D;66。</p><h1 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a><strong>强制类型转换</strong></h1><ul><li><ol><li>条件是转换的数据类型必须是兼容的。</li></ol></li><li><ol start="2"><li>格式：(type)value type是要强制类型转换后的数据类型 实例：</li></ol></li></ul><p>实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QiangZhiZhuanHuan</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i1</span> <span class="operator">=</span> <span class="number">123</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> (<span class="type">byte</span>)i1;<span class="comment">//强制类型转换为byte</span></span><br><span class="line">        System.out.println(<span class="string">&quot;int强制类型转换为byte后的值等于&quot;</span>+b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>int强制类型转换为byte后的值等于123</p></blockquote><h1 id="隐含强制类型转换"><a href="#隐含强制类型转换" class="headerlink" title="隐含强制类型转换"></a><strong>隐含强制类型转换</strong></h1><ul><li><ol><li>整数的默认类型是 int。</li></ol></li><li><ol start="2"><li>浮点型不存在这种情况，因为在定义 float 类型时必须在数字后面跟上 F 或者 f。</li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 中 String 方法</title>
      <link href="/posts/JavaString.html"/>
      <url>/posts/JavaString.html</url>
      
        <content type="html"><![CDATA[<p>Java 中 Srting 常用方法。</p><span id="more"></span><h1 id="length-字符串长度"><a href="#length-字符串长度" class="headerlink" title="length()字符串长度"></a><code>length()</code>字符串长度</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">Str1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;www&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">Str2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;github&quot;</span> );</span><br><span class="line"></span><br><span class="line">        System.out.print(<span class="string">&quot;字符串 Str1 长度 :&quot;</span>);</span><br><span class="line">        System.out.println(Str1.length());</span><br><span class="line">        System.out.print(<span class="string">&quot;字符串 Str2 长度 :&quot;</span>);</span><br><span class="line">        System.out.println(Str2.length());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="charAt-截取一个字符"><a href="#charAt-截取一个字符" class="headerlink" title="charAt()截取一个字符"></a><code>charAt()</code>截取一个字符</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;www.qq.com&quot;</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">result</span> <span class="operator">=</span> s.charAt(<span class="number">8</span>);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：c</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> ch:</span><br><span class="line">ch=<span class="string">&quot;abc&quot;</span>.charAt(<span class="number">1</span>); <span class="comment">//返回b</span></span><br></pre></td></tr></table></figure><h1 id="getChars-截取多个字符"><a href="#getChars-截取多个字符" class="headerlink" title="getChars()截取多个字符"></a><code>getChars()</code>截取多个字符</h1><p>语法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getChars</span><span class="params">(<span class="type">int</span> srcBegin, <span class="type">int</span> srcEnd, <span class="type">char</span>[] dst,  <span class="type">int</span> dstBegin)</span></span><br></pre></td></tr></table></figure><p>参数:</p><p>srcBegin – 字符串中要复制的第一个字符的索引。</p><p>srcEnd – 字符串中要复制的最后一个字符之后的索引。</p><p>dst – 目标数组。</p><p>dstBegin – 目标数组中的起始偏移量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">Str1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;www.runoob.com&quot;</span>);</span><br><span class="line">        <span class="type">char</span>[] Str2 = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">6</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Str1.getChars(<span class="number">4</span>, <span class="number">10</span>, Str2, <span class="number">0</span>);</span><br><span class="line">            System.out.print(<span class="string">&quot;拷贝的字符串为：&quot;</span> );</span><br><span class="line">            System.out.println(Str2 );</span><br><span class="line">        &#125; <span class="keyword">catch</span>( Exception ex) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;触发异常...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上程序执行结果为：拷贝的字符串为：runoob</p><p>sourceStart指定了子串开始字符的下标，sourceEnd指定了子串结束后的下一个字符的下标。因此， 子串包含从sourceStart到sourceEnd-1的字符。接收字符的数组由target指定，target中开始复制子串的下标值是targetStart。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String s=<span class="string">&quot;this is a demo of the getChars method.&quot;</span>;</span><br><span class="line">　　　　<span class="type">char</span> buf[]=<span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">20</span>];</span><br><span class="line">　　　　s.getChars(<span class="number">10</span>,<span class="number">14</span>,buf,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h1 id="getBytes"><a href="#getBytes" class="headerlink" title="getBytes()"></a><code>getBytes()</code></h1><p>替代getChars()的一种方法是将字符存储在字节数组中，该方法即getBytes()。<br>getBytes() 方法有两种形式：</p><p>getBytes(String charsetName): 使用指定的字符集将字符串编码为 byte 序列，并将结果存储到一个新的 byte 数组中。</p><p>getBytes(): 使用平台的默认字符集将字符串编码为 byte 序列，并将结果存储到一个新的 byte 数组中。</p><p>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public byte[] getBytes(String charsetName) throws UnsupportedEncodingException</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public byte[] getBytes()</span><br></pre></td></tr></table></figure><p>参数:<br>charsetName – 支持的字符集名称。</p><p>返回值:返回 byte 数组。</p><p>实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">Str1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;runoob&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="type">byte</span>[] Str2 = Str1.getBytes();</span><br><span class="line">            System.out.println(<span class="string">&quot;返回值：&quot;</span> + Str2 );</span><br><span class="line"></span><br><span class="line">            Str2 = Str1.getBytes( <span class="string">&quot;UTF-8&quot;</span> );</span><br><span class="line">            System.out.println(<span class="string">&quot;返回值：&quot;</span> + Str2 );</span><br><span class="line"></span><br><span class="line">            Str2 = Str1.getBytes( <span class="string">&quot;ISO-8859-1&quot;</span> );</span><br><span class="line">            System.out.println(<span class="string">&quot;返回值：&quot;</span> + Str2 );</span><br><span class="line">        &#125; <span class="keyword">catch</span> ( UnsupportedEncodingException e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;不支持的字符集&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上程序执行结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">返回值：[B@7852e922</span><br><span class="line">返回值：[B@4e25154f</span><br><span class="line">返回值：[B@70dea4e</span><br></pre></td></tr></table></figure><h1 id="toCharArray"><a href="#toCharArray" class="headerlink" title="toCharArray()"></a>toCharArray()</h1><p><code>public char[] toCharArray()</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">Str</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;vitan.xyzm&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.print(<span class="string">&quot;返回值 :&quot;</span> );</span><br><span class="line">        System.out.println( Str.toCharArray() );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="equals-和equalsIgnoreCase-比较两个字符串"><a href="#equals-和equalsIgnoreCase-比较两个字符串" class="headerlink" title="equals()和equalsIgnoreCase() 比较两个字符串"></a><code>equals()</code>和<code>equalsIgnoreCase()</code> 比较两个字符串</h1><p>String.equals()对大小写敏感，而String.equalsIgnoreCase()忽略大小写.</p><p>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;ABC&quot;</span>.equals(<span class="string">&quot;abc&quot;</span>)<span class="comment">//是false</span></span><br><span class="line"><span class="string">&quot;ABC&quot;</span>.equalsIgnoreCase(<span class="string">&quot;abc&quot;</span>)<span class="comment">//为ture</span></span><br></pre></td></tr></table></figure><h1 id="regionMatches-regionMatches"><a href="#regionMatches-regionMatches" class="headerlink" title="regionMatches() regionMatches()"></a><code>regionMatches()</code> regionMatches()</h1><p>方法用于检测两个字符串在一个区域内是否相等。</p><p>语法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">regionMatches</span><span class="params">(<span class="type">int</span> toffset,String other, <span class="type">int</span> ooffset,<span class="type">int</span> len)</span></span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">regionMatches</span><span class="params">(<span class="type">boolean</span> ignoreCase,<span class="type">int</span> toffset, String other,<span class="type">int</span> ooffset,<span class="type">int</span> len)</span></span><br></pre></td></tr></table></figure><p>参数：</p><p>ignoreCase – 如果为 true，则比较字符时忽略大小写。</p><p>toffset – 此字符串中子区域的起始偏移量。</p><p>other – 字符串参数。</p><p>ooffset – 字符串参数中子区域的起始偏移量。</p><p>len – 要比较的字符数。</p><p>用于比较一个字符串中特定区域与另一特定区域，它有一个重载的形式允许在比较中忽略大小写。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">　　<span class="type">boolean</span> <span class="title function_">regionMatches</span><span class="params">(<span class="type">int</span> startIndex,String str2,<span class="type">int</span> str2StartIndex,<span class="type">int</span> numChars)</span></span><br><span class="line">　　<span class="type">boolean</span> <span class="title function_">regionMatches</span><span class="params">(<span class="type">boolean</span> ignoreCase,<span class="type">int</span> startIndex,String str2,<span class="type">int</span> str2StartIndex,<span class="type">int</span> numChars)</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">Str1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;www.runoob.com&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">Str2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;runoob&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">Str3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;RUNOOB&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.print(<span class="string">&quot;返回值 :&quot;</span> );</span><br><span class="line">        System.out.println(Str1.regionMatches(<span class="number">4</span>, Str2, <span class="number">0</span>, <span class="number">5</span>));</span><br><span class="line"></span><br><span class="line">        System.out.print(<span class="string">&quot;返回值 :&quot;</span> );</span><br><span class="line">        System.out.println(Str1.regionMatches(<span class="number">4</span>, Str3, <span class="number">0</span>, <span class="number">5</span>));</span><br><span class="line"></span><br><span class="line">        System.out.print(<span class="string">&quot;返回值 :&quot;</span> );</span><br><span class="line">        System.out.println(Str1.regionMatches(<span class="literal">true</span>, <span class="number">4</span>, Str3, <span class="number">0</span>, <span class="number">5</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上程序执行结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">返回值 :true</span><br><span class="line">返回值 :false</span><br><span class="line">返回值 :true</span><br></pre></td></tr></table></figure><h1 id="startsWith-和endsWith"><a href="#startsWith-和endsWith" class="headerlink" title="startsWith()和endsWith()"></a><code>startsWith()</code>和<code>endsWith()</code></h1><p>startsWith()方法决定是否以特定字符串开始，endWith()方法决定是否以特定字符串结束</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringDemo</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span>&#123;</span><br><span class="line">      String s1=<span class="string">&quot;this is my original string&quot;</span>;</span><br><span class="line">      String sd=<span class="string">&quot;original&quot;</span>;</span><br><span class="line">      <span class="keyword">if</span> (s1.startsWith(sd)) <span class="comment">//startsWith()方法判断字符串s1是否从字符串sd开始</span></span><br><span class="line">         s1=s1.substring(sd.length());</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">         <span class="keyword">if</span>(s1.endsWith(sd)) <span class="comment">//endWith()方法判断字符串s1是否从字符串sd结尾</span></span><br><span class="line">             s1=s1.substring(<span class="number">0</span>,s1.length()-sd.length());</span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">         &#123;</span><br><span class="line">               <span class="type">int</span> index=s1.indexOf(sd); <span class="comment">//indexOf()搜索字符或子字符串首次出现，这里的index等于11</span></span><br><span class="line">               <span class="keyword">if</span>(index!=-<span class="number">1</span>)</span><br><span class="line">               &#123;</span><br><span class="line">                  String s2=s1.substring(<span class="number">0</span>,index); <span class="comment">//从字符串s1的首字符开始，取index个字符</span></span><br><span class="line">                  String s3=s1.substring(index+sd.length());<span class="comment">//取字符串s1的第19个字符后面的字符串</span></span><br><span class="line">                  s1=s2+s3;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">else</span></span><br><span class="line">               System.out.println(<span class="string">&quot;string /&quot;</span><span class="string">&quot;+sd+&quot;</span>/<span class="string">&quot; not found&quot;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">         System.out.println(s1);</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="equals-和-equals"><a href="#equals-和-equals" class="headerlink" title="equals()和==equals()"></a><code>equals()</code>和<code>==equals()</code></h1><p>方法比较字符串对象中的字符，&#x3D;&#x3D;运算符比较两个对象是否引用同一实例。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String s1=<span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">　　　　String s2=<span class="keyword">new</span> <span class="title class_">String</span>(s1);</span><br><span class="line">　　　　s1.eauals(s2);    <span class="comment">//true</span></span><br><span class="line">　　　　s1==s2;          <span class="comment">//false</span></span><br></pre></td></tr></table></figure><h1 id="compareTo-和compareToIgnoreCase-比较字符串"><a href="#compareTo-和compareToIgnoreCase-比较字符串" class="headerlink" title="compareTo()和compareToIgnoreCase()比较字符串"></a><code>compareTo()</code>和<code>compareToIgnoreCase()</code>比较字符串</h1><p>compareTo()</p><p>字符串与对象进行比较。</p><p>按字典顺序比较两个字符串。</p><p>语法;<br><code>int compareTo(Object o)</code>或<code>int compareTo(String anotherString)</code><br>参数:<br> o – 要比较的对象。anotherString – 要比较的字符串。<br>返回值:</p><p>返回值是整型,它是先比较对应字符的大小(ASCII码顺序),如果第一个字符和参数的第一个字符不等,结束比较,返回他们之间的差值,如果第一个字符和参数的第一个字符相等,则以第二个字符和参数的第二个字符做比较,以此类推,直至比较的字符或被比较的字符有一方。</p><p>如果参数字符串等于此字符串，则返回值 0；</p><p>如果此字符串小于字符串参数，则返回一个小于 0 的值；</p><p>如果此字符串大于字符串参数，则返回一个大于 0 的值。</p><p>实例:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> <span class="string">&quot;Strings&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="string">&quot;Strings&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str3</span> <span class="operator">=</span> <span class="string">&quot;Strings123&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> str1.compareTo( str2 );</span><br><span class="line">        System.out.println(result);</span><br><span class="line"></span><br><span class="line">        result = str2.compareTo( str3 );</span><br><span class="line">        System.out.println(result);</span><br><span class="line"></span><br><span class="line">        result = str3.compareTo( str1 );</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上程序执行结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">-3</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p><code>compareToIgnoreCase()</code> 方法用于按字典顺序比较两个字符串，不考虑大小写。</p><p>参数:</p><p>str – 要比较的字符串。</p><p>返回值:</p><p>如果参数字符串等于此字符串，则返回值 0；</p><p>如果此字符串小于字符串参数，则返回一个小于 0 的值；</p><p>如果此字符串大于字符串参数，则返回一个大于 0 的值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> <span class="string">&quot;STRINGS&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="string">&quot;Strings&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str3</span> <span class="operator">=</span> <span class="string">&quot;Strings123&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> str1.compareToIgnoreCase( str2 );</span><br><span class="line">        System.out.println(result);</span><br><span class="line"></span><br><span class="line">        result = str2.compareToIgnoreCase( str3 );</span><br><span class="line">        System.out.println(result);</span><br><span class="line"></span><br><span class="line">        result = str3.compareToIgnoreCase( str1 );</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="indexOf-和lastIndexOf"><a href="#indexOf-和lastIndexOf" class="headerlink" title="indexOf()和lastIndexOf()"></a><code>indexOf()</code>和<code>lastIndexOf()</code></h1><p>indexOf() 查找字符或者子串第一次出现的地方。</p><p>indexOf() 方法有以下四种形式：</p><p>public int indexOf(int ch): 返回指定字符在字符串中第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1。</p><p>public int indexOf(int ch, int fromIndex): 返回指定字符在字符串中第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1。</p><p>int indexOf(String str): 返回指定字符在字符串中第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1。</p><p>int indexOf(String str, int fromIndex): 返回指定字符在字符串中第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1</p><p>语法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">indexOf</span><span class="params">(<span class="type">int</span> ch )</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">indexOf</span><span class="params">(<span class="type">int</span> ch, <span class="type">int</span> fromIndex)</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">indexOf</span><span class="params">(String str)</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">indexOf</span><span class="params">(String str, <span class="type">int</span> fromIndex)</span></span><br></pre></td></tr></table></figure><p>参数:<br>ch – 字符。fromIndex – 开始搜索的索引位置。str – 要搜索的子字符串。</p><p>返回值:</p><p>指定子字符串在字符串中第一次出现处的索引，从指定的索引开始。</p><p>实例:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">Str</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;菜鸟教程:www.runoob.com&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">SubStr1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;runoob&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">SubStr2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;com&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.print(<span class="string">&quot;查找字符 o 第一次出现的位置 :&quot;</span> );</span><br><span class="line">        System.out.println(Str.indexOf( <span class="string">&#x27;o&#x27;</span> ));</span><br><span class="line">        System.out.print(<span class="string">&quot;从第14个位置查找字符 o 第一次出现的位置 :&quot;</span> );</span><br><span class="line">        System.out.println(Str.indexOf( <span class="string">&#x27;o&#x27;</span>, <span class="number">14</span> ));</span><br><span class="line">        System.out.print(<span class="string">&quot;子字符串 SubStr1 第一次出现的位置:&quot;</span> );</span><br><span class="line">        System.out.println( Str.indexOf( SubStr1 ));</span><br><span class="line">        System.out.print(<span class="string">&quot;从第十五个位置开始搜索子字符串 SubStr1 第一次出现的位置 :&quot;</span> );</span><br><span class="line">        System.out.println( Str.indexOf( SubStr1, <span class="number">15</span> ));</span><br><span class="line">        System.out.print(<span class="string">&quot;子字符串 SubStr2 第一次出现的位置 :&quot;</span> );</span><br><span class="line">        System.out.println(Str.indexOf( SubStr2 ));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上程序执行结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查找字符 o 第一次出现的位置 :12</span><br><span class="line">从第14个位置查找字符 o 第一次出现的位置 :17</span><br><span class="line">子字符串 SubStr1 第一次出现的位置:9</span><br><span class="line">从第十五个位置开始搜索子字符串 SubStr1 第一次出现的位置 :-1</span><br><span class="line">子字符串 SubStr2 第一次出现的位置 :16。</span><br></pre></td></tr></table></figure><h1 id="lastIndexOf"><a href="#lastIndexOf" class="headerlink" title="lastIndexOf()"></a><code>lastIndexOf()</code></h1><p>查找字符或者子串是后一次出现的地方。</p><p>lastIndexOf() 方法有以下四种形式：</p><p>public int lastIndexOf(int ch): 返回指定字符在此字符串中最后一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1。</p><p>public int lastIndexOf(int ch, int fromIndex): 返返回指定字符在此字符串中最后一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1。</p><p>public int lastIndexOf(String str): 返回指定字符在此字符串中最后一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1。</p><p>public int lastIndexOf(String str, int fromIndex): 返回指定字符在此字符串中最后一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1。</p><p>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public int lastIndexOf(int ch)</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">public int lastIndexOf(int ch, int fromIndex)</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">public int lastIndexOf(String str)</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">public int lastIndexOf(String str, int fromIndex)</span><br></pre></td></tr></table></figure><p>参数:<br>ch – 字符。fromIndex – 开始搜索的索引位置。str – 要搜索的子字符串。</p><p>返回值<br>指定子字符串在字符串中第一次出现处的索引值。</p><p>实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">Str</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;菜鸟教程:www.runoob.com&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">SubStr1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;runoob&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">SubStr2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;com&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.print(<span class="string">&quot;查找字符 o 最后出现的位置 :&quot;</span> );</span><br><span class="line">        System.out.println(Str.lastIndexOf( <span class="string">&#x27;o&#x27;</span> ));</span><br><span class="line">        System.out.print(<span class="string">&quot;从第14个位置查找字符 o 最后出现的位置 :&quot;</span> );</span><br><span class="line">        System.out.println(Str.lastIndexOf( <span class="string">&#x27;o&#x27;</span>, <span class="number">14</span> ));</span><br><span class="line">        System.out.print(<span class="string">&quot;子字符串 SubStr1 最后出现的位置:&quot;</span> );</span><br><span class="line">        System.out.println( Str.lastIndexOf( SubStr1 ));</span><br><span class="line">        System.out.print(<span class="string">&quot;从第十五个位置开始搜索子字符串 SubStr1最后出现的位置 :&quot;</span> );</span><br><span class="line">        System.out.println( Str.lastIndexOf( SubStr1, <span class="number">15</span> ));</span><br><span class="line">        System.out.print(<span class="string">&quot;子字符串 SubStr2 最后出现的位置 :&quot;</span> );</span><br><span class="line">        System.out.println(Str.lastIndexOf( SubStr2 ));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上程序执行结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查找字符 o 最后出现的位置 :17</span><br><span class="line">从第14个位置查找字符 o 最后出现的位置 :13</span><br><span class="line">子字符串 SubStr1 最后出现的位置:9</span><br><span class="line">从第十五个位置开始搜索子字符串 SubStr1最后出现的位置 :9</span><br><span class="line">子字符串 SubStr2 最后出现的位置 :16</span><br></pre></td></tr></table></figure><h1 id="substring"><a href="#substring" class="headerlink" title="substring()"></a><code>substring()</code></h1><p>它有两种形</p><p>第一种是：public String substring(int startIndex)</p><p>第二种是：public String substring(int startIndex,int endIndex)</p><p>参数:</p><p>beginIndex – 起始索引（包括）。</p><p>endIndex – 结束索引（不包括）。</p><p>返回值</p><p>子字符串。</p><p>实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">Str</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;www.runoob.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.print(<span class="string">&quot;返回值 :&quot;</span> );</span><br><span class="line">        System.out.println(Str.substring(<span class="number">4</span>) );</span><br><span class="line"></span><br><span class="line">        System.out.print(<span class="string">&quot;返回值 :&quot;</span> );</span><br><span class="line">        System.out.println(Str.substring(<span class="number">4</span>, <span class="number">10</span>) );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上程序执行结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">返回值 :runoob.com</span><br><span class="line">返回值 :runoob</span><br></pre></td></tr></table></figure><ul><li><code>concat()</code> 连接两个字符串<br>语法: public String concat(String s)<br>参数:   s – 要连接的字符串。</li></ul><p>返回值:<br>返回连接后的新字符串。</p><p>实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;你好：&quot;</span>;</span><br><span class="line">        s = s.concat(<span class="string">&quot;Hellom&quot;</span>);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上程序执行结果为：<br>你好：Hello</p><h1 id="replace-替换"><a href="#replace-替换" class="headerlink" title="replace()替换"></a><code>replace()</code>替换</h1><p>replace() 方法通过用 newChar 字符替换字符串中出现的所有 oldChar 字符，并返回替换后的新字符串。</p><p>语法:public String replace(char oldChar, char newChar)<br>参数:oldChar – 原字符。newChar – 新字符。</p><p>返回值:</p><p>替换后生成的新字符串。</p><p>实例:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">Str</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.print(<span class="string">&quot;返回值 :&quot;</span> );</span><br><span class="line">        System.out.println(Str.replace(<span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;T&#x27;</span>));</span><br><span class="line"></span><br><span class="line">        System.out.print(<span class="string">&quot;返回值 :&quot;</span> );</span><br><span class="line">        System.out.println(Str.replace(<span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;D&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上程序执行结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">返回值 :hellT</span><br><span class="line">返回值 :heDDo</span><br></pre></td></tr></table></figure><h1 id="trim-去掉起始和结尾的空格"><a href="#trim-去掉起始和结尾的空格" class="headerlink" title="trim() 去掉起始和结尾的空格"></a><code>trim()</code> 去掉起始和结尾的空格</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String s=<span class="string">&quot; abc &quot;</span>;</span><br><span class="line">String s2=s.trim();</span><br><span class="line">s2=<span class="string">&quot;abc&quot;</span></span><br></pre></td></tr></table></figure><h1 id="valueOf-NaN"><a href="#valueOf-NaN" class="headerlink" title="valueOf()"></a><code>valueOf()</code></h1><p>&#x3D;&#x3D;&#x3D;</p><p>valueOf() 方法用于返回给定参数的原生 Number 对象值，参数可以是原生数据类型, String等。<br>该方法是静态方法。该方法可以接收两个参数一个是字符串，一个是基数。</p><p>语法:</p><p>该方法有以下几种语法格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">static Integer valueOf(int i)</span><br><span class="line">static Integer valueOf(String s)</span><br><span class="line">static Integer valueOf(String s, int radix)</span><br></pre></td></tr></table></figure><p>参数</p><p>i – Integer 对象的整数。</p><p>s – Integer 对象的字符串。</p><p>radix –在解析字符串 s 时使用的基数，用于指定使用的进制数。</p><p>返回值</p><p>Integer valueOf(int i)：返回一个表示指定的 int 值的 Integer 实例。</p><p>Integer valueOf(String s):返回保存指定的 String 的值的Integer 对象。</p><p>Integer valueOf(String s, int radix): 返回一个 Integer 对象，该对象中保存了用第二个参数提供的基数进行解析时从指定的 String 中提取的值。</p><p>实例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public class Test&#123;</span><br><span class="line">public static void main(String args[])&#123;</span><br><span class="line">        Integer x =Integer.valueOf(9);</span><br><span class="line">        Double c = Double.valueOf(5);</span><br><span class="line">        Float a = Float.valueOf(&quot;80&quot;);</span><br><span class="line"></span><br><span class="line">        Integer b = Integer.valueOf(&quot;444&quot;,16);   // 使用 16 进制</span><br><span class="line"></span><br><span class="line">        System.out.println(x);</span><br><span class="line">        System.out.println(c);</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        System.out.println(b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">9</span><br><span class="line">5.0</span><br><span class="line">80.0</span><br><span class="line">1092</span><br></pre></td></tr></table></figure><h1 id="toLowerCase"><a href="#toLowerCase" class="headerlink" title="toLowerCase()"></a><code>toLowerCase()</code></h1><p>转换为小写</p><p>toLowerCase() 方法将字符串转换为小写。</p><p>语法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">toLowerCase</span><span class="params">()</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">toLowerCase</span><span class="params">(Locale locale)</span></span><br></pre></td></tr></table></figure><p>返回值</p><p>转换为小写的字符串。</p><p>实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">Str</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;VITAN&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.print(<span class="string">&quot;返回值 :&quot;</span> );</span><br><span class="line">        System.out.println( Str.toLowerCase() );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上程序执行结果为：返回值 :vitan</p><ul><li><code>toUpperCase()</code> 转换为大写</li><li><code>StringBuffer</code>构造函数</li></ul><p><strong>Via</strong></p><ul><li><a href="https://m.runoob.com/java/java-stringbuffer.html">参考</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>oh-my-zsh 插件</title>
      <link href="/posts/Oh-My-ZSH-complete.html"/>
      <url>/posts/Oh-My-ZSH-complete.html</url>
      
        <content type="html"><![CDATA[<p>Oh-my-zsh插件</p><span id="more"></span><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br><span class="line">//找到下面这句，添加相应的插件 插件之间用空格分隔</span><br><span class="line">plugins=(git z zsh-syntax-highlighting zsh-autosuggestions)</span><br><span class="line">//使配置文件生效</span><br><span class="line">source ~/.zshrc</span><br></pre></td></tr></table></figure><h1 id="Git-默认已开启"><a href="#Git-默认已开启" class="headerlink" title="Git 默认已开启"></a>Git 默认已开启</h1><ul><li>可以使用各种 git 命令缩写。比如<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add --all ===&gt; gaa</span><br><span class="line">git commit -m ===&gt; gcmsg</span><br></pre></td></tr></table></figure></li><li>看所有 git 命令缩写<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.oh-my-zsh/plugins/git/git.plugin.zsh</span><br></pre></td></tr></table></figure></li></ul><h1 id="autojump"><a href="#autojump" class="headerlink" title="autojump"></a>autojump</h1><ul><li><a href="https://github.com/wting/autojump">Hithub Rpo</a></li><li>已经内置了，直接在<code> .zshrc</code> 配置文件添加即可。</li><li>目录间快速跳转,不用再一直 cd 了</li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul><li>使用 <code> autojump</code>  的缩写 <code>j</code></li><li><code>cd</code> 命令进入<code> ~/user/github/Noye</code> 文件夹，下一次再想进入Notr 文件夹的时候,直接<code> j Note</code> 即可,或者只输入 Note 的一部分 Not 都行.</li><li>删除无效路径<ul><li><code>j --purge 无效路径</code>类似组件<code> Z</code> (也内置了,直接改配置文件即可)删除无效路径它的命令更短<code>z -x 无效路径</code></li></ul></li></ul><h1 id="zscrh-syntax-highlighting"><a href="#zscrh-syntax-highlighting" class="headerlink" title="zscrh-syntax-highlighting"></a>zscrh-syntax-highlighting</h1><ul><li><p><a href="https://github.com/zsh-users/zsh-syntax-highlighting">Github Rpo</a></p></li><li><p>作用:平常用的 <code>ls</code>  <code>cd</code> 等命令输入正确会绿色高亮显示，输入错误会显示其他的颜色。</p></li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li>克隆项目<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source <span class="variable">$&#123;(q-)PWD&#125;</span>/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh&quot;</span> &gt;&gt; <span class="variable">$&#123;ZDOTDIR:-<span class="variable">$HOME</span>&#125;</span>/.zshrc</span><br></pre></td></tr></table></figure></li><li>在 <code>~/.zshrc</code> 中配置<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plugins=(zsh-syntax-highlighting)</span><br></pre></td></tr></table></figure></li></ul><h1 id="zsh-autosuggestions"><a href="#zsh-autosuggestions" class="headerlink" title="zsh-autosuggestions"></a>zsh-autosuggestions</h1><p>输入命令时，会给出建议的命令</p><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><ul><li>克隆项目<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure></li><li>在 <code>~/.zshrc</code> 中配置<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plugins=(zsh-autosuggestions)</span><br></pre></td></tr></table></figure></li></ul><h1 id="incr"><a href="#incr" class="headerlink" title="incr"></a>incr</h1><ul><li>Ubuntu sudo<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install zsh</span><br></pre></td></tr></table></figure></li><li>ArchLinux<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yacman -S <span class="comment">#!/usr/bin/env zsh</span></span><br></pre></td></tr></table></figure></li><li>安装完成后执行：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure></li></ul><h1 id="安装-oh-my-zsh"><a href="#安装-oh-my-zsh" class="headerlink" title="安装 oh my zsh"></a>安装 oh my zsh</h1><ul><li>自动安装：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</span><br></pre></td></tr></table></figure></li><li>手动安装：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh</span><br><span class="line">cp ~/.zshrc ~/.zshrc.orig</span><br><span class="line">cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</span><br><span class="line">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure></li></ul><h2 id="下载-incr"><a href="#下载-incr" class="headerlink" title="下载 incr"></a>下载 incr</h2><p>:<a href="http://mimosa-pudica.net/zsh-incremental.html">下载地址</a></p><ul><li><p>代码摘录如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"># Incremental completion for zsh</span><br><span class="line"># by y.fujii &lt;y-fujii at mimosa-pudica.net&gt;, public domain</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">autoload -U compinit</span><br><span class="line">zle -N self-insert self-insert-incr</span><br><span class="line">zle -N vi-cmd-mode-incr</span><br><span class="line">zle -N vi-backward-delete-char-incr</span><br><span class="line">zle -N backward-delete-char-incr</span><br><span class="line">zle -N expand-or-complete-prefix-incr</span><br><span class="line">compinit</span><br><span class="line"></span><br><span class="line">bindkey -M viins &#x27;^[&#x27; vi-cmd-mode-incr</span><br><span class="line">bindkey -M viins &#x27;^h&#x27; vi-backward-delete-char-incr</span><br><span class="line">bindkey -M viins &#x27;^?&#x27; vi-backward-delete-char-incr</span><br><span class="line">bindkey -M viins &#x27;^i&#x27; expand-or-complete-prefix-incr</span><br><span class="line">bindkey -M emacs &#x27;^h&#x27; backward-delete-char-incr</span><br><span class="line">bindkey -M emacs &#x27;^?&#x27; backward-delete-char-incr</span><br><span class="line">bindkey -M emacs &#x27;^i&#x27; expand-or-complete-prefix-incr</span><br><span class="line"></span><br><span class="line">unsetopt automenu</span><br><span class="line">compdef -d scp</span><br><span class="line">compdef -d tar</span><br><span class="line">compdef -d make</span><br><span class="line">compdef -d java</span><br><span class="line">compdef -d svn</span><br><span class="line">compdef -d cvs</span><br><span class="line"></span><br><span class="line"># TODO:</span><br><span class="line">#     cp dir/</span><br><span class="line"></span><br><span class="line">now_predict=0</span><br><span class="line"></span><br><span class="line">function limit-completion</span><br><span class="line">&#123;</span><br><span class="line">if ((compstate[nmatches] &lt;= 1)); then</span><br><span class="line">zle -M &quot;&quot;</span><br><span class="line">elif ((compstate[list_lines] &gt; 6)); then</span><br><span class="line">compstate[list]=&quot;&quot;</span><br><span class="line">zle -M &quot;too many matches.&quot;</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function correct-prediction</span><br><span class="line">&#123;</span><br><span class="line">if ((now_predict == 1)); then</span><br><span class="line">if [[ &quot;$BUFFER&quot; != &quot;$buffer_prd&quot; ]] || ((CURSOR != cursor_org)); then</span><br><span class="line">now_predict=0</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function remove-prediction</span><br><span class="line">&#123;</span><br><span class="line">if ((now_predict == 1)); then</span><br><span class="line">BUFFER=&quot;$buffer_org&quot;</span><br><span class="line">now_predict=0</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function show-prediction</span><br><span class="line">&#123;</span><br><span class="line"># assert(now_predict == 0)</span><br><span class="line">if</span><br><span class="line">((PENDING == 0)) &amp;&amp;</span><br><span class="line">((CURSOR &gt; 1)) &amp;&amp;</span><br><span class="line">[[ &quot;$PREBUFFER&quot; == &quot;&quot; ]] &amp;&amp;</span><br><span class="line">[[ &quot;$BUFFER[CURSOR]&quot; != &quot; &quot; ]]</span><br><span class="line">then</span><br><span class="line">cursor_org=&quot;$CURSOR&quot;</span><br><span class="line">buffer_org=&quot;$BUFFER&quot;</span><br><span class="line">comppostfuncs=(limit-completion)</span><br><span class="line">zle complete-word</span><br><span class="line">cursor_prd=&quot;$CURSOR&quot;</span><br><span class="line">buffer_prd=&quot;$BUFFER&quot;</span><br><span class="line">if [[ &quot;$buffer_org[1,cursor_org]&quot; == &quot;$buffer_prd[1,cursor_org]&quot; ]]; then</span><br><span class="line">CURSOR=&quot;$cursor_org&quot;</span><br><span class="line">if [[ &quot;$buffer_org&quot; != &quot;$buffer_prd&quot; ]] || ((cursor_org != cursor_prd)); then</span><br><span class="line">now_predict=1</span><br><span class="line">fi</span><br><span class="line">else</span><br><span class="line">BUFFER=&quot;$buffer_org&quot;</span><br><span class="line">CURSOR=&quot;$cursor_org&quot;</span><br><span class="line">fi</span><br><span class="line">echo -n &quot;\e[32m&quot;</span><br><span class="line">else</span><br><span class="line">zle -M &quot;&quot;</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function preexec</span><br><span class="line">&#123;</span><br><span class="line">echo -n &quot;\e[39m&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function vi-cmd-mode-incr</span><br><span class="line">&#123;</span><br><span class="line">correct-prediction</span><br><span class="line">remove-prediction</span><br><span class="line">zle vi-cmd-mode</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function self-insert-incr</span><br><span class="line">&#123;</span><br><span class="line">correct-prediction</span><br><span class="line">remove-prediction</span><br><span class="line">if zle .self-insert; then</span><br><span class="line">show-prediction</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function vi-backward-delete-char-incr</span><br><span class="line">&#123;</span><br><span class="line">correct-prediction</span><br><span class="line">remove-prediction</span><br><span class="line">if zle vi-backward-delete-char; then</span><br><span class="line">show-prediction</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function backward-delete-char-incr</span><br><span class="line">&#123;</span><br><span class="line">correct-prediction</span><br><span class="line">remove-prediction</span><br><span class="line">if zle backward-delete-char; then</span><br><span class="line">show-prediction</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function expand-or-complete-prefix-incr</span><br><span class="line">&#123;</span><br><span class="line">correct-prediction</span><br><span class="line">if ((now_predict == 1)); then</span><br><span class="line">CURSOR=&quot;$cursor_prd&quot;</span><br><span class="line">now_predict=0</span><br><span class="line">comppostfuncs=(limit-completion)</span><br><span class="line">zle list-choices</span><br><span class="line">else</span><br><span class="line">remove-prediction</span><br><span class="line">zle expand-or-complete-prefix</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>执行如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.oh-my-zsh/plugins/</span><br><span class="line">mkdir -p incr</span><br><span class="line">cd incr</span><br><span class="line">vim incr-0.2.zsh //（将代码复制粘贴到incr-0.2.zsh文件中）</span><br><span class="line">chmod 777 incr-0.2.zsh</span><br></pre></td></tr></table></figure></li></ul><h2 id="配置-zshrc-文件"><a href="#配置-zshrc-文件" class="headerlink" title="配置 .zshrc 文件"></a>配置 .zshrc 文件</h2><ol><li>vim ~&#x2F;.zshrc<br>末尾加入</li><li>ource ~&#x2F;.oh-my-zsh&#x2F;plugins&#x2F;incr&#x2F;incr*.zsh</li><li>source ~&#x2F;.zshrc #使其立即生效</li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 笔记</title>
      <link href="/posts/SQL-Note.html"/>
      <url>/posts/SQL-Note.html</url>
      
        <content type="html"><![CDATA[<p>SQL笔记</p><span id="more"></span><ol><li>从职工关系中检索所有工资值。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 月工资</span><br><span class="line"><span class="keyword">from</span> zg</span><br></pre></td></tr></table></figure></li><li>检索仓库关系中的所有元组。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> ck</span><br></pre></td></tr></table></figure></li><li>检索工资多于2000元的职工对应的职工号，姓名。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  职工号,月工资 <span class="keyword">from</span> zg</span><br><span class="line"><span class="keyword">where</span> 月工资<span class="operator">&gt;</span><span class="number">2000</span></span><br></pre></td></tr></table></figure></li><li>检索哪些仓库的面积在400到550平方之间，列出仓库号和所在的城市。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 仓库号,城市</span><br><span class="line"><span class="keyword">from</span> ck</span><br><span class="line"><span class="keyword">where</span> 面积<span class="operator">&gt;</span><span class="number">400</span> <span class="keyword">and</span> 面积<span class="operator">&lt;</span><span class="number">550</span></span><br></pre></td></tr></table></figure></li><li>检索出有广州哪些仓库，列出仓库号。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 仓库号 <span class="keyword">from</span> ck</span><br><span class="line"><span class="keyword">where</span> 城市<span class="operator">=</span><span class="string">&#x27;广州&#x27;</span></span><br></pre></td></tr></table></figure></li><li>检索出所在城市为广州的仓库的个数。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(仓库号)</span><br><span class="line"><span class="keyword">from</span> ck</span><br><span class="line"><span class="keyword">where</span> 城市<span class="operator">=</span><span class="string">&#x27;广州&#x27;</span></span><br></pre></td></tr></table></figure></li><li>检索出所有职工的平均工资。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(月工资)</span><br><span class="line"><span class="keyword">from</span> zg</span><br></pre></td></tr></table></figure></li><li>检索出在WH5仓库工作的职工的人数。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(仓库号) <span class="keyword">from</span> zg</span><br><span class="line"><span class="keyword">where</span> 仓库号<span class="operator">=</span><span class="string">&#x27;WH5&#x27;</span></span><br></pre></td></tr></table></figure></li><li>检索出职工表的所有的仓库号，去掉重复值。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> 仓库号</span><br><span class="line"><span class="keyword">from</span> zg</span><br></pre></td></tr></table></figure></li><li>检索出每个仓库的人数。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 仓库号,<span class="built_in">count</span>(<span class="operator">*</span>)人数</span><br><span class="line"> <span class="keyword">from</span> zg</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 仓库号</span><br></pre></td></tr></table></figure></li><li>检索出上海的仓库有哪些，列出仓库号、面积。查询结果按面积降序排列。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 仓库号,面积</span><br><span class="line"> <span class="keyword">from</span> ck</span><br><span class="line"><span class="keyword">where</span> 城市<span class="operator">=</span><span class="string">&#x27;上海&#x27;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 面积 <span class="keyword">desc</span></span><br></pre></td></tr></table></figure></li><li>检索出哪些仓库女职工的人数达到了3人。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">select</span> 仓库号,<span class="built_in">count</span>(职工号)人数</span><br><span class="line"><span class="keyword">from</span> zg <span class="keyword">where</span> 性别<span class="operator">=</span><span class="string">&#x27;女&#x27;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 仓库号 <span class="keyword">having</span> <span class="built_in">count</span>(职工号)<span class="operator">&gt;</span><span class="number">3</span></span><br></pre></td></tr></table></figure></li><li>检索出所有姓胡的职工的职工号、姓名、性别、工资。查询结果按性别排降序、工资排升序。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 职工号,姓名,性别,月工资</span><br><span class="line"><span class="keyword">from</span> zg</span><br><span class="line"><span class="keyword">where</span> 姓名 <span class="keyword">like</span><span class="string">&#x27;胡%&#x27;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 性别 <span class="keyword">desc</span>,月工资 <span class="keyword">asc</span></span><br></pre></td></tr></table></figure></li><li>检索出职工“王玛丽”的年工资。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(月工资<span class="operator">*</span><span class="number">12</span>) <span class="keyword">as</span> 年薪</span><br><span class="line"><span class="keyword">from</span> zg</span><br><span class="line"><span class="keyword">where</span> 姓名<span class="operator">=</span><span class="string">&#x27;王玛丽&#x27;</span></span><br></pre></td></tr></table></figure></li><li>检索出“WH1”和“WH2”两个仓库工作的职工的基本信息。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> zg</span><br><span class="line"><span class="keyword">where</span> 仓库号<span class="operator">=</span><span class="string">&#x27;WH1&#x27;</span><span class="keyword">or</span> 仓库号<span class="operator">=</span><span class="string">&#x27;WH2&#x27;</span></span><br></pre></td></tr></table></figure></li><li>检索出年工资在24000以上的职工的姓名，年工资值。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 姓名,月工资<span class="operator">*</span><span class="number">12</span> <span class="keyword">as</span> 年工资</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 控制语句</title>
      <link href="/posts/JavaControl.html"/>
      <url>/posts/JavaControl.html</url>
      
        <content type="html"><![CDATA[<p>Java控制语句</p><span id="more"></span><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Java流程控制语句（顺序结构、if条件语句、switch条件语句、循环语句与跳转语句）</p><h1 id="顺序语句"><a href="#顺序语句" class="headerlink" title="顺序语句"></a>顺序语句</h1><h2 id="表达式语句"><a href="#表达式语句" class="headerlink" title="表达式语句"></a>表达式语句</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">i++;</span><br><span class="line">i--;</span><br><span class="line">x=<span class="number">10</span>;</span><br><span class="line">sum=sum+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">JFrame</span>(); <span class="comment">//实例化对象</span></span><br><span class="line"><span class="built_in">this</span>.setVisible(<span class="literal">true</span>); <span class="comment">//方法调用</span></span><br></pre></td></tr></table></figure><h2 id="空语句"><a href="#空语句" class="headerlink" title="空语句"></a>空语句</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++); <span class="comment">//空语句一个分号</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> x=<span class="number">6</span>;; <span class="comment">//两连续分号，第二个是空语句</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (a&gt;b) &#123;</span><br><span class="line">         ;   <span class="comment">//条件为真，执行空语句</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//条件为假，执行本部分</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="复合语句"><a href="#复合语句" class="headerlink" title="复合语句"></a>复合语句</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">5</span>;<span class="comment">//又称代码块语句，一对大括号括起来的语句，中间可有多个变量或语句</span></span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    a=i;</span><br><span class="line">    System.out.orint(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="选择语句"><a href="#选择语句" class="headerlink" title="选择语句"></a>选择语句</h1><h2 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * &quot;if条件语句&quot;示例代码</span></span><br><span class="line"><span class="comment"> * 功能：输入三个数，输出最大值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Program</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String [] args)</span> &#123;</span><br><span class="line"><span class="type">int</span> num1,num2,num3,max;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入第一个数：&quot;</span>);</span><br><span class="line">num1=input.nextInt();</span><br><span class="line">System.out.println(<span class="string">&quot;请输入第二个数：&quot;</span>);</span><br><span class="line">num2=input.nextInt();</span><br><span class="line">System.out.println(<span class="string">&quot;请输入第三个数：&quot;</span>);</span><br><span class="line">num3=input.nextInt();</span><br><span class="line">max=num1;</span><br><span class="line"><span class="keyword">if</span>(num2&gt;max)</span><br><span class="line">max=num2;</span><br><span class="line"><span class="keyword">if</span> (num3&gt;max)</span><br><span class="line">max=num3;</span><br><span class="line">System.out.println(<span class="string">&quot;max=&quot;</span>+max);</span><br><span class="line">input.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.unit.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Switchweek</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[]args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入1-7的整数&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">day</span> <span class="operator">=</span> input.nextInt(); <span class="comment">//对象调用方法获取数据</span></span><br><span class="line">        <span class="keyword">switch</span> (day)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>: System.out.println(<span class="string">&quot;星期日&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>: System.out.println(<span class="string">&quot;星期一&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>: System.out.println(<span class="string">&quot;星期二&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>: System.out.println(<span class="string">&quot;星期三&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>: System.out.println(<span class="string">&quot;星期四&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>: System.out.println(<span class="string">&quot;星期五&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>: System.out.println(<span class="string">&quot;星期六&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>: Syatem.out.println(<span class="string">&quot;你输入的日期不在有效范围内！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Switch</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">char</span> today=<span class="string">&#x27;日&#x27;</span>;</span><br><span class="line"><span class="keyword">switch</span>(today)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;一&#x27;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;三&#x27;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;五&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;早餐吃包子&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;二&#x27;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;四&#x27;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;六&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;早餐吃油条&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;吃主席套餐&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="循环语句-主要有while-do-while-for和foreach"><a href="#循环语句-主要有while-do-while-for和foreach" class="headerlink" title="循环语句(主要有while&#x2F;do-while&#x2F;for和foreach)"></a>循环语句(主要有while&#x2F;do-while&#x2F;for和foreach)</h1><h2 id="while"><a href="#while" class="headerlink" title="while"></a>while</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(判断条件)</span><br><span class="line">&#123;</span><br><span class="line">    语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="扩展格式"><a href="#扩展格式" class="headerlink" title="扩展格式"></a>扩展格式</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line"><span class="keyword">while</span>(判断条件语句) &#123;</span><br><span class="line">      循环体语句;</span><br><span class="line">      控制条件语句;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    通过这个格式，我们就可以看到其实和<span class="keyword">for</span>循环是差不多的。</span><br><span class="line">        <span class="keyword">for</span>(初始化语句;判断条件语句;控制条件语句) &#123;</span><br><span class="line">            循环体语句;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WhileSun</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;=n) &#123;</span><br><span class="line">            sum+=i;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;1加到10但和是:&quot;</span>+sum);</span><br><span class="line">        System.out.println(<span class="string">&quot;循环后变量i但值是:&quot;</span>+i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="do-while"><a href="#do-while" class="headerlink" title="do-while"></a>do-while</h2><ol><li>对于 while 语句而言，如果不满足条件，则不能进入循环。但有时候我们需要即使不满足条件，也至少执行一次。</li><li>do…while 循环和 while 循环相似，不同的是，do…while 循环至少会执行一次。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">       <span class="comment">//代码语句</span></span><br><span class="line">&#125;<span class="keyword">while</span>(布尔表达式);</span><br></pre></td></tr></table></figure></li></ol><p>注意：布尔表达式在循环体的后面，所以语句块在检测布尔表达式之前已经执行了。 如果布尔表达式的值为 true，则语句块一直执行，直到布尔表达式的值为 false。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span>&#123;</span><br><span class="line">      <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">      <span class="keyword">do</span>&#123;</span><br><span class="line">         System.out.print(<span class="string">&quot;value of x : &quot;</span> + x );</span><br><span class="line">         x++;</span><br><span class="line">         System.out.print(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      &#125;<span class="keyword">while</span>( x &lt; <span class="number">20</span> );</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for(初始化; 布尔表达式; 更新) &#123;</span><br><span class="line">    //代码语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最先执行初始化步骤。可以声明一种类型，但可初始化一个或多个循环控制变量，也可以是空语句。<br>然后，检测布尔表达式的值。如果为 true，循环体被执行。如果为false，循环终止，开始执行循环体后面的语句。<br>执行一次循环后，更新循环控制变量。<br>再次检测布尔表达式。循环执行上面的过程。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">10</span>; x &lt; <span class="number">20</span>; x = x+<span class="number">1</span>) &#123;</span><br><span class="line">         System.out.print(<span class="string">&quot;value of x : &quot;</span> + x );</span><br><span class="line">         System.out.print(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Java-增强-for-循环"><a href="#Java-增强-for-循环" class="headerlink" title="Java 增强 for 循环"></a>Java 增强 for 循环</h1><p>Java5 引入了一种主要用于数组的增强型 for 循环。</p><p>Java 增强 for 循环语法格式如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for(声明语句 : 表达式)</span><br><span class="line">&#123;</span><br><span class="line">   //代码句子</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>明语句：</p><p>声明新的局部变量，该变量的类型必须和数组元素的类型匹配。其作用域限定在循环语句块，其值与此时数组元素的值相等。</p><p>表达式：表达式是要访问的数组名，或者是返回值为数组的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span>&#123;</span><br><span class="line">      <span class="type">int</span> [] numbers = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>&#125;;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> x : numbers )&#123;</span><br><span class="line">         System.out.print( x );</span><br><span class="line">         System.out.print(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      System.out.print(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      String [] names =&#123;<span class="string">&quot;James&quot;</span>, <span class="string">&quot;Larry&quot;</span>, <span class="string">&quot;Tom&quot;</span>, <span class="string">&quot;Lacy&quot;</span>&#125;;</span><br><span class="line">      <span class="keyword">for</span>( String name : names ) &#123;</span><br><span class="line">         System.out.print( name );</span><br><span class="line">         System.out.print(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="break-关键字"><a href="#break-关键字" class="headerlink" title="break 关键字"></a>break 关键字</h2><p>break 主要用在循环语句或者 switch 语句中，用来跳出整个语句块。</p><p>break 跳出最里层的循环，并且继续执行该循环下面的语句。</p><p>语法:break 的用法很简单，就是循环结构中的一条语句：<br><code>break;</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">      <span class="type">int</span> [] numbers = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>&#125;;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> x : numbers ) &#123;</span><br><span class="line">         <span class="comment">// x 等于 30 时跳出循环</span></span><br><span class="line">         <span class="keyword">if</span>( x == <span class="number">30</span> ) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">         &#125;</span><br><span class="line">         System.out.print( x );</span><br><span class="line">         System.out.print(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * &quot;实战——九九乘法口诀表&quot;*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Program</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String [] args)</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;九九乘法口诀表：&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">System.out.print(j+<span class="string">&quot;*&quot;</span>+i+<span class="string">&quot;=&quot;</span>+j*i+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//注意print与println的区别</span></span><br><span class="line">System.out.print(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="comment">//System.out.println();</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="continue-关键字"><a href="#continue-关键字" class="headerlink" title="continue 关键字"></a>continue 关键字</h2><p>continue 适用于任何循环控制结构中。作用是让程序立刻跳转到下一次循环的迭代。</p><p>在 for 循环中，continue 语句使程序立即跳转到更新语句。</p><p>在 while 或者 do…while 循环中，程序立即跳转到布尔表达式的判断语句。<br>语法</p><p>continue 就是循环体中一条简单的语句：</p><p><code>continue;</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">      <span class="type">int</span> [] numbers = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>&#125;;</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> x : numbers ) &#123;</span><br><span class="line">         <span class="keyword">if</span>( x == <span class="number">30</span> ) &#123;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">         &#125;</span><br><span class="line">         System.out.print( x );</span><br><span class="line">         System.out.print(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim 设置默认中文并加行数</title>
      <link href="/posts/Vim-utf-8.html"/>
      <url>/posts/Vim-utf-8.html</url>
      
        <content type="html"><![CDATA[<p>Vim 设置默认中文并加行数</p><span id="more"></span><h1 id="vimrc"><a href="#vimrc" class="headerlink" title=".vimrc"></a>.vimrc</h1><p>配置文件</p> <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&quot; 设置行号显示</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">number</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 将行号设置为相对行号</span></span><br><span class="line"><span class="keyword">set</span> relativenumber</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;显示标尺</span></span><br><span class="line"><span class="keyword">set</span> ruler</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;编码</span></span><br><span class="line"><span class="keyword">set</span> fileencodings=utf-<span class="number">8</span>,gb2312,gb18030,gbk,ucs-bom,cp936,latin1</span><br><span class="line"><span class="keyword">set</span> enc=utf8</span><br><span class="line"><span class="keyword">set</span> fencs=utf8,gbk,gb2312,gb18030</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 语法高亮</span></span><br><span class="line"><span class="keyword">syntax</span> enable</span><br><span class="line"><span class="keyword">syntax</span> <span class="keyword">on</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 高亮字符，让其不受100列限制</span></span><br><span class="line">:<span class="keyword">highlight</span> OverLength ctermbg=<span class="keyword">red</span> ctermfg=white guibg=<span class="keyword">red</span> guifg=white</span><br><span class="line">:<span class="keyword">match</span> OverLength <span class="string">&#x27;\%101v.*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 状态行颜色</span></span><br><span class="line"><span class="keyword">highlight</span> StatusLine guifg=SlateBlue guibg=Yellow</span><br><span class="line"><span class="keyword">highlight</span> StatusLineNC guifg=Gray guibg=White</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 增强模式中的命令行自动完成操作</span></span><br><span class="line"><span class="keyword">set</span> wildmenu</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 我的状态行显示的内容（包括文件类型和解码）</span></span><br><span class="line"><span class="keyword">set</span> statusline=%F%<span class="keyword">m</span>%r%h%<span class="keyword">w</span>\[POS=%<span class="keyword">l</span>,%v][%<span class="keyword">p</span>%%]\%&#123;<span class="built_in">strftime</span>(\<span class="string">&quot;%d/%m/%y\ -\ %H:%M\&quot;</span>)&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 总是显示状态行</span></span><br><span class="line"><span class="keyword">set</span> laststatus=<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;命令行补全参数</span></span><br><span class="line"><span class="keyword">set</span> wildmenu</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;设置tab键空4格</span></span><br><span class="line"><span class="keyword">set</span> tabstop=<span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;自动检测文件类型</span></span><br><span class="line"><span class="keyword">filetype</span> plugin <span class="built_in">indent</span> <span class="keyword">on</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;开启自动缩进，智能缩进</span></span><br><span class="line"><span class="keyword">set</span> autoindent</span><br><span class="line"><span class="keyword">set</span> <span class="built_in">cindent</span></span><br><span class="line"><span class="keyword">set</span> smartindent</span><br><span class="line"><span class="keyword">set</span> <span class="built_in">shiftwidth</span>=<span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;插件安装列表</span></span><br><span class="line"><span class="keyword">set</span> rtp+=~/.<span class="keyword">vim</span>/bundle/Vundle.<span class="keyword">vim</span></span><br><span class="line"><span class="keyword">call</span> vundle#begin()</span><br><span class="line">Plugin <span class="string">&#x27;godlygeek/tabular&#x27;</span></span><br><span class="line">Plugin <span class="string">&#x27;plasticboy/vim-markdown&#x27;</span></span><br><span class="line"><span class="keyword">call</span> vundle#end()</span><br></pre></td></tr></table></figure><h1 id="Vim-设置默认中文编码"><a href="#Vim-设置默认中文编码" class="headerlink" title="Vim 设置默认中文编码"></a>Vim 设置默认中文编码</h1><p>.vimrc 添加下面内容即可</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> encoding=utf-<span class="number">8</span></span><br><span class="line"><span class="keyword">set</span> fileencodings=ucs-bom,utf-<span class="number">8</span>,cp936</span><br><span class="line"><span class="keyword">set</span> fileencoding=gb2312</span><br><span class="line"><span class="keyword">set</span> termencoding=utf-<span class="number">8</span></span><br></pre></td></tr></table></figure><h1 id="设置行数"><a href="#设置行数" class="headerlink" title="设置行数"></a>设置行数</h1><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">nu</span></span><br><span class="line"><span class="keyword">set</span> nobackup</span><br><span class="line"><span class="keyword">set</span> noswapfile</span><br><span class="line"><span class="keyword">syntax</span> <span class="keyword">on</span></span><br><span class="line"><span class="keyword">set</span> tabstop=<span class="number">4</span></span><br><span class="line"><span class="keyword">set</span> <span class="built_in">shiftwidth</span>:<span class="number">4</span></span><br><span class="line"><span class="keyword">set</span> expandtab</span><br><span class="line"><span class="keyword">set</span> smarttab</span><br><span class="line"><span class="keyword">set</span> hlsearch</span><br><span class="line"><span class="keyword">set</span> showmatch</span><br><span class="line"><span class="keyword">set</span> matchtime=<span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 常用命令</title>
      <link href="/posts/UbuntuCommand.html"/>
      <url>/posts/UbuntuCommand.html</url>
      
        <content type="html"><![CDATA[<p>Ununtu常用命令。</p><span id="more"></span><h1 id="磁盘目录"><a href="#磁盘目录" class="headerlink" title="磁盘目录"></a>磁盘目录</h1><table><thead><tr><th align="left">目录</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">&#x2F;</td><td align="left">根目录</td></tr><tr><td align="left">&#x2F;bin</td><td align="left">存放必要的命令</td></tr><tr><td align="left">&#x2F;boot</td><td align="left">存放内核以及启动所需的文件等</td></tr><tr><td align="left">&#x2F;dev</td><td align="left">存放设备文件</td></tr><tr><td align="left">&#x2F;etc</td><td align="left">存放系统的配置文件</td></tr><tr><td align="left">&#x2F;home</td><td align="left">用户文件的主目录，用户数据存放在其主目录中</td></tr><tr><td align="left">&#x2F;lib</td><td align="left">存放必要的运行库</td></tr><tr><td align="left">&#x2F;mnt</td><td align="left">存放临时的映射文件系统，我们常把软驱和光驱挂装在这里的floppy和cdrom子目录下</td></tr><tr><td align="left">&#x2F;proc</td><td align="left">存放存储进程和系统信息</td></tr><tr><td align="left">&#x2F;root</td><td align="left">超级用户的主目录</td></tr><tr><td align="left">&#x2F;sbin</td><td align="left">存放系统管理程序</td></tr><tr><td align="left">&#x2F;tmp</td><td align="left">存放临时文件的目录</td></tr><tr><td align="left">&#x2F;usr</td><td align="left">包含了一般不需要修改的应用程序，命令程序文件、程序库、手册和其它文档</td></tr><tr><td align="left">&#x2F;var</td><td align="left">包含系统产生的经常变化的文件</td></tr></tbody></table><h1 id="文件-文件夹管理"><a href="#文件-文件夹管理" class="headerlink" title="文件&#x2F;文件夹管理"></a>文件&#x2F;文件夹管理</h1><table><thead><tr><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">ls</td><td align="left">列出当前目录下的所有文件（不显示隐藏文件）</td></tr><tr><td align="left">ls -a</td><td align="left">列出当前目录下的所有文件（显示隐藏文件）</td></tr><tr><td align="left">ls -l</td><td align="left">列出当前目录下所有文件的详细信息</td></tr><tr><td align="left">cd 或者 cd ~</td><td align="left">进入用户主目录</td></tr><tr><td align="left">cd ..</td><td align="left">回到上一级目录</td></tr><tr><td align="left">cd -</td><td align="left">返回进入此目录之前所在的目录</td></tr><tr><td align="left">mkdir dirname</td><td align="left">新建目录</td></tr><tr><td align="left">rmdir dirname</td><td align="left">删除空目录</td></tr><tr><td align="left">rm filename</td><td align="left">删除文件</td></tr><tr><td align="left">rm -rf dirname</td><td align="left">删除非空目录及其包含的所有文件</td></tr><tr><td align="left">mv file1 file2</td><td align="left">将文件1重命名为文件2</td></tr><tr><td align="left">mv file1 dir1</td><td align="left">将文件1移动到目录1中</td></tr><tr><td align="left">find 路径 -name “字符串”</td><td align="left">查找路径所在范围内满足字符串匹配的文件和目录</td></tr></tbody></table><h1 id="程序安装与卸载"><a href="#程序安装与卸载" class="headerlink" title="程序安装与卸载"></a>程序安装与卸载</h1><table><thead><tr><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">apt-get +</td><td align="left">程序安装与卸载命令的标志，需要管理员权限</td></tr><tr><td align="left">install</td><td align="left">安装指定程序，举例：&#96;sudo apt-get install vim</td></tr><tr><td align="left">remove</td><td align="left">卸载指定的程序，一般最好加上<code>--purge</code>执行清除式卸并在程序名称后添加*号。举例 sudo apt-get remove–purge nvidia *卸载 nvidia 的驱动及其配置文件</td></tr><tr><td align="left">update</td><td align="left">更新本地软件源文件，需要管理员权限，举例：sudo apt-get update</td></tr></tbody></table><h1 id="打包-解压"><a href="#打包-解压" class="headerlink" title="打包&#x2F;解压"></a>打包&#x2F;解压</h1><ul><li>参数</li></ul><table><thead><tr><th align="left">参数</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">-c</td><td align="left">建立压缩档案</td></tr><tr><td align="left">-z</td><td align="left">有gzip属性的</td></tr><tr><td align="left">-t</td><td align="left">查看内容</td></tr><tr><td align="left">-j</td><td align="left">有bz2属性的</td></tr><tr><td align="left">-u</td><td align="left">更新原压缩包中的文件</td></tr><tr><td align="left">-Z</td><td align="left">有compress属性的</td></tr><tr><td align="left">-x</td><td align="left">解压</td></tr><tr><td align="left">-v</td><td align="left">显示所有过程</td></tr><tr><td align="left">-r</td><td align="left">向压缩归档文件末尾追加文件</td></tr><tr><td align="left">-O</td><td align="left">将文件解开到标准输出</td></tr></tbody></table><ul><li>参数是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。右边五个参数是根据需要在压缩或解压时可选的。</li></ul><h1 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h1><table><thead><tr><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">tar -cvf jpg.tar *.jpg</td><td align="left">将目录里所有jpg文件打包成tar.jpg</td></tr><tr><td align="left">tar -czf jpg.tar.gz *.jpg</td><td align="left">将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz</td></tr><tr><td align="left">tar -cjf jpg.tar.bz2 *.jpg</td><td align="left">将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2</td></tr><tr><td align="left">tar -cZf jpg.tar.Z *.jpg</td><td align="left">将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z</td></tr><tr><td align="left">rar a jpg.rar *.jpg rar</td><td align="left">格式的压缩，需要先下载rar for linux</td></tr><tr><td align="left">zip jpg.zip *.jpg zip</td><td align="left">格式的压缩，需要先下载zip for linux</td></tr></tbody></table><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><table><thead><tr><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">tar -xvf file.tar</td><td align="left">解压 tar包</td></tr><tr><td align="left">tar -xzvf file.tar.gz</td><td align="left">解压 tar.gz</td></tr><tr><td align="left">tar -xjvf file.tar.bz2</td><td align="left">解压 tar.bz2</td></tr><tr><td align="left">tar -xZvf file.tar.Z</td><td align="left">解压 tar.Z</td></tr><tr><td align="left">unrar e file.rar</td><td align="left">解压 rar</td></tr><tr><td align="left">unzip file.zip</td><td align="left">解压 zip</td></tr></tbody></table><ul><li>总结<ul><li><code>.tar </code>用 <code>tar -xvf</code> 解压</li><li><code>.gz</code> 用 <code>gzip -d</code>或者<code>gunzip</code> 解压</li><li><code>.tar.gz</code>和<code>.tg</code>z 用<code> tar -xzf</code> 解压</li><li><code>.bz2</code> 用<code> bzip2 -d</code>或者用<code>bunzip2 </code>解压</li><li><code>.tar.bz2</code>用<code>tar -xjf</code> 解压</li><li><code>.Z</code> 用 <code>uncompress</code> 解压</li><li><code>.tar.Z</code> 用<code>tar -xZf</code> 解压</li><li><code>rar</code> 用 <code>unrar e</code>解压</li><li><code>.zi</code>p 用 <code>unzip</code> 解压</li></ul></li></ul><h1 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h1><table><thead><tr><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">sudo useradd username</td><td align="left">创建一个新的用户username</td></tr><tr><td align="left">sudo passwd username</td><td align="left">设置用户username的密码</td></tr><tr><td align="left">sudo groupadd groupname</td><td align="left">创建一个新的组groupname</td></tr><tr><td align="left">sudo usermod -g groupname username</td><td align="left">把用户username加入到组groupname中</td></tr><tr><td align="left">sudo chown username:groupname dirname</td><td align="left">将指定文件的拥有者改为指定的用户或组</td></tr></tbody></table><h1 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h1><table><thead><tr><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">uname -a</td><td align="left">查看内核版本</td></tr><tr><td align="left">cat &#x2F;etc&#x2F;issue</td><td align="left">查看ubuntu版本</td></tr><tr><td align="left">sudo fdisk -l</td><td align="left">查看磁盘信息</td></tr><tr><td align="left">df -h</td><td align="left">查看硬盘剩余空间</td></tr><tr><td align="left">free -m</td><td align="left">查看当前的内存使用情况</td></tr><tr><td align="left">ps -A</td><td align="left">查看当前有哪些进程</td></tr><tr><td align="left">kill 进程号 或者 killall 进程名</td><td align="left">杀死进程</td></tr><tr><td align="left">kill -9 进程号</td><td align="left">强制杀死进程</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决 &quot;npm err! cannot read property &#39;length&#39; of undefined&quot;</title>
      <link href="/posts/Termux-Npm-Error.html"/>
      <url>/posts/Termux-Npm-Error.html</url>
      
        <content type="html"><![CDATA[<p>解决 Termux出现npm err! cannot read property ‘length’ of undefined 问题</p><span id="more"></span><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><ul><li>复制以下内容</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="built_in">require</span>(<span class="string">&#x27;os&#x27;</span>).<span class="title function_">cpus</span>() || &#123; <span class="attr">length</span>: <span class="number">1</span> &#125;).<span class="property">length</span></span><br></pre></td></tr></table></figure><ul><li>编辑</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ../usr/lib/node_modules/npm/node_modules/worker-farm/lib/farm.js</span><br></pre></td></tr></table></figure><ul><li>修改如下保存即可</li></ul><p><img src="https://s1.ax1x.com/2018/03/11/9WmxIA.jpg" alt="修改.jpg"></p><h1 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h1><ul><li>Npm 无法升级。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Android </tag>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 安装 Android Studio</title>
      <link href="/posts/UbuntuAndroidStudio.html"/>
      <url>/posts/UbuntuAndroidStudio.html</url>
      
        <content type="html"><![CDATA[<p>Ubuntu安装Android Studio</p><span id="more"></span><h1 id="SDK"><a href="#SDK" class="headerlink" title="SDK"></a>SDK</h1><h2 id="安装-Android-SDK"><a href="#安装-Android-SDK" class="headerlink" title="安装 Android SDK"></a>安装 Android SDK</h2><ul><li>下载SDK<a href="https://developer.android.com/studio/index.html?hl=zh-cn">传送门</a></li><li>解压并移动到指定目录<code>tar -zxvf android-sdk-linux.tgz -C /usr/local/andriod-sdk</code><br>sudo mv -r &#x2F;usr&#x2F;local&#x2F; android-sdk-linux</li><li>更改属主、属组<br> ·cd &#x2F;usr&#x2F;local&#x2F;·<br> ·sudo chown -R vitan:vitan android-sdk&#x2F;</li></ul><h2 id="配置SDK环境变量"><a href="#配置SDK环境变量" class="headerlink" title="配置SDK环境变量"></a>配置SDK环境变量</h2><ul><li><code>vim /etc/profile</code>后添加</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set sdk environment</span><br><span class="line">export SDK_HOME=/usr/local/android-sdk-linux</span><br><span class="line">export PATH=$SDK_HOME/tools:$SDK_HOME/platform-tools:$PATH</span><br></pre></td></tr></table></figure><ul><li><code>source /etc/profile</code> 使上面的配置立即生效。</li></ul><h1 id="Studio-步骤"><a href="#Studio-步骤" class="headerlink" title="Studio 步骤"></a>Studio 步骤</h1><p>1.下载Android Studio <a href="http://www.android-studio.org/">传送门</a></p><p>2.解压到指定目录<br><code>sudo tar zxvf android-studio-ide-171.4443003-linux.zip /opt/Android-Studio/</code></p><p>3.安装</p><ul><li>cd &#x2F;opt&#x2F;Android-Studio&#x2F;bin</li><li>sh .&#x2F;studio.sh</li></ul><p>4.Android SDK Location选择SDK目录&#x2F;usr&#x2F;local&#x2F;android-sdk-linux</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Android </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 安装 Eclipse</title>
      <link href="/posts/UbuntuEclipse.html"/>
      <url>/posts/UbuntuEclipse.html</url>
      
        <content type="html"><![CDATA[<p> Ubuntu 安装 Eclipse</p><span id="more"></span><p><strong>前提</strong><br>已经安装Java JDK</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a><strong>下载</strong></h1><p><a href="http://www.eclipse.org/downloads/packages/eclipse-ide-java-developers/oxygen2">连接</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a><strong>安装</strong></h2><ul><li>cd到文件目录</li><li><code>tar zxvf eclipse-java-oxygen-2-linux-gtk-x86_64.tar.gz  /opt/eclipse</code></li><li>创建Dash Home图标<br><code>sudo vim /usr/share/applications/eclipse.desktop</code></li></ul><p>复制下面内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Encoding=UTF-8</span><br><span class="line">Version=1.0</span><br><span class="line">Type=Application</span><br><span class="line">Name=eclipse</span><br><span class="line">Icon=/opt/eclipse/icon.xpm</span><br><span class="line">Exec=/opt/eclipse/eclipse</span><br><span class="line">StartupNotify=false</span><br><span class="line">StartupWMClass=eclipse</span><br><span class="line">OnlyShowIn=Unity;</span><br><span class="line">X-UnityGenerated=true</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Eclipse </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 安装并配置 Java 环境</title>
      <link href="/posts/UbuntuJava.html"/>
      <url>/posts/UbuntuJava.html</url>
      
        <content type="html"><![CDATA[<p>Ubuntu 安装并配置 java 环境</p><span id="more"></span><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.htm">链接</a></p><h2 id="安装-JDK"><a href="#安装-JDK" class="headerlink" title="安装 JDK"></a>安装 JDK</h2><p>在usr目录下建立java安装目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr</span><br><span class="line">sudo mkdir java</span><br></pre></td></tr></table></figure><p>将jdk文件移动到java目录下并解压</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /home/download</span><br><span class="line">sudo mv dk-8u161-linux-x64.tar.gz /usr/java #移动</span><br><span class="line">cd /usr/java</span><br><span class="line">tar -zxvf dk-8u161-linux-x64.tar.gz #解压</span><br><span class="line">ln -s /usr/java/jdk1.8.0_121/ /usr/jdk #创建快捷方式</span><br></pre></td></tr></table></figure><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><ul><li><code>sudo vim /etc/profile</code></li><li>在最后加入</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/jdk</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line">export JAVA_HOME PATH CLASSPATH</span><br></pre></td></tr></table></figure><ul><li>保存退出</li><li>加载配置信息<code>source /etc/profile</code></li><li>验证<code>java version</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 闯关游戏</title>
      <link href="/posts/GitGame.html"/>
      <url>/posts/GitGame.html</url>
      
        <content type="html"><![CDATA[<p>Git闯关游戏</p><span id="more"></span><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install ruby</span><br><span class="line">gem install githug</span><br></pre></td></tr></table></figure><h1 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h1><p><code>githug play</code> - 默认命令，检查是否过关</p><p><code>githug hint</code> - 显示过关提示</p><p><code>githug reset</code> - 重启本关，或者重启到指定的某关</p><p><code>githug levels</code> - 显示关卡列表</p><h2 id="第一关（Init）"><a href="#第一关（Init）" class="headerlink" title="第一关（Init）"></a>第一关（Init）</h2><p>紧接着，马上进入到了第一个关卡, 按照提示初始化这个这个 githug 文件夹为仓库。完成关卡可以通过调用 <code>githug play</code> 验证操作，成功则会进入下一个关卡</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd git_hug</span><br><span class="line">git init</span><br></pre></td></tr></table></figure><p>相关:<br><code>cd</code> （Change Directory），跳转目录、切换路径。</p><p><code>git init</code>在当前目录新建一个Git代码库</p><h2 id="第二关（Config）"><a href="#第二关（Config）" class="headerlink" title="第二关（Config）"></a>第二关（Config）</h2><p>设置 Git 用户名和邮箱，为了不影响全局的配置，我设置的是仓库级别的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config [--global] user.name &quot;[name]&quot;</span><br><span class="line">git config [--global] user.email &quot;[email address]&quot;</span><br></pre></td></tr></table></figure><p>相关:</p><p><code>git config git</code> 的设置文件为.gitconfig,他可以在全局配置（加上–global），也可以项目配置。</p><p>另：</p><p><code>git config --lis</code>t 显示当前的git配置</p><p><code>git config -e [--global]</code> 编辑git的配置文件</p><h2 id="第三关-（Add）"><a href="#第三关-（Add）" class="headerlink" title="第三关 （Add）"></a>第三关 （Add）</h2><p>使用 add 命令将 README 文件添加到 staging area.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .README</span><br></pre></td></tr></table></figure><p>相关</p><p><code>git add</code>将所有修改过的工作文件提交暂存区</p><p>将所有文件添加到暂存区<code>git add .</code>或者<code>git add -</code>A</p><p>git add .和git add -A的区别</p><ul><li><code>git add .</code>会监控工作区的状态树，使它会把工作时的所有变化提交到暂存区，包括文件内容修改（modified）以及新文件（new），但不包括被删除的文件。</li><li><code>git add -u</code>（git add –update的缩写）仅监控已经被add的文件（即tracked file），他会将被修改的文件提交到暂存区。add -u不会提交新文件（untracked file）。</li><li><code>git add -A</code>（git add –all的缩写）是上面两个功能的合集。即包括修改的文件、删除的文件以及新文件。</li></ul><h2 id="第四关-（Commit）"><a href="#第四关-（Commit）" class="headerlink" title="第四关 （Commit）"></a>第四关 （Commit）</h2><p>提交 README 文件，记得每次 commit 使用 -m 参数加上备注是个好习惯</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &#x27;message&#x27;</span><br></pre></td></tr></table></figure><p>相关:</p><p><code>git commit -m [message]</code>提交暂存区到仓库区;还可以提交暂存区的指定文件到仓库区<code>git commit [file1] [file2] ... -m [message]</code>。</p><p>同时，必须要写 Commit message(提交说明),否则就不允许提交。</p><ul><li><code>git commit -a</code>提交工作区自上次commit之后的变化，直接到仓库区</li><li><code>git commit -v</code>提交时显示所有diff信息,-v参数表示可以看commit的差异</li><li><code>git commit --amend -m [message]</code>使用一次新的commit，替代上一次提交。如果代码没有任何新变化，则用来改写上一次commit的提交信息</li><li><code>git commit --amend [file1] [file2] ...</code>重做上一次commit，并包括指定文件的新变化</li></ul><h2 id="第五关（Clone"><a href="#第五关（Clone" class="headerlink" title="第五关（Clone)"></a>第五关（Clone)</h2><p>克隆一个仓库，默认的文件夹名是远端的仓库名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Gazler/cloneme</span><br></pre></td></tr></table></figure><p>相关:</p><p>git clone支持多种协议，除了HTTP(s)以外，还支持SSH、Git、本地文件协议等，下面是一些例子。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git clone http[s]://example.com/path/to/repo.git/</span><br><span class="line">git clone ssh://example.com/path/to/repo.git/</span><br><span class="line">git clone git://example.com/path/to/repo.git/</span><br><span class="line">git clone /opt/git/project.git</span><br><span class="line">git clone file:///opt/git/project.git</span><br><span class="line">git clone ftp[s]://example.com/path/to/repo.git/</span><br><span class="line">git clone rsync://example.com/path/to/repo.git/</span><br></pre></td></tr></table></figure><p>SSH协议的另一种写法</p><p><code>git clone [user@]example.com:path/to/repo.git/</code></p><h2 id="第六关（Clone-to-folder）"><a href="#第六关（Clone-to-folder）" class="headerlink" title="第六关（Clone to folder）"></a>第六关（Clone to folder）</h2><p>同样是克隆一个仓库，不同的是可以指定一个文件夹名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Gazler/cloneme my_cloned_repo</span><br></pre></td></tr></table></figure><p>相关</p><p><code>git clone </code>&lt;版本库的网址&gt; &lt;本地目录名&gt; 该命令会在本地主机生成一个目录。如果不指定目录名，则与远程主机的版本库同名。</p><h2 id="第七关（Ignore"><a href="#第七关（Ignore" class="headerlink" title="第七关（Ignore)"></a>第七关（Ignore)</h2><p>忽略所有 .swp 后缀名的文件。这里使用 vim 编辑器打开 .gitignore，这个文件记录了 git 忽略文件的规则, 不会 vim 的同学可以用自己熟悉的编辑。</p><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fobpbvnwqlj20fr07kjt3.jpg"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch .gitignore  </span><br><span class="line">echo &#x27;*.swp&#x27;&gt;&gt;.gitignore</span><br></pre></td></tr></table></figure><p>使用正则(glob 模式)匹配所有的 .swp 文件，然后保存并退出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.progile.yml</span><br><span class="line">.gitignore</span><br><span class="line">*.swp</span><br></pre></td></tr></table></figure><p>相关:</p><p>忽略掉某个文件，需要修改.gitignore文件的方法。可以在你的用户目录下创建 <code>~/.gitignoreglobal</code> 文件中设置全局。</p><ol><li>需要执行 git config –global core.excludesfile ~&#x2F;.gitignoreglobal来使得它生效。</li></ol><ul><li><code>*.a</code> 忽略所有 .a 结尾的文件</li><li><code>!lib.a</code> 但 lib.a 除外<br>-<code>/TODO</code>仅仅忽略项目根目录下的 TODO 文件，但不包括 subdir&#x2F;TODO</li><li><code>build/</code> 忽略 build&#x2F; 目录下的所有文件</li><li><code>doo/*.txt</code> 会忽略 doc&#x2F;notes.txt 但不包括 doc&#x2F;server&#x2F;arch.txt</li></ul><ol start="2"><li><code>.gitignore</code>只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。<br>正确的做法是在每个clone下来的仓库中手动设置不要检查特定文件的更改情况。</li></ol><ul><li><code>git update-index --assume-unchanged PATH</code> 在PATH处输入要忽略的文件。</li><li><code>git update-index --no-assume-unchanged PATH</code> 还原。</li></ul><ol start="3"><li>另外 git 还提供了另一种<code>exclude</code>的方式来做同样的事情，不同的是 .gitignore 这个文件本身会提交到版本库中去，用来保存的是公共的需要排除的文件。<br>而<code> .git/info/exclude</code> 这里设置的则是你自己本地需要排除的文件。他不会影响到其他人。也不会提交到版本库中去。</li></ol><h2 id="第八关（Include"><a href="#第八关（Include" class="headerlink" title="第八关（Include"></a>第八关（Include</h2><p>除了 <code>lib.a </code>文件，其他所有的 .a 后缀名的文件都忽略。和上一关的操作一样，修改 <code>.gitignore</code> 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;*.a&#x27;&gt;&gt;.gitignore</span><br><span class="line">echo &#x27;!lib.a&#x27;&gt;&gt;.gitignore</span><br></pre></td></tr></table></figure><p>其中 <code>#</code> 开头的是注释，用<code>*.a</code> 匹配所有 <code>.a</code> 文件，<code>!</code> 开头代表不要忽略</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.profile.yml</span><br><span class="line">.gitignore</span><br><span class="line"></span><br><span class="line"># ignore all file with &quot;.a&quot; extensions expect &quot;lib.a&quot; file</span><br><span class="line">*.a</span><br><span class="line">!lib.a</span><br></pre></td></tr></table></figure><h2 id="第九关（Status"><a href="#第九关（Status" class="headerlink" title="第九关（Status)"></a>第九关（Status)</h2><p>查看所有处于<code>untracked</code>状态的文件。使用<code> git status</code> 查看当前仓库的状态，可以看到红色部分就是 <code>untracked</code> 状态的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><p>答案：<code>database.yml</code></p><p>相关:<code>git status</code> 显示有变更的文件</p><h2 id="第十关（Number-of-files-committed）"><a href="#第十关（Number-of-files-committed）" class="headerlink" title="第十关（Number of files committed）"></a>第十关（Number of files committed）</h2><p>其实就是查看处于 staged 状态的文件，图中黄色部分就是，所以个数就是2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><p>相关</p><p><code>git status</code>命令可以列出当前目录所有还没有被git管理的文件和被git管理且被修改但还未提交(git commit)的文件。</p><ul><li>命令中”Changes to be committed“中所列的内容是在Index中的内容，commit之后进入Git Directory。</li><li>命令中“Changed but not updated”中所列的内容是在Working Directory中的内容，add之后将进入Index。</li><li>命令中“Untracked files”中所列的内容是尚未被Git跟踪的内容，add之后进入Index</li></ul><h2 id="第十一关（rm）"><a href="#第十一关（rm）" class="headerlink" title="第十一关（rm）"></a>第十一关（rm）</h2><p>有一个文件从硬盘中删除了，但是并未从 git 仓库中删除，找到它并从 git 仓库中删除。删除也是修改的一种，提交这个修改就好了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line">git rm deleteme.rb</span><br></pre></td></tr></table></figure><p>相关:<br><code>git rm [file1] [file2] ...</code>删除工作区文件，并且将这次删除放入暂存区。</p><h2 id="第十二关（rm-cached）"><a href="#第十二关（rm-cached）" class="headerlink" title="第十二关（rm cached）"></a>第十二关（rm cached）</h2><p>讲一个新文件从 <code>staging area</code> 中删除。按照要求，不应该直接从硬盘上删除这个文件，只是从 Git 中删除而已。加上<code> --cache</code> 可以是文件只是从 <code>staging area</code> 中移除，不会真正的删除物理文件，如果要连这个物理文件也一起删除，请使用 <code>-f</code> 选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line">git rm --cached deleteme.rb</span><br></pre></td></tr></table></figure><p>相关:</p><p><code>git rm --cached [file]</code> 停止追踪指定文件，但该文件会保留在工作区。</p><h2 id="第十三关（stash）"><a href="#第十三关（stash）" class="headerlink" title="第十三关（stash）"></a>第十三关（stash）</h2><p>临时提交某个文件。这个操作在需要临时保存修改，而又不想提交的时候特别好用！而且 git 中维护了一个栈来保存，所以支持提交多次。如果需要恢复某次提交，使用 git stash apply 即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line">git stash</span><br><span class="line">git status</span><br></pre></td></tr></table></figure><p>相关:</p><ul><li><code>git stash</code> 用于保存和恢复工作进度。</li><li><code>git stash</code> 保存当前的工作进度。会分别对暂存区和工作区的状态进行保存。</li><li><code>git stash list</code> 显示进度列表。</li><li><code>git stash pop</code> [–index] [<stash>] 如果不使用任何参数，会恢复最新保存的工作进度，并将恢复的工作进度从存储的工作进度列表中清除。<br>如果提供<stash>参数（来自git stash list显示的列表），则从该<stash>中恢复。恢复完毕 也将从进度列表中删除<stash>。选项–index除了恢复工作区的文件外，还尝试恢复暂存区。</li><li><code>git stash [save [--patch] [-k|--[no]keep-index] [-q|--quiet] [&lt;message&gt;]]</code> 这是第一条命令的完整版。</li><li>使用参数<code>--patch</code>会显示工作区和HEAD的差异，通过对差异文件的编辑决定在进度中最终要保存的工作区的内容，通过编辑差异文件可以在进度中排除无关内容。</li><li>使用<code>-k</code>或者<code>--keep-index</code>参数，在保存进度后不会将暂存区重置。默认会将暂存区和工作区强制重置。</li><li><code>git stash apply [--index] [&lt;stash&gt;]</code> 除了不删除恢复的进度之外，其余和git stash pop 命令一样。</li><li><code>git stash drop [&lt;stash&gt;]</code> 删除一个存储的进度。默认删除最新的进度。<br>-<code>git stash clear</code>删除所有存储的进度。<br>-<code> git stash branch &lt;branchname&gt; &lt;stash&gt;</code> 基于进度创建分支。</li></ul><h2 id="第十四关（Rename"><a href="#第十四关（Rename" class="headerlink" title="第十四关（Rename)"></a>第十四关（Rename)</h2><p>重命名文件。首先这个文件需要是已经是已追踪状态，才可以使用<code> git mv</code> 命令，操作完成后自动处于 <code>staging</code> 状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git mv oldfile.txt newfile.txt</span><br></pre></td></tr></table></figure><p>相关:<code>git mv</code> 重命名文件</p><h2 id="第十五关（Restructure）"><a href="#第十五关（Restructure）" class="headerlink" title="第十五关（Restructure）"></a>第十五关（Restructure）</h2><p>移动所有 <code>.html</code> 文件到 <code>src</code> 文件夹。<code>git mv</code> 后面的第二个参数可以接受文件或目录，如果是目录，则文件会直接放入目录内，可以使用正则（glob模式）匹配所有 <code>.html</code> 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir src</span><br><span class="line">git mv *.html src/</span><br></pre></td></tr></table></figure><p>相关:</p><ul><li><p>mkdir(make directory) Mkdir 是一个用来在 Linux 系统下创建目录的命令。此命令属于内建命令。</p></li><li><p><code>mkdir test1</code> 默认情况下不带任何参数运行mkdir命令会在当前目录下创建目录。</p></li><li><p><code>mkdir test2[ test22 test222]</code> 创建多个目录。</p></li><li><p><code>mkdir -p test3/test33</code> 递归创建多个目录。例如创建的目录包含子目录，如果找不到父目录，那么这个参数会首先帮助创建父目录。</p></li><li><p><code>mkdir -m=r test4</code> 使用-m参数，给生成的新目录设置权限。参考：工作中常用Linux命令：mkdir命令</p></li><li><p><code>mkdir -v test5</code> 创建目录显示信息。</p></li></ul><h2 id="第十六关（Log）"><a href="#第十六关（Log）" class="headerlink" title="第十六关（Log）"></a>第十六关（Log）</h2><p>找到最新的 commit 的 hash 值。使用 git log 查看历史提交记录, 找到最新的 commit 的 hash 值，记录下来用户回答问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure><p>答案为：<code>34b2fd7(commit</code>后 前7位)</p><p>这里是按照倒叙排列的，最新的在最前面，<code>commit</code> 关键字后面跟着的就是这个 <code>commit</code> 的<code> hash</code>值</p><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fobq12k0igj20fs03ft9a.jpg"></p><p>相关:</p><p>git log 显示当前分支的版本历史。</p><ul><li><code> git log --stat</code> 显示commit历史，以及每次commit发生变更的文件</li><li><code>git log -s [keyword]</code> 搜索提交历史，根据关键词</li><li><code>git log -p [file]</code> 显示指定文件相关的每一次diff</li><li><code>git log -5 --pretty --oneline</code> 显示过去5次提交</li><li><code>git log --follow [file</code>]<br><code> git whatchanged [file]</code> 显示某个文件的版本历史，包括文件改名</li><li><code>git log [tag] HEAD --pretty-format:%s</code> 显示某个commit之后的所有变动，每个commit占据一行</li><li><code>git log [tag] HEAD --grep feature</code> 显示某个commit之后的所有变动，其“提交说明”必须符合搜索条件</li></ul><h2 id="第十七关（Tag）"><a href="#第十七关（Tag）" class="headerlink" title="第十七关（Tag）"></a>第十七关（Tag）</h2><p>为最新的 commit 打 <code>tag</code>。不加额外参数就是为当前 <code>commit</code> 记录<code> tag</code>, 当然可以为特定的 <code>commit</code> 打</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag new_tag</span><br></pre></td></tr></table></figure><p>相关:</p><ul><li><code>git tag</code> 列出所有的tag，在控制台打印出当前仓库的所有标签</li><li><code>git tag [tag]</code> 新建一个tag在当前commit</li><li><code>git tag [tag] [commit]</code> 新建一个tag在指定commit</li><li><code>git tag d [tag]</code> 删除本地tag</li></ul><h2 id="第十八关（Push-tags）"><a href="#第十八关（Push-tags）" class="headerlink" title="第十八关（Push tags）"></a>第十八关（Push tags）</h2><p>将所有本地 tag 都推送到远端。–tags 参数代表将所有的 tags 都推送到远端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push --tags origin master</span><br></pre></td></tr></table></figure><p>相关：</p><p>默认 <code>git push</code> 不会罢 tag 标签传送到远端服务器上，只有通过显示命令才能分享标签到远端仓库。</p><ul><li><code> git push origin [tagname] push</code> 单个 tag</li><li><code>git push [origin] --tags push</code> 所有 tag</li></ul><h2 id="第十九关（Commit-amend）"><a href="#第十九关（Commit-amend）" class="headerlink" title="第十九关（Commit amend）"></a>第十九关（Commit amend）</h2><p>某个文件在上次提交中遗漏了，在那次提交中补上这个文件。 其实，使用<code> git commit --amend</code> 会进入编辑界面修改备注信息，我这里直接 <code>:wq</code> 保存并退出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line">git add forgotten_file.rb</span><br><span class="line">git commit --amend -m &#x27;message&#x27;</span><br></pre></td></tr></table></figure><p>相关:</p><p><code>git commit --amend</code> 合并缓存区的修改和最近的一次commit, 然后用生成的新的commit替换掉老的. 如果缓存区没有内容, 那么利用amend可以修改上一次commit的描述.</p><h2 id="第二十关（Commit-in-feature）"><a href="#第二十关（Commit-in-feature）" class="headerlink" title="第二十关（Commit in feature）"></a>第二十关（Commit in feature）</h2><p> 为提交指定一个未来的时间。<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git commit --date 2016.10.08 -m &#x27;message&#x27;</span><br><span class="line">#或者</span><br><span class="line">git commit --date=05.01.2018T14:00:00</span><br></pre></td></tr></table></figure><br> 相关:<code>git commit --date &lt;date&gt; </code>修改提交时间</p><h2 id="第二十一关（Reset）"><a href="#第二十一关（Reset）" class="headerlink" title="第二十一关（Reset）"></a>第二十一关（Reset）</h2><p>两个文件都被添加到了 staging area, 但是只想提交其中一个。使用 git reset 可以用仓库中的版本覆盖 <code>staging area</code> 的版本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line">git reset HEAD to_commit_second.rb</span><br></pre></td></tr></table></figure><ul><li><code>git reset </code>使用仓库中的版本覆盖 <code>staging area</code> 中的，如果 <code>working directory</code> 该文件没有其他修改，则 <code>staging area</code> 中的修改将应用到 <code>working directory</code> 中。反之<code>working directory</code> 中的版本将被保留，丢弃 <code>staging area </code>中的修改。</li><li><code>git checkout</code> 则是使用 <code>staging area</code> 的中的版本覆盖 <code>working directory</code>。</li></ul><p>相关:<br>reset 命令移动 HEAD 到当前分支的一个 commit， 这可以用来撤销当前分支的一些 commit</p><ul><li><code>git reset [-q] [commit] [--] &lt;paths&gt;</code> 第一种用法是不会重置引用的，即不会修改master文件。</li><li><code>git reset [--soft | --mixed | --hard | --merge | --keep] [-q] [&lt;commit&gt;]</code><br>第二种用法不使用&lt; paths &gt; 则会重置引用，并且参数不同决定是否覆盖暂存区和工作区：</li><li><code>git reset -mixed</code> 此为默认方式，不带任何参数的git reset，会退到某个版本只保留源码，回退commit和index信息，staged snapshot 被更新， working directory 未被更改。</li><li><code>git reset -soft</code> 回退到某个版本，只回退了commit信息，staged snapshot 和 working directory 都未被改变 (建议在命令行执行后，再输入 git status 查看状态)</li><li><code>git reset -hard </code>彻底回退到某个版本，本地的源码也会变为上一个版本的内容，即staged snapshot 和 working directory 都将回退</li></ul><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#回退所有内容到上一版本 HEAD^的意思是最近一次的提交</span><br><span class="line">git reset HEAD^</span><br><span class="line">#回退a.py这个文件的版本到上一个版本</span><br><span class="line">git reset HEAD^ a.py</span><br><span class="line">#向前回退到第3个版本</span><br><span class="line">git reset –soft HEAD~3</span><br><span class="line">#将本地的状态回退到和远程的一样</span><br><span class="line">git reset –hard origin/master</span><br><span class="line">#回退到某个版本</span><br><span class="line">git reset 38679ed</span><br><span class="line">#回退到上一次提交的状态，按照某一次的commit完全反向的进行一次commit</span><br><span class="line">git revert HEAD</span><br></pre></td></tr></table></figure><h2 id="第二十二关（Reset-soft）"><a href="#第二十二关（Reset-soft）" class="headerlink" title="第二十二关（Reset soft）"></a>第二十二关（Reset soft）</h2><p>撤销上一次提交。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --soft HEAD^1</span><br></pre></td></tr></table></figure><p>相关：</p><ul><li><code>--soft</code> 参数将上一次的修改放入 staging area</li><li><code>--mixed </code>参数将上一次的修改放入 working directory</li><li><code>--hard</code> 参数直接将上一次的修改抛弃</li></ul><h2 id="第二十三关（Checkout-file）"><a href="#第二十三关（Checkout-file）" class="headerlink" title="第二十三关（Checkout file）"></a>第二十三关（Checkout file）</h2><p>抛弃某一次的修改，使用上次提交的版本。checkout 和 reset 的区别参照第二十一关</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout config.rb</span><br></pre></td></tr></table></figure><p>相关:<br><code>git checkou</code>t 检出。</p><ul><li>创建分支<code> git branch branchName</code></li><li>切换分支<code>git checkout branchName</code></li><li>上面两个命令可以合成一个命令 <code>git checkout -b branchName</code></li></ul><h2 id="第二十四关（Remote）"><a href="#第二十四关（Remote）" class="headerlink" title="第二十四关（Remote）"></a>第二十四关（Remote）</h2><p>查看远端仓库。其实可以不加<code>-v</code>参数，加这个参数只是可以将地址也一起输出(没想到下一关就是考察这个参数，平常习惯加这个参数了。)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p>答案：my_remote_repo</p><p>相关:</p><ul><li><code>git remote</code> 不带参数，列出已经存在的远程分支</li><li><code>git remote -v --verbose</code> 列出详细信息，在每个名字后面</li><li><code>git clone -o jQuery https://github.com/jquery/jquery.git</code><br><code>git remote</code> 想用其他的主机名 需要用 git clone命令的 -o 选项指定</li><li><code>git remote show &lt;主机名&gt; </code>可以查看主机的详细信息</li><li><code>git remote add &lt;主机名&gt; &lt;网址&gt;</code> 添加远程主机</li><li><code>git remote rm &lt;主机名&gt;</code> 删除远程主机</li><li><code>git remore rename &lt;原主机名&gt; &lt;新主机名&gt;</code> 远程主机的改名</li><li><code>tail .git/config</code> 查看remote信息。</li></ul><h2 id="第二十五关（remote-url）"><a href="#第二十五关（remote-url）" class="headerlink" title="第二十五关（remote url）"></a>第二十五关（remote url）</h2><p>查看远端仓库的 URL<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><br>答案：<code>https://github.com/githug/not_a_repo</code></p><h2 id="第二十六关（pull）"><a href="#第二十六关（pull）" class="headerlink" title="第二十六关（pull）"></a>第二十六关（pull）</h2><p>拉取远端仓库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><p>相关:</p><ul><li>git push origin master 的意思就是上传本地当前分支代码到master分支<br>其实可以指定分支，格式如下</li><li><code>git pull origin remote : local</code><br>对应的推送的格式如下</li><li><code>git push origin local : remote</code><br>需要注意的两个操作的分支顺序是相反的，记忆的方法很简单，拉取是从远端到本地，所以远端在前，而推送是从本地到远端，所以本地在前。</li></ul><h2 id="第二十七关（Remote-add）"><a href="#第二十七关（Remote-add）" class="headerlink" title="第二十七关（Remote add）"></a>第二十七关（Remote add）</h2><p>添加一个远端仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/githug/githug</span><br></pre></td></tr></table></figure><h2 id="第二十八关（Push）"><a href="#第二十八关（Push）" class="headerlink" title="第二十八关（Push）"></a>第二十八关（Push）</h2><p>推送本地修改到远端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git rebase origin master</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>相关:<br><code>git rebase</code>用于把一个分支的修改合并到当前分支。</p><h2 id="第二十九关（Diff）"><a href="#第二十九关（Diff）" class="headerlink" title="第二十九关（Diff）"></a>第二十九关（Diff）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff app.rb</span><br></pre></td></tr></table></figure><p>答案：26</p><p>相关：</p><ul><li><code>git diff app.rb</code>查看文件改动<br>查看 <code>staging area</code> 和 <code>working directory</code> 中文件的差异。</li><li><code>git diff</code>: 查看 working directory 与 staging area 之间的差异</li><li><code>git diff --cached</code>: 查看 repository 与 staging area 之间的差异</li><li><code>git diff HEAD</code>: 查看 working directory 与 repository 之间的差异</li></ul><h2 id="第三十关（Blame）"><a href="#第三十关（Blame）" class="headerlink" title="第三十关（Blame）"></a>第三十关（Blame）</h2><p>查看某个文件的修改人。这个命令简直邪恶，锅终于有人背了！！！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git blame config.rb</span><br></pre></td></tr></table></figure><p>答案：Spider Man</p><p>相关:<br>git blame得到整个文件的每一行的详细修改信息:包括SHA串,日期和作者。</p><h2 id="第三十一关（Branch）"><a href="#第三十一关（Branch）" class="headerlink" title="第三十一关（Branch）"></a>第三十一关（Branch）</h2><p>创建一个分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch test_code</span><br><span class="line">git branch</span><br></pre></td></tr></table></figure><h2 id="第三十二关（Checkout）"><a href="#第三十二关（Checkout）" class="headerlink" title="第三十二关（Checkout）"></a>第三十二关（Checkout）</h2><p>创建一个分支，并切换过去。其实，<code>git checkout -b my_branch</code> 就是创建一个分支，并切换过去，而且这种方法更方便，平常用的更多</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b my_branch</span><br></pre></td></tr></table></figure><h2 id="第三十三关（Checkout-tag）"><a href="#第三十三关（Checkout-tag）" class="headerlink" title="第三十三关（Checkout tag）"></a>第三十三关（Checkout tag）</h2><p>切换到某个特定的 tag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git tag</span><br><span class="line">git checkout v1.2</span><br></pre></td></tr></table></figure><p>相关:<br>标签可以针对某一时间点的版本做标记，常用于版本发布。</p><p>列出标签</p><ul><li><code>Git tag</code> 在控制台打印出当前仓库的所有标签</li><li><code>git tag -l &#39;v0.1.*&#39;</code> 搜索符合模式的标签<br>打标签 git标签分为两种类型：轻量标签和附注标签。轻量标签是指向提交对象的引用，标注标签则是仓库中的一个独立对象。建议使用附注标签。</li><li><code>git tag v0.1.2-light</code>创建轻量标签</li><li><code>git tag -a v0.1.2 -m &quot;0.1.2</code>版本”创建附注标签</li><li><code>git tag -a v0.1.1 9fbc3d0 </code>给指定的commit打标签<br>切换到标签</li><li><code>git checkout [tagname] </code>查看标签信息</li><li><code>git show v0.1.2 </code>查看标签的版本信息<br>删除标签</li><li><code>git tag -d v0.1.2</code> 删除标签<br>标签发布 git push 不会将标签对象提交到git服务器，我们需要进行显示的操作：</li><li><code>git push origin v0.1.2 </code>将标签提交到git服务器</li><li><code>git push origin -tags </code>将本地所有标签一次性提交到git服务器</li></ul><h2 id="第三十四关（Checkout-tag-over-branch）"><a href="#第三十四关（Checkout-tag-over-branch）" class="headerlink" title="第三十四关（Checkout tag over branch）"></a>第三十四关（Checkout tag over branch）</h2><p>切换到某个特定的分支，但是分支名和标签名重叠了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout tags/v1.2</span><br></pre></td></tr></table></figure><p>相关:<br><code>git checkout tags/v1.2</code> 当标签和分支名相同时，需要指定标签检出</p><h2 id="第三十五关（branch-at）"><a href="#第三十五关（branch-at）" class="headerlink" title="第三十五关（branch at）"></a>第三十五关（branch at）</h2><p>根据一个特定的提交创建新分支</p><p>一种方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch test_branch HEAD^1</span><br></pre></td></tr></table></figure><p>第二种方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br><span class="line">git branch test_branch -v 00740b4</span><br></pre></td></tr></table></figure><p>找到第二条的id，输入前7位</p><h2 id="第三十六关（delete-branch）"><a href="#第三十六关（delete-branch）" class="headerlink" title="第三十六关（delete branch）"></a>第三十六关（delete branch）</h2><p>删除一个分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d delete_me</span><br></pre></td></tr></table></figure><h2 id="第三十七关（Push-branch）"><a href="#第三十七关（Push-branch）" class="headerlink" title="第三十七关（Push branch）"></a>第三十七关（Push branch）</h2><p>将分支推送到远端仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br><span class="line">git push origin test_branch</span><br></pre></td></tr></table></figure><p>相关:</p><ul><li><code>git push origin master</code> 上面命令表示，将本地的master分支推送到origin主机的master分支。如果后者不存在，则会被新建。</li><li><code>git push origin :maste</code>r省略本地的分支名,则表示删除指定的远程分支，因为这等同与推送一个空的本地分支到远程分支。等同于：git push origin –delete master</li><li><code>git push origin </code>如果当前分支与远程分支直接存在追踪关系，则本地分支和远程分支都可以省略</li><li><code>git push</code> 如果当前分支只有一个追踪分支，那么主机名都可以省略</li><li><code>git push -u origin master</code> 如果当前分支和多个主机存在追踪关系，则可以使用 -u 选项指定一个默认主机，这样后面就可以不加任何参数使用 git push</li><li><code>git push --all origin </code>不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机。</li><li><code>git push origin --tags git push</code> 不会推送标签（tag），除非使用 -tags 选项</li></ul><h2 id="第三十八关（merge）"><a href="#第三十八关（merge）" class="headerlink" title="第三十八关（merge）"></a>第三十八关（merge）</h2><p>合并分支。为了简化分支模型，可以使用 <code>rebase</code> 代替，后续关卡会遇到。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge feature</span><br></pre></td></tr></table></figure><p>相关:<br><code>git merge</code>合并分支</p><h2 id="第三十九关（fetch）"><a href="#第三十九关（fetch）" class="headerlink" title="第三十九关（fetch）"></a>第三十九关（fetch）</h2><p>获取远端的修改，但是并不合并到当前分支。其实，<code>git pull</code> 就是 <code>git fetch</code> 和 <code>git merge</code> 组成的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin</span><br></pre></td></tr></table></figure><p>相关:<br><code>git fetch origin master </code>取回origin主机的master分支</p><h2 id="第四十关（rebase）"><a href="#第四十关（rebase）" class="headerlink" title="第四十关（rebase）"></a>第四十关（rebase）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout feature</span><br><span class="line">git rebase master</span><br></pre></td></tr></table></figure><p>相关：</p><ul><li>其实不知道怎么翻译 git rebase 这个命令。大概意思是从某个提交分化出两个分支，然后其中一个分支需要将另一个分支的修改合并过来，但是又不想在提交记录上留下两个分支合并的痕迹，只留下一个分支以前后顺序记录两边的修改。</li><li><code>git rebase</code> 一个分支的所有修改在另一个分支上重新应用一遍，所以在提交记录上看，会发现一个分支的所有提交在另一个分支之前或者之后。然后删除另一个被合并的分支，保持分支简洁。</li><li><code>git rebase master feature </code>表示将 <code>feature</code> 上的修改在 <code>master</code> 上重新应用一遍</li><li>git rebase 命令主要用在从上游分支获取commit信息，并有机的将当前分支和上游分支进行合并</li></ul><p><code>git rebase [-i | --interactive] [options] [--onto ] []</code></p><p><code>git rebase [-i | --interactive] [options] –onto –root []</code></p><p><code>git rebase –continue | –skip | –abort</code></p><h2 id="第四十一关（rebase-onto）"><a href="#第四十一关（rebase-onto）" class="headerlink" title="第四十一关（rebase_onto）"></a>第四十一关（rebase_onto）</h2><p>将版本库未打包的松散对象打包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase --onto master wrong_branch</span><br></pre></td></tr></table></figure><p>相关:<br><code>git rebase --onto A B C A </code>代表的是你实际想要将切片放到哪个分支，B代表切片开始分支（一定要注意的问题是 B 的开闭问题，这里 rebase –onto 的机制是左开右闭）。</p><p><code>git rebase --onto A B~1 temp</code> 如果想要保留A和C的历史，就需要先在切片的末尾建立一个分支temp。这就代表把B到c之间的历史移到了A上，并且当前temp分支的历史状态就是窝想要的。</p><h2 id="第四十二关（repack）"><a href="#第四十二关（repack）" class="headerlink" title="第四十二关（repack）"></a>第四十二关（repack）</h2><p>应用某一个提交的修改。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git repack -d</span><br></pre></td></tr></table></figure><p>相关:<br>g<code>it repack [-a] [-A] [-d] [-f] [-F] [-l] [-n] [-q] [-b] [--window=&lt;n&gt;] [--depth=&lt;n&gt;]</code></p><p><code>git repack -d </code>包装后，如果新创建的包使一些现有的包冗余，删除多余的包。同时运行 <code>git prune-packed</code> 去除多余的松散对象文件。</p><h2 id="第四十三关-（cherry-pick"><a href="#第四十三关-（cherry-pick" class="headerlink" title="第四十三关 （cherry-pick"></a>第四十三关 （cherry-pick</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br><span class="line">git log new-feature</span><br><span class="line">$git cherry-pick ca32a6da</span><br></pre></td></tr></table></figure><p>相关:<br><code>Git cherry-pick</code> 可以选择某一个分支中的一个或几个commit来进行操作</p><p><code>git grep</code>支持各种条件搜索及正则表达式，平时用的不多，但感觉功能强大。</p><h2 id="第四十四关（grep）"><a href="#第四十四关（grep）" class="headerlink" title="第四十四关（grep）"></a>第四十四关（grep）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git grep TODO</span><br></pre></td></tr></table></figure><p>相关:</p><ul><li><code>git grep</code> 查找git库里面的某段文字</li><li><code>git grep xmmap</code> 查看git里面这个仓库里每个使用 ‘xmmap’ 函数的地方。</li><li><code>git grep -n xmmap</code> 显示行号。</li><li><code>git grep --name-only xmmap</code> 只显示文件名。</li><li><code>git grep -c xmmap</code> 查看每个文件里有多少行匹配内容（line matches）。</li><li><code>git grep xmmap v1.5.0</code> 查找git仓库里某个特定版本里的内容，在命令行末尾加上表签名（tag reference）。</li><li><code>git grep -e &#39;#define&#39; --and -e SORT_DIRENT</code> 组合搜索条件：查找在仓库的哪些地方定义了‘SORT_DIRENT’。</li><li><code>git grep --all-match -e &#39;#define&#39; -e SORT_DIRENT </code>进行或条件搜索。</li></ul><h2 id="第四十五关（rename-commit）"><a href="#第四十五关（rename-commit）" class="headerlink" title="第四十五关（rename commit）"></a>第四十五关（rename commit）</h2><p>重命名提交。当涉及提交修改时，应该想到 <code>git rebase -i</code> 命令，它接受可以一个参数（提交的哈希值），它将罗列出此提交之后的所有提交，然后可以对个个提交做对应的操作。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git log master</span><br><span class="line">git rebase -i HEAD~2</span><br></pre></td></tr></table></figure><p>查看历史提交记录，看到需要修改的为倒数第二个，进入编辑页面，将需要改动的行的·改为·。保存退出后在弹出的第二个窗口里修改拼写错误 <code>commmit</code> 改为 <code>commit</code></p><h2 id="第四十六关（squash）"><a href="#第四十六关（squash）" class="headerlink" title="第四十六关（squash）"></a>第四十六关（squash）</h2><p>合并多个提交。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase -i HEAD~4</span><br></pre></td></tr></table></figure><p>将后三个改为s</p><p>为新的提交修改备注</p><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fobqvy1midj20fu07b0tz.jpg"></p><h2 id="第四十七关（merge-squash）"><a href="#第四十七关（merge-squash）" class="headerlink" title="第四十七关（merge squash）"></a>第四十七关（merge squash）</h2><p>将某个分支上的所有修改都应用成一个提交。默认修改都将进入暂存区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line">git merge --squash long-feature-branch</span><br><span class="line">git commit -m &#x27;message</span><br></pre></td></tr></table></figure><p>相关:<br><code>--squash</code> 选项的含义是：本地文件内容与不使用该选项的合并结果相同，但是不提交、不移动 HEAD ,因此需要一条额外的commit命令。其效果相当于将 another 分支上的多个 commit 合并成一个，放在当前分支上，原来的 commit 历史则没有拿过来。</p><h2 id="第四十八关-reorder"><a href="#第四十八关-reorder" class="headerlink" title="第四十八关(reorder()"></a>第四十八关(reorder()</h2><p>重新排列提交顺序。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br><span class="line">git rebase -i HEAD~2</span><br></pre></td></tr></table></figure><p>查看历史记录发现提交顺序错误，将前两行顺序调换。</p><h2 id="第四十九关-bisect"><a href="#第四十九关-bisect" class="headerlink" title="第四十九关(bisect)"></a>第四十九关(bisect)</h2><p>使用 <code>git log</code> 查看所有的提交记录，太长我就不全贴出来了，找到最开始的提交<code>git bisect start master f608824888b83</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git log --reverse -p prog.rb</span><br><span class="line">git bisect start master f6088248</span><br><span class="line">git bisect run make test</span><br></pre></td></tr></table></figure><p>查看最初一次为正确提交，得到版本号。执行完毕后日志里找到 “is the first bad commit” ,得到 18ed2ac。</p><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fobqyexrrfj20g90a60uy.jpg"></p><p><code>git bisect start master f608824888b83</code>中，master 是有 bug 的节点，<code>f608824888b83 </code>是没有 bug 的节点。</p><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fobr0w8f7yj20g90m8q62.jpg"></p><p>相关:</p><ul><li><code>git bisect start</code></li><li><code>git bisect good fb088248</code></li><li><code>git bisect bad master</code></li><li><code>git bisect run make test</code></li><li><code>git bisect reset</code> 回到之前执行 <code>git bisect start</code> 的状态。</li></ul><h1 id="第五十关（Stage-lines）"><a href="#第五十关（Stage-lines）" class="headerlink" title="第五十关（Stage lines）"></a>第五十关（Stage lines）</h1><p>其实，提交文件的部分修改这种需求平时还是比较常见的，不过平时都是用 Source Tree 来操作的，但是看到这题之后，好像又开启了一扇大门。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line">git add -p feature.rb</span><br><span class="line">git diff</span><br><span class="line">git status</span><br></pre></td></tr></table></figure><p>输入i编辑提交内容，删除第二个。</p><h2 id="第五十一关（Find-old-branch）"><a href="#第五十一关（Find-old-branch）" class="headerlink" title="第五十一关（Find old branch）"></a>第五十一关（Find old branch）</h2><p>git reflog 可以列出所有的操作记录，所以找到之前忘记的信息并不是什么难事</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reflog</span><br><span class="line">git checkout solve_world_hunger</span><br></pre></td></tr></table></figure><p>相关:</p><ul><li><code>reflog</code> 是 git 用来记录引用变化的一种机制。</li><li><code>git reflog</code> 命令可以对 git 误操作进行数据恢复。</li></ul><h2 id="第五十二关（Revert）"><a href="#第五十二关（Revert）" class="headerlink" title="第五十二关（Revert）"></a>第五十二关（Revert）</h2><p>与 <code>reset</code> 不同的是，<code>revert</code> 只会撤销当前的 <code>commit</code>，而之后的 <code>commit</code> 操作的修改还会保留，但是<code>reset</code> 还会将之后的所有<code> commit</code> 操作的修改全部退回 <code>staging area </code>或丢弃。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br><span class="line">git revert HEAD^1</span><br></pre></td></tr></table></figure><p>相关:</p><p>修复提交文件中的错误：</p><ul><li><code>git reset --hard HEAD</code> 把工作目录中所有未提交的内容清空。</li><li><code>git checkout </code>恢复一个文件</li><li><code>git revert HEAD</code> 撤销一次提交</li></ul><h2 id="第五十三关（Restore）"><a href="#第五十三关（Restore）" class="headerlink" title="第五十三关（Restore）"></a>第五十三关（Restore）</h2><p>根据之前的经验，<code>git reflog</code> 可以查看所有的操作记录，所以只要能找到误操作之前的 <code>commit id</code>，一样能够恢复现场。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reflog</span><br><span class="line">git checkout bdbe33d</span><br></pre></td></tr></table></figure><p>相关:</p><p>恢复已修改的文件：</p><h2 id="第五十四关（Conflict）"><a href="#第五十四关（Conflict）" class="headerlink" title="第五十四关（Conflict）"></a>第五十四关（Conflict）</h2><p>冲突处理在平常的协同工作中真是再常见不过了，需要注意的是存在冲突的文件是在 <code>working directory</code> 中的，在解决完冲突之后需要添加到 <code>staging area</code> 并提交。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br><span class="line">git merge mybranch</span><br><span class="line">vim poem.txt</span><br><span class="line">git add poem.txt</span><br><span class="line">git commit -m &#x27;message</span><br></pre></td></tr></table></figure><p>相关：</p><p>其实冲突解决完成的图片丢失了，只能口述了。</p><p><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</code> 到 <code>=======</code> 之间的内容代表 <code>master</code> 分支的修改，<code>=======</code> 到 <code>&gt;&gt;&gt;&gt;&gt;&gt; mybranch</code> 之间的内容代表 <code>mybranch</code> 分支的修改，保留 <code>mybranch</code> 分支的修改，删除<code>master</code> 分支的修改即可，当然这些特殊符号所在行也要一并删除。</p><p><img src="https://ws1.sinaimg.cn/large/d71f8b2fgy1fobr4vbhrwj20fu04ut90.jpg"></p><h2 id="第五十五关（Submodule）"><a href="#第五十五关（Submodule）" class="headerlink" title="第五十五关（Submodule）"></a>第五十五关（Submodule）</h2><p><code>submodule </code>是一个很方便的将一个仓库分解成多个子模块的命令，特别是项目比较大且依赖其他 Git 项目的时候，比如 <code>Cocos2d-x</code>。虽然好用，但是门槛也相对高点，如果维护好 <code>submodule </code>还是需要好好研究一下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule add http://github.com/jackmaney/githug-include-me</span><br></pre></td></tr></table></figure><p>相关:</p><ul><li><code>git submodule add</code> 子模块仓库地址 路径</li></ul><h2 id="第五十六关（Contribute）"><a href="#第五十六关（Contribute）" class="headerlink" title="第五十六关（Contribute）"></a>第五十六关（Contribute）</h2><p>其实到这里已经可以算是通关，如果感兴趣的话可以到 GitHub 为这个项目贡献代码。</p><p>参考：<br><a href="http://ryeeeeee.com/2016/01/04/Githug-Guide/">Ryeeeeee</a><br><a href="https://www.jianshu.com/p/e8e6358e81e0">风花花</a></p>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Termux </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Termux 安装 Linux</title>
      <link href="/posts/TermuxLinux.html"/>
      <url>/posts/TermuxLinux.html</url>
      
        <content type="html"><![CDATA[<p>Termux安装Linux</p><span id="more"></span><h1 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h1><p>添加源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [trusted=yes] https://yadominjinta.github.io/files/ termux    extras&quot;</span> &gt;&gt; <span class="variable">$PREFIX</span>/etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install atilo-cn -y</span><br></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">atilo [命令] [参数]</span><br></pre></td></tr></table></figure><p>安装 Linux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">atilo ubuntu</span><br></pre></td></tr></table></figure><p>运行 linux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">startubuntu</span><br></pre></td></tr></table></figure><h2 id="设置中文"><a href="#设置中文" class="headerlink" title="设置中文"></a>设置中文</h2><p>修改&#x2F;etc&#x2F;locale.gen</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">locale-gen zh_CN.UTF-8</span><br><span class="line"><span class="built_in">export</span> LC_ALL=<span class="string">&quot;zh_CN.UTF-8&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 多设备源码同步</title>
      <link href="/posts/HexoDevices.html"/>
      <url>/posts/HexoDevices.html</url>
      
        <content type="html"><![CDATA[<p>Hexo 多设备源码同步</p><span id="more"></span><h1 id="主设备操作"><a href="#主设备操作" class="headerlink" title="主设备操作"></a>主设备操作</h1><h2 id="部署-Hexo"><a href="#部署-Hexo" class="headerlink" title="部署 Hexo"></a>部署 Hexo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在本地博客根目录下安装 hexo</span></span><br><span class="line">npm install -g  hexo-cli</span><br><span class="line"><span class="comment"># 初始化hexo</span></span><br><span class="line">npm init</span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">npm install</span><br><span class="line"><span class="comment"># 安装部署相关的配置</span></span><br><span class="line">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure><h2 id="Push-源码"><a href="#Push-源码" class="headerlink" title="Push 源码"></a>Push 源码</h2><ul><li>新建分支后,在本地博客根目录下使用 git 指令上传项目到 Github</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git初始化</span></span><br><span class="line">git init</span><br><span class="line"><span class="comment"># 添加仓库地址</span></span><br><span class="line">git remote add origin https://github.com/iVitan/ivitan.github.io.git</span><br><span class="line"><span class="comment"># 新建分支并切换到新建的分支</span></span><br><span class="line">git checkout -b hexo</span><br><span class="line"><span class="comment"># 添加所有本地文件到git</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment"># git提交</span></span><br><span class="line">git commit -m <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 文件推送到hexo分支</span></span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure><h1 id="其他设备操作"><a href="#其他设备操作" class="headerlink" title="其他设备操作"></a>其他设备操作</h1><p>克隆Github分支上的文件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b hexo  https://github.com/iVitan/ivitan.github.io.git</span><br></pre></td></tr></table></figure><p>安装 Hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装hexo</span></span><br><span class="line">npm install -g hexo-cli</span><br><span class="line"><span class="comment"># 注意这里不需要hexo初始化：hexo init；否则之前的hexo配置参数会重置</span></span><br><span class="line"><span class="comment"># 安装依赖库</span></span><br><span class="line">npm install</span><br><span class="line"><span class="comment"># 安装部署相关配置</span></span><br><span class="line">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure><p>主题 cutie</p><ul><li><p><a href="https://github.com/qutang/hexo-theme-cutie/releases/latest">下载</a></p></li><li><p>相关 npm</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm un hexo-renderer-marked --save</span><br><span class="line">npm i hexo-renderer-markdown-it --save</span><br><span class="line">npm i markdown-it-emoji --save</span><br><span class="line">npm i markdown-it-mark --save</span><br><span class="line">npm i markdown-it-deflist --save</span><br><span class="line">npm i markdown-it-container --save</span><br></pre></td></tr></table></figure><p>更新文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;tittle&quot;</span></span><br></pre></td></tr></table></figure><ul><li>分别同步到master,hexo分支</li></ul><h2 id="后续-Push"><a href="#后续-Push" class="headerlink" title="后续 Push"></a>后续 Push</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加源文件</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment"># Git 提交</span></span><br><span class="line">git commit -m <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 先拉原来Github分支上的源文件到本地，进行合并</span></span><br><span class="line"><span class="comment"># 分支名后面的“--allow-unrelated-histories”是为了弹出“fatal: refusing to merge unrelated histories.”的错误</span></span><br><span class="line">git pull origin hexo --allow-unrelated-histories</span><br><span class="line"><span class="comment"># 比较解决前后版本冲突后，push源文件到Github的分支</span></span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>无法Push</p><ol><li>强制 Push</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -f origin hexo</span><br></pre></td></tr></table></figure><ol start="2"><li>根目录的.gitconfig文件一般写上需要忽略的文件及文件夹</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store      </span><br><span class="line">Thumbs.db      </span><br><span class="line">db.json      </span><br><span class="line">*.<span class="built_in">log</span>      </span><br><span class="line">node_modules/      </span><br><span class="line">public/      </span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> Termux </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 笔记</title>
      <link href="/posts/GitNote.html"/>
      <url>/posts/GitNote.html</url>
      
        <content type="html"><![CDATA[<p>Git 配置笔记。</p><span id="more"></span><h1 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h1><ul><li>文件管理</li></ul><table><thead><tr><th align="left">命令</th><th align="left">解析</th></tr></thead><tbody><tr><td align="left">pwd</td><td align="left">查看当前文件目录</td></tr><tr><td align="left">mkdir</td><td align="left">创建文件</td></tr><tr><td align="left">touch xxx.xx</td><td align="left">创建文件</td></tr><tr><td align="left">git rm xxx</td><td align="left">从git删除文件</td></tr></tbody></table><h1 id="设置-SSH-Key"><a href="#设置-SSH-Key" class="headerlink" title="设置 SSH Key"></a>设置 SSH Key</h1><ul><li><p>配置github账户信息</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Vitan&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;vitan.me@gmail.com&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>创建 SSH</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;vitan.me@gmail.com&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;vitan.me@gmail.com&quot;</span> -f ~/.ssh/vitan-github</span><br></pre></td></tr></table></figure></li><li><p>参数含义：</p><ul><li>t 指定密钥类型，默认即 rsa ，可以省略</li><li>C 设置注释文字，比如你的邮箱</li><li>f 指定密钥文件存储文件名，会生成 vitan-github 和 vitan-github.pub 两个密钥文件</li></ul></li><li><p>复制 Key</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line"><span class="built_in">cat</span> id_rsa.pub</span><br></pre></td></tr></table></figure></li><li><p>验证 SSH</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line">git config --list  <span class="comment">#查看key配置</span></span><br></pre></td></tr></table></figure></li><li><p>查看 Git 配置</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure></li></ul><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> xxxx</span><br><span class="line"><span class="comment">#克隆项目</span></span><br><span class="line">git init</span><br><span class="line"><span class="comment"># 初始化本地git仓库（创建新仓库）</span></span><br><span class="line">git config --global user.name <span class="string">&quot;xxx&quot;</span></span><br><span class="line"><span class="comment"># 配置用户名</span></span><br><span class="line">git config --global user.email <span class="string">&quot;xxx@xxx.com&quot;</span></span><br><span class="line"><span class="comment"># 配置邮件</span></span><br><span class="line">git config --global color.ui <span class="literal">true</span></span><br><span class="line"><span class="comment"># git status等命令自动着色</span></span><br><span class="line">git config --global color.status auto</span><br><span class="line">git config --global color.diff auto</span><br><span class="line">git config --global color.branch auto</span><br><span class="line">git config --global color.interactive auto</span><br><span class="line">git config --global --<span class="built_in">unset</span> http.proxy</span><br><span class="line"><span class="comment"># remove  proxy configuration on git</span></span><br><span class="line">git <span class="built_in">clone</span> git+ssh://git@192.168.53.168/VT.git</span><br><span class="line"><span class="comment"># clone远程仓库</span></span><br><span class="line">git status</span><br><span class="line"><span class="comment"># 查看当前版本状态（是否修改）</span></span><br><span class="line">git add xyz</span><br><span class="line"><span class="comment"># 添加xyz文件至index</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment"># 增加当前子目录下所有更改过的文件至index</span></span><br><span class="line">git commit -m <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line"><span class="comment"># 提交</span></span><br><span class="line">git commit --amend -m <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line"><span class="comment"># 合并上一次提交（用于反复修改）</span></span><br><span class="line">git commit -am <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line"><span class="comment"># 将add和commit合为一步</span></span><br><span class="line">git <span class="built_in">rm</span> xxx</span><br><span class="line"><span class="comment"># 删除index中的文件</span></span><br><span class="line">git <span class="built_in">rm</span> -r *</span><br><span class="line"><span class="comment"># 递归删除</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"><span class="comment"># 显示提交日志</span></span><br><span class="line">git <span class="built_in">log</span> -1</span><br><span class="line"><span class="comment"># 显示1行日志 -n为n行</span></span><br><span class="line">git <span class="built_in">log</span> -5</span><br><span class="line">git <span class="built_in">log</span> --<span class="built_in">stat</span></span><br><span class="line"><span class="comment"># 显示提交日志及相关变动文件</span></span><br><span class="line">git <span class="built_in">log</span> -p -m</span><br><span class="line">git show dfb02e6e4f2f7b573337763e5c0013802e392818</span><br><span class="line"><span class="comment"># 显示某个提交的详细内容</span></span><br><span class="line">git show dfb02</span><br><span class="line"><span class="comment"># 可只用commitid的前几位</span></span><br><span class="line">git show HEAD</span><br><span class="line"><span class="comment"># 显示HEAD提交日志</span></span><br><span class="line">git show HEAD^</span><br><span class="line"><span class="comment"># 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本</span></span><br><span class="line">git tag</span><br><span class="line"><span class="comment"># 显示已存在的tag</span></span><br><span class="line">git tag -a v2.0 -m <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line"><span class="comment"># 增加v2.0的tag</span></span><br><span class="line">git show v2.0</span><br><span class="line"><span class="comment"># 显示v2.0的日志及详细内容</span></span><br><span class="line">git <span class="built_in">log</span> v2.0</span><br><span class="line"><span class="comment"># 显示v2.0的日志</span></span><br><span class="line">git diff</span><br><span class="line"><span class="comment"># 显示所有未添加至index的变更</span></span><br><span class="line">git diff --cached</span><br><span class="line"><span class="comment"># 显示所有已添加index但还未commit的变更</span></span><br><span class="line">git diff HEAD^</span><br><span class="line"><span class="comment"># 比较与上一个版本的差异</span></span><br><span class="line">git diff HEAD -- ./lib</span><br><span class="line"><span class="comment"># 比较与HEAD版本lib目录的差异</span></span><br><span class="line">git diff origin/master..master</span><br><span class="line"><span class="comment"># 比较远程分支master上有本地分支master上没有的</span></span><br><span class="line">git diff origin/master..master --<span class="built_in">stat</span></span><br><span class="line"><span class="comment"># 只显示差异的文件，不显示具体内容</span></span><br><span class="line">git remote add origin git+ssh://git@192.168.53.168/VT.git</span><br><span class="line"><span class="comment"># 增加远程定义（用于push/pull/fetch）</span></span><br><span class="line">git branch</span><br><span class="line"><span class="comment"># 显示本地分支</span></span><br><span class="line">git branch --contains 50089</span><br><span class="line"><span class="comment"># 显示包含提交50089的分支</span></span><br><span class="line">git branch -a</span><br><span class="line"><span class="comment"># 显示所有分支</span></span><br><span class="line">git branch -r</span><br><span class="line"><span class="comment"># 显示所有原创分支</span></span><br><span class="line">git branch --merged</span><br><span class="line"><span class="comment"># 显示所有已合并到当前分支的分支</span></span><br><span class="line">git branch --no-merged</span><br><span class="line"><span class="comment"># 显示所有未合并到当前分支的分支</span></span><br><span class="line">git branch -m master master_copy</span><br><span class="line"><span class="comment"># 本地分支改名</span></span><br><span class="line">git checkout -b master_copy</span><br><span class="line"><span class="comment"># 从当前分支创建新分支master_copy并检出</span></span><br><span class="line">git checkout -b master master_copy</span><br><span class="line"><span class="comment"># 上面的完整版</span></span><br><span class="line">git checkout features/performance</span><br><span class="line"><span class="comment"># 检出已存在的features/performance分支</span></span><br><span class="line">git checkout --track hotfixes/BJVEP933</span><br><span class="line"><span class="comment"># 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支</span></span><br><span class="line">git checkout v2.0</span><br><span class="line"><span class="comment"># 检出版本v2.0</span></span><br><span class="line">git checkout -b devel origin/develop</span><br><span class="line"><span class="comment"># 从远程分支develop创建新本地分支devel并检出</span></span><br><span class="line">git checkout -- README</span><br><span class="line"><span class="comment"># 检出head版本的README文件（可用于修改错误回退）</span></span><br><span class="line">git merge origin/master</span><br><span class="line"><span class="comment"># 合并远程master分支至当前分支</span></span><br><span class="line">git cherry-pick ff44785404a8e</span><br><span class="line"><span class="comment"># 合并提交ff44785404a8e的修改</span></span><br><span class="line">git push origin master</span><br><span class="line"><span class="comment"># 将当前分支push到远程master分支</span></span><br><span class="line">git push origin :hotfixes/BJVEP933</span><br><span class="line"><span class="comment"># 删除远程仓库的hotfixes/BJVEP933分支</span></span><br><span class="line">git push --tags</span><br><span class="line"><span class="comment"># 把所有tag推送到远程仓库</span></span><br><span class="line">git fetch</span><br><span class="line"><span class="comment"># 获取所有远程分支（不更新本地分支，另需merge）</span></span><br><span class="line">git fetch --prune</span><br><span class="line"><span class="comment"># 获取所有原创分支并清除服务器上已删掉的分支</span></span><br><span class="line">git pull origin master</span><br><span class="line"><span class="comment"># 获取远程分支master并merge到当前分支</span></span><br><span class="line">git <span class="built_in">mv</span> README README2</span><br><span class="line"><span class="comment"># 重命名文件README为README2</span></span><br><span class="line">git reset --hard HEAD</span><br><span class="line"><span class="comment"># 将当前版本重置为HEAD（通常用于merge失败回退）</span></span><br><span class="line">git rebase</span><br><span class="line">git branch -d hotfixes/BJVEP933</span><br><span class="line"><span class="comment"># 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支）</span></span><br><span class="line">git branch -D hotfixes/BJVEP933</span><br><span class="line"><span class="comment"># 强制删除分支hotfixes/BJVEP933</span></span><br><span class="line">git ls-files</span><br><span class="line"><span class="comment"># 列出git index包含的文件</span></span><br><span class="line">git show-branch</span><br><span class="line"><span class="comment"># 图示当前分支历史</span></span><br><span class="line">git show-branch --all</span><br><span class="line"><span class="comment"># 图示所有分支历史</span></span><br><span class="line">git whatchanged</span><br><span class="line"><span class="comment"># 显示提交历史对应的文件修改</span></span><br><span class="line">git revert dfb02e6e4f2f7b573337763e5c0013802e392818</span><br><span class="line"><span class="comment"># 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818</span></span><br><span class="line">git ls-tree HEAD</span><br><span class="line"><span class="comment"># 内部命令：显示某个git对象</span></span><br><span class="line">git rev-parse v2.0</span><br><span class="line"><span class="comment"># 内部命令：显示某个ref对于的SHA1 HASH</span></span><br><span class="line">git reflog</span><br><span class="line"><span class="comment"># 显示所有提交，包括孤立节点</span></span><br><span class="line">git show HEAD@&#123;5&#125;</span><br><span class="line">git show master@&#123;yesterday&#125;</span><br><span class="line"><span class="comment"># 显示master分支昨天的状态</span></span><br><span class="line">git <span class="built_in">log</span> --pretty=format:<span class="string">&#x27;%h %s&#x27;</span> --graph</span><br><span class="line"><span class="comment"># 图示提交日志</span></span><br><span class="line">git show HEAD~3</span><br><span class="line">git show -s --pretty=raw 2be7fcb476</span><br><span class="line">git stash</span><br><span class="line"><span class="comment"># 暂存当前修改，将所有至为HEAD状态</span></span><br><span class="line">git stash list</span><br><span class="line"><span class="comment"># 查看所有暂存</span></span><br><span class="line">git stash show -p stash@&#123;0&#125;</span><br><span class="line"><span class="comment"># 参考第一次暂存</span></span><br><span class="line">git stash apply stash@&#123;0&#125;</span><br><span class="line"><span class="comment"># 应用第一次暂存</span></span><br><span class="line">git grep <span class="string">&quot;delete from&quot;</span></span><br><span class="line"><span class="comment"># 文件中搜索文本“delete from”</span></span><br><span class="line">git grep -e <span class="string">&#x27;#define&#x27;</span> --and -e SORT_DIRENT</span><br><span class="line">git gc</span><br><span class="line">git fsck</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Termux </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Termux 折腾记</title>
      <link href="/posts/TermuxNote.html"/>
      <url>/posts/TermuxNote.html</url>
      
        <content type="html"><![CDATA[<p>Termux oh-my-zsh 主题设置，去欢迎字等。</p><span id="more"></span><h1 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h1><ul><li><a href="https://termux.com/">官网</a></li><li><a href="https://play.google.com/store/apps/details?id=com.termux">Google Play</a></li><li><a href="https://www.coolapk.com/apk/com.termux">CoolApk</a></li><li><a href="https://pan.baidu.com/s/1zNrdz8Doed0wIob7bftXwQ">百度网盘</a>密码: 7eyf</li></ul><h1 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h1><p>音量-键模拟（Ctrl）键</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">音量-键(Ctrl)+L 清除屏幕内容</span><br><span class="line">音量-键(Ctrl)+C 终止当前操作</span><br><span class="line">音量-键(Ctrl)D 退出当前会话session</span><br><span class="line">音量+键+D Tab键（可自动补全命令或文件名）</span><br><span class="line">音量+键+W 方向键 上（可显示前一条命令）</span><br><span class="line">音量+键+S 方向键 下（可显示后一条命令）</span><br><span class="line">音量+键+A 方向键 左（可左移动光标）</span><br><span class="line">音量+键+D 方向键 右（可右移动光标）</span><br><span class="line">音量+键+Q 显示或关闭扩展键（ESC、插入链接CTR、ALT、TAB、-、/、|以及左滑扩展键一栏可切换到全功能支持手机输入法的输入框）</span><br></pre></td></tr></table></figure><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><p>更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">termux-setup-storage 挂载Storage</span><br><span class="line">apt update 更新源</span><br><span class="line">apt search &lt;query&gt; 全文搜索可安装包</span><br><span class="line">apt install &lt;package&gt; 安装软件包</span><br><span class="line">apt upgrade 升级软件包</span><br><span class="line">apt show &lt;package&gt; 显示软件包的信息</span><br><span class="line">apt list [--installed] 列出所有（或已安装）的软件包信息</span><br><span class="line">apt remove &lt;package&gt; 删除软件包</span><br><span class="line"><span class="built_in">chmod</span> 修改文件权限</span><br><span class="line"><span class="built_in">chown</span> 修改文件归属</span><br></pre></td></tr></table></figure><p>cd 命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cd</span><br><span class="line"># 你当前在 /root目录中，使用这个命令会进入 /root/bash目录，这是相对路径</span><br><span class="line">cd bash</span><br><span class="line"># 如果你不在 /root目录中的话，就不能用上面的相对路径了，就需要绝对路径</span><br><span class="line">cd /root/bash</span><br><span class="line"># 假设你当前在 /root/bash目录中，使用相对路径，你可以用这个命令进入上一级 /root目录， `..` 代表相对路径 上级目录</span><br><span class="line">cd ..</span><br><span class="line"># 当然你也可以用绝对路径来进入上一级 /root目录</span><br><span class="line">cd /root</span><br><span class="line">路径的输入zsh有个方</span><br></pre></td></tr></table></figure><p>ls 命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示当前目录下的所有文件</span></span><br><span class="line"><span class="built_in">ls</span> -a</span><br><span class="line"><span class="built_in">ls</span> -a bash/log</span><br><span class="line"><span class="comment"># 相对路径，当前目录是 /root ，欲查看的目录是 /root/bash/log</span></span><br><span class="line"><span class="built_in">ls</span> -a /root/bash/log</span><br><span class="line"><span class="comment"># 绝对路径， 当前目录是 /root ，欲查看的目录是 /root/bash/log</span></span><br><span class="line"><span class="comment">#更多的命令可以用 ls --help 来查看。</span></span><br></pre></td></tr></table></figure><p>tree 包命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 复制当前目录内的 log.txt文件到 /var目录</span></span><br><span class="line"><span class="built_in">cp</span> log.txt /var/log.txt</span><br><span class="line"><span class="comment"># 复制当前目录内的 bash文件夹到 /home目录</span></span><br><span class="line"><span class="built_in">cp</span> -R bash /home/bash</span><br><span class="line">———————————————————————————————————————————————</span><br><span class="line"><span class="comment"># 复制当前目录内的所有.txt后缀的文件到 /var/log目录</span></span><br><span class="line"><span class="built_in">cp</span> *.txt /var/log</span><br><span class="line"><span class="comment"># 复制当前目录内的所有以 doubi开头的文件到 /var/log目录</span></span><br><span class="line"><span class="built_in">cp</span> doubi* /var/log</span><br><span class="line"><span class="comment"># 复制当前目录内的所有以 doubi开头 以.txt后缀结尾的文件到 /var/log目录</span></span><br><span class="line"><span class="built_in">cp</span> doubi*.txt /var/log</span><br><span class="line">———————————————————————————————————————————————</span><br><span class="line"><span class="comment"># 假设当前目录是 /root/doubi/log，要把这个目录中的所有.txt后缀的文件复制到上一级目录 /root/doubi，那么这样做</span></span><br><span class="line"><span class="built_in">cp</span> *.txt ..</span><br><span class="line"><span class="comment"># .. 就是相对路径，代表上一级目录，��然你也可以用绝对路径，这样更不容易出错</span></span><br><span class="line"><span class="built_in">cp</span> *.txt /root/doubi</span><br><span class="line">——————————————————————————————————————————————</span><br><span class="line"><span class="comment"># 重命名当前目录内的 log.txt文件为 log2.txt</span></span><br><span class="line"><span class="built_in">cp</span> log.txt log2.txt</span><br><span class="line"><span class="comment"># 复制当前目录内的 log.txt文件到 /var目录并重命名为 log1.txt</span></span><br><span class="line"><span class="built_in">cp</span> log.txt /var/log1.txt</span><br><span class="line"><span class="comment"># 复制当前目录内的 bash文件夹到 /home目录并重命名为 bash2</span></span><br><span class="line"><span class="built_in">cp</span> -R bash /home/bash2</span><br><span class="line">——————————————————————————————————————————————</span><br><span class="line"><span class="comment">#复制当前目录内的 log.txt文件到 /var目录，但是 /var 目录中已经存着 log.txt，那么会提示 cp: overwrite `/var/log.txt&#x27;? 可以用 -f 强制覆盖</span></span><br><span class="line"><span class="built_in">cp</span> -f <span class="built_in">log</span> /var/log.txt</span><br><span class="line"><span class="comment"># 复制当前目录内的 log.txt log1.txt log2.txt文件和 log233目录到 /home/log目录中</span></span><br><span class="line"><span class="built_in">cp</span> -R log.txt log1.txt log2.txt log233 /home/log</span><br><span class="line"><span class="comment">#更多的命令可以用 cp --help 查看。</span></span><br></pre></td></tr></table></figure><h1 id="去欢迎字"><a href="#去欢迎字" class="headerlink" title="去欢迎字"></a>去欢迎字</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> ~/.hushlogin</span><br></pre></td></tr></table></figure><h1 id="oh-my-zsh"><a href="#oh-my-zsh" class="headerlink" title="oh-my-zsh"></a>oh-my-zsh</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt install git curl zsh -y</span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>&quot;</span></span><br><span class="line">chsh -s zsh</span><br></pre></td></tr></table></figure><p>带字体，配色管理版</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)</span>&quot;</span> //安装</span><br><span class="line">~/.termux/colors.sh   //修改配色</span><br><span class="line">~/.termux/fonts.sh    //修改字体</span><br></pre></td></tr></table></figure><h1 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install openssh -y</span><br></pre></td></tr></table></figure><p>连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p443 root@主机ip</span><br></pre></td></tr></table></figure><h1 id="hexo博客"><a href="#hexo博客" class="headerlink" title="hexo博客"></a>hexo博客</h1><p>install</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install git openssh nodejs make python2 vim</span><br><span class="line"><span class="built_in">mkdir</span> blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install -g hexo</span><br><span class="line">hexo init</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git –save</span><br></pre></td></tr></table></figure><ul><li>在站点配置文件_config.yml的Deployment字段处添加并修改</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"><span class="built_in">type</span>: git</span><br><span class="line">repo: git@github.com:username/username.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><p>创建ssh密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config –global user.name “Vitan”</span><br><span class="line">git config –global user.email “ivitan95@gmailcom”</span><br><span class="line">ssh-keygen -t rsa -C “ivitan@gmail.com”</span><br></pre></td></tr></table></figure><p>添加本地私钥文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><ul><li>添加到 Github</li></ul><p>测试并发布 GithubPage 上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/blog</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 常用命令</title>
      <link href="/posts/Hexo-Command.html"/>
      <url>/posts/Hexo-Command.html</url>
      
        <content type="html"><![CDATA[<p>Hexo 常用命令</p><span id="more"></span><h1 id="Hexo-用命令"><a href="#Hexo-用命令" class="headerlink" title="Hexo 用命令"></a>Hexo 用命令</h1><ol><li><p>[新建文章]<code>hexo new &quot;my blog&quot;</code><br>新建的文件在hexo&#x2F;source&#x2F;_posts&#x2F;my-blog.md</p></li><li><p>编译<code>hexo generate</code><br>一般部署上去的时候都需要编译一下，编译后，会出现一个public文件夹，将所有的md文件编译成html文件</p></li><li><p>开启本地服务<code>hexo server</code><br>这个命令，我之前已经用过了，开启本地hexo服务用的</p></li><li><p>部署 <code>hexo deploy</code><br>部署到git上的时候，需要用这个命令，下一篇中，我们会使用到这个命令</p></li><li><p>清除<code>publichexo clean</code></p></li><li><p>版本更新<code>npm update -g</code></p></li><li><p>主题更新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/indigo</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Termux </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 语法</title>
      <link href="/posts/Markdown.html"/>
      <url>/posts/Markdown.html</url>
      
        <content type="html"><![CDATA[<p> Markdown 语法.<br> <span id="more"></span></p><h1 id="文章开头"><a href="#文章开头" class="headerlink" title="文章开头"></a>文章开头</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo</span><br><span class="line">date: 2018-01-18 8:18:38</span><br><span class="line">tags: [Markdown,教程]</span><br><span class="line">categories: 学习</span><br><span class="line">description: 摘要</span><br><span class="line">toc: true</span><br><span class="line">mathjax: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h1 id="如何设置文章摘要"><a href="#如何设置文章摘要" class="headerlink" title="如何设置文章摘要"></a>如何设置文章摘要</h1><p><code>&lt;!-- more --&gt;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">  这是摘要</span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">这是正文</span><br></pre></td></tr></table></figure><h2 id="斜体和粗体"><a href="#斜体和粗体" class="headerlink" title="斜体和粗体"></a>斜体和粗体</h2><ul><li>使用<code>*</code>和 <code>**</code> 表示斜体和粗体，格式如下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*斜体*</span><br><span class="line">**粗体**</span><br></pre></td></tr></table></figure><em>斜体</em>   <strong>粗体</strong></li></ul><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">这是一个一级标题</span><br><span class="line">============================</span><br><span class="line">这是一个二级标题</span><br><span class="line">----------------------------</span><br><span class="line">### 这是一个三级标题</span><br></pre></td></tr></table></figure><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><ul><li>使用 <code>*</code>，<code>+</code>，<code>-</code> 表示无序列表。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+ 无序列表项 一</span><br><span class="line">- 子无序列表 一</span><br><span class="line">- 子无序列表 二</span><br><span class="line">* 子无序列表 三</span><br><span class="line">+ 无序列表项 二</span><br><span class="line">+ 无序列表项 三</span><br></pre></td></tr></table></figure></li></ul><ul><li>无序列表项 一<ul><li>子无序列表 一</li><li>子无序列表 二<ul><li>子无序列表 三</li></ul></li></ul></li><li>无序列表项 二</li><li>无序列表项 三</li></ul><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><ul><li>使用数字和点表示有序列表。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 有序列表项 一</span><br><span class="line">1. 子有序列表项 一</span><br><span class="line">2. 子有序列表项 二</span><br><span class="line">2. 有序列表项 二</span><br><span class="line">3. 有序列表项 三</span><br></pre></td></tr></table></figure></li></ul><ol><li>有序列表项 一<ol><li>子有序列表项 一</li><li>子有序列表项 二</li></ol></li><li>有序列表项 二</li><li>有序列表项 三</li></ol><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><p>用 <code>\ </code>表示注释，<code>\ </code>后面的文字解析为纯文本格式。</p><h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><p>在单独的一行使用<code> ***</code> 或者 <code>--- </code>表示分割线</p><h1 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h1><p>使用<code> ~~</code> 表示删除线</p><h1 id="绘制表格"><a href="#绘制表格" class="headerlink" title="绘制表格"></a>绘制表格</h1><p> 绘制表格格式如下，<code>| </code>控制分列，<code>- </code>控制分行，<code>:</code> 控制对齐方式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| Item     | Value     | Qty   |</span><br><span class="line">| :------- | --------: | :---: |</span><br><span class="line">| Computer | 1600 USD  | 5     |</span><br><span class="line">| Phone    | 12 USD    | 12    |</span><br><span class="line">| Pipe     | 1 USD     | 234   |</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">Item</th><th align="right">Value</th><th align="center">Qty</th></tr></thead><tbody><tr><td align="left">Computer</td><td align="right">1600 USD</td><td align="center">5</td></tr><tr><td align="left">Phone</td><td align="right">12 USD</td><td align="center">12</td></tr><tr><td align="left">Pipe</td><td align="right">1 USD</td><td align="center">234</td></tr></tbody></table><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ol><li>分段： <code>两个回车</code></li><li>换行 <code>两个空格 + 回车</code></li><li>标题<code>#~######</code>井号的个数表示几级标题，即Markdown可以表示一级标题到六级标题</li><li>引用 <code>&gt;</code></li><li>列表<code> *</code>，<code>+</code>，<code>-</code>，<code>1.</code>，&#96;&#96;选其中之一，注意后面有个空格</li><li>代码区块 <code>四个空格开头</code></li><li>链接 <code>[文字](链接地址)</code></li><li>图片 <code>![图片说明](图片地址)</code>，图片地址可以是本地路劲，也可以是网络地址</li><li>强调 <code>**文字**</code>，<code>__文字__</code>，<code>_文字_</code>，<code>*文字*</code></li><li>图片大小<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;链接&quot; width =&quot;256&quot; height=256 /&gt; //固定大小</span><br><span class="line">&lt;img src=&quot;链接&quot; width =&quot;50%&quot; height=&quot;50%&quot; /&gt; //一定比列</span><br><span class="line">&lt;img src=&quot;链接&quot; width = &quot;450&quot; alt=&quot;图片描述&quot; align=center /&gt;</span><br></pre></td></tr></table></figure>其中width和height后面的50%就是根据窗口的大小以一定的比例显示图片。值得一说的是，这种按照百分比显示方法，是以width方向为准，并保持纵横比的，换句话说，把设置width的部分去掉，height的值改为任意百分比，显示的图像都是原图大小（个人觉得这根博客窗口有关，毕竟现实截面的宽度相对是固定的，而高度&#x2F;长度却是变化着的）。因此用此方法的时候，可以把height设置缺省。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Termux </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 安装笔记</title>
      <link href="/posts/HexoInstall.html"/>
      <url>/posts/HexoInstall.html</url>
      
        <content type="html"><![CDATA[<p>Hexo 从零开始到搭建完整</p><span id="more"></span><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><h2 id="安装-Git-Bash"><a href="#安装-Git-Bash" class="headerlink" title="安装 Git Bash"></a>安装 Git Bash</h2><p><a href="https://git-scm.com/">下载链接</a><br>安装好后，打开 GitBash，查看版本：<br>命令：<code>git version</code>  或者 <code>git -v</code></p><h2 id="安装NodeJs"><a href="#安装NodeJs" class="headerlink" title="安装NodeJs"></a>安装NodeJs</h2><p>Hexo是基于 NodeJS 环境的静态博客，里面的npm工具很有用<a href="https://nodejs.org/zh-cn/">下载地址</a>(说明：LTS为长期支持版，Current为当前最新版)<br>下载好msi文件后，双击打开安装，也是一路next，不过在Custom Setup这一步记得选 Add to PATH ,这样你就不用自己去配置电脑上环境变量了，装完在按 win + r 快捷键调出运行，然后输入cmd确定，在cmd中输入path可以看到你的node是否配置在里面（环境变量）</p><h2 id="npm-换源"><a href="#npm-换源" class="headerlink" title="npm 换源"></a>npm 换源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> hexo</span><br><span class="line"><span class="built_in">cd</span> d:\hexo</span><br><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install</span><br><span class="line">hexo init</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><ol><li>创建一个 repo，名称为 ivitan.github.io, 其中 ivitan 是你的 Github 用户名。</li><li>回到gitbash中，配置github账户信息（YourName和YourEail都替换成你自己的）</li></ol><h3 id="将博客与-Github-关联"><a href="#将博客与-Github-关联" class="headerlink" title="将博客与 Github 关联"></a>将博客与 Github 关联</h3><p>打开本地文件夹项目内的<code>_config.yml</code>配置文件，将其中的 type 设置为 git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"><span class="built_in">type</span>: git</span><br><span class="line">repository: https://github.com/用户名/用户名.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><h2 id="创建-SSH-Key"><a href="#创建-SSH-Key" class="headerlink" title="创建 SSH Key"></a>创建 SSH Key</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Vitan&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;ivitan95@gmail.com&quot;</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;ivtan95@gmail.com&quot;</span></span><br></pre></td></tr></table></figure><ul><li>复制 <code>id_rsa.pub</code> 内的密匙添加到 GitHub<ul><li>验证是否添加成功：<code>ssh -T git@github.com</code></li></ul></li></ul><h2 id="修改-config-yml"><a href="#修改-config-yml" class="headerlink" title="修改_config.yml"></a>修改_config.yml</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"><span class="built_in">type</span>: git</span><br><span class="line">repo: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><h1 id="GitBash进入blog-目录"><a href="#GitBash进入blog-目录" class="headerlink" title="GitBash进入blog 目录"></a>GitBash进入blog 目录</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><ul><li>浏览器：<a href="http://localhost:4000/">http://localhost:4000</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Termux </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
